
./zig-out/bin/zig-graph:	file format elf64-x86-64

Disassembly of section .text:

00000000002035f0 <_start>:
  2035f0: 31 ed                        	xorl	%ebp, %ebp
  2035f2: 48 89 25 07 ba 01 00         	movq	%rsp, 113159(%rip)      # 0x21f000 <start.argc_argv_ptr>
  2035f9: e8 02 00 00 00               	callq	0x203600 <start.posixCallMainAndExit>
  2035fe: 66 90                        	nop

0000000000203600 <start.posixCallMainAndExit>:
  203600: 55                           	pushq	%rbp
  203601: 48 89 e5                     	movq	%rsp, %rbp
  203604: 41 57                        	pushq	%r15
  203606: 41 56                        	pushq	%r14
  203608: 41 55                        	pushq	%r13
  20360a: 41 54                        	pushq	%r12
  20360c: 53                           	pushq	%rbx
  20360d: 48 83 e4 f0                  	andq	$-16, %rsp
  203611: 48 83 ec 10                  	subq	$16, %rsp
  203615: 4c 8b 25 e4 b9 01 00         	movq	113124(%rip), %r12      # 0x21f000 <start.argc_argv_ptr>
  20361c: 49 8b 34 24                  	movq	(%r12), %rsi
  203620: 4d 8d 6c f4 10               	leaq	16(%r12,%rsi,8), %r13
  203625: 41 f6 c5 07                  	testb	$7, %r13b
  203629: 0f 85 15 01 00 00            	jne	0x203744 <start.posixCallMainAndExit+0x144>
  20362f: 49 83 7d 00 00               	cmpq	$0, (%r13)
  203634: 75 05                        	jne	0x20363b <start.posixCallMainAndExit+0x3b>
  203636: 45 31 ff                     	xorl	%r15d, %r15d
  203639: eb 16                        	jmp	0x203651 <start.posixCallMainAndExit+0x51>
  20363b: 45 31 ff                     	xorl	%r15d, %r15d
  20363e: 66 90                        	nop
  203640: 49 ff c7                     	incq	%r15
  203643: 0f 84 7f 00 00 00            	je	0x2036c8 <start.posixCallMainAndExit+0xc8>
  203649: 4b 83 7c fd 00 00            	cmpq	$0, (%r13,%r15,8)
  20364f: 75 ef                        	jne	0x203640 <start.posixCallMainAndExit+0x40>
  203651: 4b 8d 44 fd 08               	leaq	8(%r13,%r15,8), %rax
  203656: a8 07                        	testb	$7, %al
  203658: 0f 85 e6 00 00 00            	jne	0x203744 <start.posixCallMainAndExit+0x144>
  20365e: 48 8d 14 f5 00 00 00 00      	leaq	(,%rsi,8), %rdx
  203666: 48 89 05 9b b9 01 00         	movq	%rax, 113051(%rip)      # 0x21f008 <os.linux.elf_aux_maybe>
  20366d: 31 c9                        	xorl	%ecx, %ecx
  20366f: 31 db                        	xorl	%ebx, %ebx
  203671: 45 31 f6                     	xorl	%r14d, %r14d
  203674: 4a 8d 04 fa                  	leaq	(%rdx,%r15,8), %rax
  203678: 49 8d 44 04 20               	leaq	32(%r12,%rax), %rax
  20367d: 49 83 c4 08                  	addq	$8, %r12
  203681: 48 8b 50 f8                  	movq	-8(%rax), %rdx
  203685: 48 83 fa 03                  	cmpq	$3, %rdx
  203689: 74 15                        	je	0x2036a0 <start.posixCallMainAndExit+0xa0>
  20368b: 0f 1f 44 00 00               	nopl	(%rax,%rax)
  203690: 48 83 fa 05                  	cmpq	$5, %rdx
  203694: 74 1a                        	je	0x2036b0 <start.posixCallMainAndExit+0xb0>
  203696: 48 85 d2                     	testq	%rdx, %rdx
  203699: 75 08                        	jne	0x2036a3 <start.posixCallMainAndExit+0xa3>
  20369b: eb 3c                        	jmp	0x2036d9 <start.posixCallMainAndExit+0xd9>
  20369d: 0f 1f 00                     	nopl	(%rax)
  2036a0: 48 8b 18                     	movq	(%rax), %rbx
  2036a3: 48 ff c1                     	incq	%rcx
  2036a6: 75 10                        	jne	0x2036b8 <start.posixCallMainAndExit+0xb8>
  2036a8: eb 1e                        	jmp	0x2036c8 <start.posixCallMainAndExit+0xc8>
  2036aa: 66 0f 1f 44 00 00            	nopw	(%rax,%rax)
  2036b0: 4c 8b 30                     	movq	(%rax), %r14
  2036b3: 48 ff c1                     	incq	%rcx
  2036b6: 74 10                        	je	0x2036c8 <start.posixCallMainAndExit+0xc8>
  2036b8: 48 83 c0 10                  	addq	$16, %rax
  2036bc: 48 8b 50 f8                  	movq	-8(%rax), %rdx
  2036c0: 48 83 fa 03                  	cmpq	$3, %rdx
  2036c4: 75 ca                        	jne	0x203690 <start.posixCallMainAndExit+0x90>
  2036c6: eb d8                        	jmp	0x2036a0 <start.posixCallMainAndExit+0xa0>
  2036c8: bf 59 1d 20 00               	movl	$2104665, %edi          # imm = 0x201D59
  2036cd: be 10 00 00 00               	movl	$16, %esi
  2036d2: 31 c9                        	xorl	%ecx, %ecx
  2036d4: e8 37 7c 01 00               	callq	0x21b310 <builtin.default_panic>
  2036d9: 48 85 db                     	testq	%rbx, %rbx
  2036dc: 75 11                        	jne	0x2036ef <start.posixCallMainAndExit+0xef>
  2036de: bf 2a 20 20 00               	movl	$2105386, %edi          # imm = 0x20202A
  2036e3: be 1e 00 00 00               	movl	$30, %esi
  2036e8: 31 c9                        	xorl	%ecx, %ecx
  2036ea: e8 21 7c 01 00               	callq	0x21b310 <builtin.default_panic>
  2036ef: f6 c3 07                     	testb	$7, %bl
  2036f2: 75 50                        	jne	0x203744 <start.posixCallMainAndExit+0x144>
  2036f4: 48 89 34 24                  	movq	%rsi, (%rsp)
  2036f8: 48 89 df                     	movq	%rbx, %rdi
  2036fb: 4c 89 f6                     	movq	%r14, %rsi
  2036fe: e8 ad 03 00 00               	callq	0x203ab0 <os.linux.tls.initStaticTLS>
  203703: 48 89 df                     	movq	%rbx, %rdi
  203706: 4c 89 f6                     	movq	%r14, %rsi
  203709: e8 52 06 00 00               	callq	0x203d60 <start.expandStackSize>
  20370e: 48 8b 04 24                  	movq	(%rsp), %rax
  203712: 4c 89 25 f7 b8 01 00         	movq	%r12, 112887(%rip)      # 0x21f010 <os.argv>
  203719: 4c 89 2d 00 b9 01 00         	movq	%r13, 112896(%rip)      # 0x21f020 <os.environ.0>
  203720: 4c 89 3d 01 b9 01 00         	movq	%r15, 112897(%rip)      # 0x21f028 <os.environ.1>
  203727: 48 89 05 ea b8 01 00         	movq	%rax, 112874(%rip)      # 0x21f018 <os.argv+0x8>
  20372e: e8 fd 06 00 00               	callq	0x203e30 <debug.maybeEnableSegfaultHandler>
  203733: e8 f8 07 00 00               	callq	0x203f30 <os.maybeIgnoreSigpipe>
  203738: e8 23 00 00 00               	callq	0x203760 <main.main>
  20373d: 31 ff                        	xorl	%edi, %edi
  20373f: e8 5c 08 00 00               	callq	0x203fa0 <os.exit>
  203744: bf c7 1d 20 00               	movl	$2104775, %edi          # imm = 0x201DC7
  203749: be 13 00 00 00               	movl	$19, %esi
  20374e: 31 c9                        	xorl	%ecx, %ecx
  203750: e8 bb 7b 01 00               	callq	0x21b310 <builtin.default_panic>
  203755: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)

0000000000203760 <main.main>:
  203760: 41 57                        	pushq	%r15
  203762: 41 56                        	pushq	%r14
  203764: 41 54                        	pushq	%r12
  203766: 53                           	pushq	%rbx
  203767: 48 81 ec 38 01 00 00         	subq	$312, %rsp              # imm = 0x138
  20376e: 4c 8d 7c 24 38               	leaq	56(%rsp), %r15
  203773: 4c 89 7c 24 18               	movq	%r15, 24(%rsp)
  203778: 48 c7 44 24 20 20 00 00 00   	movq	$32, 32(%rsp)
  203781: 48 c7 44 24 10 00 00 00 00   	movq	$0, 16(%rsp)
  20378a: f0                           	lock
  20378b: 0f ba 2d 6d e9 01 00 00      	btsl	$0, 125293(%rip)        # 0x222100 <debug.stderr_mutex>
  203793: 0f 82 01 02 00 00            	jb	0x20399a <main.main+0x23a>
  203799: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  2037a3: 48 8d 74 24 30               	leaq	48(%rsp), %rsi
  2037a8: 48 8d 7c 24 10               	leaq	16(%rsp), %rdi
  2037ad: 4c 8d 44 24 08               	leaq	8(%rsp), %r8
  2037b2: ba 01 00 00 00               	movl	$1, %edx
  2037b7: b9 88 18 20 00               	movl	$2103432, %ecx          # imm = 0x201888
  2037bc: c7 44 24 08 02 00 00 00      	movl	$2, 8(%rsp)
  2037c4: 48 89 44 24 28               	movq	%rax, 40(%rsp)
  2037c9: c6 44 24 30 33               	movb	$51, 48(%rsp)
  2037ce: e8 ad 4e 01 00               	callq	0x218680 <fmt.formatBuf__anon_6100>
  2037d3: 66 85 c0                     	testw	%ax, %ax
  2037d6: 0f 85 cd 01 00 00            	jne	0x2039a9 <main.main+0x249>
  2037dc: 45 31 e4                     	xorl	%r12d, %r12d
  2037df: 48 8d 5c 24 28               	leaq	40(%rsp), %rbx
  2037e4: 4c 8d 74 24 10               	leaq	16(%rsp), %r14
  2037e9: 0f 1f 80 00 00 00 00         	nopl	(%rax)
  2037f0: 49 83 fc 02                  	cmpq	$2, %r12
  2037f4: 0f 83 8e 02 00 00            	jae	0x203a88 <main.main+0x328>
  2037fa: 41 b8 01 00 00 00            	movl	$1, %r8d
  203800: 49 8d 8c 24 b2 25 20 00      	leaq	2106802(%r12), %rcx
  203808: 48 89 df                     	movq	%rbx, %rdi
  20380b: 4c 89 f6                     	movq	%r14, %rsi
  20380e: ba 02 00 00 00               	movl	$2, %edx
  203813: 4d 29 e0                     	subq	%r12, %r8
  203816: e8 75 0a 00 00               	callq	0x204290 <fs.file.File.write>
  20381b: 66 83 7c 24 30 00            	cmpw	$0, 48(%rsp)
  203821: 0f 85 af 01 00 00            	jne	0x2039d6 <main.main+0x276>
  203827: 4c 03 64 24 28               	addq	40(%rsp), %r12
  20382c: 49 83 fc 01                  	cmpq	$1, %r12
  203830: 75 be                        	jne	0x2037f0 <main.main+0x90>
  203832: 31 c0                        	xorl	%eax, %eax
  203834: 87 05 c6 e8 01 00            	xchgl	%eax, 125126(%rip)      # 0x222100 <debug.stderr_mutex>
  20383a: 45 31 c0                     	xorl	%r8d, %r8d
  20383d: 83 f8 03                     	cmpl	$3, %eax
  203840: 74 09                        	je	0x20384b <main.main+0xeb>
  203842: 85 c0                        	testl	%eax, %eax
  203844: 75 46                        	jne	0x20388c <main.main+0x12c>
  203846: e9 4e 02 00 00               	jmp	0x203a99 <main.main+0x339>
  20384b: b8 ca 00 00 00               	movl	$202, %eax
  203850: bf 00 21 22 00               	movl	$2236672, %edi          # imm = 0x222100
  203855: be 81 00 00 00               	movl	$129, %esi
  20385a: ba 01 00 00 00               	movl	$1, %edx
  20385f: 0f 05                        	syscall
  203861: 89 c1                        	movl	%eax, %ecx
  203863: f7 d9                        	negl	%ecx
  203865: 48 3d 01 f0 ff ff            	cmpq	$-4095, %rax            # imm = 0xF001
  20386b: 44 0f 43 c1                  	cmovael	%ecx, %r8d
  20386f: 66 41 83 f8 16               	cmpw	$22, %r8w
  203874: 0f 87 1f 02 00 00            	ja	0x203a99 <main.main+0x339>
  20387a: 41 0f b7 c0                  	movzwl	%r8w, %eax
  20387e: b9 01 40 40 00               	movl	$4210689, %ecx          # imm = 0x404001
  203883: 0f a3 c1                     	btl	%eax, %ecx
  203886: 0f 83 0d 02 00 00            	jae	0x203a99 <main.main+0x339>
  20388c: 4c 89 7c 24 18               	movq	%r15, 24(%rsp)
  203891: 48 c7 44 24 20 20 00 00 00   	movq	$32, 32(%rsp)
  20389a: 48 c7 44 24 10 00 00 00 00   	movq	$0, 16(%rsp)
  2038a3: f0                           	lock
  2038a4: 0f ba 2d 54 e8 01 00 00      	btsl	$0, 125012(%rip)        # 0x222100 <debug.stderr_mutex>
  2038ac: 0f 82 0e 01 00 00            	jb	0x2039c0 <main.main+0x260>
  2038b2: 48 8d 7c 24 10               	leaq	16(%rsp), %rdi
  2038b7: 4c 8d 44 24 08               	leaq	8(%rsp), %r8
  2038bc: be 61 22 20 00               	movl	$2105953, %esi          # imm = 0x202261
  2038c1: ba 0a 00 00 00               	movl	$10, %edx
  2038c6: b9 88 18 20 00               	movl	$2103432, %ecx          # imm = 0x201888
  2038cb: c7 44 24 08 02 00 00 00      	movl	$2, 8(%rsp)
  2038d3: e8 a8 4d 01 00               	callq	0x218680 <fmt.formatBuf__anon_6100>
  2038d8: 66 85 c0                     	testw	%ax, %ax
  2038db: 0f 85 ee 00 00 00            	jne	0x2039cf <main.main+0x26f>
  2038e1: 45 31 ff                     	xorl	%r15d, %r15d
  2038e4: 48 8d 5c 24 28               	leaq	40(%rsp), %rbx
  2038e9: 4c 8d 74 24 10               	leaq	16(%rsp), %r14
  2038ee: 66 90                        	nop
  2038f0: 49 83 ff 02                  	cmpq	$2, %r15
  2038f4: 0f 83 8e 01 00 00            	jae	0x203a88 <main.main+0x328>
  2038fa: 41 b8 01 00 00 00            	movl	$1, %r8d
  203900: 49 8d 8f ad 25 20 00         	leaq	2106797(%r15), %rcx
  203907: 48 89 df                     	movq	%rbx, %rdi
  20390a: 4c 89 f6                     	movq	%r14, %rsi
  20390d: ba 02 00 00 00               	movl	$2, %edx
  203912: 4d 29 f8                     	subq	%r15, %r8
  203915: e8 76 09 00 00               	callq	0x204290 <fs.file.File.write>
  20391a: 66 83 7c 24 30 00            	cmpw	$0, 48(%rsp)
  203920: 0f 85 09 01 00 00            	jne	0x203a2f <main.main+0x2cf>
  203926: 4c 03 7c 24 28               	addq	40(%rsp), %r15
  20392b: 49 83 ff 01                  	cmpq	$1, %r15
  20392f: 75 bf                        	jne	0x2038f0 <main.main+0x190>
  203931: 31 c0                        	xorl	%eax, %eax
  203933: 87 05 c7 e7 01 00            	xchgl	%eax, 124871(%rip)      # 0x222100 <debug.stderr_mutex>
  203939: 45 31 c0                     	xorl	%r8d, %r8d
  20393c: 83 f8 03                     	cmpl	$3, %eax
  20393f: 74 09                        	je	0x20394a <main.main+0x1ea>
  203941: 85 c0                        	testl	%eax, %eax
  203943: 75 46                        	jne	0x20398b <main.main+0x22b>
  203945: e9 4f 01 00 00               	jmp	0x203a99 <main.main+0x339>
  20394a: b8 ca 00 00 00               	movl	$202, %eax
  20394f: bf 00 21 22 00               	movl	$2236672, %edi          # imm = 0x222100
  203954: be 81 00 00 00               	movl	$129, %esi
  203959: ba 01 00 00 00               	movl	$1, %edx
  20395e: 0f 05                        	syscall
  203960: 89 c1                        	movl	%eax, %ecx
  203962: f7 d9                        	negl	%ecx
  203964: 48 3d 01 f0 ff ff            	cmpq	$-4095, %rax            # imm = 0xF001
  20396a: 44 0f 43 c1                  	cmovael	%ecx, %r8d
  20396e: 66 41 83 f8 16               	cmpw	$22, %r8w
  203973: 0f 87 20 01 00 00            	ja	0x203a99 <main.main+0x339>
  203979: 41 0f b7 c0                  	movzwl	%r8w, %eax
  20397d: b9 01 40 40 00               	movl	$4210689, %ecx          # imm = 0x404001
  203982: 0f a3 c1                     	btl	%eax, %ecx
  203985: 0f 83 0e 01 00 00            	jae	0x203a99 <main.main+0x339>
  20398b: 48 81 c4 38 01 00 00         	addq	$312, %rsp              # imm = 0x138
  203992: 5b                           	popq	%rbx
  203993: 41 5c                        	popq	%r12
  203995: 41 5e                        	popq	%r14
  203997: 41 5f                        	popq	%r15
  203999: c3                           	retq
  20399a: bf 00 21 22 00               	movl	$2236672, %edi          # imm = 0x222100
  20399f: e8 ec 85 01 00               	callq	0x21bf90 <Thread.Mutex.FutexImpl.lockSlow>
  2039a4: e9 f0 fd ff ff               	jmp	0x203799 <main.main+0x39>
  2039a9: 48 8d 5c 24 10               	leaq	16(%rsp), %rbx
  2039ae: 48 89 df                     	movq	%rbx, %rdi
  2039b1: e8 9a 83 01 00               	callq	0x21bd50 <builtin.returnError>
  2039b6: 48 89 df                     	movq	%rbx, %rdi
  2039b9: e8 92 83 01 00               	callq	0x21bd50 <builtin.returnError>
  2039be: eb 1b                        	jmp	0x2039db <main.main+0x27b>
  2039c0: bf 00 21 22 00               	movl	$2236672, %edi          # imm = 0x222100
  2039c5: e8 c6 85 01 00               	callq	0x21bf90 <Thread.Mutex.FutexImpl.lockSlow>
  2039ca: e9 e3 fe ff ff               	jmp	0x2038b2 <main.main+0x152>
  2039cf: 48 8d 7c 24 10               	leaq	16(%rsp), %rdi
  2039d4: eb 69                        	jmp	0x203a3f <main.main+0x2df>
  2039d6: 48 8d 5c 24 10               	leaq	16(%rsp), %rbx
  2039db: 48 89 df                     	movq	%rbx, %rdi
  2039de: e8 6d 83 01 00               	callq	0x21bd50 <builtin.returnError>
  2039e3: 48 89 df                     	movq	%rbx, %rdi
  2039e6: e8 65 83 01 00               	callq	0x21bd50 <builtin.returnError>
  2039eb: 48 8d 5c 24 10               	leaq	16(%rsp), %rbx
  2039f0: 48 89 df                     	movq	%rbx, %rdi
  2039f3: e8 58 83 01 00               	callq	0x21bd50 <builtin.returnError>
  2039f8: 48 89 df                     	movq	%rbx, %rdi
  2039fb: e8 50 83 01 00               	callq	0x21bd50 <builtin.returnError>
  203a00: 31 c0                        	xorl	%eax, %eax
  203a02: 87 05 f8 e6 01 00            	xchgl	%eax, 124664(%rip)      # 0x222100 <debug.stderr_mutex>
  203a08: 45 31 c0                     	xorl	%r8d, %r8d
  203a0b: 83 f8 03                     	cmpl	$3, %eax
  203a0e: 0f 85 2e fe ff ff            	jne	0x203842 <main.main+0xe2>
  203a14: b8 ca 00 00 00               	movl	$202, %eax
  203a19: bf 00 21 22 00               	movl	$2236672, %edi          # imm = 0x222100
  203a1e: be 81 00 00 00               	movl	$129, %esi
  203a23: ba 01 00 00 00               	movl	$1, %edx
  203a28: 0f 05                        	syscall
  203a2a: e9 32 fe ff ff               	jmp	0x203861 <main.main+0x101>
  203a2f: 48 8d 5c 24 10               	leaq	16(%rsp), %rbx
  203a34: 48 89 df                     	movq	%rbx, %rdi
  203a37: e8 14 83 01 00               	callq	0x21bd50 <builtin.returnError>
  203a3c: 48 89 df                     	movq	%rbx, %rdi
  203a3f: e8 0c 83 01 00               	callq	0x21bd50 <builtin.returnError>
  203a44: 48 8d 5c 24 10               	leaq	16(%rsp), %rbx
  203a49: 48 89 df                     	movq	%rbx, %rdi
  203a4c: e8 ff 82 01 00               	callq	0x21bd50 <builtin.returnError>
  203a51: 48 89 df                     	movq	%rbx, %rdi
  203a54: e8 f7 82 01 00               	callq	0x21bd50 <builtin.returnError>
  203a59: 31 c0                        	xorl	%eax, %eax
  203a5b: 87 05 9f e6 01 00            	xchgl	%eax, 124575(%rip)      # 0x222100 <debug.stderr_mutex>
  203a61: 45 31 c0                     	xorl	%r8d, %r8d
  203a64: 83 f8 03                     	cmpl	$3, %eax
  203a67: 0f 85 d4 fe ff ff            	jne	0x203941 <main.main+0x1e1>
  203a6d: b8 ca 00 00 00               	movl	$202, %eax
  203a72: bf 00 21 22 00               	movl	$2236672, %edi          # imm = 0x222100
  203a77: be 81 00 00 00               	movl	$129, %esi
  203a7c: ba 01 00 00 00               	movl	$1, %edx
  203a81: 0f 05                        	syscall
  203a83: e9 d8 fe ff ff               	jmp	0x203960 <main.main+0x200>
  203a88: bf 34 1d 20 00               	movl	$2104628, %edi          # imm = 0x201D34
  203a8d: be 24 00 00 00               	movl	$36, %esi
  203a92: 31 c9                        	xorl	%ecx, %ecx
  203a94: e8 77 78 01 00               	callq	0x21b310 <builtin.default_panic>
  203a99: bf 32 22 20 00               	movl	$2105906, %edi          # imm = 0x202232
  203a9e: be 18 00 00 00               	movl	$24, %esi
  203aa3: 31 c9                        	xorl	%ecx, %ecx
  203aa5: e8 66 78 01 00               	callq	0x21b310 <builtin.default_panic>
  203aaa: 66 0f 1f 44 00 00            	nopw	(%rax,%rax)

0000000000203ab0 <os.linux.tls.initStaticTLS>:
  203ab0: 41 57                        	pushq	%r15
  203ab2: 41 56                        	pushq	%r14
  203ab4: 53                           	pushq	%rbx
  203ab5: 48 81 ec 40 01 00 00         	subq	$320, %rsp              # imm = 0x140
  203abc: 48 8d 44 24 40               	leaq	64(%rsp), %rax
  203ac1: 48 b9 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rcx # imm = 0xAAAAAAAAAAAAAAAA
  203acb: 48 89 44 24 18               	movq	%rax, 24(%rsp)
  203ad0: b8 08 00 00 00               	movl	$8, %eax
  203ad5: 48 c7 44 24 20 20 00 00 00   	movq	$32, 32(%rsp)
  203ade: 48 c7 44 24 10 00 00 00 00   	movq	$0, 16(%rsp)
  203ae7: 48 85 f6                     	testq	%rsi, %rsi
  203aea: 74 6b                        	je	0x203b57 <os.linux.tls.initStaticTLS+0xa7>
  203aec: 31 d2                        	xorl	%edx, %edx
  203aee: 49 89 f9                     	movq	%rdi, %r9
  203af1: 45 31 c0                     	xorl	%r8d, %r8d
  203af4: eb 16                        	jmp	0x203b0c <os.linux.tls.initStaticTLS+0x5c>
  203af6: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
  203b00: 4c 89 ca                     	movq	%r9, %rdx
  203b03: 49 83 c1 38                  	addq	$56, %r9
  203b07: 48 ff ce                     	decq	%rsi
  203b0a: 74 29                        	je	0x203b35 <os.linux.tls.initStaticTLS+0x85>
  203b0c: 45 8b 11                     	movl	(%r9), %r10d
  203b0f: 41 83 fa 07                  	cmpl	$7, %r10d
  203b13: 74 eb                        	je	0x203b00 <os.linux.tls.initStaticTLS+0x50>
  203b15: 41 83 fa 06                  	cmpl	$6, %r10d
  203b19: 75 e8                        	jne	0x203b03 <os.linux.tls.initStaticTLS+0x53>
  203b1b: 49 89 f8                     	movq	%rdi, %r8
  203b1e: 4d 2b 41 10                  	subq	16(%r9), %r8
  203b22: 73 df                        	jae	0x203b03 <os.linux.tls.initStaticTLS+0x53>
  203b24: bf 59 1d 20 00               	movl	$2104665, %edi          # imm = 0x201D59
  203b29: be 10 00 00 00               	movl	$16, %esi
  203b2e: 31 c9                        	xorl	%ecx, %ecx
  203b30: e8 db 77 01 00               	callq	0x21b310 <builtin.default_panic>
  203b35: 48 85 d2                     	testq	%rdx, %rdx
  203b38: 74 1d                        	je	0x203b57 <os.linux.tls.initStaticTLS+0xa7>
  203b3a: 4c 03 42 10                  	addq	16(%rdx), %r8
  203b3e: 72 e4                        	jb	0x203b24 <os.linux.tls.initStaticTLS+0x74>
  203b40: 0f 84 09 02 00 00            	je	0x203d4f <os.linux.tls.initStaticTLS+0x29f>
  203b46: 48 8b 42 30                  	movq	48(%rdx), %rax
  203b4a: 48 8b 72 20                  	movq	32(%rdx), %rsi
  203b4e: 48 8b 52 28                  	movq	40(%rdx), %rdx
  203b52: 4c 89 c1                     	movq	%r8, %rcx
  203b55: eb 04                        	jmp	0x203b5b <os.linux.tls.initStaticTLS+0xab>
  203b57: 31 d2                        	xorl	%edx, %edx
  203b59: 31 f6                        	xorl	%esi, %esi
  203b5b: f3 48 0f b8 f8               	popcntq	%rax, %rdi
  203b60: 83 ff 01                     	cmpl	$1, %edi
  203b63: 0f 85 a7 01 00 00            	jne	0x203d10 <os.linux.tls.initStaticTLS+0x260>
  203b69: 48 89 c7                     	movq	%rax, %rdi
  203b6c: 48 83 ef 01                  	subq	$1, %rdi
  203b70: 72 b2                        	jb	0x203b24 <os.linux.tls.initStaticTLS+0x74>
  203b72: 48 01 fa                     	addq	%rdi, %rdx
  203b75: 72 ad                        	jb	0x203b24 <os.linux.tls.initStaticTLS+0x74>
  203b77: c4 e2 c0 f2 d2               	andnq	%rdx, %rdi, %rdx
  203b7c: 48 89 d7                     	movq	%rdx, %rdi
  203b7f: 48 83 c7 08                  	addq	$8, %rdi
  203b83: 72 9f                        	jb	0x203b24 <os.linux.tls.initStaticTLS+0x74>
  203b85: 48 83 c7 08                  	addq	$8, %rdi
  203b89: 72 99                        	jb	0x203b24 <os.linux.tls.initStaticTLS+0x74>
  203b8b: 48 83 c7 07                  	addq	$7, %rdi
  203b8f: 72 93                        	jb	0x203b24 <os.linux.tls.initStaticTLS+0x74>
  203b91: 48 83 e7 f8                  	andq	$-8, %rdi
  203b95: 48 89 fb                     	movq	%rdi, %rbx
  203b98: 48 83 c3 10                  	addq	$16, %rbx
  203b9c: 72 86                        	jb	0x203b24 <os.linux.tls.initStaticTLS+0x74>
  203b9e: 48 89 0d 93 b4 01 00         	movq	%rcx, 111763(%rip)      # 0x21f038 <os.linux.tls.tls_image.0.0>
  203ba5: 48 89 35 94 b4 01 00         	movq	%rsi, 111764(%rip)      # 0x21f040 <os.linux.tls.tls_image.0.1>
  203bac: 48 89 1d 95 b4 01 00         	movq	%rbx, 111765(%rip)      # 0x21f048 <os.linux.tls.tls_image.1>
  203bb3: 48 89 05 96 b4 01 00         	movq	%rax, 111766(%rip)      # 0x21f050 <os.linux.tls.tls_image.2>
  203bba: 48 89 15 97 b4 01 00         	movq	%rdx, 111767(%rip)      # 0x21f058 <os.linux.tls.tls_image.3>
  203bc1: 48 89 3d 98 b4 01 00         	movq	%rdi, 111768(%rip)      # 0x21f060 <os.linux.tls.tls_image.4>
  203bc8: 48 3d 00 10 00 00            	cmpq	$4096, %rax             # imm = 0x1000
  203bce: 77 14                        	ja	0x203be4 <os.linux.tls.initStaticTLS+0x134>
  203bd0: 48 81 fb 01 21 00 00         	cmpq	$8449, %rbx             # imm = 0x2101
  203bd7: 73 0b                        	jae	0x203be4 <os.linux.tls.initStaticTLS+0x134>
  203bd9: 41 be 00 00 22 00            	movl	$2228224, %r14d         # imm = 0x220000
  203bdf: e9 a5 00 00 00               	jmp	0x203c89 <os.linux.tls.initStaticTLS+0x1d9>
  203be4: 48 01 c3                     	addq	%rax, %rbx
  203be7: 0f 82 37 ff ff ff            	jb	0x203b24 <os.linux.tls.initStaticTLS+0x74>
  203bed: 48 83 eb 01                  	subq	$1, %rbx
  203bf1: 0f 82 2d ff ff ff            	jb	0x203b24 <os.linux.tls.initStaticTLS+0x74>
  203bf7: 48 8d 7c 24 28               	leaq	40(%rsp), %rdi
  203bfc: 48 8d 74 24 10               	leaq	16(%rsp), %rsi
  203c01: 31 d2                        	xorl	%edx, %edx
  203c03: 48 89 d9                     	movq	%rbx, %rcx
  203c06: 41 b8 03 00 00 00            	movl	$3, %r8d
  203c0c: 41 b9 22 00 00 00            	movl	$34, %r9d
  203c12: c7 04 24 ff ff ff ff         	movl	$4294967295, (%rsp)     # imm = 0xFFFFFFFF
  203c19: e8 92 03 00 00               	callq	0x203fb0 <os.mmap>
  203c1e: 66 83 7c 24 38 00            	cmpw	$0, 56(%rsp)
  203c24: 0f 85 20 01 00 00            	jne	0x203d4a <os.linux.tls.initStaticTLS+0x29a>
  203c2a: 48 8b 05 1f b4 01 00         	movq	111647(%rip), %rax      # 0x21f050 <os.linux.tls.tls_image.2>
  203c31: f3 48 0f b8 c8               	popcntq	%rax, %rcx
  203c36: 83 f9 01                     	cmpl	$1, %ecx
  203c39: 0f 85 d1 00 00 00            	jne	0x203d10 <os.linux.tls.initStaticTLS+0x260>
  203c3f: 48 83 e8 01                  	subq	$1, %rax
  203c43: 0f 82 db fe ff ff            	jb	0x203b24 <os.linux.tls.initStaticTLS+0x74>
  203c49: 4c 8b 74 24 28               	movq	40(%rsp), %r14
  203c4e: 4c 89 f1                     	movq	%r14, %rcx
  203c51: 48 01 c1                     	addq	%rax, %rcx
  203c54: 0f 82 ca fe ff ff            	jb	0x203b24 <os.linux.tls.initStaticTLS+0x74>
  203c5a: c4 e2 f8 f2 c1               	andnq	%rcx, %rax, %rax
  203c5f: 4c 29 f0                     	subq	%r14, %rax
  203c62: 0f 82 bc fe ff ff            	jb	0x203b24 <os.linux.tls.initStaticTLS+0x74>
  203c68: 48 8b 1d d9 b3 01 00         	movq	111577(%rip), %rbx      # 0x21f048 <os.linux.tls.tls_image.1>
  203c6f: 48 01 c3                     	addq	%rax, %rbx
  203c72: 0f 82 ac fe ff ff            	jb	0x203b24 <os.linux.tls.initStaticTLS+0x74>
  203c78: 48 3b 5c 24 30               	cmpq	48(%rsp), %rbx
  203c7d: 0f 87 a5 00 00 00            	ja	0x203d28 <os.linux.tls.initStaticTLS+0x278>
  203c83: 49 01 c6                     	addq	%rax, %r14
  203c86: 48 29 c3                     	subq	%rax, %rbx
  203c89: 4c 89 f7                     	movq	%r14, %rdi
  203c8c: 31 f6                        	xorl	%esi, %esi
  203c8e: 48 89 da                     	movq	%rbx, %rdx
  203c91: e8 4a 87 01 00               	callq	0x21c3e0 <memset>
  203c96: 48 8b 05 c3 b3 01 00         	movq	111555(%rip), %rax      # 0x21f060 <os.linux.tls.tls_image.4>
  203c9d: 4c 01 f0                     	addq	%r14, %rax
  203ca0: a8 07                        	testb	$7, %al
  203ca2: 75 7d                        	jne	0x203d21 <os.linux.tls.initStaticTLS+0x271>
  203ca4: 48 c7 00 01 00 00 00         	movq	$1, (%rax)
  203cab: 4c 89 70 08                  	movq	%r14, 8(%rax)
  203caf: 4c 8b 3d a2 b3 01 00         	movq	111522(%rip), %r15      # 0x21f058 <os.linux.tls.tls_image.3>
  203cb6: 4d 01 f7                     	addq	%r14, %r15
  203cb9: 41 f6 c7 07                  	testb	$7, %r15b
  203cbd: 75 62                        	jne	0x203d21 <os.linux.tls.initStaticTLS+0x271>
  203cbf: 4d 89 3f                     	movq	%r15, (%r15)
  203cc2: 48 8b 15 77 b3 01 00         	movq	111479(%rip), %rdx      # 0x21f040 <os.linux.tls.tls_image.0.1>
  203cc9: 48 39 da                     	cmpq	%rbx, %rdx
  203ccc: 77 5a                        	ja	0x203d28 <os.linux.tls.initStaticTLS+0x278>
  203cce: 48 8b 35 63 b3 01 00         	movq	111459(%rip), %rsi      # 0x21f038 <os.linux.tls.tls_image.0.0>
  203cd5: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  203cd9: 4c 39 f0                     	cmpq	%r14, %rax
  203cdc: 76 09                        	jbe	0x203ce7 <os.linux.tls.initStaticTLS+0x237>
  203cde: 49 8d 04 16                  	leaq	(%r14,%rdx), %rax
  203ce2: 48 39 c6                     	cmpq	%rax, %rsi
  203ce5: 72 52                        	jb	0x203d39 <os.linux.tls.initStaticTLS+0x289>
  203ce7: 4c 89 f7                     	movq	%r14, %rdi
  203cea: e8 f1 85 01 00               	callq	0x21c2e0 <memcpy>
  203cef: b8 9e 00 00 00               	movl	$158, %eax
  203cf4: bf 02 10 00 00               	movl	$4098, %edi             # imm = 0x1002
  203cf9: 4c 89 fe                     	movq	%r15, %rsi
  203cfc: 0f 05                        	syscall
  203cfe: 48 85 c0                     	testq	%rax, %rax
  203d01: 75 0d                        	jne	0x203d10 <os.linux.tls.initStaticTLS+0x260>
  203d03: 48 81 c4 40 01 00 00         	addq	$320, %rsp              # imm = 0x140
  203d0a: 5b                           	popq	%rbx
  203d0b: 41 5e                        	popq	%r14
  203d0d: 41 5f                        	popq	%r15
  203d0f: c3                           	retq
  203d10: bf 32 22 20 00               	movl	$2105906, %edi          # imm = 0x202232
  203d15: be 18 00 00 00               	movl	$24, %esi
  203d1a: 31 c9                        	xorl	%ecx, %ecx
  203d1c: e8 ef 75 01 00               	callq	0x21b310 <builtin.default_panic>
  203d21: bf c7 1d 20 00               	movl	$2104775, %edi          # imm = 0x201DC7
  203d26: eb 05                        	jmp	0x203d2d <os.linux.tls.initStaticTLS+0x27d>
  203d28: bf 9c 1e 20 00               	movl	$2104988, %edi          # imm = 0x201E9C
  203d2d: be 13 00 00 00               	movl	$19, %esi
  203d32: 31 c9                        	xorl	%ecx, %ecx
  203d34: e8 d7 75 01 00               	callq	0x21b310 <builtin.default_panic>
  203d39: bf b0 1e 20 00               	movl	$2105008, %edi          # imm = 0x201EB0
  203d3e: be 17 00 00 00               	movl	$23, %esi
  203d43: 31 c9                        	xorl	%ecx, %ecx
  203d45: e8 c6 75 01 00               	callq	0x21b310 <builtin.default_panic>
  203d4a: e8 91 7e 01 00               	callq	0x21bbe0 <os.abort>
  203d4f: bf 2a 20 20 00               	movl	$2105386, %edi          # imm = 0x20202A
  203d54: be 1e 00 00 00               	movl	$30, %esi
  203d59: 31 c9                        	xorl	%ecx, %ecx
  203d5b: e8 b0 75 01 00               	callq	0x21b310 <builtin.default_panic>

0000000000203d60 <start.expandStackSize>:
  203d60: 48 81 ec 28 01 00 00         	subq	$296, %rsp              # imm = 0x128
  203d67: 48 8d 44 24 28               	leaq	40(%rsp), %rax
  203d6c: 48 89 44 24 08               	movq	%rax, 8(%rsp)
  203d71: 48 c7 44 24 10 20 00 00 00   	movq	$32, 16(%rsp)
  203d7a: 48 c7 04 24 00 00 00 00      	movq	$0, (%rsp)
  203d82: 48 85 f6                     	testq	%rsi, %rsi
  203d85: 74 5d                        	je	0x203de4 <start.expandStackSize+0x84>
  203d87: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
  203d90: 81 3f 51 e5 74 64            	cmpl	$1685382481, (%rdi)     # imm = 0x6474E551
  203d96: 74 0b                        	je	0x203da3 <start.expandStackSize+0x43>
  203d98: 48 83 c7 38                  	addq	$56, %rdi
  203d9c: 48 ff ce                     	decq	%rsi
  203d9f: 75 ef                        	jne	0x203d90 <start.expandStackSize+0x30>
  203da1: eb 41                        	jmp	0x203de4 <start.expandStackSize+0x84>
  203da3: 48 8b 47 28                  	movq	40(%rdi), %rax
  203da7: a9 ff 0f 00 00               	testl	$4095, %eax             # imm = 0xFFF
  203dac: 75 68                        	jne	0x203e16 <start.expandStackSize+0xb6>
  203dae: 48 89 44 24 18               	movq	%rax, 24(%rsp)
  203db3: 48 89 44 24 20               	movq	%rax, 32(%rsp)
  203db8: 48 8d 54 24 18               	leaq	24(%rsp), %rdx
  203dbd: b8 2e 01 00 00               	movl	$302, %eax              # imm = 0x12E
  203dc2: be 03 00 00 00               	movl	$3, %esi
  203dc7: 31 ff                        	xorl	%edi, %edi
  203dc9: 45 31 d2                     	xorl	%r10d, %r10d
  203dcc: 45 31 c0                     	xorl	%r8d, %r8d
  203dcf: 0f 05                        	syscall
  203dd1: 89 c1                        	movl	%eax, %ecx
  203dd3: f7 d9                        	negl	%ecx
  203dd5: 48 3d 01 f0 ff ff            	cmpq	$-4095, %rax            # imm = 0xF001
  203ddb: 41 0f 42 c8                  	cmovbl	%r8d, %ecx
  203ddf: 66 85 c9                     	testw	%cx, %cx
  203de2: 75 08                        	jne	0x203dec <start.expandStackSize+0x8c>
  203de4: 48 81 c4 28 01 00 00         	addq	$296, %rsp              # imm = 0x128
  203deb: c3                           	retq
  203dec: 0f b7 c1                     	movzwl	%cx, %eax
  203def: 83 f8 01                     	cmpl	$1, %eax
  203df2: 74 12                        	je	0x203e06 <start.expandStackSize+0xa6>
  203df4: 83 f8 16                     	cmpl	$22, %eax
  203df7: 74 0d                        	je	0x203e06 <start.expandStackSize+0xa6>
  203df9: 83 f8 0e                     	cmpl	$14, %eax
  203dfc: 74 18                        	je	0x203e16 <start.expandStackSize+0xb6>
  203dfe: 48 89 e7                     	movq	%rsp, %rdi
  203e01: e8 4a 7f 01 00               	callq	0x21bd50 <builtin.returnError>
  203e06: 48 89 e7                     	movq	%rsp, %rdi
  203e09: e8 42 7f 01 00               	callq	0x21bd50 <builtin.returnError>
  203e0e: 48 81 c4 28 01 00 00         	addq	$296, %rsp              # imm = 0x128
  203e15: c3                           	retq
  203e16: bf 32 22 20 00               	movl	$2105906, %edi          # imm = 0x202232
  203e1b: be 18 00 00 00               	movl	$24, %esi
  203e20: 31 c9                        	xorl	%ecx, %ecx
  203e22: e8 e9 74 01 00               	callq	0x21b310 <builtin.default_panic>
  203e27: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)

0000000000203e30 <debug.maybeEnableSegfaultHandler>:
  203e30: 48 81 ec b8 01 00 00         	subq	$440, %rsp              # imm = 0x1B8
  203e37: c5 fc 10 15 a9 d8 ff ff      	vmovups	-10071(%rip), %ymm2     # 0x2016e8 <os.abort__anon_4125+0x270>
  203e3f: c5 fc 10 0d c1 d8 ff ff      	vmovups	-10047(%rip), %ymm1     # 0x201708 <os.abort__anon_4125+0x290>
  203e47: c5 fc 10 05 79 d8 ff ff      	vmovups	-10119(%rip), %ymm0     # 0x2016c8 <os.abort__anon_4125+0x250>
  203e4f: 48 8d 84 24 b8 00 00 00      	leaq	184(%rsp), %rax
  203e57: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  203e5c: 48 8d 54 24 20               	leaq	32(%rsp), %rdx
  203e61: be 0b 00 00 00               	movl	$11, %esi
  203e66: 48 89 44 24 10               	movq	%rax, 16(%rsp)
  203e6b: 48 c7 44 24 18 20 00 00 00   	movq	$32, 24(%rsp)
  203e74: 48 c7 44 24 08 00 00 00 00   	movq	$0, 8(%rsp)
  203e7d: c5 fc 11 54 24 40            	vmovups	%ymm2, 64(%rsp)
  203e83: c5 fc 11 4c 24 60            	vmovups	%ymm1, 96(%rsp)
  203e89: c5 fc 10 15 97 d8 ff ff      	vmovups	-10089(%rip), %ymm2     # 0x201728 <os.abort__anon_4125+0x2b0>
  203e91: c5 fc 10 0d a7 d8 ff ff      	vmovups	-10073(%rip), %ymm1     # 0x201740 <os.abort__anon_4125+0x2c8>
  203e99: c5 fc 11 44 24 20            	vmovups	%ymm0, 32(%rsp)
  203e9f: c5 fc 11 94 24 80 00 00 00   	vmovups	%ymm2, 128(%rsp)
  203ea8: c5 fc 11 8c 24 98 00 00 00   	vmovups	%ymm1, 152(%rsp)
  203eb1: c5 f8 77                     	vzeroupper
  203eb4: e8 d7 02 00 00               	callq	0x204190 <os.sigaction>
  203eb9: 66 85 c0                     	testw	%ax, %ax
  203ebc: 75 53                        	jne	0x203f11 <debug.maybeEnableSegfaultHandler+0xe1>
  203ebe: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  203ec3: 48 8d 54 24 20               	leaq	32(%rsp), %rdx
  203ec8: be 04 00 00 00               	movl	$4, %esi
  203ecd: e8 be 02 00 00               	callq	0x204190 <os.sigaction>
  203ed2: 66 85 c0                     	testw	%ax, %ax
  203ed5: 75 3a                        	jne	0x203f11 <debug.maybeEnableSegfaultHandler+0xe1>
  203ed7: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  203edc: 48 8d 54 24 20               	leaq	32(%rsp), %rdx
  203ee1: be 07 00 00 00               	movl	$7, %esi
  203ee6: e8 a5 02 00 00               	callq	0x204190 <os.sigaction>
  203eeb: 66 85 c0                     	testw	%ax, %ax
  203eee: 75 21                        	jne	0x203f11 <debug.maybeEnableSegfaultHandler+0xe1>
  203ef0: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  203ef5: 48 8d 54 24 20               	leaq	32(%rsp), %rdx
  203efa: be 08 00 00 00               	movl	$8, %esi
  203eff: e8 8c 02 00 00               	callq	0x204190 <os.sigaction>
  203f04: 66 85 c0                     	testw	%ax, %ax
  203f07: 75 08                        	jne	0x203f11 <debug.maybeEnableSegfaultHandler+0xe1>
  203f09: 48 81 c4 b8 01 00 00         	addq	$440, %rsp              # imm = 0x1B8
  203f10: c3                           	retq
  203f11: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  203f16: e8 35 7e 01 00               	callq	0x21bd50 <builtin.returnError>
  203f1b: bf af 20 20 00               	movl	$2105519, %edi          # imm = 0x2020AF
  203f20: be 60 00 00 00               	movl	$96, %esi
  203f25: 31 c9                        	xorl	%ecx, %ecx
  203f27: e8 e4 73 01 00               	callq	0x21b310 <builtin.default_panic>
  203f2c: 0f 1f 40 00                  	nopl	(%rax)

0000000000203f30 <os.maybeIgnoreSigpipe>:
  203f30: 48 81 ec 28 01 00 00         	subq	$296, %rsp              # imm = 0x128
  203f37: 48 8d 44 24 28               	leaq	40(%rsp), %rax
  203f3c: 48 89 e7                     	movq	%rsp, %rdi
  203f3f: ba c8 12 20 00               	movl	$2101960, %edx          # imm = 0x2012C8
  203f44: be 0d 00 00 00               	movl	$13, %esi
  203f49: 48 89 44 24 08               	movq	%rax, 8(%rsp)
  203f4e: 48 c7 44 24 10 20 00 00 00   	movq	$32, 16(%rsp)
  203f57: 48 c7 04 24 00 00 00 00      	movq	$0, (%rsp)
  203f5f: e8 2c 02 00 00               	callq	0x204190 <os.sigaction>
  203f64: 66 85 c0                     	testw	%ax, %ax
  203f67: 75 08                        	jne	0x203f71 <os.maybeIgnoreSigpipe+0x41>
  203f69: 48 81 c4 28 01 00 00         	addq	$296, %rsp              # imm = 0x128
  203f70: c3                           	retq
  203f71: 48 0f bf c0                  	movswq	%ax, %rax
  203f75: 48 8d 7c 24 18               	leaq	24(%rsp), %rdi
  203f7a: 48 c1 e0 04                  	shlq	$4, %rax
  203f7e: c5 f8 10 80 b0 18 20 00      	vmovups	2103472(%rax), %xmm0
  203f86: c5 f8 11 44 24 18            	vmovups	%xmm0, 24(%rsp)
  203f8c: e8 af 7d 01 00               	callq	0x21bd40 <debug.panic__anon_3910>
  203f91: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)

0000000000203fa0 <os.exit>:
  203fa0: 50                           	pushq	%rax
  203fa1: 40 0f b6 ff                  	movzbl	%dil, %edi
  203fa5: e8 c6 01 00 00               	callq	0x204170 <os.linux.exit_group>
  203faa: 66 0f 1f 44 00 00            	nopw	(%rax,%rax)

0000000000203fb0 <os.mmap>:
  203fb0: 41 57                        	pushq	%r15
  203fb2: 41 56                        	pushq	%r14
  203fb4: 41 54                        	pushq	%r12
  203fb6: 53                           	pushq	%rbx
  203fb7: 50                           	pushq	%rax
  203fb8: 49 89 cf                     	movq	%rcx, %r15
  203fbb: 48 63 4c 24 30               	movslq	48(%rsp), %rcx
  203fc0: 49 89 d3                     	movq	%rdx, %r11
  203fc3: 49 89 f6                     	movq	%rsi, %r14
  203fc6: 48 89 fb                     	movq	%rdi, %rbx
  203fc9: 44 89 c2                     	movl	%r8d, %edx
  203fcc: 45 89 ca                     	movl	%r9d, %r10d
  203fcf: b8 09 00 00 00               	movl	$9, %eax
  203fd4: 45 31 c9                     	xorl	%r9d, %r9d
  203fd7: 45 31 e4                     	xorl	%r12d, %r12d
  203fda: 4c 89 df                     	movq	%r11, %rdi
  203fdd: 4c 89 fe                     	movq	%r15, %rsi
  203fe0: 49 89 c8                     	movq	%rcx, %r8
  203fe3: 0f 05                        	syscall
  203fe5: 89 c1                        	movl	%eax, %ecx
  203fe7: f7 d9                        	negl	%ecx
  203fe9: 48 3d 01 f0 ff ff            	cmpq	$-4095, %rax            # imm = 0xF001
  203fef: 41 0f 42 cc                  	cmovbl	%r12d, %ecx
  203ff3: 66 83 f9 4b                  	cmpw	$75, %cx
  203ff7: 0f 87 93 00 00 00            	ja	0x204090 <os.mmap+0xe0>
  203ffd: 0f b7 c9                     	movzwl	%cx, %ecx
  204000: ff 24 cd d0 02 20 00         	jmpq	*2097872(,%rcx,8)
  204007: 48 85 c0                     	testq	%rax, %rax
  20400a: 0f 84 36 01 00 00            	je	0x204146 <os.mmap+0x196>
  204010: 48 89 c1                     	movq	%rax, %rcx
  204013: 48 c1 e1 34                  	shlq	$52, %rcx
  204017: 0f 85 3a 01 00 00            	jne	0x204157 <os.mmap+0x1a7>
  20401d: 48 89 03                     	movq	%rax, (%rbx)
  204020: 4c 89 7b 08                  	movq	%r15, 8(%rbx)
  204024: 66 c7 43 10 00 00            	movw	$0, 16(%rbx)
  20402a: 48 83 c4 08                  	addq	$8, %rsp
  20402e: 5b                           	popq	%rbx
  20402f: 41 5c                        	popq	%r12
  204031: 41 5e                        	popq	%r14
  204033: 41 5f                        	popq	%r15
  204035: c3                           	retq
  204036: 4c 89 f7                     	movq	%r14, %rdi
  204039: e8 12 7d 01 00               	callq	0x21bd50 <builtin.returnError>
  20403e: c5 f8 10 05 da d5 ff ff      	vmovups	-10790(%rip), %xmm0     # 0x201620 <os.abort__anon_4125+0x1a8>
  204046: 48 c7 43 10 07 00 00 00      	movq	$7, 16(%rbx)
  20404e: c5 f8 11 03                  	vmovups	%xmm0, (%rbx)
  204052: eb d6                        	jmp	0x20402a <os.mmap+0x7a>
  204054: 4c 89 f7                     	movq	%r14, %rdi
  204057: e8 f4 7c 01 00               	callq	0x21bd50 <builtin.returnError>
  20405c: c5 f8 10 05 34 d6 ff ff      	vmovups	-10700(%rip), %xmm0     # 0x201698 <os.abort__anon_4125+0x220>
  204064: 48 c7 43 10 14 00 00 00      	movq	$20, 16(%rbx)
  20406c: c5 f8 11 03                  	vmovups	%xmm0, (%rbx)
  204070: eb b8                        	jmp	0x20402a <os.mmap+0x7a>
  204072: 4c 89 f7                     	movq	%r14, %rdi
  204075: e8 d6 7c 01 00               	callq	0x21bd50 <builtin.returnError>
  20407a: c5 f8 10 05 b6 d5 ff ff      	vmovups	-10826(%rip), %xmm0     # 0x201638 <os.abort__anon_4125+0x1c0>
  204082: 48 c7 43 10 11 00 00 00      	movq	$17, 16(%rbx)
  20408a: c5 f8 11 03                  	vmovups	%xmm0, (%rbx)
  20408e: eb 9a                        	jmp	0x20402a <os.mmap+0x7a>
  204090: 4c 89 f7                     	movq	%r14, %rdi
  204093: e8 b8 7c 01 00               	callq	0x21bd50 <builtin.returnError>
  204098: 66 c7 43 10 0f 00            	movw	$15, 16(%rbx)
  20409e: 4c 89 f7                     	movq	%r14, %rdi
  2040a1: 48 83 c4 08                  	addq	$8, %rsp
  2040a5: 5b                           	popq	%rbx
  2040a6: 41 5c                        	popq	%r12
  2040a8: 41 5e                        	popq	%r14
  2040aa: 41 5f                        	popq	%r15
  2040ac: e9 9f 7c 01 00               	jmp	0x21bd50 <builtin.returnError>
  2040b1: 4c 89 f7                     	movq	%r14, %rdi
  2040b4: e8 97 7c 01 00               	callq	0x21bd50 <builtin.returnError>
  2040b9: c5 f8 10 05 8f d5 ff ff      	vmovups	-10865(%rip), %xmm0     # 0x201650 <os.abort__anon_4125+0x1d8>
  2040c1: 48 c7 43 10 12 00 00 00      	movq	$18, 16(%rbx)
  2040c9: c5 f8 11 03                  	vmovups	%xmm0, (%rbx)
  2040cd: e9 58 ff ff ff               	jmp	0x20402a <os.mmap+0x7a>
  2040d2: 4c 89 f7                     	movq	%r14, %rdi
  2040d5: e8 76 7c 01 00               	callq	0x21bd50 <builtin.returnError>
  2040da: c5 f8 10 05 ce d5 ff ff      	vmovups	-10802(%rip), %xmm0     # 0x2016b0 <os.abort__anon_4125+0x238>
  2040e2: 48 c7 43 10 15 00 00 00      	movq	$21, 16(%rbx)
  2040ea: c5 f8 11 03                  	vmovups	%xmm0, (%rbx)
  2040ee: e9 37 ff ff ff               	jmp	0x20402a <os.mmap+0x7a>
  2040f3: 4c 89 f7                     	movq	%r14, %rdi
  2040f6: e8 55 7c 01 00               	callq	0x21bd50 <builtin.returnError>
  2040fb: c5 f8 10 05 65 d5 ff ff      	vmovups	-10907(%rip), %xmm0     # 0x201668 <os.abort__anon_4125+0x1f0>
  204103: 48 c7 43 10 10 00 00 00      	movq	$16, 16(%rbx)
  20410b: c5 f8 11 03                  	vmovups	%xmm0, (%rbx)
  20410f: e9 16 ff ff ff               	jmp	0x20402a <os.mmap+0x7a>
  204114: 4c 89 f7                     	movq	%r14, %rdi
  204117: e8 34 7c 01 00               	callq	0x21bd50 <builtin.returnError>
  20411c: c5 f8 10 05 5c d5 ff ff      	vmovups	-10916(%rip), %xmm0     # 0x201680 <os.abort__anon_4125+0x208>
  204124: 48 c7 43 10 13 00 00 00      	movq	$19, 16(%rbx)
  20412c: c5 f8 11 03                  	vmovups	%xmm0, (%rbx)
  204130: e9 f5 fe ff ff               	jmp	0x20402a <os.mmap+0x7a>
  204135: bf 32 22 20 00               	movl	$2105906, %edi          # imm = 0x202232
  20413a: be 18 00 00 00               	movl	$24, %esi
  20413f: 31 c9                        	xorl	%ecx, %ecx
  204141: e8 ca 71 01 00               	callq	0x21b310 <builtin.default_panic>
  204146: bf 2a 20 20 00               	movl	$2105386, %edi          # imm = 0x20202A
  20414b: be 1e 00 00 00               	movl	$30, %esi
  204150: 31 c9                        	xorl	%ecx, %ecx
  204152: e8 b9 71 01 00               	callq	0x21b310 <builtin.default_panic>
  204157: bf c7 1d 20 00               	movl	$2104775, %edi          # imm = 0x201DC7
  20415c: be 13 00 00 00               	movl	$19, %esi
  204161: 31 c9                        	xorl	%ecx, %ecx
  204163: e8 a8 71 01 00               	callq	0x21b310 <builtin.default_panic>
  204168: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)

0000000000204170 <os.linux.exit_group>:
  204170: 50                           	pushq	%rax
  204171: 89 ff                        	movl	%edi, %edi
  204173: b8 e7 00 00 00               	movl	$231, %eax
  204178: 0f 05                        	syscall
  20417a: bf 32 22 20 00               	movl	$2105906, %edi          # imm = 0x202232
  20417f: be 18 00 00 00               	movl	$24, %esi
  204184: 31 c9                        	xorl	%ecx, %ecx
  204186: e8 85 71 01 00               	callq	0x21b310 <builtin.default_panic>
  20418b: 0f 1f 44 00 00               	nopl	(%rax,%rax)

0000000000204190 <os.sigaction>:
  204190: 48 83 ec 28                  	subq	$40, %rsp
  204194: 89 f0                        	movl	%esi, %eax
  204196: 24 3f                        	andb	$63, %al
  204198: 3c 09                        	cmpb	$9, %al
  20419a: 0f 84 c6 00 00 00            	je	0x204266 <os.sigaction+0xd6>
  2041a0: c5 fc 28 05 98 c0 ff ff      	vmovaps	-16232(%rip), %ymm0     # 0x200240 <zig-graph+0x200240>
  2041a8: 49 89 f8                     	movq	%rdi, %r8
  2041ab: 45 31 c9                     	xorl	%r9d, %r9d
  2041ae: c5 fc 11 04 24               	vmovups	%ymm0, (%rsp)
  2041b3: 48 85 d2                     	testq	%rdx, %rdx
  2041b6: 74 4e                        	je	0x204206 <os.sigaction+0x76>
  2041b8: 48 8b 02                     	movq	(%rdx), %rax
  2041bb: 48 8d 4c 24 18               	leaq	24(%rsp), %rcx
  2041c0: 48 89 04 24                  	movq	%rax, (%rsp)
  2041c4: 8b 82 88 00 00 00            	movl	136(%rdx), %eax
  2041ca: 48 0d 00 00 00 04            	orq	$67108864, %rax         # imm = 0x4000000
  2041d0: 48 89 44 24 08               	movq	%rax, 8(%rsp)
  2041d5: 48 8d 42 08                  	leaq	8(%rdx), %rax
  2041d9: 48 83 c2 10                  	addq	$16, %rdx
  2041dd: 48 c7 44 24 10 60 a2 21 00   	movq	$2204256, 16(%rsp)      # imm = 0x21A260
  2041e6: 48 39 d1                     	cmpq	%rdx, %rcx
  2041e9: 73 0e                        	jae	0x2041f9 <os.sigaction+0x69>
  2041eb: 48 8d 4c 24 20               	leaq	32(%rsp), %rcx
  2041f0: 48 39 c8                     	cmpq	%rcx, %rax
  2041f3: 0f 82 81 00 00 00            	jb	0x20427a <os.sigaction+0xea>
  2041f9: 48 8b 00                     	movq	(%rax), %rax
  2041fc: 48 89 e1                     	movq	%rsp, %rcx
  2041ff: 48 89 44 24 18               	movq	%rax, 24(%rsp)
  204204: eb 02                        	jmp	0x204208 <os.sigaction+0x78>
  204206: 31 c9                        	xorl	%ecx, %ecx
  204208: 40 0f b6 fe                  	movzbl	%sil, %edi
  20420c: b8 0d 00 00 00               	movl	$13, %eax
  204211: 41 ba 08 00 00 00            	movl	$8, %r10d
  204217: 48 89 ce                     	movq	%rcx, %rsi
  20421a: 31 d2                        	xorl	%edx, %edx
  20421c: 83 e7 3f                     	andl	$63, %edi
  20421f: 0f 05                        	syscall
  204221: 48 89 c1                     	movq	%rax, %rcx
  204224: f7 d8                        	negl	%eax
  204226: 66 85 c9                     	testw	%cx, %cx
  204229: 41 0f 44 c1                  	cmovel	%r9d, %eax
  20422d: 48 81 f9 01 f0 ff ff         	cmpq	$-4095, %rcx            # imm = 0xF001
  204234: 41 0f 42 c1                  	cmovbl	%r9d, %eax
  204238: 66 85 c0                     	testw	%ax, %ax
  20423b: 75 08                        	jne	0x204245 <os.sigaction+0xb5>
  20423d: 48 83 c4 28                  	addq	$40, %rsp
  204241: c5 f8 77                     	vzeroupper
  204244: c3                           	retq
  204245: 0f b7 c0                     	movzwl	%ax, %eax
  204248: 83 f8 16                     	cmpl	$22, %eax
  20424b: 74 05                        	je	0x204252 <os.sigaction+0xc2>
  20424d: 83 f8 26                     	cmpl	$38, %eax
  204250: 75 14                        	jne	0x204266 <os.sigaction+0xd6>
  204252: 4c 89 c7                     	movq	%r8, %rdi
  204255: c5 f8 77                     	vzeroupper
  204258: e8 f3 7a 01 00               	callq	0x21bd50 <builtin.returnError>
  20425d: 66 b8 17 00                  	movw	$23, %ax
  204261: 48 83 c4 28                  	addq	$40, %rsp
  204265: c3                           	retq
  204266: bf 32 22 20 00               	movl	$2105906, %edi          # imm = 0x202232
  20426b: be 18 00 00 00               	movl	$24, %esi
  204270: 31 c9                        	xorl	%ecx, %ecx
  204272: c5 f8 77                     	vzeroupper
  204275: e8 96 70 01 00               	callq	0x21b310 <builtin.default_panic>
  20427a: bf b0 1e 20 00               	movl	$2105008, %edi          # imm = 0x201EB0
  20427f: be 17 00 00 00               	movl	$23, %esi
  204284: 31 c9                        	xorl	%ecx, %ecx
  204286: c5 f8 77                     	vzeroupper
  204289: e8 82 70 01 00               	callq	0x21b310 <builtin.default_panic>
  20428e: 66 90                        	nop

0000000000204290 <fs.file.File.write>:
  204290: 41 56                        	pushq	%r14
  204292: 53                           	pushq	%rbx
  204293: 50                           	pushq	%rax
  204294: 48 89 fb                     	movq	%rdi, %rbx
  204297: 4d 85 c0                     	testq	%r8, %r8
  20429a: 74 76                        	je	0x204312 <fs.file.File.write+0x82>
  20429c: 89 d0                        	movl	%edx, %eax
  20429e: 49 81 f8 00 f0 ff 7f         	cmpq	$2147479552, %r8        # imm = 0x7FFFF000
  2042a5: ba 00 f0 ff 7f               	movl	$2147479552, %edx       # imm = 0x7FFFF000
  2042aa: 49 89 c9                     	movq	%rcx, %r9
  2042ad: 49 89 f6                     	movq	%rsi, %r14
  2042b0: 49 0f 42 d0                  	cmovbq	%r8, %rdx
  2042b4: 48 63 f8                     	movslq	%eax, %rdi
  2042b7: 45 31 c0                     	xorl	%r8d, %r8d
  2042ba: 66 0f 1f 44 00 00            	nopw	(%rax,%rax)
  2042c0: b8 01 00 00 00               	movl	$1, %eax
  2042c5: 4c 89 ce                     	movq	%r9, %rsi
  2042c8: 0f 05                        	syscall
  2042ca: 89 c1                        	movl	%eax, %ecx
  2042cc: f7 d9                        	negl	%ecx
  2042ce: 48 3d 01 f0 ff ff            	cmpq	$-4095, %rax            # imm = 0xF001
  2042d4: 41 0f 42 c8                  	cmovbl	%r8d, %ecx
  2042d8: 66 83 f9 04                  	cmpw	$4, %cx
  2042dc: 74 e2                        	je	0x2042c0 <fs.file.File.write+0x30>
  2042de: 0f b7 c9                     	movzwl	%cx, %ecx
  2042e1: 83 f9 7a                     	cmpl	$122, %ecx
  2042e4: 0f 87 82 01 00 00            	ja	0x20446c <fs.file.File.write+0x1dc>
  2042ea: 89 c9                        	movl	%ecx, %ecx
  2042ec: ff 24 cd 30 05 20 00         	jmpq	*2098480(,%rcx,8)
  2042f3: 4c 89 f7                     	movq	%r14, %rdi
  2042f6: e8 55 7a 01 00               	callq	0x21bd50 <builtin.returnError>
  2042fb: 66 c7 44 24 04 00 00         	movw	$0, 4(%rsp)
  204302: c7 04 24 00 00 00 00         	movl	$0, (%rsp)
  204309: 66 b8 07 00                  	movw	$7, %ax
  20430d: e9 6e 01 00 00               	jmp	0x204480 <fs.file.File.write+0x1f0>
  204312: 31 c0                        	xorl	%eax, %eax
  204314: 66 c7 44 24 04 00 00         	movw	$0, 4(%rsp)
  20431b: c7 04 24 00 00 00 00         	movl	$0, (%rsp)
  204322: 0f b7 4c 24 04               	movzwl	4(%rsp), %ecx
  204327: 8b 14 24                     	movl	(%rsp), %edx
  20432a: 48 89 03                     	movq	%rax, (%rbx)
  20432d: 66 c7 43 08 00 00            	movw	$0, 8(%rbx)
  204333: 89 53 0a                     	movl	%edx, 10(%rbx)
  204336: 66 89 4b 0e                  	movw	%cx, 14(%rbx)
  20433a: 48 83 c4 08                  	addq	$8, %rsp
  20433e: 5b                           	popq	%rbx
  20433f: 41 5e                        	popq	%r14
  204341: c3                           	retq
  204342: 4c 89 f7                     	movq	%r14, %rdi
  204345: e8 06 7a 01 00               	callq	0x21bd50 <builtin.returnError>
  20434a: 66 c7 44 24 04 00 00         	movw	$0, 4(%rsp)
  204351: c7 04 24 00 00 00 00         	movl	$0, (%rsp)
  204358: 66 b8 03 00                  	movw	$3, %ax
  20435c: e9 1f 01 00 00               	jmp	0x204480 <fs.file.File.write+0x1f0>
  204361: 4c 89 f7                     	movq	%r14, %rdi
  204364: e8 e7 79 01 00               	callq	0x21bd50 <builtin.returnError>
  204369: 66 c7 44 24 04 00 00         	movw	$0, 4(%rsp)
  204370: c7 04 24 00 00 00 00         	movl	$0, (%rsp)
  204377: 66 b8 0b 00                  	movw	$11, %ax
  20437b: e9 00 01 00 00               	jmp	0x204480 <fs.file.File.write+0x1f0>
  204380: 4c 89 f7                     	movq	%r14, %rdi
  204383: e8 c8 79 01 00               	callq	0x21bd50 <builtin.returnError>
  204388: 66 c7 44 24 04 00 00         	movw	$0, 4(%rsp)
  20438f: c7 04 24 00 00 00 00         	movl	$0, (%rsp)
  204396: 66 b8 0d 00                  	movw	$13, %ax
  20439a: e9 e1 00 00 00               	jmp	0x204480 <fs.file.File.write+0x1f0>
  20439f: 4c 89 f7                     	movq	%r14, %rdi
  2043a2: e8 a9 79 01 00               	callq	0x21bd50 <builtin.returnError>
  2043a7: 66 c7 44 24 04 00 00         	movw	$0, 4(%rsp)
  2043ae: c7 04 24 00 00 00 00         	movl	$0, (%rsp)
  2043b5: 66 b8 05 00                  	movw	$5, %ax
  2043b9: e9 c2 00 00 00               	jmp	0x204480 <fs.file.File.write+0x1f0>
  2043be: 4c 89 f7                     	movq	%r14, %rdi
  2043c1: e8 8a 79 01 00               	callq	0x21bd50 <builtin.returnError>
  2043c6: 66 b8 06 00                  	movw	$6, %ax
  2043ca: 66 c7 44 24 04 00 00         	movw	$0, 4(%rsp)
  2043d1: c7 04 24 00 00 00 00         	movl	$0, (%rsp)
  2043d8: e9 a3 00 00 00               	jmp	0x204480 <fs.file.File.write+0x1f0>
  2043dd: 4c 89 f7                     	movq	%r14, %rdi
  2043e0: e8 6b 79 01 00               	callq	0x21bd50 <builtin.returnError>
  2043e5: 66 c7 44 24 04 00 00         	movw	$0, 4(%rsp)
  2043ec: c7 04 24 00 00 00 00         	movl	$0, (%rsp)
  2043f3: 66 b8 02 00                  	movw	$2, %ax
  2043f7: e9 84 00 00 00               	jmp	0x204480 <fs.file.File.write+0x1f0>
  2043fc: 4c 89 f7                     	movq	%r14, %rdi
  2043ff: e8 4c 79 01 00               	callq	0x21bd50 <builtin.returnError>
  204404: 66 c7 44 24 04 00 00         	movw	$0, 4(%rsp)
  20440b: c7 04 24 00 00 00 00         	movl	$0, (%rsp)
  204412: 66 b8 04 00                  	movw	$4, %ax
  204416: eb 68                        	jmp	0x204480 <fs.file.File.write+0x1f0>
  204418: 4c 89 f7                     	movq	%r14, %rdi
  20441b: e8 30 79 01 00               	callq	0x21bd50 <builtin.returnError>
  204420: 66 c7 44 24 04 00 00         	movw	$0, 4(%rsp)
  204427: c7 04 24 00 00 00 00         	movl	$0, (%rsp)
  20442e: 66 b8 08 00                  	movw	$8, %ax
  204432: eb 4c                        	jmp	0x204480 <fs.file.File.write+0x1f0>
  204434: 4c 89 f7                     	movq	%r14, %rdi
  204437: e8 14 79 01 00               	callq	0x21bd50 <builtin.returnError>
  20443c: 66 c7 44 24 04 00 00         	movw	$0, 4(%rsp)
  204443: c7 04 24 00 00 00 00         	movl	$0, (%rsp)
  20444a: 66 b8 0e 00                  	movw	$14, %ax
  20444e: eb 30                        	jmp	0x204480 <fs.file.File.write+0x1f0>
  204450: 4c 89 f7                     	movq	%r14, %rdi
  204453: e8 f8 78 01 00               	callq	0x21bd50 <builtin.returnError>
  204458: 66 c7 44 24 04 00 00         	movw	$0, 4(%rsp)
  20445f: c7 04 24 00 00 00 00         	movl	$0, (%rsp)
  204466: 66 b8 01 00                  	movw	$1, %ax
  20446a: eb 14                        	jmp	0x204480 <fs.file.File.write+0x1f0>
  20446c: 4c 89 f7                     	movq	%r14, %rdi
  20446f: e8 dc 78 01 00               	callq	0x21bd50 <builtin.returnError>
  204474: 4c 89 f7                     	movq	%r14, %rdi
  204477: e8 d4 78 01 00               	callq	0x21bd50 <builtin.returnError>
  20447c: 66 b8 0f 00                  	movw	$15, %ax
  204480: 0f b7 4c 24 04               	movzwl	4(%rsp), %ecx
  204485: 8b 14 24                     	movl	(%rsp), %edx
  204488: 66 89 43 08                  	movw	%ax, 8(%rbx)
  20448c: 4c 89 f7                     	movq	%r14, %rdi
  20448f: 89 53 0a                     	movl	%edx, 10(%rbx)
  204492: 66 89 4b 0e                  	movw	%cx, 14(%rbx)
  204496: 48 83 c4 08                  	addq	$8, %rsp
  20449a: 5b                           	popq	%rbx
  20449b: 41 5e                        	popq	%r14
  20449d: e9 ae 78 01 00               	jmp	0x21bd50 <builtin.returnError>
  2044a2: bf 32 22 20 00               	movl	$2105906, %edi          # imm = 0x202232
  2044a7: be 18 00 00 00               	movl	$24, %esi
  2044ac: 31 c9                        	xorl	%ecx, %ecx
  2044ae: e8 5d 6e 01 00               	callq	0x21b310 <builtin.default_panic>
  2044b3: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)

00000000002044c0 <io.writer.Writer(fs.file.File,error{AccessDenied,BrokenPipe,ConnectionResetByPeer,DeviceBusy,DiskQuota,FileTooBig,InputOutput,InvalidArgument,LockViolation,NoSpaceLeft,NotOpenForWriting,OperationAborted,SystemResources,Unexpected,WouldBlock},(function 'write')).writeAll>:
  2044c0: 55                           	pushq	%rbp
  2044c1: 41 57                        	pushq	%r15
  2044c3: 41 56                        	pushq	%r14
  2044c5: 41 55                        	pushq	%r13
  2044c7: 41 54                        	pushq	%r12
  2044c9: 53                           	pushq	%rbx
  2044ca: 48 83 ec 18                  	subq	$24, %rsp
  2044ce: 48 85 c9                     	testq	%rcx, %rcx
  2044d1: 74 53                        	je	0x204526 <io.writer.Writer(fs.file.File,error{AccessDenied,BrokenPipe,ConnectionResetByPeer,DeviceBusy,DiskQuota,FileTooBig,InputOutput,InvalidArgument,LockViolation,NoSpaceLeft,NotOpenForWriting,OperationAborted,SystemResources,Unexpected,WouldBlock},(function 'write')).writeAll+0x66>
  2044d3: 49 89 ce                     	movq	%rcx, %r14
  2044d6: 49 89 d7                     	movq	%rdx, %r15
  2044d9: 49 89 f4                     	movq	%rsi, %r12
  2044dc: 48 89 fb                     	movq	%rdi, %rbx
  2044df: 45 31 ed                     	xorl	%r13d, %r13d
  2044e2: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)
  2044f0: 4d 39 f5                     	cmpq	%r14, %r13
  2044f3: 77 56                        	ja	0x20454b <io.writer.Writer(fs.file.File,error{AccessDenied,BrokenPipe,ConnectionResetByPeer,DeviceBusy,DiskQuota,FileTooBig,InputOutput,InvalidArgument,LockViolation,NoSpaceLeft,NotOpenForWriting,OperationAborted,SystemResources,Unexpected,WouldBlock},(function 'write')).writeAll+0x8b>
  2044f5: 41 8b 14 24                  	movl	(%r12), %edx
  2044f9: 4d 89 f0                     	movq	%r14, %r8
  2044fc: 4b 8d 0c 2f                  	leaq	(%r15,%r13), %rcx
  204500: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  204505: 48 89 de                     	movq	%rbx, %rsi
  204508: 4d 29 e8                     	subq	%r13, %r8
  20450b: e8 80 fd ff ff               	callq	0x204290 <fs.file.File.write>
  204510: 0f b7 6c 24 10               	movzwl	16(%rsp), %ebp
  204515: 66 85 ed                     	testw	%bp, %bp
  204518: 75 1f                        	jne	0x204539 <io.writer.Writer(fs.file.File,error{AccessDenied,BrokenPipe,ConnectionResetByPeer,DeviceBusy,DiskQuota,FileTooBig,InputOutput,InvalidArgument,LockViolation,NoSpaceLeft,NotOpenForWriting,OperationAborted,SystemResources,Unexpected,WouldBlock},(function 'write')).writeAll+0x79>
  20451a: 4c 03 6c 24 08               	addq	8(%rsp), %r13
  20451f: 72 3b                        	jb	0x20455c <io.writer.Writer(fs.file.File,error{AccessDenied,BrokenPipe,ConnectionResetByPeer,DeviceBusy,DiskQuota,FileTooBig,InputOutput,InvalidArgument,LockViolation,NoSpaceLeft,NotOpenForWriting,OperationAborted,SystemResources,Unexpected,WouldBlock},(function 'write')).writeAll+0x9c>
  204521: 4d 39 f5                     	cmpq	%r14, %r13
  204524: 75 ca                        	jne	0x2044f0 <io.writer.Writer(fs.file.File,error{AccessDenied,BrokenPipe,ConnectionResetByPeer,DeviceBusy,DiskQuota,FileTooBig,InputOutput,InvalidArgument,LockViolation,NoSpaceLeft,NotOpenForWriting,OperationAborted,SystemResources,Unexpected,WouldBlock},(function 'write')).writeAll+0x30>
  204526: 31 ed                        	xorl	%ebp, %ebp
  204528: 89 e8                        	movl	%ebp, %eax
  20452a: 48 83 c4 18                  	addq	$24, %rsp
  20452e: 5b                           	popq	%rbx
  20452f: 41 5c                        	popq	%r12
  204531: 41 5d                        	popq	%r13
  204533: 41 5e                        	popq	%r14
  204535: 41 5f                        	popq	%r15
  204537: 5d                           	popq	%rbp
  204538: c3                           	retq
  204539: 48 89 df                     	movq	%rbx, %rdi
  20453c: e8 0f 78 01 00               	callq	0x21bd50 <builtin.returnError>
  204541: 48 89 df                     	movq	%rbx, %rdi
  204544: e8 07 78 01 00               	callq	0x21bd50 <builtin.returnError>
  204549: eb dd                        	jmp	0x204528 <io.writer.Writer(fs.file.File,error{AccessDenied,BrokenPipe,ConnectionResetByPeer,DeviceBusy,DiskQuota,FileTooBig,InputOutput,InvalidArgument,LockViolation,NoSpaceLeft,NotOpenForWriting,OperationAborted,SystemResources,Unexpected,WouldBlock},(function 'write')).writeAll+0x68>
  20454b: bf 34 1d 20 00               	movl	$2104628, %edi          # imm = 0x201D34
  204550: be 24 00 00 00               	movl	$36, %esi
  204555: 31 c9                        	xorl	%ecx, %ecx
  204557: e8 b4 6d 01 00               	callq	0x21b310 <builtin.default_panic>
  20455c: bf 59 1d 20 00               	movl	$2104665, %edi          # imm = 0x201D59
  204561: be 10 00 00 00               	movl	$16, %esi
  204566: 31 c9                        	xorl	%ecx, %ecx
  204568: e8 a3 6d 01 00               	callq	0x21b310 <builtin.default_panic>
  20456d: 0f 1f 00                     	nopl	(%rax)

0000000000204570 <os.raise>:
  204570: 53                           	pushq	%rbx
  204571: 48 81 ec 80 00 00 00         	subq	$128, %rsp
  204578: c5 fc 28 05 c0 bc ff ff      	vmovaps	-17216(%rip), %ymm0     # 0x200240 <zig-graph+0x200240>
  204580: 41 89 f0                     	movl	%esi, %r8d
  204583: 48 89 fb                     	movq	%rdi, %rbx
  204586: 48 89 e2                     	movq	%rsp, %rdx
  204589: b8 0e 00 00 00               	movl	$14, %eax
  20458e: be 60 17 20 00               	movl	$2103136, %esi          # imm = 0x201760
  204593: 41 ba 08 00 00 00            	movl	$8, %r10d
  204599: 31 ff                        	xorl	%edi, %edi
  20459b: 45 31 c9                     	xorl	%r9d, %r9d
  20459e: c5 fc 11 44 24 60            	vmovups	%ymm0, 96(%rsp)
  2045a4: c5 fc 11 44 24 40            	vmovups	%ymm0, 64(%rsp)
  2045aa: c5 fc 11 44 24 20            	vmovups	%ymm0, 32(%rsp)
  2045b0: c5 fc 11 04 24               	vmovups	%ymm0, (%rsp)
  2045b5: 0f 05                        	syscall
  2045b7: 89 c1                        	movl	%eax, %ecx
  2045b9: f7 d9                        	negl	%ecx
  2045bb: 48 3d 01 f0 ff ff            	cmpq	$-4095, %rax            # imm = 0xF001
  2045c1: 41 0f 42 c9                  	cmovbl	%r9d, %ecx
  2045c5: 66 85 c9                     	testw	%cx, %cx
  2045c8: 75 7c                        	jne	0x204646 <os.raise+0xd6>
  2045ca: b8 ba 00 00 00               	movl	$186, %eax
  2045cf: 0f 05                        	syscall
  2045d1: 48 63 f8                     	movslq	%eax, %rdi
  2045d4: 41 0f b6 f0                  	movzbl	%r8b, %esi
  2045d8: b8 c8 00 00 00               	movl	$200, %eax
  2045dd: 31 d2                        	xorl	%edx, %edx
  2045df: 0f 05                        	syscall
  2045e1: 49 89 c0                     	movq	%rax, %r8
  2045e4: 48 89 e6                     	movq	%rsp, %rsi
  2045e7: b8 0e 00 00 00               	movl	$14, %eax
  2045ec: bf 02 00 00 00               	movl	$2, %edi
  2045f1: 0f 05                        	syscall
  2045f3: 89 c1                        	movl	%eax, %ecx
  2045f5: f7 d9                        	negl	%ecx
  2045f7: 48 3d 01 f0 ff ff            	cmpq	$-4095, %rax            # imm = 0xF001
  2045fd: 41 0f 42 c9                  	cmovbl	%r9d, %ecx
  204601: 66 85 c9                     	testw	%cx, %cx
  204604: 75 40                        	jne	0x204646 <os.raise+0xd6>
  204606: 31 c0                        	xorl	%eax, %eax
  204608: 49 81 f8 01 f0 ff ff         	cmpq	$-4095, %r8             # imm = 0xF001
  20460f: 72 09                        	jb	0x20461a <os.raise+0xaa>
  204611: 41 0f b7 c8                  	movzwl	%r8w, %ecx
  204615: 48 85 c9                     	testq	%rcx, %rcx
  204618: 75 0c                        	jne	0x204626 <os.raise+0xb6>
  20461a: 48 81 c4 80 00 00 00         	addq	$128, %rsp
  204621: 5b                           	popq	%rbx
  204622: c5 f8 77                     	vzeroupper
  204625: c3                           	retq
  204626: 48 89 df                     	movq	%rbx, %rdi
  204629: c5 f8 77                     	vzeroupper
  20462c: e8 1f 77 01 00               	callq	0x21bd50 <builtin.returnError>
  204631: 48 89 df                     	movq	%rbx, %rdi
  204634: e8 17 77 01 00               	callq	0x21bd50 <builtin.returnError>
  204639: 66 b8 0f 00                  	movw	$15, %ax
  20463d: 48 81 c4 80 00 00 00         	addq	$128, %rsp
  204644: 5b                           	popq	%rbx
  204645: c3                           	retq
  204646: 0f b7 c1                     	movzwl	%cx, %eax
  204649: 83 f8 0e                     	cmpl	$14, %eax
  20464c: 74 03                        	je	0x204651 <os.raise+0xe1>
  20464e: 83 f8 16                     	cmpl	$22, %eax
  204651: bf 32 22 20 00               	movl	$2105906, %edi          # imm = 0x202232
  204656: be 18 00 00 00               	movl	$24, %esi
  20465b: 31 c9                        	xorl	%ecx, %ecx
  20465d: c5 f8 77                     	vzeroupper
  204660: e8 ab 6c 01 00               	callq	0x21b310 <builtin.default_panic>
  204665: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)

0000000000204670 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readInt__anon_5246>:
  204670: 55                           	pushq	%rbp
  204671: 41 57                        	pushq	%r15
  204673: 41 56                        	pushq	%r14
  204675: 41 55                        	pushq	%r13
  204677: 41 54                        	pushq	%r12
  204679: 53                           	pushq	%rbx
  20467a: 48 83 ec 18                  	subq	$24, %rsp
  20467e: 89 cd                        	movl	%ecx, %ebp
  204680: 49 89 d7                     	movq	%rdx, %r15
  204683: 49 89 f6                     	movq	%rsi, %r14
  204686: 48 89 fb                     	movq	%rdi, %rbx
  204689: 45 31 ed                     	xorl	%r13d, %r13d
  20468c: 4c 8d 64 24 08               	leaq	8(%rsp), %r12
  204691: c7 44 24 04 aa aa aa aa      	movl	$2863311530, 4(%rsp)    # imm = 0xAAAAAAAA
  204699: 0f 1f 80 00 00 00 00         	nopl	(%rax)
  2046a0: b9 04 00 00 00               	movl	$4, %ecx
  2046a5: 4a 8d 54 2c 04               	leaq	4(%rsp,%r13), %rdx
  2046aa: 4c 89 e7                     	movq	%r12, %rdi
  2046ad: 4c 89 fe                     	movq	%r15, %rsi
  2046b0: 4c 29 e9                     	subq	%r13, %rcx
  2046b3: e8 c8 4b 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2046b8: 48 8b 44 24 08               	movq	8(%rsp), %rax
  2046bd: 48 85 c0                     	testq	%rax, %rax
  2046c0: 74 31                        	je	0x2046f3 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readInt__anon_5246+0x83>
  2046c2: 49 01 c5                     	addq	%rax, %r13
  2046c5: 72 4a                        	jb	0x204711 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readInt__anon_5246+0xa1>
  2046c7: 49 83 fd 04                  	cmpq	$4, %r13
  2046cb: 72 d3                        	jb	0x2046a0 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readInt__anon_5246+0x30>
  2046cd: 8b 44 24 04                  	movl	4(%rsp), %eax
  2046d1: 40 f6 c5 01                  	testb	$1, %bpl
  2046d5: 89 c1                        	movl	%eax, %ecx
  2046d7: 0f c9                        	bswapl	%ecx
  2046d9: 0f 45 c8                     	cmovnel	%eax, %ecx
  2046dc: 31 c0                        	xorl	%eax, %eax
  2046de: 89 0b                        	movl	%ecx, (%rbx)
  2046e0: 66 89 43 04                  	movw	%ax, 4(%rbx)
  2046e4: 48 83 c4 18                  	addq	$24, %rsp
  2046e8: 5b                           	popq	%rbx
  2046e9: 41 5c                        	popq	%r12
  2046eb: 41 5d                        	popq	%r13
  2046ed: 41 5e                        	popq	%r14
  2046ef: 41 5f                        	popq	%r15
  2046f1: 5d                           	popq	%rbp
  2046f2: c3                           	retq
  2046f3: 4c 89 f7                     	movq	%r14, %rdi
  2046f6: e8 55 76 01 00               	callq	0x21bd50 <builtin.returnError>
  2046fb: 4c 89 f7                     	movq	%r14, %rdi
  2046fe: e8 4d 76 01 00               	callq	0x21bd50 <builtin.returnError>
  204703: 4c 89 f7                     	movq	%r14, %rdi
  204706: e8 45 76 01 00               	callq	0x21bd50 <builtin.returnError>
  20470b: 66 b8 33 00                  	movw	$51, %ax
  20470f: eb cf                        	jmp	0x2046e0 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readInt__anon_5246+0x70>
  204711: bf 59 1d 20 00               	movl	$2104665, %edi          # imm = 0x201D59
  204716: be 10 00 00 00               	movl	$16, %esi
  20471b: 31 c9                        	xorl	%ecx, %ecx
  20471d: e8 ee 6b 01 00               	callq	0x21b310 <builtin.default_panic>
  204722: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)

0000000000204730 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readInt__anon_5249>:
  204730: 55                           	pushq	%rbp
  204731: 41 57                        	pushq	%r15
  204733: 41 56                        	pushq	%r14
  204735: 41 55                        	pushq	%r13
  204737: 41 54                        	pushq	%r12
  204739: 53                           	pushq	%rbx
  20473a: 48 83 ec 18                  	subq	$24, %rsp
  20473e: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  204748: 89 cd                        	movl	%ecx, %ebp
  20474a: 49 89 d7                     	movq	%rdx, %r15
  20474d: 49 89 f6                     	movq	%rsi, %r14
  204750: 48 89 fb                     	movq	%rdi, %rbx
  204753: 45 31 ed                     	xorl	%r13d, %r13d
  204756: 4c 8d 64 24 08               	leaq	8(%rsp), %r12
  20475b: 48 89 04 24                  	movq	%rax, (%rsp)
  20475f: 90                           	nop
  204760: b9 08 00 00 00               	movl	$8, %ecx
  204765: 4a 8d 14 2c                  	leaq	(%rsp,%r13), %rdx
  204769: 4c 89 e7                     	movq	%r12, %rdi
  20476c: 4c 89 fe                     	movq	%r15, %rsi
  20476f: 4c 29 e9                     	subq	%r13, %rcx
  204772: e8 09 4b 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  204777: 48 8b 44 24 08               	movq	8(%rsp), %rax
  20477c: 48 85 c0                     	testq	%rax, %rax
  20477f: 74 35                        	je	0x2047b6 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readInt__anon_5249+0x86>
  204781: 49 01 c5                     	addq	%rax, %r13
  204784: 72 4e                        	jb	0x2047d4 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readInt__anon_5249+0xa4>
  204786: 49 83 fd 08                  	cmpq	$8, %r13
  20478a: 72 d4                        	jb	0x204760 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readInt__anon_5249+0x30>
  20478c: 48 8b 04 24                  	movq	(%rsp), %rax
  204790: 40 f6 c5 01                  	testb	$1, %bpl
  204794: 48 89 c1                     	movq	%rax, %rcx
  204797: 48 0f c9                     	bswapq	%rcx
  20479a: 48 0f 45 c8                  	cmovneq	%rax, %rcx
  20479e: 31 c0                        	xorl	%eax, %eax
  2047a0: 48 89 0b                     	movq	%rcx, (%rbx)
  2047a3: 66 89 43 08                  	movw	%ax, 8(%rbx)
  2047a7: 48 83 c4 18                  	addq	$24, %rsp
  2047ab: 5b                           	popq	%rbx
  2047ac: 41 5c                        	popq	%r12
  2047ae: 41 5d                        	popq	%r13
  2047b0: 41 5e                        	popq	%r14
  2047b2: 41 5f                        	popq	%r15
  2047b4: 5d                           	popq	%rbp
  2047b5: c3                           	retq
  2047b6: 4c 89 f7                     	movq	%r14, %rdi
  2047b9: e8 92 75 01 00               	callq	0x21bd50 <builtin.returnError>
  2047be: 4c 89 f7                     	movq	%r14, %rdi
  2047c1: e8 8a 75 01 00               	callq	0x21bd50 <builtin.returnError>
  2047c6: 4c 89 f7                     	movq	%r14, %rdi
  2047c9: e8 82 75 01 00               	callq	0x21bd50 <builtin.returnError>
  2047ce: 66 b8 33 00                  	movw	$51, %ax
  2047d2: eb cf                        	jmp	0x2047a3 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readInt__anon_5249+0x73>
  2047d4: bf 59 1d 20 00               	movl	$2104665, %edi          # imm = 0x201D59
  2047d9: be 10 00 00 00               	movl	$16, %esi
  2047de: 31 c9                        	xorl	%ecx, %ecx
  2047e0: e8 2b 6b 01 00               	callq	0x21b310 <builtin.default_panic>
  2047e5: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)

00000000002047f0 <leb128.readULEB128__anon_5289>:
  2047f0: 41 57                        	pushq	%r15
  2047f2: 41 56                        	pushq	%r14
  2047f4: 41 54                        	pushq	%r12
  2047f6: 53                           	pushq	%rbx
  2047f7: 48 83 ec 18                  	subq	$24, %rsp
  2047fb: c6 44 24 07 aa               	movb	$-86, 7(%rsp)
  204800: 49 89 f6                     	movq	%rsi, %r14
  204803: 48 89 fb                     	movq	%rdi, %rbx
  204806: 49 89 d7                     	movq	%rdx, %r15
  204809: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  20480e: b9 01 00 00 00               	movl	$1, %ecx
  204813: 48 8b 32                     	movq	(%rdx), %rsi
  204816: 48 8d 54 24 07               	leaq	7(%rsp), %rdx
  20481b: e8 60 4a 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  204820: 48 83 7c 24 08 00            	cmpq	$0, 8(%rsp)
  204826: 0f 84 5d 02 00 00            	je	0x204a89 <leb128.readULEB128__anon_5289+0x299>
  20482c: 0f b6 44 24 07               	movzbl	7(%rsp), %eax
  204831: 41 89 c4                     	movl	%eax, %r12d
  204834: 41 83 e4 7f                  	andl	$127, %r12d
  204838: 84 c0                        	testb	%al, %al
  20483a: 0f 89 34 02 00 00            	jns	0x204a74 <leb128.readULEB128__anon_5289+0x284>
  204840: c6 44 24 07 aa               	movb	$-86, 7(%rsp)
  204845: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  20484a: 48 8d 54 24 07               	leaq	7(%rsp), %rdx
  20484f: b9 01 00 00 00               	movl	$1, %ecx
  204854: 49 8b 37                     	movq	(%r15), %rsi
  204857: e8 24 4a 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20485c: 48 83 7c 24 08 00            	cmpq	$0, 8(%rsp)
  204862: 0f 84 21 02 00 00            	je	0x204a89 <leb128.readULEB128__anon_5289+0x299>
  204868: 0f b6 44 24 07               	movzbl	7(%rsp), %eax
  20486d: 89 c1                        	movl	%eax, %ecx
  20486f: 83 e1 7f                     	andl	$127, %ecx
  204872: 48 c1 e1 07                  	shlq	$7, %rcx
  204876: 49 09 cc                     	orq	%rcx, %r12
  204879: 84 c0                        	testb	%al, %al
  20487b: 0f 89 f3 01 00 00            	jns	0x204a74 <leb128.readULEB128__anon_5289+0x284>
  204881: c6 44 24 07 aa               	movb	$-86, 7(%rsp)
  204886: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  20488b: 48 8d 54 24 07               	leaq	7(%rsp), %rdx
  204890: b9 01 00 00 00               	movl	$1, %ecx
  204895: 49 8b 37                     	movq	(%r15), %rsi
  204898: e8 e3 49 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20489d: 48 83 7c 24 08 00            	cmpq	$0, 8(%rsp)
  2048a3: 0f 84 e0 01 00 00            	je	0x204a89 <leb128.readULEB128__anon_5289+0x299>
  2048a9: 0f b6 44 24 07               	movzbl	7(%rsp), %eax
  2048ae: 89 c1                        	movl	%eax, %ecx
  2048b0: 83 e1 7f                     	andl	$127, %ecx
  2048b3: 48 c1 e1 0e                  	shlq	$14, %rcx
  2048b7: 49 09 cc                     	orq	%rcx, %r12
  2048ba: 84 c0                        	testb	%al, %al
  2048bc: 0f 89 b2 01 00 00            	jns	0x204a74 <leb128.readULEB128__anon_5289+0x284>
  2048c2: c6 44 24 07 aa               	movb	$-86, 7(%rsp)
  2048c7: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  2048cc: 48 8d 54 24 07               	leaq	7(%rsp), %rdx
  2048d1: b9 01 00 00 00               	movl	$1, %ecx
  2048d6: 49 8b 37                     	movq	(%r15), %rsi
  2048d9: e8 a2 49 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2048de: 48 83 7c 24 08 00            	cmpq	$0, 8(%rsp)
  2048e4: 0f 84 9f 01 00 00            	je	0x204a89 <leb128.readULEB128__anon_5289+0x299>
  2048ea: 0f b6 44 24 07               	movzbl	7(%rsp), %eax
  2048ef: 89 c1                        	movl	%eax, %ecx
  2048f1: 83 e1 7f                     	andl	$127, %ecx
  2048f4: 48 c1 e1 15                  	shlq	$21, %rcx
  2048f8: 49 09 cc                     	orq	%rcx, %r12
  2048fb: 84 c0                        	testb	%al, %al
  2048fd: 0f 89 71 01 00 00            	jns	0x204a74 <leb128.readULEB128__anon_5289+0x284>
  204903: c6 44 24 07 aa               	movb	$-86, 7(%rsp)
  204908: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  20490d: 48 8d 54 24 07               	leaq	7(%rsp), %rdx
  204912: b9 01 00 00 00               	movl	$1, %ecx
  204917: 49 8b 37                     	movq	(%r15), %rsi
  20491a: e8 61 49 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20491f: 48 83 7c 24 08 00            	cmpq	$0, 8(%rsp)
  204925: 0f 84 5e 01 00 00            	je	0x204a89 <leb128.readULEB128__anon_5289+0x299>
  20492b: 0f b6 44 24 07               	movzbl	7(%rsp), %eax
  204930: 89 c1                        	movl	%eax, %ecx
  204932: 83 e1 7f                     	andl	$127, %ecx
  204935: 48 c1 e1 1c                  	shlq	$28, %rcx
  204939: 49 09 cc                     	orq	%rcx, %r12
  20493c: 84 c0                        	testb	%al, %al
  20493e: 0f 89 30 01 00 00            	jns	0x204a74 <leb128.readULEB128__anon_5289+0x284>
  204944: c6 44 24 07 aa               	movb	$-86, 7(%rsp)
  204949: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  20494e: 48 8d 54 24 07               	leaq	7(%rsp), %rdx
  204953: b9 01 00 00 00               	movl	$1, %ecx
  204958: 49 8b 37                     	movq	(%r15), %rsi
  20495b: e8 20 49 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  204960: 48 83 7c 24 08 00            	cmpq	$0, 8(%rsp)
  204966: 0f 84 1d 01 00 00            	je	0x204a89 <leb128.readULEB128__anon_5289+0x299>
  20496c: 0f b6 44 24 07               	movzbl	7(%rsp), %eax
  204971: 89 c1                        	movl	%eax, %ecx
  204973: 83 e1 7f                     	andl	$127, %ecx
  204976: 48 c1 e1 23                  	shlq	$35, %rcx
  20497a: 49 09 cc                     	orq	%rcx, %r12
  20497d: 84 c0                        	testb	%al, %al
  20497f: 0f 89 ef 00 00 00            	jns	0x204a74 <leb128.readULEB128__anon_5289+0x284>
  204985: c6 44 24 07 aa               	movb	$-86, 7(%rsp)
  20498a: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  20498f: 48 8d 54 24 07               	leaq	7(%rsp), %rdx
  204994: b9 01 00 00 00               	movl	$1, %ecx
  204999: 49 8b 37                     	movq	(%r15), %rsi
  20499c: e8 df 48 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2049a1: 48 83 7c 24 08 00            	cmpq	$0, 8(%rsp)
  2049a7: 0f 84 dc 00 00 00            	je	0x204a89 <leb128.readULEB128__anon_5289+0x299>
  2049ad: 0f b6 44 24 07               	movzbl	7(%rsp), %eax
  2049b2: 89 c1                        	movl	%eax, %ecx
  2049b4: 83 e1 7f                     	andl	$127, %ecx
  2049b7: 48 c1 e1 2a                  	shlq	$42, %rcx
  2049bb: 49 09 cc                     	orq	%rcx, %r12
  2049be: 84 c0                        	testb	%al, %al
  2049c0: 0f 89 ae 00 00 00            	jns	0x204a74 <leb128.readULEB128__anon_5289+0x284>
  2049c6: c6 44 24 07 aa               	movb	$-86, 7(%rsp)
  2049cb: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  2049d0: 48 8d 54 24 07               	leaq	7(%rsp), %rdx
  2049d5: b9 01 00 00 00               	movl	$1, %ecx
  2049da: 49 8b 37                     	movq	(%r15), %rsi
  2049dd: e8 9e 48 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2049e2: 48 83 7c 24 08 00            	cmpq	$0, 8(%rsp)
  2049e8: 0f 84 9b 00 00 00            	je	0x204a89 <leb128.readULEB128__anon_5289+0x299>
  2049ee: 0f b6 44 24 07               	movzbl	7(%rsp), %eax
  2049f3: 89 c1                        	movl	%eax, %ecx
  2049f5: 83 e1 7f                     	andl	$127, %ecx
  2049f8: 48 c1 e1 31                  	shlq	$49, %rcx
  2049fc: 49 09 cc                     	orq	%rcx, %r12
  2049ff: 84 c0                        	testb	%al, %al
  204a01: 79 71                        	jns	0x204a74 <leb128.readULEB128__anon_5289+0x284>
  204a03: c6 44 24 07 aa               	movb	$-86, 7(%rsp)
  204a08: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  204a0d: 48 8d 54 24 07               	leaq	7(%rsp), %rdx
  204a12: b9 01 00 00 00               	movl	$1, %ecx
  204a17: 49 8b 37                     	movq	(%r15), %rsi
  204a1a: e8 61 48 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  204a1f: 48 83 7c 24 08 00            	cmpq	$0, 8(%rsp)
  204a25: 74 62                        	je	0x204a89 <leb128.readULEB128__anon_5289+0x299>
  204a27: 0f b6 44 24 07               	movzbl	7(%rsp), %eax
  204a2c: 89 c1                        	movl	%eax, %ecx
  204a2e: 83 e1 7f                     	andl	$127, %ecx
  204a31: 48 c1 e1 38                  	shlq	$56, %rcx
  204a35: 49 09 cc                     	orq	%rcx, %r12
  204a38: 84 c0                        	testb	%al, %al
  204a3a: 79 38                        	jns	0x204a74 <leb128.readULEB128__anon_5289+0x284>
  204a3c: c6 44 24 07 aa               	movb	$-86, 7(%rsp)
  204a41: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  204a46: 48 8d 54 24 07               	leaq	7(%rsp), %rdx
  204a4b: b9 01 00 00 00               	movl	$1, %ecx
  204a50: 49 8b 37                     	movq	(%r15), %rsi
  204a53: e8 28 48 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  204a58: 48 83 7c 24 08 00            	cmpq	$0, 8(%rsp)
  204a5e: 74 29                        	je	0x204a89 <leb128.readULEB128__anon_5289+0x299>
  204a60: 0f b6 44 24 07               	movzbl	7(%rsp), %eax
  204a65: a8 7e                        	testb	$126, %al
  204a67: 75 38                        	jne	0x204aa1 <leb128.readULEB128__anon_5289+0x2b1>
  204a69: 84 c0                        	testb	%al, %al
  204a6b: 78 34                        	js	0x204aa1 <leb128.readULEB128__anon_5289+0x2b1>
  204a6d: 48 c1 e0 3f                  	shlq	$63, %rax
  204a71: 49 09 c4                     	orq	%rax, %r12
  204a74: 4c 89 23                     	movq	%r12, (%rbx)
  204a77: 66 c7 43 08 00 00            	movw	$0, 8(%rbx)
  204a7d: 48 83 c4 18                  	addq	$24, %rsp
  204a81: 5b                           	popq	%rbx
  204a82: 41 5c                        	popq	%r12
  204a84: 41 5e                        	popq	%r14
  204a86: 41 5f                        	popq	%r15
  204a88: c3                           	retq
  204a89: 4c 89 f7                     	movq	%r14, %rdi
  204a8c: e8 bf 72 01 00               	callq	0x21bd50 <builtin.returnError>
  204a91: 4c 89 f7                     	movq	%r14, %rdi
  204a94: e8 b7 72 01 00               	callq	0x21bd50 <builtin.returnError>
  204a99: 66 c7 43 08 33 00            	movw	$51, 8(%rbx)
  204a9f: eb dc                        	jmp	0x204a7d <leb128.readULEB128__anon_5289+0x28d>
  204aa1: 4c 89 f7                     	movq	%r14, %rdi
  204aa4: e8 a7 72 01 00               	callq	0x21bd50 <builtin.returnError>
  204aa9: c5 f8 10 05 ef b7 ff ff      	vmovups	-18449(%rip), %xmm0     # 0x2002a0 <zig-graph+0x2002a0>
  204ab1: c5 f8 11 03                  	vmovups	%xmm0, (%rbx)
  204ab5: eb c6                        	jmp	0x204a7d <leb128.readULEB128__anon_5289+0x28d>
  204ab7: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)

0000000000204ac0 <leb128.readILEB128__anon_5345>:
  204ac0: 41 57                        	pushq	%r15
  204ac2: 41 56                        	pushq	%r14
  204ac4: 41 54                        	pushq	%r12
  204ac6: 53                           	pushq	%rbx
  204ac7: 48 83 ec 18                  	subq	$24, %rsp
  204acb: c6 44 24 07 aa               	movb	$-86, 7(%rsp)
  204ad0: 49 89 f6                     	movq	%rsi, %r14
  204ad3: 48 89 fb                     	movq	%rdi, %rbx
  204ad6: 49 89 d7                     	movq	%rdx, %r15
  204ad9: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  204ade: b9 01 00 00 00               	movl	$1, %ecx
  204ae3: 48 8b 32                     	movq	(%rdx), %rsi
  204ae6: 48 8d 54 24 07               	leaq	7(%rsp), %rdx
  204aeb: e8 90 47 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  204af0: 48 83 7c 24 08 00            	cmpq	$0, 8(%rsp)
  204af6: 0f 84 ba 02 00 00            	je	0x204db6 <leb128.readILEB128__anon_5345+0x2f6>
  204afc: 0f b6 44 24 07               	movzbl	7(%rsp), %eax
  204b01: b9 07 00 00 00               	movl	$7, %ecx
  204b06: 41 89 c4                     	movl	%eax, %r12d
  204b09: 41 83 e4 7f                  	andl	$127, %r12d
  204b0d: 84 c0                        	testb	%al, %al
  204b0f: 0f 89 28 02 00 00            	jns	0x204d3d <leb128.readILEB128__anon_5345+0x27d>
  204b15: c6 44 24 07 aa               	movb	$-86, 7(%rsp)
  204b1a: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  204b1f: 48 8d 54 24 07               	leaq	7(%rsp), %rdx
  204b24: b9 01 00 00 00               	movl	$1, %ecx
  204b29: 49 8b 37                     	movq	(%r15), %rsi
  204b2c: e8 4f 47 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  204b31: 48 83 7c 24 08 00            	cmpq	$0, 8(%rsp)
  204b37: 0f 84 79 02 00 00            	je	0x204db6 <leb128.readILEB128__anon_5345+0x2f6>
  204b3d: 0f b6 44 24 07               	movzbl	7(%rsp), %eax
  204b42: 89 c1                        	movl	%eax, %ecx
  204b44: 83 e1 7f                     	andl	$127, %ecx
  204b47: 48 c1 e1 07                  	shlq	$7, %rcx
  204b4b: 49 09 cc                     	orq	%rcx, %r12
  204b4e: b9 0e 00 00 00               	movl	$14, %ecx
  204b53: 84 c0                        	testb	%al, %al
  204b55: 0f 89 e2 01 00 00            	jns	0x204d3d <leb128.readILEB128__anon_5345+0x27d>
  204b5b: c6 44 24 07 aa               	movb	$-86, 7(%rsp)
  204b60: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  204b65: 48 8d 54 24 07               	leaq	7(%rsp), %rdx
  204b6a: b9 01 00 00 00               	movl	$1, %ecx
  204b6f: 49 8b 37                     	movq	(%r15), %rsi
  204b72: e8 09 47 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  204b77: 48 83 7c 24 08 00            	cmpq	$0, 8(%rsp)
  204b7d: 0f 84 33 02 00 00            	je	0x204db6 <leb128.readILEB128__anon_5345+0x2f6>
  204b83: 0f b6 44 24 07               	movzbl	7(%rsp), %eax
  204b88: 89 c1                        	movl	%eax, %ecx
  204b8a: 83 e1 7f                     	andl	$127, %ecx
  204b8d: 48 c1 e1 0e                  	shlq	$14, %rcx
  204b91: 49 09 cc                     	orq	%rcx, %r12
  204b94: b9 15 00 00 00               	movl	$21, %ecx
  204b99: 84 c0                        	testb	%al, %al
  204b9b: 0f 89 9c 01 00 00            	jns	0x204d3d <leb128.readILEB128__anon_5345+0x27d>
  204ba1: c6 44 24 07 aa               	movb	$-86, 7(%rsp)
  204ba6: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  204bab: 48 8d 54 24 07               	leaq	7(%rsp), %rdx
  204bb0: b9 01 00 00 00               	movl	$1, %ecx
  204bb5: 49 8b 37                     	movq	(%r15), %rsi
  204bb8: e8 c3 46 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  204bbd: 48 83 7c 24 08 00            	cmpq	$0, 8(%rsp)
  204bc3: 0f 84 ed 01 00 00            	je	0x204db6 <leb128.readILEB128__anon_5345+0x2f6>
  204bc9: 0f b6 44 24 07               	movzbl	7(%rsp), %eax
  204bce: 89 c1                        	movl	%eax, %ecx
  204bd0: 83 e1 7f                     	andl	$127, %ecx
  204bd3: 48 c1 e1 15                  	shlq	$21, %rcx
  204bd7: 49 09 cc                     	orq	%rcx, %r12
  204bda: b9 1c 00 00 00               	movl	$28, %ecx
  204bdf: 84 c0                        	testb	%al, %al
  204be1: 0f 89 56 01 00 00            	jns	0x204d3d <leb128.readILEB128__anon_5345+0x27d>
  204be7: c6 44 24 07 aa               	movb	$-86, 7(%rsp)
  204bec: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  204bf1: 48 8d 54 24 07               	leaq	7(%rsp), %rdx
  204bf6: b9 01 00 00 00               	movl	$1, %ecx
  204bfb: 49 8b 37                     	movq	(%r15), %rsi
  204bfe: e8 7d 46 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  204c03: 48 83 7c 24 08 00            	cmpq	$0, 8(%rsp)
  204c09: 0f 84 a7 01 00 00            	je	0x204db6 <leb128.readILEB128__anon_5345+0x2f6>
  204c0f: 0f b6 44 24 07               	movzbl	7(%rsp), %eax
  204c14: 89 c1                        	movl	%eax, %ecx
  204c16: 83 e1 7f                     	andl	$127, %ecx
  204c19: 48 c1 e1 1c                  	shlq	$28, %rcx
  204c1d: 49 09 cc                     	orq	%rcx, %r12
  204c20: b9 23 00 00 00               	movl	$35, %ecx
  204c25: 84 c0                        	testb	%al, %al
  204c27: 0f 89 10 01 00 00            	jns	0x204d3d <leb128.readILEB128__anon_5345+0x27d>
  204c2d: c6 44 24 07 aa               	movb	$-86, 7(%rsp)
  204c32: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  204c37: 48 8d 54 24 07               	leaq	7(%rsp), %rdx
  204c3c: b9 01 00 00 00               	movl	$1, %ecx
  204c41: 49 8b 37                     	movq	(%r15), %rsi
  204c44: e8 37 46 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  204c49: 48 83 7c 24 08 00            	cmpq	$0, 8(%rsp)
  204c4f: 0f 84 61 01 00 00            	je	0x204db6 <leb128.readILEB128__anon_5345+0x2f6>
  204c55: 0f b6 44 24 07               	movzbl	7(%rsp), %eax
  204c5a: 89 c1                        	movl	%eax, %ecx
  204c5c: 83 e1 7f                     	andl	$127, %ecx
  204c5f: 48 c1 e1 23                  	shlq	$35, %rcx
  204c63: 49 09 cc                     	orq	%rcx, %r12
  204c66: b9 2a 00 00 00               	movl	$42, %ecx
  204c6b: 84 c0                        	testb	%al, %al
  204c6d: 0f 89 ca 00 00 00            	jns	0x204d3d <leb128.readILEB128__anon_5345+0x27d>
  204c73: c6 44 24 07 aa               	movb	$-86, 7(%rsp)
  204c78: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  204c7d: 48 8d 54 24 07               	leaq	7(%rsp), %rdx
  204c82: b9 01 00 00 00               	movl	$1, %ecx
  204c87: 49 8b 37                     	movq	(%r15), %rsi
  204c8a: e8 f1 45 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  204c8f: 48 83 7c 24 08 00            	cmpq	$0, 8(%rsp)
  204c95: 0f 84 1b 01 00 00            	je	0x204db6 <leb128.readILEB128__anon_5345+0x2f6>
  204c9b: 0f b6 44 24 07               	movzbl	7(%rsp), %eax
  204ca0: 89 c1                        	movl	%eax, %ecx
  204ca2: 83 e1 7f                     	andl	$127, %ecx
  204ca5: 48 c1 e1 2a                  	shlq	$42, %rcx
  204ca9: 49 09 cc                     	orq	%rcx, %r12
  204cac: b9 31 00 00 00               	movl	$49, %ecx
  204cb1: 84 c0                        	testb	%al, %al
  204cb3: 0f 89 84 00 00 00            	jns	0x204d3d <leb128.readILEB128__anon_5345+0x27d>
  204cb9: c6 44 24 07 aa               	movb	$-86, 7(%rsp)
  204cbe: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  204cc3: 48 8d 54 24 07               	leaq	7(%rsp), %rdx
  204cc8: b9 01 00 00 00               	movl	$1, %ecx
  204ccd: 49 8b 37                     	movq	(%r15), %rsi
  204cd0: e8 ab 45 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  204cd5: 48 83 7c 24 08 00            	cmpq	$0, 8(%rsp)
  204cdb: 0f 84 d5 00 00 00            	je	0x204db6 <leb128.readILEB128__anon_5345+0x2f6>
  204ce1: 0f b6 44 24 07               	movzbl	7(%rsp), %eax
  204ce6: 89 c1                        	movl	%eax, %ecx
  204ce8: 83 e1 7f                     	andl	$127, %ecx
  204ceb: 48 c1 e1 31                  	shlq	$49, %rcx
  204cef: 49 09 cc                     	orq	%rcx, %r12
  204cf2: b9 38 00 00 00               	movl	$56, %ecx
  204cf7: 84 c0                        	testb	%al, %al
  204cf9: 79 42                        	jns	0x204d3d <leb128.readILEB128__anon_5345+0x27d>
  204cfb: c6 44 24 07 aa               	movb	$-86, 7(%rsp)
  204d00: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  204d05: 48 8d 54 24 07               	leaq	7(%rsp), %rdx
  204d0a: b9 01 00 00 00               	movl	$1, %ecx
  204d0f: 49 8b 37                     	movq	(%r15), %rsi
  204d12: e8 69 45 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  204d17: 48 83 7c 24 08 00            	cmpq	$0, 8(%rsp)
  204d1d: 0f 84 93 00 00 00            	je	0x204db6 <leb128.readILEB128__anon_5345+0x2f6>
  204d23: 0f b6 44 24 07               	movzbl	7(%rsp), %eax
  204d28: 89 c1                        	movl	%eax, %ecx
  204d2a: 83 e1 7f                     	andl	$127, %ecx
  204d2d: 48 c1 e1 38                  	shlq	$56, %rcx
  204d31: 49 09 cc                     	orq	%rcx, %r12
  204d34: b9 3f 00 00 00               	movl	$63, %ecx
  204d39: 84 c0                        	testb	%al, %al
  204d3b: 78 28                        	js	0x204d65 <leb128.readILEB128__anon_5345+0x2a5>
  204d3d: a8 40                        	testb	$64, %al
  204d3f: 74 0f                        	je	0x204d50 <leb128.readILEB128__anon_5345+0x290>
  204d41: 48 c7 c0 ff ff ff ff         	movq	$-1, %rax
  204d48: c4 e2 f1 f7 c0               	shlxq	%rcx, %rax, %rax
  204d4d: 49 09 c4                     	orq	%rax, %r12
  204d50: 4c 89 23                     	movq	%r12, (%rbx)
  204d53: 66 c7 43 08 00 00            	movw	$0, 8(%rbx)
  204d59: 48 83 c4 18                  	addq	$24, %rsp
  204d5d: 5b                           	popq	%rbx
  204d5e: 41 5c                        	popq	%r12
  204d60: 41 5e                        	popq	%r14
  204d62: 41 5f                        	popq	%r15
  204d64: c3                           	retq
  204d65: c6 44 24 07 aa               	movb	$-86, 7(%rsp)
  204d6a: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  204d6f: 48 8d 54 24 07               	leaq	7(%rsp), %rdx
  204d74: b9 01 00 00 00               	movl	$1, %ecx
  204d79: 49 8b 37                     	movq	(%r15), %rsi
  204d7c: e8 ff 44 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  204d81: 48 83 7c 24 08 00            	cmpq	$0, 8(%rsp)
  204d87: 74 2d                        	je	0x204db6 <leb128.readILEB128__anon_5345+0x2f6>
  204d89: 0f b6 4c 24 07               	movzbl	7(%rsp), %ecx
  204d8e: 48 89 c8                     	movq	%rcx, %rax
  204d91: 89 ca                        	movl	%ecx, %edx
  204d93: 48 c1 e0 3f                  	shlq	$63, %rax
  204d97: 80 e2 7e                     	andb	$126, %dl
  204d9a: 74 32                        	je	0x204dce <leb128.readILEB128__anon_5345+0x30e>
  204d9c: 84 c9                        	testb	%cl, %cl
  204d9e: 78 3f                        	js	0x204ddf <leb128.readILEB128__anon_5345+0x31f>
  204da0: 48 85 c0                     	testq	%rax, %rax
  204da3: 74 3a                        	je	0x204ddf <leb128.readILEB128__anon_5345+0x31f>
  204da5: 80 fa 7e                     	cmpb	$126, %dl
  204da8: 75 35                        	jne	0x204ddf <leb128.readILEB128__anon_5345+0x31f>
  204daa: 48 b8 00 00 00 00 00 00 00 80	movabsq	$-9223372036854775808, %rax # imm = 0x8000000000000000
  204db4: eb 97                        	jmp	0x204d4d <leb128.readILEB128__anon_5345+0x28d>
  204db6: 4c 89 f7                     	movq	%r14, %rdi
  204db9: e8 92 6f 01 00               	callq	0x21bd50 <builtin.returnError>
  204dbe: 4c 89 f7                     	movq	%r14, %rdi
  204dc1: e8 8a 6f 01 00               	callq	0x21bd50 <builtin.returnError>
  204dc6: 66 c7 43 08 33 00            	movw	$51, 8(%rbx)
  204dcc: eb 8b                        	jmp	0x204d59 <leb128.readILEB128__anon_5345+0x299>
  204dce: 84 c9                        	testb	%cl, %cl
  204dd0: 78 05                        	js	0x204dd7 <leb128.readILEB128__anon_5345+0x317>
  204dd2: 48 85 c0                     	testq	%rax, %rax
  204dd5: 75 08                        	jne	0x204ddf <leb128.readILEB128__anon_5345+0x31f>
  204dd7: 84 c9                        	testb	%cl, %cl
  204dd9: 0f 89 6e ff ff ff            	jns	0x204d4d <leb128.readILEB128__anon_5345+0x28d>
  204ddf: 4c 89 f7                     	movq	%r14, %rdi
  204de2: e8 69 6f 01 00               	callq	0x21bd50 <builtin.returnError>
  204de7: c5 f8 10 05 b1 b4 ff ff      	vmovups	-19279(%rip), %xmm0     # 0x2002a0 <zig-graph+0x2002a0>
  204def: c5 f8 11 03                  	vmovups	%xmm0, (%rbx)
  204df3: e9 61 ff ff ff               	jmp	0x204d59 <leb128.readILEB128__anon_5345+0x299>
  204df8: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)

0000000000204e00 <array_list.ArrayListAligned(dwarf.AbbrevTableEntry,null).deinit>:
  204e00: 41 57                        	pushq	%r15
  204e02: 41 56                        	pushq	%r14
  204e04: 41 54                        	pushq	%r12
  204e06: 53                           	pushq	%rbx
  204e07: 50                           	pushq	%rax
  204e08: 48 8b 5f 18                  	movq	24(%rdi), %rbx
  204e0c: 4c 8b 67 20                  	movq	32(%rdi), %r12
  204e10: 4c 8b 77 10                  	movq	16(%rdi), %r14
  204e14: 4d 85 f6                     	testq	%r14, %r14
  204e17: 74 4a                        	je	0x204e63 <array_list.ArrayListAligned(dwarf.AbbrevTableEntry,null).deinit+0x63>
  204e19: 4c 89 f0                     	movq	%r14, %rax
  204e1c: 48 c1 e8 3a                  	shrq	$58, %rax
  204e20: 75 5b                        	jne	0x204e7d <array_list.ArrayListAligned(dwarf.AbbrevTableEntry,null).deinit+0x7d>
  204e22: 4c 8b 3f                     	movq	(%rdi), %r15
  204e25: 49 c1 e6 06                  	shlq	$6, %r14
  204e29: 4d 85 f6                     	testq	%r14, %r14
  204e2c: 74 43                        	je	0x204e71 <array_list.ArrayListAligned(dwarf.AbbrevTableEntry,null).deinit+0x71>
  204e2e: 4c 89 ff                     	movq	%r15, %rdi
  204e31: be aa 00 00 00               	movl	$170, %esi
  204e36: 4c 89 f2                     	movq	%r14, %rdx
  204e39: e8 a2 75 01 00               	callq	0x21c3e0 <memset>
  204e3e: 4c 8b 44 24 28               	movq	40(%rsp), %r8
  204e43: 49 8b 44 24 10               	movq	16(%r12), %rax
  204e48: 48 89 df                     	movq	%rbx, %rdi
  204e4b: 4c 89 fe                     	movq	%r15, %rsi
  204e4e: 4c 89 f2                     	movq	%r14, %rdx
  204e51: b9 03 00 00 00               	movl	$3, %ecx
  204e56: 48 83 c4 08                  	addq	$8, %rsp
  204e5a: 5b                           	popq	%rbx
  204e5b: 41 5c                        	popq	%r12
  204e5d: 41 5e                        	popq	%r14
  204e5f: 41 5f                        	popq	%r15
  204e61: ff e0                        	jmpq	*%rax
  204e63: 41 bf 08 00 00 00            	movl	$8, %r15d
  204e69: 45 31 f6                     	xorl	%r14d, %r14d
  204e6c: 4d 85 f6                     	testq	%r14, %r14
  204e6f: 75 bd                        	jne	0x204e2e <array_list.ArrayListAligned(dwarf.AbbrevTableEntry,null).deinit+0x2e>
  204e71: 48 83 c4 08                  	addq	$8, %rsp
  204e75: 5b                           	popq	%rbx
  204e76: 41 5c                        	popq	%r12
  204e78: 41 5e                        	popq	%r14
  204e7a: 41 5f                        	popq	%r15
  204e7c: c3                           	retq
  204e7d: bf 59 1d 20 00               	movl	$2104665, %edi          # imm = 0x201D59
  204e82: be 10 00 00 00               	movl	$16, %esi
  204e87: 31 c9                        	xorl	%ecx, %ecx
  204e89: e8 82 64 01 00               	callq	0x21b310 <builtin.default_panic>
  204e8e: 66 90                        	nop

0000000000204e90 <dwarf.DwarfInfo.getAbbrevTable>:
  204e90: 55                           	pushq	%rbp
  204e91: 41 57                        	pushq	%r15
  204e93: 41 56                        	pushq	%r14
  204e95: 41 55                        	pushq	%r13
  204e97: 41 54                        	pushq	%r12
  204e99: 53                           	pushq	%rbx
  204e9a: 48 81 ec 38 02 00 00         	subq	$568, %rsp              # imm = 0x238
  204ea1: 48 8b 82 c8 00 00 00         	movq	200(%rdx), %rax
  204ea8: 4d 89 c6                     	movq	%r8, %r14
  204eab: 48 89 d3                     	movq	%rdx, %rbx
  204eae: 48 89 4c 24 68               	movq	%rcx, 104(%rsp)
  204eb3: 48 89 74 24 08               	movq	%rsi, 8(%rsp)
  204eb8: 48 85 c0                     	testq	%rax, %rax
  204ebb: 74 26                        	je	0x204ee3 <dwarf.DwarfInfo.getAbbrevTable+0x53>
  204ebd: 48 8b 8b c0 00 00 00         	movq	192(%rbx), %rcx
  204ec4: 48 83 c1 08                  	addq	$8, %rcx
  204ec8: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
  204ed0: 4c 39 71 f8                  	cmpq	%r14, -8(%rcx)
  204ed4: 0f 84 f1 11 00 00            	je	0x2060cb <dwarf.DwarfInfo.getAbbrevTable+0x123b>
  204eda: 48 83 c1 30                  	addq	$48, %rcx
  204ede: 48 ff c8                     	decq	%rax
  204ee1: 75 ed                        	jne	0x204ed0 <dwarf.DwarfInfo.getAbbrevTable+0x40>
  204ee3: 48 8b 4b 18                  	movq	24(%rbx), %rcx
  204ee7: 48 8b 43 10                  	movq	16(%rbx), %rax
  204eeb: 4c 8d a4 24 d8 01 00 00      	leaq	472(%rsp), %r12
  204ef3: c5 f8 57 c0                  	vxorps	%xmm0, %xmm0, %xmm0
  204ef7: 48 8b 74 24 08               	movq	8(%rsp), %rsi
  204efc: 48 89 7c 24 70               	movq	%rdi, 112(%rsp)
  204f01: 49 bf aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %r15 # imm = 0xAAAAAAAAAAAAAAAA
  204f0b: 48 8d bc 24 90 01 00 00      	leaq	400(%rsp), %rdi
  204f13: 48 8d 54 24 58               	leaq	88(%rsp), %rdx
  204f18: 4c 89 64 24 58               	movq	%r12, 88(%rsp)
  204f1d: c5 f8 11 44 24 30            	vmovups	%xmm0, 48(%rsp)
  204f23: 4c 39 f1                     	cmpq	%r14, %rcx
  204f26: 48 89 84 24 d8 01 00 00      	movq	%rax, 472(%rsp)
  204f2e: 48 89 8c 24 e0 01 00 00      	movq	%rcx, 480(%rsp)
  204f36: 49 0f 43 ce                  	cmovaeq	%r14, %rcx
  204f3a: 48 89 8c 24 e8 01 00 00      	movq	%rcx, 488(%rsp)
  204f42: 48 8b 4c 24 68               	movq	104(%rsp), %rcx
  204f47: c5 f8 10 01                  	vmovups	(%rcx), %xmm0
  204f4b: c5 f8 11 44 24 40            	vmovups	%xmm0, 64(%rsp)
  204f51: 4c 89 7c 24 28               	movq	%r15, 40(%rsp)
  204f56: e8 95 f8 ff ff               	callq	0x2047f0 <leb128.readULEB128__anon_5289>
  204f5b: 44 0f b7 ac 24 98 01 00 00   	movzwl	408(%rsp), %r13d
  204f64: 66 45 85 ed                  	testw	%r13w, %r13w
  204f68: 0f 85 28 15 00 00            	jne	0x206496 <dwarf.DwarfInfo.getAbbrevTable+0x1606>
  204f6e: 4c 89 b4 24 a8 01 00 00      	movq	%r14, 424(%rsp)
  204f76: 49 be 00 00 00 00 00 00 00 04	movabsq	$288230376151711744, %r14 # imm = 0x400000000000000
  204f80: 48 89 5c 24 60               	movq	%rbx, 96(%rsp)
  204f85: eb 38                        	jmp	0x204fbf <dwarf.DwarfInfo.getAbbrevTable+0x12f>
  204f87: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
  204f90: 48 8b 74 24 08               	movq	8(%rsp), %rsi
  204f95: 48 8d bc 24 90 01 00 00      	leaq	400(%rsp), %rdi
  204f9d: 48 8d 54 24 58               	leaq	88(%rsp), %rdx
  204fa2: e8 49 f8 ff ff               	callq	0x2047f0 <leb128.readULEB128__anon_5289>
  204fa7: 44 0f b7 ac 24 98 01 00 00   	movzwl	408(%rsp), %r13d
  204fb0: 4c 8b 64 24 20               	movq	32(%rsp), %r12
  204fb5: 66 45 85 ed                  	testw	%r13w, %r13w
  204fb9: 0f 85 d1 18 00 00            	jne	0x206890 <dwarf.DwarfInfo.getAbbrevTable+0x1a00>
  204fbf: 4c 8b bc 24 90 01 00 00      	movq	400(%rsp), %r15
  204fc7: 4d 85 ff                     	testq	%r15, %r15
  204fca: 0f 84 a8 12 00 00            	je	0x206278 <dwarf.DwarfInfo.getAbbrevTable+0x13e8>
  204fd0: 48 8b 74 24 08               	movq	8(%rsp), %rsi
  204fd5: 48 8d bc 24 b8 01 00 00      	leaq	440(%rsp), %rdi
  204fdd: 48 8d 54 24 58               	leaq	88(%rsp), %rdx
  204fe2: e8 09 f8 ff ff               	callq	0x2047f0 <leb128.readULEB128__anon_5289>
  204fe7: 44 0f b7 ac 24 c0 01 00 00   	movzwl	448(%rsp), %r13d
  204ff0: 66 45 85 ed                  	testw	%r13w, %r13w
  204ff4: 0f 85 e0 16 00 00            	jne	0x2066da <dwarf.DwarfInfo.getAbbrevTable+0x184a>
  204ffa: 48 8b 9c 24 b8 01 00 00      	movq	440(%rsp), %rbx
  205002: b9 01 00 00 00               	movl	$1, %ecx
  205007: 48 8d bc 24 90 00 00 00      	leaq	144(%rsp), %rdi
  20500f: 4c 89 e6                     	movq	%r12, %rsi
  205012: 48 8d 54 24 78               	leaq	120(%rsp), %rdx
  205017: c6 44 24 78 aa               	movb	$-86, 120(%rsp)
  20501c: e8 5f 42 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  205021: 48 83 bc 24 90 00 00 00 00   	cmpq	$0, 144(%rsp)
  20502a: 0f 84 c7 16 00 00            	je	0x2066f7 <dwarf.DwarfInfo.getAbbrevTable+0x1867>
  205030: 48 8b 44 24 68               	movq	104(%rsp), %rax
  205035: c5 f8 57 c0                  	vxorps	%xmm0, %xmm0, %xmm0
  205039: 4c 8b 6c 24 30               	movq	48(%rsp), %r13
  20503e: 44 0f b6 64 24 78            	movzbl	120(%rsp), %r12d
  205044: c5 f8 29 84 24 00 02 00 00   	vmovaps	%xmm0, 512(%rsp)
  20504d: c5 f8 10 00                  	vmovups	(%rax), %xmm0
  205051: 4c 89 e8                     	movq	%r13, %rax
  205054: 48 ff c0                     	incq	%rax
  205057: c5 f8 29 84 24 f0 01 00 00   	vmovaps	%xmm0, 496(%rsp)
  205060: 0f 84 53 1b 00 00            	je	0x206bb9 <dwarf.DwarfInfo.getAbbrevTable+0x1d29>
  205066: 48 8b 6c 24 38               	movq	56(%rsp), %rbp
  20506b: 48 89 5c 24 18               	movq	%rbx, 24(%rsp)
  205070: 48 39 c5                     	cmpq	%rax, %rbp
  205073: 0f 83 e7 00 00 00            	jae	0x205160 <dwarf.DwarfInfo.getAbbrevTable+0x2d0>
  205079: 48 89 eb                     	movq	%rbp, %rbx
  20507c: 48 c7 c2 ff ff ff ff         	movq	$-1, %rdx
  205083: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
  205090: 48 89 d9                     	movq	%rbx, %rcx
  205093: 48 d1 e9                     	shrq	%rcx
  205096: 48 83 c1 08                  	addq	$8, %rcx
  20509a: 48 01 cb                     	addq	%rcx, %rbx
  20509d: 48 0f 42 da                  	cmovbq	%rdx, %rbx
  2050a1: 48 39 c3                     	cmpq	%rax, %rbx
  2050a4: 72 ea                        	jb	0x205090 <dwarf.DwarfInfo.getAbbrevTable+0x200>
  2050a6: 48 39 dd                     	cmpq	%rbx, %rbp
  2050a9: 0f 83 b1 00 00 00            	jae	0x205160 <dwarf.DwarfInfo.getAbbrevTable+0x2d0>
  2050af: 48 8b 74 24 28               	movq	40(%rsp), %rsi
  2050b4: 48 8d 84 24 90 00 00 00      	leaq	144(%rsp), %rax
  2050bc: 48 89 84 24 80 00 00 00      	movq	%rax, 128(%rsp)
  2050c4: 48 c7 84 24 88 00 00 00 20 00 00 00  	movq	$32, 136(%rsp)
  2050d0: 48 c7 44 24 78 00 00 00 00   	movq	$0, 120(%rsp)
  2050d9: 48 89 74 24 10               	movq	%rsi, 16(%rsp)
  2050de: 48 85 ed                     	testq	%rbp, %rbp
  2050e1: 0f 84 8a 00 00 00            	je	0x205171 <dwarf.DwarfInfo.getAbbrevTable+0x2e1>
  2050e7: 4c 39 f5                     	cmpq	%r14, %rbp
  2050ea: 0f 83 c9 1a 00 00            	jae	0x206bb9 <dwarf.DwarfInfo.getAbbrevTable+0x1d29>
  2050f0: 49 8d 46 ff                  	leaq	-1(%r14), %rax
  2050f4: 48 39 c3                     	cmpq	%rax, %rbx
  2050f7: 0f 87 61 19 00 00            	ja	0x206a5e <dwarf.DwarfInfo.getAbbrevTable+0x1bce>
  2050fd: 48 8b 44 24 48               	movq	72(%rsp), %rax
  205102: 48 8b 7c 24 40               	movq	64(%rsp), %rdi
  205107: 4c 8b 8c 24 68 02 00 00      	movq	616(%rsp), %r9
  20510f: 49 89 de                     	movq	%rbx, %r14
  205112: 48 89 ea                     	movq	%rbp, %rdx
  205115: b9 03 00 00 00               	movl	$3, %ecx
  20511a: 49 c1 e6 06                  	shlq	$6, %r14
  20511e: 48 c1 e2 06                  	shlq	$6, %rdx
  205122: 4d 89 f0                     	movq	%r14, %r8
  205125: 48 89 44 24 20               	movq	%rax, 32(%rsp)
  20512a: 48 89 bc 24 b0 01 00 00      	movq	%rdi, 432(%rsp)
  205132: 4c 89 4c 24 50               	movq	%r9, 80(%rsp)
  205137: 48 8b 44 24 20               	movq	32(%rsp), %rax
  20513c: ff 50 08                     	callq	*8(%rax)
  20513f: 48 8b bc 24 b0 01 00 00      	movq	432(%rsp), %rdi
  205147: 48 8b 4c 24 50               	movq	80(%rsp), %rcx
  20514c: 4c 8b 44 24 20               	movq	32(%rsp), %r8
  205151: a8 01                        	testb	$1, %al
  205153: 74 42                        	je	0x205197 <dwarf.DwarfInfo.getAbbrevTable+0x307>
  205155: e9 10 01 00 00               	jmp	0x20526a <dwarf.DwarfInfo.getAbbrevTable+0x3da>
  20515a: 66 0f 1f 44 00 00            	nopw	(%rax,%rax)
  205160: 48 89 eb                     	movq	%rbp, %rbx
  205163: 49 39 dd                     	cmpq	%rbx, %r13
  205166: 0f 82 0c 01 00 00            	jb	0x205278 <dwarf.DwarfInfo.getAbbrevTable+0x3e8>
  20516c: e9 81 1a 00 00               	jmp	0x206bf2 <dwarf.DwarfInfo.getAbbrevTable+0x1d62>
  205171: 48 8b 8c 24 68 02 00 00      	movq	616(%rsp), %rcx
  205179: 49 8d 46 ff                  	leaq	-1(%r14), %rax
  20517d: 48 39 c3                     	cmpq	%rax, %rbx
  205180: 0f 87 57 19 00 00            	ja	0x206add <dwarf.DwarfInfo.getAbbrevTable+0x1c4d>
  205186: 48 8b 7c 24 40               	movq	64(%rsp), %rdi
  20518b: 4c 8b 44 24 48               	movq	72(%rsp), %r8
  205190: 49 89 de                     	movq	%rbx, %r14
  205193: 49 c1 e6 06                  	shlq	$6, %r14
  205197: 4c 89 f6                     	movq	%r14, %rsi
  20519a: ba 03 00 00 00               	movl	$3, %edx
  20519f: 48 89 4c 24 50               	movq	%rcx, 80(%rsp)
  2051a4: 41 ff 10                     	callq	*(%r8)
  2051a7: 48 85 c0                     	testq	%rax, %rax
  2051aa: 0f 84 a4 18 00 00            	je	0x206a54 <dwarf.DwarfInfo.getAbbrevTable+0x1bc4>
  2051b0: 48 89 44 24 20               	movq	%rax, 32(%rsp)
  2051b5: be aa 00 00 00               	movl	$170, %esi
  2051ba: 4c 89 f2                     	movq	%r14, %rdx
  2051bd: 48 8b 7c 24 20               	movq	32(%rsp), %rdi
  2051c2: e8 19 72 01 00               	callq	0x21c3e0 <memset>
  2051c7: 48 8b 7c 24 20               	movq	32(%rsp), %rdi
  2051cc: 40 f6 c7 07                  	testb	$7, %dil
  2051d0: 0f 85 44 1a 00 00            	jne	0x206c1a <dwarf.DwarfInfo.getAbbrevTable+0x1d8a>
  2051d6: 48 8b 4c 24 10               	movq	16(%rsp), %rcx
  2051db: 49 39 dd                     	cmpq	%rbx, %r13
  2051de: 0f 87 fa 19 00 00            	ja	0x206bde <dwarf.DwarfInfo.getAbbrevTable+0x1d4e>
  2051e4: 4c 89 ea                     	movq	%r13, %rdx
  2051e7: 48 c1 e2 06                  	shlq	$6, %rdx
  2051eb: 48 8d 04 11                  	leaq	(%rcx,%rdx), %rax
  2051ef: 48 39 c7                     	cmpq	%rax, %rdi
  2051f2: 73 0f                        	jae	0x205203 <dwarf.DwarfInfo.getAbbrevTable+0x373>
  2051f4: 48 89 f8                     	movq	%rdi, %rax
  2051f7: 48 01 d0                     	addq	%rdx, %rax
  2051fa: 48 39 c1                     	cmpq	%rax, %rcx
  2051fd: 0f 82 ca 19 00 00            	jb	0x206bcd <dwarf.DwarfInfo.getAbbrevTable+0x1d3d>
  205203: 48 8b 74 24 10               	movq	16(%rsp), %rsi
  205208: e8 d3 70 01 00               	callq	0x21c2e0 <memcpy>
  20520d: 48 8b 7c 24 10               	movq	16(%rsp), %rdi
  205212: 49 89 ee                     	movq	%rbp, %r14
  205215: b8 08 00 00 00               	movl	$8, %eax
  20521a: 49 c1 e6 06                  	shlq	$6, %r14
  20521e: 48 85 ed                     	testq	%rbp, %rbp
  205221: 4c 0f 44 f5                  	cmoveq	%rbp, %r14
  205225: 48 0f 44 f8                  	cmoveq	%rax, %rdi
  205229: 4d 85 f6                     	testq	%r14, %r14
  20522c: 74 32                        	je	0x205260 <dwarf.DwarfInfo.getAbbrevTable+0x3d0>
  20522e: be aa 00 00 00               	movl	$170, %esi
  205233: 4c 89 f2                     	movq	%r14, %rdx
  205236: 49 89 fd                     	movq	%rdi, %r13
  205239: e8 a2 71 01 00               	callq	0x21c3e0 <memset>
  20523e: 48 8b 7c 24 40               	movq	64(%rsp), %rdi
  205243: 48 8b 44 24 48               	movq	72(%rsp), %rax
  205248: 4c 8b 44 24 50               	movq	80(%rsp), %r8
  20524d: 4c 89 ee                     	movq	%r13, %rsi
  205250: 4c 89 f2                     	movq	%r14, %rdx
  205253: b9 03 00 00 00               	movl	$3, %ecx
  205258: ff 50 10                     	callq	*16(%rax)
  20525b: 4c 8b 6c 24 30               	movq	48(%rsp), %r13
  205260: 48 8b 44 24 20               	movq	32(%rsp), %rax
  205265: 48 89 44 24 28               	movq	%rax, 40(%rsp)
  20526a: 48 89 5c 24 38               	movq	%rbx, 56(%rsp)
  20526f: 49 39 dd                     	cmpq	%rbx, %r13
  205272: 0f 83 7a 19 00 00            	jae	0x206bf2 <dwarf.DwarfInfo.getAbbrevTable+0x1d62>
  205278: 49 8d 45 01                  	leaq	1(%r13), %rax
  20527c: 48 8b 4c 24 18               	movq	24(%rsp), %rcx
  205281: 49 c1 e5 06                  	shlq	$6, %r13
  205285: 41 80 fc 01                  	cmpb	$1, %r12b
  205289: 48 89 44 24 30               	movq	%rax, 48(%rsp)
  20528e: 48 8b 44 24 28               	movq	40(%rsp), %rax
  205293: 4e 89 3c 28                  	movq	%r15, (%rax,%r13)
  205297: 4a 89 4c 28 08               	movq	%rcx, 8(%rax,%r13)
  20529c: 48 b9 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rcx # imm = 0xAAAAAAAAAAAAAAAA
  2052a6: 4a 89 4c 28 10               	movq	%rcx, 16(%rax,%r13)
  2052ab: c5 f8 28 84 24 00 02 00 00   	vmovaps	512(%rsp), %xmm0
  2052b4: c4 a1 78 11 44 28 18         	vmovups	%xmm0, 24(%rax,%r13)
  2052bb: c5 f8 28 84 24 f0 01 00 00   	vmovaps	496(%rsp), %xmm0
  2052c4: c4 a1 78 11 44 28 28         	vmovups	%xmm0, 40(%rax,%r13)
  2052cb: 42 0f 94 44 28 38            	sete	56(%rax,%r13)
  2052d1: 8b 8c 24 a1 01 00 00         	movl	417(%rsp), %ecx
  2052d8: 8b 94 24 a4 01 00 00         	movl	420(%rsp), %edx
  2052df: 42 89 4c 28 39               	movl	%ecx, 57(%rax,%r13)
  2052e4: 42 89 54 28 3c               	movl	%edx, 60(%rax,%r13)
  2052e9: 4c 8b 64 24 58               	movq	88(%rsp), %r12
  2052ee: 49 8b 6c 24 10               	movq	16(%r12), %rbp
  2052f3: c6 84 24 90 00 00 00 aa      	movb	$-86, 144(%rsp)
  2052fb: 49 8b 5c 24 08               	movq	8(%r12), %rbx
  205300: 48 39 eb                     	cmpq	%rbp, %rbx
  205303: 0f 82 b0 18 00 00            	jb	0x206bb9 <dwarf.DwarfInfo.getAbbrevTable+0x1d29>
  205309: 4a 8d 44 28 10               	leaq	16(%rax,%r13), %rax
  20530e: 4d 8d 74 24 10               	leaq	16(%r12), %r14
  205313: 48 89 44 24 50               	movq	%rax, 80(%rsp)
  205318: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
  205320: 31 d2                        	xorl	%edx, %edx
  205322: 48 39 eb                     	cmpq	%rbp, %rbx
  205325: 49 89 ef                     	movq	%rbp, %r15
  205328: 0f 95 c2                     	setne	%dl
  20532b: 49 01 d7                     	addq	%rdx, %r15
  20532e: 0f 82 85 18 00 00            	jb	0x206bb9 <dwarf.DwarfInfo.getAbbrevTable+0x1d29>
  205334: 49 39 df                     	cmpq	%rbx, %r15
  205337: 0f 87 a1 18 00 00            	ja	0x206bde <dwarf.DwarfInfo.getAbbrevTable+0x1d4e>
  20533d: 49 8b 04 24                  	movq	(%r12), %rax
  205341: 48 8d bc 24 90 00 00 00      	leaq	144(%rsp), %rdi
  205349: 48 8d 8c 14 90 00 00 00      	leaq	144(%rsp,%rdx), %rcx
  205351: 48 8d 34 28                  	leaq	(%rax,%rbp), %rsi
  205355: 48 89 44 24 18               	movq	%rax, 24(%rsp)
  20535a: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  20535e: 48 39 f8                     	cmpq	%rdi, %rax
  205361: 0f 96 c0                     	setbe	%al
  205364: 48 39 ce                     	cmpq	%rcx, %rsi
  205367: 73 08                        	jae	0x205371 <dwarf.DwarfInfo.getAbbrevTable+0x4e1>
  205369: 84 c0                        	testb	%al, %al
  20536b: 0f 84 5c 18 00 00            	je	0x206bcd <dwarf.DwarfInfo.getAbbrevTable+0x1d3d>
  205371: e8 6a 6f 01 00               	callq	0x21c2e0 <memcpy>
  205376: 4d 89 3e                     	movq	%r15, (%r14)
  205379: 48 39 eb                     	cmpq	%rbp, %rbx
  20537c: 0f 84 51 0d 00 00            	je	0x2060d3 <dwarf.DwarfInfo.getAbbrevTable+0x1243>
  205382: 0f b6 84 24 90 00 00 00      	movzbl	144(%rsp), %eax
  20538a: 4c 89 64 24 20               	movq	%r12, 32(%rsp)
  20538f: 89 c5                        	movl	%eax, %ebp
  205391: 83 e5 7f                     	andl	$127, %ebp
  205394: 84 c0                        	testb	%al, %al
  205396: 0f 89 14 01 00 00            	jns	0x2054b0 <dwarf.DwarfInfo.getAbbrevTable+0x620>
  20539c: 31 d2                        	xorl	%edx, %edx
  20539e: 4c 39 fb                     	cmpq	%r15, %rbx
  2053a1: 4d 89 fd                     	movq	%r15, %r13
  2053a4: c6 84 24 90 00 00 00 aa      	movb	$-86, 144(%rsp)
  2053ac: 0f 95 c2                     	setne	%dl
  2053af: 49 01 d5                     	addq	%rdx, %r13
  2053b2: 0f 82 01 18 00 00            	jb	0x206bb9 <dwarf.DwarfInfo.getAbbrevTable+0x1d29>
  2053b8: 49 39 dd                     	cmpq	%rbx, %r13
  2053bb: 0f 87 1d 18 00 00            	ja	0x206bde <dwarf.DwarfInfo.getAbbrevTable+0x1d4e>
  2053c1: 48 8b 44 24 18               	movq	24(%rsp), %rax
  2053c6: 48 8d 8c 24 90 00 00 00      	leaq	144(%rsp), %rcx
  2053ce: 4a 8d 34 38                  	leaq	(%rax,%r15), %rsi
  2053d2: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  2053d6: 48 39 c8                     	cmpq	%rcx, %rax
  2053d9: 76 11                        	jbe	0x2053ec <dwarf.DwarfInfo.getAbbrevTable+0x55c>
  2053db: 48 8d 84 14 90 00 00 00      	leaq	144(%rsp,%rdx), %rax
  2053e3: 48 39 c6                     	cmpq	%rax, %rsi
  2053e6: 0f 82 e1 17 00 00            	jb	0x206bcd <dwarf.DwarfInfo.getAbbrevTable+0x1d3d>
  2053ec: 48 8d bc 24 90 00 00 00      	leaq	144(%rsp), %rdi
  2053f4: e8 e7 6e 01 00               	callq	0x21c2e0 <memcpy>
  2053f9: 4d 89 2e                     	movq	%r13, (%r14)
  2053fc: 4c 39 fb                     	cmpq	%r15, %rbx
  2053ff: 0f 84 ce 0c 00 00            	je	0x2060d3 <dwarf.DwarfInfo.getAbbrevTable+0x1243>
  205405: 0f b6 84 24 90 00 00 00      	movzbl	144(%rsp), %eax
  20540d: 89 c1                        	movl	%eax, %ecx
  20540f: 83 e1 7f                     	andl	$127, %ecx
  205412: 48 c1 e1 07                  	shlq	$7, %rcx
  205416: 48 09 cd                     	orq	%rcx, %rbp
  205419: 84 c0                        	testb	%al, %al
  20541b: 78 08                        	js	0x205425 <dwarf.DwarfInfo.getAbbrevTable+0x595>
  20541d: 4d 89 ef                     	movq	%r13, %r15
  205420: e9 8b 00 00 00               	jmp	0x2054b0 <dwarf.DwarfInfo.getAbbrevTable+0x620>
  205425: 31 d2                        	xorl	%edx, %edx
  205427: 4c 39 eb                     	cmpq	%r13, %rbx
  20542a: 4d 89 ef                     	movq	%r13, %r15
  20542d: c6 84 24 90 00 00 00 aa      	movb	$-86, 144(%rsp)
  205435: 0f 95 c2                     	setne	%dl
  205438: 49 01 d7                     	addq	%rdx, %r15
  20543b: 0f 82 78 17 00 00            	jb	0x206bb9 <dwarf.DwarfInfo.getAbbrevTable+0x1d29>
  205441: 49 39 df                     	cmpq	%rbx, %r15
  205444: 0f 87 94 17 00 00            	ja	0x206bde <dwarf.DwarfInfo.getAbbrevTable+0x1d4e>
  20544a: 48 8b 44 24 18               	movq	24(%rsp), %rax
  20544f: 48 8d 8c 24 90 00 00 00      	leaq	144(%rsp), %rcx
  205457: 4a 8d 34 28                  	leaq	(%rax,%r13), %rsi
  20545b: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  20545f: 48 39 c8                     	cmpq	%rcx, %rax
  205462: 76 11                        	jbe	0x205475 <dwarf.DwarfInfo.getAbbrevTable+0x5e5>
  205464: 48 8d 84 14 90 00 00 00      	leaq	144(%rsp,%rdx), %rax
  20546c: 48 39 c6                     	cmpq	%rax, %rsi
  20546f: 0f 82 58 17 00 00            	jb	0x206bcd <dwarf.DwarfInfo.getAbbrevTable+0x1d3d>
  205475: 48 8d bc 24 90 00 00 00      	leaq	144(%rsp), %rdi
  20547d: e8 5e 6e 01 00               	callq	0x21c2e0 <memcpy>
  205482: 4d 89 3e                     	movq	%r15, (%r14)
  205485: 4c 39 eb                     	cmpq	%r13, %rbx
  205488: 0f 84 45 0c 00 00            	je	0x2060d3 <dwarf.DwarfInfo.getAbbrevTable+0x1243>
  20548e: 0f b6 84 24 90 00 00 00      	movzbl	144(%rsp), %eax
  205496: 89 c1                        	movl	%eax, %ecx
  205498: 83 e1 7f                     	andl	$127, %ecx
  20549b: 48 c1 e1 0e                  	shlq	$14, %rcx
  20549f: 48 09 cd                     	orq	%rcx, %rbp
  2054a2: 84 c0                        	testb	%al, %al
  2054a4: 0f 88 62 08 00 00            	js	0x205d0c <dwarf.DwarfInfo.getAbbrevTable+0xe7c>
  2054aa: 66 0f 1f 44 00 00            	nopw	(%rax,%rax)
  2054b0: 48 89 6c 24 10               	movq	%rbp, 16(%rsp)
  2054b5: c6 84 24 90 00 00 00 aa      	movb	$-86, 144(%rsp)
  2054bd: 4c 39 fb                     	cmpq	%r15, %rbx
  2054c0: 0f 82 f3 16 00 00            	jb	0x206bb9 <dwarf.DwarfInfo.getAbbrevTable+0x1d29>
  2054c6: 0f 95 c0                     	setne	%al
  2054c9: 4c 89 fd                     	movq	%r15, %rbp
  2054cc: 0f b6 d0                     	movzbl	%al, %edx
  2054cf: 48 01 d5                     	addq	%rdx, %rbp
  2054d2: 0f 82 e1 16 00 00            	jb	0x206bb9 <dwarf.DwarfInfo.getAbbrevTable+0x1d29>
  2054d8: 48 39 dd                     	cmpq	%rbx, %rbp
  2054db: 0f 87 fd 16 00 00            	ja	0x206bde <dwarf.DwarfInfo.getAbbrevTable+0x1d4e>
  2054e1: 48 8b 44 24 18               	movq	24(%rsp), %rax
  2054e6: 48 8d 8c 24 90 00 00 00      	leaq	144(%rsp), %rcx
  2054ee: 4a 8d 34 38                  	leaq	(%rax,%r15), %rsi
  2054f2: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  2054f6: 48 39 c8                     	cmpq	%rcx, %rax
  2054f9: 76 11                        	jbe	0x20550c <dwarf.DwarfInfo.getAbbrevTable+0x67c>
  2054fb: 48 8d 84 14 90 00 00 00      	leaq	144(%rsp,%rdx), %rax
  205503: 48 39 c6                     	cmpq	%rax, %rsi
  205506: 0f 82 c1 16 00 00            	jb	0x206bcd <dwarf.DwarfInfo.getAbbrevTable+0x1d3d>
  20550c: 48 8d bc 24 90 00 00 00      	leaq	144(%rsp), %rdi
  205514: e8 c7 6d 01 00               	callq	0x21c2e0 <memcpy>
  205519: 49 89 2e                     	movq	%rbp, (%r14)
  20551c: 4c 39 fb                     	cmpq	%r15, %rbx
  20551f: 0f 84 5c 0c 00 00            	je	0x206181 <dwarf.DwarfInfo.getAbbrevTable+0x12f1>
  205525: 0f b6 84 24 90 00 00 00      	movzbl	144(%rsp), %eax
  20552d: 41 89 c7                     	movl	%eax, %r15d
  205530: 41 83 e7 7f                  	andl	$127, %r15d
  205534: 84 c0                        	testb	%al, %al
  205536: 78 18                        	js	0x205550 <dwarf.DwarfInfo.getAbbrevTable+0x6c0>
  205538: 48 8b 6c 24 10               	movq	16(%rsp), %rbp
  20553d: e9 98 00 00 00               	jmp	0x2055da <dwarf.DwarfInfo.getAbbrevTable+0x74a>
  205542: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)
  205550: 31 d2                        	xorl	%edx, %edx
  205552: 48 39 eb                     	cmpq	%rbp, %rbx
  205555: 49 89 ed                     	movq	%rbp, %r13
  205558: c6 84 24 90 00 00 00 aa      	movb	$-86, 144(%rsp)
  205560: 0f 95 c2                     	setne	%dl
  205563: 49 01 d5                     	addq	%rdx, %r13
  205566: 0f 82 4d 16 00 00            	jb	0x206bb9 <dwarf.DwarfInfo.getAbbrevTable+0x1d29>
  20556c: 49 39 dd                     	cmpq	%rbx, %r13
  20556f: 0f 87 69 16 00 00            	ja	0x206bde <dwarf.DwarfInfo.getAbbrevTable+0x1d4e>
  205575: 48 8b 44 24 18               	movq	24(%rsp), %rax
  20557a: 48 8d 8c 24 90 00 00 00      	leaq	144(%rsp), %rcx
  205582: 48 8d 34 28                  	leaq	(%rax,%rbp), %rsi
  205586: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  20558a: 48 39 c8                     	cmpq	%rcx, %rax
  20558d: 76 11                        	jbe	0x2055a0 <dwarf.DwarfInfo.getAbbrevTable+0x710>
  20558f: 48 8d 84 14 90 00 00 00      	leaq	144(%rsp,%rdx), %rax
  205597: 48 39 c6                     	cmpq	%rax, %rsi
  20559a: 0f 82 2d 16 00 00            	jb	0x206bcd <dwarf.DwarfInfo.getAbbrevTable+0x1d3d>
  2055a0: 48 8d bc 24 90 00 00 00      	leaq	144(%rsp), %rdi
  2055a8: e8 33 6d 01 00               	callq	0x21c2e0 <memcpy>
  2055ad: 4d 89 2e                     	movq	%r13, (%r14)
  2055b0: 48 39 eb                     	cmpq	%rbp, %rbx
  2055b3: 0f 84 c8 0b 00 00            	je	0x206181 <dwarf.DwarfInfo.getAbbrevTable+0x12f1>
  2055b9: 0f b6 84 24 90 00 00 00      	movzbl	144(%rsp), %eax
  2055c1: 48 8b 6c 24 10               	movq	16(%rsp), %rbp
  2055c6: 89 c1                        	movl	%eax, %ecx
  2055c8: 83 e1 7f                     	andl	$127, %ecx
  2055cb: 48 c1 e1 07                  	shlq	$7, %rcx
  2055cf: 49 09 cf                     	orq	%rcx, %r15
  2055d2: 84 c0                        	testb	%al, %al
  2055d4: 0f 88 39 01 00 00            	js	0x205713 <dwarf.DwarfInfo.getAbbrevTable+0x883>
  2055da: 48 89 e8                     	movq	%rbp, %rax
  2055dd: 49 be 00 00 00 00 00 00 00 04	movabsq	$288230376151711744, %r14 # imm = 0x400000000000000
  2055e7: 4c 09 f8                     	orq	%r15, %rax
  2055ea: 0f 84 a0 f9 ff ff            	je	0x204f90 <dwarf.DwarfInfo.getAbbrevTable+0x100>
  2055f0: 4c 8b 74 24 50               	movq	80(%rsp), %r14
  2055f5: 48 c7 c3 ff ff ff ff         	movq	$-1, %rbx
  2055fc: 49 83 ff 21                  	cmpq	$33, %r15
  205600: 75 32                        	jne	0x205634 <dwarf.DwarfInfo.getAbbrevTable+0x7a4>
  205602: 48 8b 74 24 08               	movq	8(%rsp), %rsi
  205607: 48 8d bc 24 c8 01 00 00      	leaq	456(%rsp), %rdi
  20560f: 48 8d 54 24 58               	leaq	88(%rsp), %rdx
  205614: e8 a7 f4 ff ff               	callq	0x204ac0 <leb128.readILEB128__anon_5345>
  205619: 44 0f b7 ac 24 d0 01 00 00   	movzwl	464(%rsp), %r13d
  205622: 66 45 85 ed                  	testw	%r13w, %r13w
  205626: 0f 85 5a 0d 00 00            	jne	0x206386 <dwarf.DwarfInfo.getAbbrevTable+0x14f6>
  20562c: 4c 8b a4 24 c8 01 00 00      	movq	456(%rsp), %r12
  205634: 49 8b 46 08                  	movq	8(%r14), %rax
  205638: 48 89 c1                     	movq	%rax, %rcx
  20563b: 48 ff c1                     	incq	%rcx
  20563e: 0f 84 75 15 00 00            	je	0x206bb9 <dwarf.DwarfInfo.getAbbrevTable+0x1d29>
  205644: 4d 8b 6e 10                  	movq	16(%r14), %r13
  205648: 49 39 cd                     	cmpq	%rcx, %r13
  20564b: 0f 83 6b 06 00 00            	jae	0x205cbc <dwarf.DwarfInfo.getAbbrevTable+0xe2c>
  205651: 4c 89 ed                     	movq	%r13, %rbp
  205654: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
  205660: 48 89 ea                     	movq	%rbp, %rdx
  205663: 48 d1 ea                     	shrq	%rdx
  205666: 48 83 c2 08                  	addq	$8, %rdx
  20566a: 48 01 d5                     	addq	%rdx, %rbp
  20566d: 48 0f 42 eb                  	cmovbq	%rbx, %rbp
  205671: 48 39 cd                     	cmpq	%rcx, %rbp
  205674: 72 ea                        	jb	0x205660 <dwarf.DwarfInfo.getAbbrevTable+0x7d0>
  205676: 49 39 ed                     	cmpq	%rbp, %r13
  205679: 0f 83 38 06 00 00            	jae	0x205cb7 <dwarf.DwarfInfo.getAbbrevTable+0xe27>
  20567f: 49 8b 36                     	movq	(%r14), %rsi
  205682: 48 8d 84 24 90 00 00 00      	leaq	144(%rsp), %rax
  20568a: bf 18 00 00 00               	movl	$24, %edi
  20568f: 48 89 84 24 80 00 00 00      	movq	%rax, 128(%rsp)
  205697: 48 c7 84 24 88 00 00 00 20 00 00 00  	movq	$32, 136(%rsp)
  2056a3: 48 c7 44 24 78 00 00 00 00   	movq	$0, 120(%rsp)
  2056ac: 48 89 74 24 18               	movq	%rsi, 24(%rsp)
  2056b1: 4d 85 ed                     	testq	%r13, %r13
  2056b4: 0f 84 a8 04 00 00            	je	0x205b62 <dwarf.DwarfInfo.getAbbrevTable+0xcd2>
  2056ba: 4c 89 e8                     	movq	%r13, %rax
  2056bd: 48 f7 e7                     	mulq	%rdi
  2056c0: 0f 80 f3 14 00 00            	jo	0x206bb9 <dwarf.DwarfInfo.getAbbrevTable+0x1d29>
  2056c6: 48 89 c1                     	movq	%rax, %rcx
  2056c9: 48 89 e8                     	movq	%rbp, %rax
  2056cc: 48 f7 e7                     	mulq	%rdi
  2056cf: 0f 80 2e 0e 00 00            	jo	0x206503 <dwarf.DwarfInfo.getAbbrevTable+0x1673>
  2056d5: 4c 89 64 24 20               	movq	%r12, 32(%rsp)
  2056da: 4c 8b a4 24 68 02 00 00      	movq	616(%rsp), %r12
  2056e2: 48 89 c3                     	movq	%rax, %rbx
  2056e5: 49 8b 7e 18                  	movq	24(%r14), %rdi
  2056e9: 49 8b 46 20                  	movq	32(%r14), %rax
  2056ed: 48 89 ca                     	movq	%rcx, %rdx
  2056f0: b9 03 00 00 00               	movl	$3, %ecx
  2056f5: 49 89 d8                     	movq	%rbx, %r8
  2056f8: 4d 89 e1                     	movq	%r12, %r9
  2056fb: ff 50 08                     	callq	*8(%rax)
  2056fe: 4c 89 e1                     	movq	%r12, %rcx
  205701: 4c 8b 64 24 20               	movq	32(%rsp), %r12
  205706: a8 01                        	testb	$1, %al
  205708: 0f 84 6b 04 00 00            	je	0x205b79 <dwarf.DwarfInfo.getAbbrevTable+0xce9>
  20570e: e9 99 05 00 00               	jmp	0x205cac <dwarf.DwarfInfo.getAbbrevTable+0xe1c>
  205713: 31 d2                        	xorl	%edx, %edx
  205715: 4c 39 eb                     	cmpq	%r13, %rbx
  205718: 4c 89 ed                     	movq	%r13, %rbp
  20571b: c6 84 24 90 00 00 00 aa      	movb	$-86, 144(%rsp)
  205723: 0f 95 c2                     	setne	%dl
  205726: 48 01 d5                     	addq	%rdx, %rbp
  205729: 0f 82 8a 14 00 00            	jb	0x206bb9 <dwarf.DwarfInfo.getAbbrevTable+0x1d29>
  20572f: 48 39 dd                     	cmpq	%rbx, %rbp
  205732: 0f 87 a6 14 00 00            	ja	0x206bde <dwarf.DwarfInfo.getAbbrevTable+0x1d4e>
  205738: 48 8b 44 24 18               	movq	24(%rsp), %rax
  20573d: 48 8d 8c 24 90 00 00 00      	leaq	144(%rsp), %rcx
  205745: 4a 8d 34 28                  	leaq	(%rax,%r13), %rsi
  205749: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  20574d: 48 39 c8                     	cmpq	%rcx, %rax
  205750: 76 11                        	jbe	0x205763 <dwarf.DwarfInfo.getAbbrevTable+0x8d3>
  205752: 48 8d 84 14 90 00 00 00      	leaq	144(%rsp,%rdx), %rax
  20575a: 48 39 c6                     	cmpq	%rax, %rsi
  20575d: 0f 82 6a 14 00 00            	jb	0x206bcd <dwarf.DwarfInfo.getAbbrevTable+0x1d3d>
  205763: 48 8d bc 24 90 00 00 00      	leaq	144(%rsp), %rdi
  20576b: e8 70 6b 01 00               	callq	0x21c2e0 <memcpy>
  205770: 49 89 2e                     	movq	%rbp, (%r14)
  205773: 4c 39 eb                     	cmpq	%r13, %rbx
  205776: 0f 84 05 0a 00 00            	je	0x206181 <dwarf.DwarfInfo.getAbbrevTable+0x12f1>
  20577c: 0f b6 84 24 90 00 00 00      	movzbl	144(%rsp), %eax
  205784: 89 c1                        	movl	%eax, %ecx
  205786: 83 e1 7f                     	andl	$127, %ecx
  205789: 48 c1 e1 0e                  	shlq	$14, %rcx
  20578d: 49 09 cf                     	orq	%rcx, %r15
  205790: 84 c0                        	testb	%al, %al
  205792: 0f 89 a0 fd ff ff            	jns	0x205538 <dwarf.DwarfInfo.getAbbrevTable+0x6a8>
  205798: 31 d2                        	xorl	%edx, %edx
  20579a: 48 39 eb                     	cmpq	%rbp, %rbx
  20579d: 49 89 ed                     	movq	%rbp, %r13
  2057a0: c6 84 24 90 00 00 00 aa      	movb	$-86, 144(%rsp)
  2057a8: 0f 95 c2                     	setne	%dl
  2057ab: 49 01 d5                     	addq	%rdx, %r13
  2057ae: 0f 82 05 14 00 00            	jb	0x206bb9 <dwarf.DwarfInfo.getAbbrevTable+0x1d29>
  2057b4: 49 39 dd                     	cmpq	%rbx, %r13
  2057b7: 0f 87 21 14 00 00            	ja	0x206bde <dwarf.DwarfInfo.getAbbrevTable+0x1d4e>
  2057bd: 48 8b 44 24 18               	movq	24(%rsp), %rax
  2057c2: 48 8d 8c 24 90 00 00 00      	leaq	144(%rsp), %rcx
  2057ca: 48 8d 34 28                  	leaq	(%rax,%rbp), %rsi
  2057ce: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  2057d2: 48 39 c8                     	cmpq	%rcx, %rax
  2057d5: 76 11                        	jbe	0x2057e8 <dwarf.DwarfInfo.getAbbrevTable+0x958>
  2057d7: 48 8d 84 14 90 00 00 00      	leaq	144(%rsp,%rdx), %rax
  2057df: 48 39 c6                     	cmpq	%rax, %rsi
  2057e2: 0f 82 e5 13 00 00            	jb	0x206bcd <dwarf.DwarfInfo.getAbbrevTable+0x1d3d>
  2057e8: 48 8d bc 24 90 00 00 00      	leaq	144(%rsp), %rdi
  2057f0: e8 eb 6a 01 00               	callq	0x21c2e0 <memcpy>
  2057f5: 4d 89 2e                     	movq	%r13, (%r14)
  2057f8: 48 39 eb                     	cmpq	%rbp, %rbx
  2057fb: 0f 84 80 09 00 00            	je	0x206181 <dwarf.DwarfInfo.getAbbrevTable+0x12f1>
  205801: 0f b6 84 24 90 00 00 00      	movzbl	144(%rsp), %eax
  205809: 48 8b 6c 24 10               	movq	16(%rsp), %rbp
  20580e: 89 c1                        	movl	%eax, %ecx
  205810: 83 e1 7f                     	andl	$127, %ecx
  205813: 48 c1 e1 15                  	shlq	$21, %rcx
  205817: 49 09 cf                     	orq	%rcx, %r15
  20581a: 84 c0                        	testb	%al, %al
  20581c: 0f 89 b8 fd ff ff            	jns	0x2055da <dwarf.DwarfInfo.getAbbrevTable+0x74a>
  205822: 31 d2                        	xorl	%edx, %edx
  205824: 4c 39 eb                     	cmpq	%r13, %rbx
  205827: 4c 89 ed                     	movq	%r13, %rbp
  20582a: c6 84 24 90 00 00 00 aa      	movb	$-86, 144(%rsp)
  205832: 0f 95 c2                     	setne	%dl
  205835: 48 01 d5                     	addq	%rdx, %rbp
  205838: 0f 82 7b 13 00 00            	jb	0x206bb9 <dwarf.DwarfInfo.getAbbrevTable+0x1d29>
  20583e: 48 39 dd                     	cmpq	%rbx, %rbp
  205841: 0f 87 97 13 00 00            	ja	0x206bde <dwarf.DwarfInfo.getAbbrevTable+0x1d4e>
  205847: 48 8b 44 24 18               	movq	24(%rsp), %rax
  20584c: 48 8d 8c 24 90 00 00 00      	leaq	144(%rsp), %rcx
  205854: 4a 8d 34 28                  	leaq	(%rax,%r13), %rsi
  205858: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  20585c: 48 39 c8                     	cmpq	%rcx, %rax
  20585f: 76 11                        	jbe	0x205872 <dwarf.DwarfInfo.getAbbrevTable+0x9e2>
  205861: 48 8d 84 14 90 00 00 00      	leaq	144(%rsp,%rdx), %rax
  205869: 48 39 c6                     	cmpq	%rax, %rsi
  20586c: 0f 82 5b 13 00 00            	jb	0x206bcd <dwarf.DwarfInfo.getAbbrevTable+0x1d3d>
  205872: 48 8d bc 24 90 00 00 00      	leaq	144(%rsp), %rdi
  20587a: e8 61 6a 01 00               	callq	0x21c2e0 <memcpy>
  20587f: 49 89 2e                     	movq	%rbp, (%r14)
  205882: 4c 39 eb                     	cmpq	%r13, %rbx
  205885: 0f 84 f6 08 00 00            	je	0x206181 <dwarf.DwarfInfo.getAbbrevTable+0x12f1>
  20588b: 0f b6 84 24 90 00 00 00      	movzbl	144(%rsp), %eax
  205893: 89 c1                        	movl	%eax, %ecx
  205895: 83 e1 7f                     	andl	$127, %ecx
  205898: 48 c1 e1 1c                  	shlq	$28, %rcx
  20589c: 49 09 cf                     	orq	%rcx, %r15
  20589f: 84 c0                        	testb	%al, %al
  2058a1: 0f 89 91 fc ff ff            	jns	0x205538 <dwarf.DwarfInfo.getAbbrevTable+0x6a8>
  2058a7: 31 d2                        	xorl	%edx, %edx
  2058a9: 48 39 eb                     	cmpq	%rbp, %rbx
  2058ac: 49 89 ed                     	movq	%rbp, %r13
  2058af: c6 84 24 90 00 00 00 aa      	movb	$-86, 144(%rsp)
  2058b7: 0f 95 c2                     	setne	%dl
  2058ba: 49 01 d5                     	addq	%rdx, %r13
  2058bd: 0f 82 f6 12 00 00            	jb	0x206bb9 <dwarf.DwarfInfo.getAbbrevTable+0x1d29>
  2058c3: 49 39 dd                     	cmpq	%rbx, %r13
  2058c6: 0f 87 12 13 00 00            	ja	0x206bde <dwarf.DwarfInfo.getAbbrevTable+0x1d4e>
  2058cc: 48 8b 44 24 18               	movq	24(%rsp), %rax
  2058d1: 48 8d 8c 24 90 00 00 00      	leaq	144(%rsp), %rcx
  2058d9: 48 8d 34 28                  	leaq	(%rax,%rbp), %rsi
  2058dd: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  2058e1: 48 39 c8                     	cmpq	%rcx, %rax
  2058e4: 76 11                        	jbe	0x2058f7 <dwarf.DwarfInfo.getAbbrevTable+0xa67>
  2058e6: 48 8d 84 14 90 00 00 00      	leaq	144(%rsp,%rdx), %rax
  2058ee: 48 39 c6                     	cmpq	%rax, %rsi
  2058f1: 0f 82 d6 12 00 00            	jb	0x206bcd <dwarf.DwarfInfo.getAbbrevTable+0x1d3d>
  2058f7: 48 8d bc 24 90 00 00 00      	leaq	144(%rsp), %rdi
  2058ff: e8 dc 69 01 00               	callq	0x21c2e0 <memcpy>
  205904: 4d 89 2e                     	movq	%r13, (%r14)
  205907: 48 39 eb                     	cmpq	%rbp, %rbx
  20590a: 0f 84 71 08 00 00            	je	0x206181 <dwarf.DwarfInfo.getAbbrevTable+0x12f1>
  205910: 0f b6 84 24 90 00 00 00      	movzbl	144(%rsp), %eax
  205918: 48 8b 6c 24 10               	movq	16(%rsp), %rbp
  20591d: 89 c1                        	movl	%eax, %ecx
  20591f: 83 e1 7f                     	andl	$127, %ecx
  205922: 48 c1 e1 23                  	shlq	$35, %rcx
  205926: 49 09 cf                     	orq	%rcx, %r15
  205929: 84 c0                        	testb	%al, %al
  20592b: 0f 89 a9 fc ff ff            	jns	0x2055da <dwarf.DwarfInfo.getAbbrevTable+0x74a>
  205931: 31 d2                        	xorl	%edx, %edx
  205933: 4c 39 eb                     	cmpq	%r13, %rbx
  205936: 4c 89 ed                     	movq	%r13, %rbp
  205939: c6 84 24 90 00 00 00 aa      	movb	$-86, 144(%rsp)
  205941: 0f 95 c2                     	setne	%dl
  205944: 48 01 d5                     	addq	%rdx, %rbp
  205947: 0f 82 6c 12 00 00            	jb	0x206bb9 <dwarf.DwarfInfo.getAbbrevTable+0x1d29>
  20594d: 48 39 dd                     	cmpq	%rbx, %rbp
  205950: 0f 87 88 12 00 00            	ja	0x206bde <dwarf.DwarfInfo.getAbbrevTable+0x1d4e>
  205956: 48 8b 44 24 18               	movq	24(%rsp), %rax
  20595b: 48 8d 8c 24 90 00 00 00      	leaq	144(%rsp), %rcx
  205963: 4a 8d 34 28                  	leaq	(%rax,%r13), %rsi
  205967: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  20596b: 48 39 c8                     	cmpq	%rcx, %rax
  20596e: 76 11                        	jbe	0x205981 <dwarf.DwarfInfo.getAbbrevTable+0xaf1>
  205970: 48 8d 84 14 90 00 00 00      	leaq	144(%rsp,%rdx), %rax
  205978: 48 39 c6                     	cmpq	%rax, %rsi
  20597b: 0f 82 4c 12 00 00            	jb	0x206bcd <dwarf.DwarfInfo.getAbbrevTable+0x1d3d>
  205981: 48 8d bc 24 90 00 00 00      	leaq	144(%rsp), %rdi
  205989: e8 52 69 01 00               	callq	0x21c2e0 <memcpy>
  20598e: 49 89 2e                     	movq	%rbp, (%r14)
  205991: 4c 39 eb                     	cmpq	%r13, %rbx
  205994: 0f 84 e7 07 00 00            	je	0x206181 <dwarf.DwarfInfo.getAbbrevTable+0x12f1>
  20599a: 0f b6 84 24 90 00 00 00      	movzbl	144(%rsp), %eax
  2059a2: 89 c1                        	movl	%eax, %ecx
  2059a4: 83 e1 7f                     	andl	$127, %ecx
  2059a7: 48 c1 e1 2a                  	shlq	$42, %rcx
  2059ab: 49 09 cf                     	orq	%rcx, %r15
  2059ae: 84 c0                        	testb	%al, %al
  2059b0: 0f 89 82 fb ff ff            	jns	0x205538 <dwarf.DwarfInfo.getAbbrevTable+0x6a8>
  2059b6: 31 d2                        	xorl	%edx, %edx
  2059b8: 48 39 eb                     	cmpq	%rbp, %rbx
  2059bb: 49 89 ed                     	movq	%rbp, %r13
  2059be: c6 84 24 90 00 00 00 aa      	movb	$-86, 144(%rsp)
  2059c6: 0f 95 c2                     	setne	%dl
  2059c9: 49 01 d5                     	addq	%rdx, %r13
  2059cc: 0f 82 e7 11 00 00            	jb	0x206bb9 <dwarf.DwarfInfo.getAbbrevTable+0x1d29>
  2059d2: 49 39 dd                     	cmpq	%rbx, %r13
  2059d5: 0f 87 03 12 00 00            	ja	0x206bde <dwarf.DwarfInfo.getAbbrevTable+0x1d4e>
  2059db: 48 8b 44 24 18               	movq	24(%rsp), %rax
  2059e0: 48 8d 8c 24 90 00 00 00      	leaq	144(%rsp), %rcx
  2059e8: 48 8d 34 28                  	leaq	(%rax,%rbp), %rsi
  2059ec: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  2059f0: 48 39 c8                     	cmpq	%rcx, %rax
  2059f3: 76 11                        	jbe	0x205a06 <dwarf.DwarfInfo.getAbbrevTable+0xb76>
  2059f5: 48 8d 84 14 90 00 00 00      	leaq	144(%rsp,%rdx), %rax
  2059fd: 48 39 c6                     	cmpq	%rax, %rsi
  205a00: 0f 82 c7 11 00 00            	jb	0x206bcd <dwarf.DwarfInfo.getAbbrevTable+0x1d3d>
  205a06: 48 8d bc 24 90 00 00 00      	leaq	144(%rsp), %rdi
  205a0e: e8 cd 68 01 00               	callq	0x21c2e0 <memcpy>
  205a13: 4d 89 2e                     	movq	%r13, (%r14)
  205a16: 48 39 eb                     	cmpq	%rbp, %rbx
  205a19: 0f 84 62 07 00 00            	je	0x206181 <dwarf.DwarfInfo.getAbbrevTable+0x12f1>
  205a1f: 0f b6 84 24 90 00 00 00      	movzbl	144(%rsp), %eax
  205a27: 48 8b 6c 24 10               	movq	16(%rsp), %rbp
  205a2c: 89 c1                        	movl	%eax, %ecx
  205a2e: 83 e1 7f                     	andl	$127, %ecx
  205a31: 48 c1 e1 31                  	shlq	$49, %rcx
  205a35: 49 09 cf                     	orq	%rcx, %r15
  205a38: 84 c0                        	testb	%al, %al
  205a3a: 0f 89 9a fb ff ff            	jns	0x2055da <dwarf.DwarfInfo.getAbbrevTable+0x74a>
  205a40: 31 d2                        	xorl	%edx, %edx
  205a42: 4c 39 eb                     	cmpq	%r13, %rbx
  205a45: 4c 89 ed                     	movq	%r13, %rbp
  205a48: c6 84 24 90 00 00 00 aa      	movb	$-86, 144(%rsp)
  205a50: 0f 95 c2                     	setne	%dl
  205a53: 48 01 d5                     	addq	%rdx, %rbp
  205a56: 0f 82 5d 11 00 00            	jb	0x206bb9 <dwarf.DwarfInfo.getAbbrevTable+0x1d29>
  205a5c: 48 39 dd                     	cmpq	%rbx, %rbp
  205a5f: 0f 87 79 11 00 00            	ja	0x206bde <dwarf.DwarfInfo.getAbbrevTable+0x1d4e>
  205a65: 48 8b 44 24 18               	movq	24(%rsp), %rax
  205a6a: 48 8d 8c 24 90 00 00 00      	leaq	144(%rsp), %rcx
  205a72: 4a 8d 34 28                  	leaq	(%rax,%r13), %rsi
  205a76: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  205a7a: 48 39 c8                     	cmpq	%rcx, %rax
  205a7d: 76 11                        	jbe	0x205a90 <dwarf.DwarfInfo.getAbbrevTable+0xc00>
  205a7f: 48 8d 84 14 90 00 00 00      	leaq	144(%rsp,%rdx), %rax
  205a87: 48 39 c6                     	cmpq	%rax, %rsi
  205a8a: 0f 82 3d 11 00 00            	jb	0x206bcd <dwarf.DwarfInfo.getAbbrevTable+0x1d3d>
  205a90: 48 8d bc 24 90 00 00 00      	leaq	144(%rsp), %rdi
  205a98: e8 43 68 01 00               	callq	0x21c2e0 <memcpy>
  205a9d: 49 89 2e                     	movq	%rbp, (%r14)
  205aa0: 4c 39 eb                     	cmpq	%r13, %rbx
  205aa3: 0f 84 d8 06 00 00            	je	0x206181 <dwarf.DwarfInfo.getAbbrevTable+0x12f1>
  205aa9: 0f b6 84 24 90 00 00 00      	movzbl	144(%rsp), %eax
  205ab1: 89 c1                        	movl	%eax, %ecx
  205ab3: 83 e1 7f                     	andl	$127, %ecx
  205ab6: 48 c1 e1 38                  	shlq	$56, %rcx
  205aba: 49 09 cf                     	orq	%rcx, %r15
  205abd: 84 c0                        	testb	%al, %al
  205abf: 0f 89 73 fa ff ff            	jns	0x205538 <dwarf.DwarfInfo.getAbbrevTable+0x6a8>
  205ac5: 31 d2                        	xorl	%edx, %edx
  205ac7: 48 39 eb                     	cmpq	%rbp, %rbx
  205aca: 49 89 ed                     	movq	%rbp, %r13
  205acd: c6 84 24 90 00 00 00 aa      	movb	$-86, 144(%rsp)
  205ad5: 0f 95 c2                     	setne	%dl
  205ad8: 49 01 d5                     	addq	%rdx, %r13
  205adb: 0f 82 d8 10 00 00            	jb	0x206bb9 <dwarf.DwarfInfo.getAbbrevTable+0x1d29>
  205ae1: 49 39 dd                     	cmpq	%rbx, %r13
  205ae4: 0f 87 f4 10 00 00            	ja	0x206bde <dwarf.DwarfInfo.getAbbrevTable+0x1d4e>
  205aea: 48 8b 44 24 18               	movq	24(%rsp), %rax
  205aef: 48 8d 8c 24 90 00 00 00      	leaq	144(%rsp), %rcx
  205af7: 48 01 e8                     	addq	%rbp, %rax
  205afa: 48 89 c6                     	movq	%rax, %rsi
  205afd: 48 01 d0                     	addq	%rdx, %rax
  205b00: 48 39 c8                     	cmpq	%rcx, %rax
  205b03: 76 11                        	jbe	0x205b16 <dwarf.DwarfInfo.getAbbrevTable+0xc86>
  205b05: 48 8d 84 14 90 00 00 00      	leaq	144(%rsp,%rdx), %rax
  205b0d: 48 39 c6                     	cmpq	%rax, %rsi
  205b10: 0f 82 b7 10 00 00            	jb	0x206bcd <dwarf.DwarfInfo.getAbbrevTable+0x1d3d>
  205b16: 48 8d bc 24 90 00 00 00      	leaq	144(%rsp), %rdi
  205b1e: e8 bd 67 01 00               	callq	0x21c2e0 <memcpy>
  205b23: 4d 89 2e                     	movq	%r13, (%r14)
  205b26: 48 39 eb                     	cmpq	%rbp, %rbx
  205b29: 0f 84 52 06 00 00            	je	0x206181 <dwarf.DwarfInfo.getAbbrevTable+0x12f1>
  205b2f: 0f b6 84 24 90 00 00 00      	movzbl	144(%rsp), %eax
  205b37: 66 41 bd 29 00               	movw	$41, %r13w
  205b3c: a8 7e                        	testb	$126, %al
  205b3e: 0f 85 c2 10 00 00            	jne	0x206c06 <dwarf.DwarfInfo.getAbbrevTable+0x1d76>
  205b44: 48 8b 5c 24 08               	movq	8(%rsp), %rbx
  205b49: 48 8b 6c 24 10               	movq	16(%rsp), %rbp
  205b4e: 84 c0                        	testb	%al, %al
  205b50: 0f 88 3d 06 00 00            	js	0x206193 <dwarf.DwarfInfo.getAbbrevTable+0x1303>
  205b56: 48 c1 e0 3f                  	shlq	$63, %rax
  205b5a: 49 09 c7                     	orq	%rax, %r15
  205b5d: e9 78 fa ff ff               	jmp	0x2055da <dwarf.DwarfInfo.getAbbrevTable+0x74a>
  205b62: 48 89 e8                     	movq	%rbp, %rax
  205b65: 48 8b 8c 24 68 02 00 00      	movq	616(%rsp), %rcx
  205b6d: 48 f7 e7                     	mulq	%rdi
  205b70: 0f 80 a6 09 00 00            	jo	0x20651c <dwarf.DwarfInfo.getAbbrevTable+0x168c>
  205b76: 48 89 c3                     	movq	%rax, %rbx
  205b79: 49 8b 7e 18                  	movq	24(%r14), %rdi
  205b7d: 49 8b 46 20                  	movq	32(%r14), %rax
  205b81: 48 89 de                     	movq	%rbx, %rsi
  205b84: ba 03 00 00 00               	movl	$3, %edx
  205b89: 48 89 4c 24 20               	movq	%rcx, 32(%rsp)
  205b8e: ff 10                        	callq	*(%rax)
  205b90: 48 85 c0                     	testq	%rax, %rax
  205b93: 0f 84 63 09 00 00            	je	0x2064fc <dwarf.DwarfInfo.getAbbrevTable+0x166c>
  205b99: 48 89 c7                     	movq	%rax, %rdi
  205b9c: be aa 00 00 00               	movl	$170, %esi
  205ba1: 48 89 da                     	movq	%rbx, %rdx
  205ba4: 49 89 c6                     	movq	%rax, %r14
  205ba7: e8 34 68 01 00               	callq	0x21c3e0 <memset>
  205bac: 48 85 db                     	testq	%rbx, %rbx
  205baf: 74 0c                        	je	0x205bbd <dwarf.DwarfInfo.getAbbrevTable+0xd2d>
  205bb1: 44 89 f0                     	movl	%r14d, %eax
  205bb4: 83 e0 07                     	andl	$7, %eax
  205bb7: 0f 85 5d 10 00 00            	jne	0x206c1a <dwarf.DwarfInfo.getAbbrevTable+0x1d8a>
  205bbd: 48 85 db                     	testq	%rbx, %rbx
  205bc0: 74 42                        	je	0x205c04 <dwarf.DwarfInfo.getAbbrevTable+0xd74>
  205bc2: 48 89 da                     	movq	%rbx, %rdx
  205bc5: 48 b8 ab aa aa aa aa aa aa aa	movabsq	$-6148914691236517205, %rax # imm = 0xAAAAAAAAAAAAAAAB
  205bcf: 48 b9 ab aa aa aa aa aa aa 0a	movabsq	$768614336404564651, %rcx # imm = 0xAAAAAAAAAAAAAAB
  205bd9: c4 e2 fb f6 e8               	mulxq	%rax, %rax, %rbp
  205bde: c4 e3 fb f0 c0 03            	rorxq	$3, %rax, %rax
  205be4: 48 39 c8                     	cmpq	%rcx, %rax
  205be7: 0f 83 3e 10 00 00            	jae	0x206c2b <dwarf.DwarfInfo.getAbbrevTable+0x1d9b>
  205bed: 48 c1 ed 04                  	shrq	$4, %rbp
  205bf1: 48 8b 4c 24 50               	movq	80(%rsp), %rcx
  205bf6: 48 8b 41 08                  	movq	8(%rcx), %rax
  205bfa: 48 39 e8                     	cmpq	%rbp, %rax
  205bfd: 76 23                        	jbe	0x205c22 <dwarf.DwarfInfo.getAbbrevTable+0xd92>
  205bff: e9 da 0f 00 00               	jmp	0x206bde <dwarf.DwarfInfo.getAbbrevTable+0x1d4e>
  205c04: 49 be aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %r14 # imm = 0xAAAAAAAAAAAAAAAA
  205c0e: 31 ed                        	xorl	%ebp, %ebp
  205c10: 48 8b 4c 24 50               	movq	80(%rsp), %rcx
  205c15: 48 8b 41 08                  	movq	8(%rcx), %rax
  205c19: 48 39 e8                     	cmpq	%rbp, %rax
  205c1c: 0f 87 bc 0f 00 00            	ja	0x206bde <dwarf.DwarfInfo.getAbbrevTable+0x1d4e>
  205c22: 48 8b 31                     	movq	(%rcx), %rsi
  205c25: 48 c1 e0 03                  	shlq	$3, %rax
  205c29: 48 8d 14 40                  	leaq	(%rax,%rax,2), %rdx
  205c2d: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  205c31: 49 39 c6                     	cmpq	%rax, %r14
  205c34: 73 0d                        	jae	0x205c43 <dwarf.DwarfInfo.getAbbrevTable+0xdb3>
  205c36: 49 8d 04 16                  	leaq	(%r14,%rdx), %rax
  205c3a: 48 39 c6                     	cmpq	%rax, %rsi
  205c3d: 0f 82 8a 0f 00 00            	jb	0x206bcd <dwarf.DwarfInfo.getAbbrevTable+0x1d3d>
  205c43: 4c 89 f7                     	movq	%r14, %rdi
  205c46: e8 95 66 01 00               	callq	0x21c2e0 <memcpy>
  205c4b: 4a 8d 04 ed 00 00 00 00      	leaq	(,%r13,8), %rax
  205c53: 4d 85 ed                     	testq	%r13, %r13
  205c56: 48 8b 7c 24 18               	movq	24(%rsp), %rdi
  205c5b: 48 8d 1c 40                  	leaq	(%rax,%rax,2), %rbx
  205c5f: b8 08 00 00 00               	movl	$8, %eax
  205c64: 49 0f 44 dd                  	cmoveq	%r13, %rbx
  205c68: 4c 8b 6c 24 50               	movq	80(%rsp), %r13
  205c6d: 48 0f 44 f8                  	cmoveq	%rax, %rdi
  205c71: 48 85 db                     	testq	%rbx, %rbx
  205c74: 74 2f                        	je	0x205ca5 <dwarf.DwarfInfo.getAbbrevTable+0xe15>
  205c76: be aa 00 00 00               	movl	$170, %esi
  205c7b: 48 89 da                     	movq	%rbx, %rdx
  205c7e: 48 89 7c 24 18               	movq	%rdi, 24(%rsp)
  205c83: e8 58 67 01 00               	callq	0x21c3e0 <memset>
  205c88: 49 8b 7d 18                  	movq	24(%r13), %rdi
  205c8c: 49 8b 45 20                  	movq	32(%r13), %rax
  205c90: 48 8b 74 24 18               	movq	24(%rsp), %rsi
  205c95: 4c 8b 44 24 20               	movq	32(%rsp), %r8
  205c9a: 48 89 da                     	movq	%rbx, %rdx
  205c9d: b9 03 00 00 00               	movl	$3, %ecx
  205ca2: ff 50 10                     	callq	*16(%rax)
  205ca5: 4d 89 75 00                  	movq	%r14, (%r13)
  205ca9: 4d 89 ee                     	movq	%r13, %r14
  205cac: 49 89 6e 10                  	movq	%rbp, 16(%r14)
  205cb0: 49 89 ed                     	movq	%rbp, %r13
  205cb3: 49 8b 46 08                  	movq	8(%r14), %rax
  205cb7: 48 8b 6c 24 10               	movq	16(%rsp), %rbp
  205cbc: 4c 39 e8                     	cmpq	%r13, %rax
  205cbf: 0f 83 2d 0f 00 00            	jae	0x206bf2 <dwarf.DwarfInfo.getAbbrevTable+0x1d62>
  205cc5: 48 8d 48 01                  	leaq	1(%rax), %rcx
  205cc9: 48 8d 04 40                  	leaq	(%rax,%rax,2), %rax
  205ccd: 49 89 4e 08                  	movq	%rcx, 8(%r14)
  205cd1: 49 8b 0e                     	movq	(%r14), %rcx
  205cd4: 48 89 2c c1                  	movq	%rbp, (%rcx,%rax,8)
  205cd8: 4c 89 7c c1 08               	movq	%r15, 8(%rcx,%rax,8)
  205cdd: 4c 89 64 c1 10               	movq	%r12, 16(%rcx,%rax,8)
  205ce2: 4c 8b 64 24 58               	movq	88(%rsp), %r12
  205ce7: 49 8b 6c 24 10               	movq	16(%r12), %rbp
  205cec: c6 84 24 90 00 00 00 aa      	movb	$-86, 144(%rsp)
  205cf4: 4d 8d 74 24 10               	leaq	16(%r12), %r14
  205cf9: 49 8b 5c 24 08               	movq	8(%r12), %rbx
  205cfe: 48 39 eb                     	cmpq	%rbp, %rbx
  205d01: 0f 83 19 f6 ff ff            	jae	0x205320 <dwarf.DwarfInfo.getAbbrevTable+0x490>
  205d07: e9 ad 0e 00 00               	jmp	0x206bb9 <dwarf.DwarfInfo.getAbbrevTable+0x1d29>
  205d0c: 31 d2                        	xorl	%edx, %edx
  205d0e: 4c 39 fb                     	cmpq	%r15, %rbx
  205d11: 4d 89 fd                     	movq	%r15, %r13
  205d14: c6 84 24 90 00 00 00 aa      	movb	$-86, 144(%rsp)
  205d1c: 0f 95 c2                     	setne	%dl
  205d1f: 49 01 d5                     	addq	%rdx, %r13
  205d22: 0f 82 91 0e 00 00            	jb	0x206bb9 <dwarf.DwarfInfo.getAbbrevTable+0x1d29>
  205d28: 49 39 dd                     	cmpq	%rbx, %r13
  205d2b: 0f 87 ad 0e 00 00            	ja	0x206bde <dwarf.DwarfInfo.getAbbrevTable+0x1d4e>
  205d31: 48 8b 44 24 18               	movq	24(%rsp), %rax
  205d36: 48 8d 8c 24 90 00 00 00      	leaq	144(%rsp), %rcx
  205d3e: 4a 8d 34 38                  	leaq	(%rax,%r15), %rsi
  205d42: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  205d46: 48 39 c8                     	cmpq	%rcx, %rax
  205d49: 76 11                        	jbe	0x205d5c <dwarf.DwarfInfo.getAbbrevTable+0xecc>
  205d4b: 48 8d 84 14 90 00 00 00      	leaq	144(%rsp,%rdx), %rax
  205d53: 48 39 c6                     	cmpq	%rax, %rsi
  205d56: 0f 82 71 0e 00 00            	jb	0x206bcd <dwarf.DwarfInfo.getAbbrevTable+0x1d3d>
  205d5c: 48 8d bc 24 90 00 00 00      	leaq	144(%rsp), %rdi
  205d64: e8 77 65 01 00               	callq	0x21c2e0 <memcpy>
  205d69: 4d 89 2e                     	movq	%r13, (%r14)
  205d6c: 4c 39 fb                     	cmpq	%r15, %rbx
  205d6f: 0f 84 5e 03 00 00            	je	0x2060d3 <dwarf.DwarfInfo.getAbbrevTable+0x1243>
  205d75: 0f b6 84 24 90 00 00 00      	movzbl	144(%rsp), %eax
  205d7d: 89 c1                        	movl	%eax, %ecx
  205d7f: 83 e1 7f                     	andl	$127, %ecx
  205d82: 48 c1 e1 15                  	shlq	$21, %rcx
  205d86: 48 09 cd                     	orq	%rcx, %rbp
  205d89: 84 c0                        	testb	%al, %al
  205d8b: 0f 89 8c f6 ff ff            	jns	0x20541d <dwarf.DwarfInfo.getAbbrevTable+0x58d>
  205d91: 31 d2                        	xorl	%edx, %edx
  205d93: 4c 39 eb                     	cmpq	%r13, %rbx
  205d96: 4d 89 ef                     	movq	%r13, %r15
  205d99: c6 84 24 90 00 00 00 aa      	movb	$-86, 144(%rsp)
  205da1: 0f 95 c2                     	setne	%dl
  205da4: 49 01 d7                     	addq	%rdx, %r15
  205da7: 0f 82 0c 0e 00 00            	jb	0x206bb9 <dwarf.DwarfInfo.getAbbrevTable+0x1d29>
  205dad: 49 39 df                     	cmpq	%rbx, %r15
  205db0: 0f 87 28 0e 00 00            	ja	0x206bde <dwarf.DwarfInfo.getAbbrevTable+0x1d4e>
  205db6: 48 8b 44 24 18               	movq	24(%rsp), %rax
  205dbb: 48 8d 8c 24 90 00 00 00      	leaq	144(%rsp), %rcx
  205dc3: 4a 8d 34 28                  	leaq	(%rax,%r13), %rsi
  205dc7: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  205dcb: 48 39 c8                     	cmpq	%rcx, %rax
  205dce: 76 11                        	jbe	0x205de1 <dwarf.DwarfInfo.getAbbrevTable+0xf51>
  205dd0: 48 8d 84 14 90 00 00 00      	leaq	144(%rsp,%rdx), %rax
  205dd8: 48 39 c6                     	cmpq	%rax, %rsi
  205ddb: 0f 82 ec 0d 00 00            	jb	0x206bcd <dwarf.DwarfInfo.getAbbrevTable+0x1d3d>
  205de1: 48 8d bc 24 90 00 00 00      	leaq	144(%rsp), %rdi
  205de9: e8 f2 64 01 00               	callq	0x21c2e0 <memcpy>
  205dee: 4d 89 3e                     	movq	%r15, (%r14)
  205df1: 4c 39 eb                     	cmpq	%r13, %rbx
  205df4: 0f 84 d9 02 00 00            	je	0x2060d3 <dwarf.DwarfInfo.getAbbrevTable+0x1243>
  205dfa: 0f b6 84 24 90 00 00 00      	movzbl	144(%rsp), %eax
  205e02: 89 c1                        	movl	%eax, %ecx
  205e04: 83 e1 7f                     	andl	$127, %ecx
  205e07: 48 c1 e1 1c                  	shlq	$28, %rcx
  205e0b: 48 09 cd                     	orq	%rcx, %rbp
  205e0e: 84 c0                        	testb	%al, %al
  205e10: 0f 89 9a f6 ff ff            	jns	0x2054b0 <dwarf.DwarfInfo.getAbbrevTable+0x620>
  205e16: 31 d2                        	xorl	%edx, %edx
  205e18: 4c 39 fb                     	cmpq	%r15, %rbx
  205e1b: 4d 89 fd                     	movq	%r15, %r13
  205e1e: c6 84 24 90 00 00 00 aa      	movb	$-86, 144(%rsp)
  205e26: 0f 95 c2                     	setne	%dl
  205e29: 49 01 d5                     	addq	%rdx, %r13
  205e2c: 0f 82 87 0d 00 00            	jb	0x206bb9 <dwarf.DwarfInfo.getAbbrevTable+0x1d29>
  205e32: 49 39 dd                     	cmpq	%rbx, %r13
  205e35: 0f 87 a3 0d 00 00            	ja	0x206bde <dwarf.DwarfInfo.getAbbrevTable+0x1d4e>
  205e3b: 48 8b 44 24 18               	movq	24(%rsp), %rax
  205e40: 48 8d 8c 24 90 00 00 00      	leaq	144(%rsp), %rcx
  205e48: 4a 8d 34 38                  	leaq	(%rax,%r15), %rsi
  205e4c: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  205e50: 48 39 c8                     	cmpq	%rcx, %rax
  205e53: 76 11                        	jbe	0x205e66 <dwarf.DwarfInfo.getAbbrevTable+0xfd6>
  205e55: 48 8d 84 14 90 00 00 00      	leaq	144(%rsp,%rdx), %rax
  205e5d: 48 39 c6                     	cmpq	%rax, %rsi
  205e60: 0f 82 67 0d 00 00            	jb	0x206bcd <dwarf.DwarfInfo.getAbbrevTable+0x1d3d>
  205e66: 48 8d bc 24 90 00 00 00      	leaq	144(%rsp), %rdi
  205e6e: e8 6d 64 01 00               	callq	0x21c2e0 <memcpy>
  205e73: 4d 89 2e                     	movq	%r13, (%r14)
  205e76: 4c 39 fb                     	cmpq	%r15, %rbx
  205e79: 0f 84 54 02 00 00            	je	0x2060d3 <dwarf.DwarfInfo.getAbbrevTable+0x1243>
  205e7f: 0f b6 84 24 90 00 00 00      	movzbl	144(%rsp), %eax
  205e87: 89 c1                        	movl	%eax, %ecx
  205e89: 83 e1 7f                     	andl	$127, %ecx
  205e8c: 48 c1 e1 23                  	shlq	$35, %rcx
  205e90: 48 09 cd                     	orq	%rcx, %rbp
  205e93: 84 c0                        	testb	%al, %al
  205e95: 0f 89 82 f5 ff ff            	jns	0x20541d <dwarf.DwarfInfo.getAbbrevTable+0x58d>
  205e9b: 31 d2                        	xorl	%edx, %edx
  205e9d: 4c 39 eb                     	cmpq	%r13, %rbx
  205ea0: 4d 89 ef                     	movq	%r13, %r15
  205ea3: c6 84 24 90 00 00 00 aa      	movb	$-86, 144(%rsp)
  205eab: 0f 95 c2                     	setne	%dl
  205eae: 49 01 d7                     	addq	%rdx, %r15
  205eb1: 0f 82 02 0d 00 00            	jb	0x206bb9 <dwarf.DwarfInfo.getAbbrevTable+0x1d29>
  205eb7: 49 39 df                     	cmpq	%rbx, %r15
  205eba: 0f 87 1e 0d 00 00            	ja	0x206bde <dwarf.DwarfInfo.getAbbrevTable+0x1d4e>
  205ec0: 48 8b 44 24 18               	movq	24(%rsp), %rax
  205ec5: 48 8d 8c 24 90 00 00 00      	leaq	144(%rsp), %rcx
  205ecd: 4a 8d 34 28                  	leaq	(%rax,%r13), %rsi
  205ed1: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  205ed5: 48 39 c8                     	cmpq	%rcx, %rax
  205ed8: 76 11                        	jbe	0x205eeb <dwarf.DwarfInfo.getAbbrevTable+0x105b>
  205eda: 48 8d 84 14 90 00 00 00      	leaq	144(%rsp,%rdx), %rax
  205ee2: 48 39 c6                     	cmpq	%rax, %rsi
  205ee5: 0f 82 e2 0c 00 00            	jb	0x206bcd <dwarf.DwarfInfo.getAbbrevTable+0x1d3d>
  205eeb: 48 8d bc 24 90 00 00 00      	leaq	144(%rsp), %rdi
  205ef3: e8 e8 63 01 00               	callq	0x21c2e0 <memcpy>
  205ef8: 4d 89 3e                     	movq	%r15, (%r14)
  205efb: 4c 39 eb                     	cmpq	%r13, %rbx
  205efe: 0f 84 cf 01 00 00            	je	0x2060d3 <dwarf.DwarfInfo.getAbbrevTable+0x1243>
  205f04: 0f b6 84 24 90 00 00 00      	movzbl	144(%rsp), %eax
  205f0c: 89 c1                        	movl	%eax, %ecx
  205f0e: 83 e1 7f                     	andl	$127, %ecx
  205f11: 48 c1 e1 2a                  	shlq	$42, %rcx
  205f15: 48 09 cd                     	orq	%rcx, %rbp
  205f18: 84 c0                        	testb	%al, %al
  205f1a: 0f 89 90 f5 ff ff            	jns	0x2054b0 <dwarf.DwarfInfo.getAbbrevTable+0x620>
  205f20: 31 d2                        	xorl	%edx, %edx
  205f22: 4c 39 fb                     	cmpq	%r15, %rbx
  205f25: 4d 89 fd                     	movq	%r15, %r13
  205f28: c6 84 24 90 00 00 00 aa      	movb	$-86, 144(%rsp)
  205f30: 0f 95 c2                     	setne	%dl
  205f33: 49 01 d5                     	addq	%rdx, %r13
  205f36: 0f 82 7d 0c 00 00            	jb	0x206bb9 <dwarf.DwarfInfo.getAbbrevTable+0x1d29>
  205f3c: 49 39 dd                     	cmpq	%rbx, %r13
  205f3f: 0f 87 99 0c 00 00            	ja	0x206bde <dwarf.DwarfInfo.getAbbrevTable+0x1d4e>
  205f45: 48 8b 44 24 18               	movq	24(%rsp), %rax
  205f4a: 48 8d 8c 24 90 00 00 00      	leaq	144(%rsp), %rcx
  205f52: 4a 8d 34 38                  	leaq	(%rax,%r15), %rsi
  205f56: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  205f5a: 48 39 c8                     	cmpq	%rcx, %rax
  205f5d: 76 11                        	jbe	0x205f70 <dwarf.DwarfInfo.getAbbrevTable+0x10e0>
  205f5f: 48 8d 84 14 90 00 00 00      	leaq	144(%rsp,%rdx), %rax
  205f67: 48 39 c6                     	cmpq	%rax, %rsi
  205f6a: 0f 82 5d 0c 00 00            	jb	0x206bcd <dwarf.DwarfInfo.getAbbrevTable+0x1d3d>
  205f70: 48 8d bc 24 90 00 00 00      	leaq	144(%rsp), %rdi
  205f78: e8 63 63 01 00               	callq	0x21c2e0 <memcpy>
  205f7d: 4d 89 2e                     	movq	%r13, (%r14)
  205f80: 4c 39 fb                     	cmpq	%r15, %rbx
  205f83: 0f 84 4a 01 00 00            	je	0x2060d3 <dwarf.DwarfInfo.getAbbrevTable+0x1243>
  205f89: 0f b6 84 24 90 00 00 00      	movzbl	144(%rsp), %eax
  205f91: 89 c1                        	movl	%eax, %ecx
  205f93: 83 e1 7f                     	andl	$127, %ecx
  205f96: 48 c1 e1 31                  	shlq	$49, %rcx
  205f9a: 48 09 cd                     	orq	%rcx, %rbp
  205f9d: 84 c0                        	testb	%al, %al
  205f9f: 0f 89 78 f4 ff ff            	jns	0x20541d <dwarf.DwarfInfo.getAbbrevTable+0x58d>
  205fa5: 31 d2                        	xorl	%edx, %edx
  205fa7: 4c 39 eb                     	cmpq	%r13, %rbx
  205faa: 4c 89 e8                     	movq	%r13, %rax
  205fad: c6 84 24 90 00 00 00 aa      	movb	$-86, 144(%rsp)
  205fb5: 0f 95 c2                     	setne	%dl
  205fb8: 48 01 d0                     	addq	%rdx, %rax
  205fbb: 0f 82 f8 0b 00 00            	jb	0x206bb9 <dwarf.DwarfInfo.getAbbrevTable+0x1d29>
  205fc1: 48 39 d8                     	cmpq	%rbx, %rax
  205fc4: 0f 87 14 0c 00 00            	ja	0x206bde <dwarf.DwarfInfo.getAbbrevTable+0x1d4e>
  205fca: 48 8b 4c 24 18               	movq	24(%rsp), %rcx
  205fcf: 48 89 44 24 10               	movq	%rax, 16(%rsp)
  205fd4: 4a 8d 34 29                  	leaq	(%rcx,%r13), %rsi
  205fd8: 48 8d 8c 24 90 00 00 00      	leaq	144(%rsp), %rcx
  205fe0: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  205fe4: 48 39 c8                     	cmpq	%rcx, %rax
  205fe7: 76 11                        	jbe	0x205ffa <dwarf.DwarfInfo.getAbbrevTable+0x116a>
  205fe9: 48 8d 84 14 90 00 00 00      	leaq	144(%rsp,%rdx), %rax
  205ff1: 48 39 c6                     	cmpq	%rax, %rsi
  205ff4: 0f 82 d3 0b 00 00            	jb	0x206bcd <dwarf.DwarfInfo.getAbbrevTable+0x1d3d>
  205ffa: 48 8d bc 24 90 00 00 00      	leaq	144(%rsp), %rdi
  206002: e8 d9 62 01 00               	callq	0x21c2e0 <memcpy>
  206007: 48 8b 74 24 10               	movq	16(%rsp), %rsi
  20600c: 49 89 36                     	movq	%rsi, (%r14)
  20600f: 4c 39 eb                     	cmpq	%r13, %rbx
  206012: 0f 84 bb 00 00 00            	je	0x2060d3 <dwarf.DwarfInfo.getAbbrevTable+0x1243>
  206018: 0f b6 84 24 90 00 00 00      	movzbl	144(%rsp), %eax
  206020: 89 c1                        	movl	%eax, %ecx
  206022: 83 e1 7f                     	andl	$127, %ecx
  206025: 48 c1 e1 38                  	shlq	$56, %rcx
  206029: 48 09 cd                     	orq	%rcx, %rbp
  20602c: 84 c0                        	testb	%al, %al
  20602e: 78 08                        	js	0x206038 <dwarf.DwarfInfo.getAbbrevTable+0x11a8>
  206030: 49 89 f7                     	movq	%rsi, %r15
  206033: e9 78 f4 ff ff               	jmp	0x2054b0 <dwarf.DwarfInfo.getAbbrevTable+0x620>
  206038: 31 d2                        	xorl	%edx, %edx
  20603a: 48 39 f3                     	cmpq	%rsi, %rbx
  20603d: 49 89 f7                     	movq	%rsi, %r15
  206040: c6 84 24 90 00 00 00 aa      	movb	$-86, 144(%rsp)
  206048: 0f 95 c2                     	setne	%dl
  20604b: 49 01 d7                     	addq	%rdx, %r15
  20604e: 0f 82 65 0b 00 00            	jb	0x206bb9 <dwarf.DwarfInfo.getAbbrevTable+0x1d29>
  206054: 49 39 df                     	cmpq	%rbx, %r15
  206057: 0f 87 81 0b 00 00            	ja	0x206bde <dwarf.DwarfInfo.getAbbrevTable+0x1d4e>
  20605d: 48 8b 44 24 18               	movq	24(%rsp), %rax
  206062: 48 8d 8c 24 90 00 00 00      	leaq	144(%rsp), %rcx
  20606a: 48 01 c6                     	addq	%rax, %rsi
  20606d: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  206071: 48 39 c8                     	cmpq	%rcx, %rax
  206074: 76 11                        	jbe	0x206087 <dwarf.DwarfInfo.getAbbrevTable+0x11f7>
  206076: 48 8d 84 14 90 00 00 00      	leaq	144(%rsp,%rdx), %rax
  20607e: 48 39 c6                     	cmpq	%rax, %rsi
  206081: 0f 82 46 0b 00 00            	jb	0x206bcd <dwarf.DwarfInfo.getAbbrevTable+0x1d3d>
  206087: 48 8d bc 24 90 00 00 00      	leaq	144(%rsp), %rdi
  20608f: e8 4c 62 01 00               	callq	0x21c2e0 <memcpy>
  206094: 4d 89 3e                     	movq	%r15, (%r14)
  206097: 48 3b 5c 24 10               	cmpq	16(%rsp), %rbx
  20609c: 74 35                        	je	0x2060d3 <dwarf.DwarfInfo.getAbbrevTable+0x1243>
  20609e: 0f b6 84 24 90 00 00 00      	movzbl	144(%rsp), %eax
  2060a6: 66 b9 29 00                  	movw	$41, %cx
  2060aa: 89 4c 24 10                  	movl	%ecx, 16(%rsp)
  2060ae: a8 7e                        	testb	$126, %al
  2060b0: 0f 85 5a 0b 00 00            	jne	0x206c10 <dwarf.DwarfInfo.getAbbrevTable+0x1d80>
  2060b6: 4c 8b 6c 24 08               	movq	8(%rsp), %r13
  2060bb: 84 c0                        	testb	%al, %al
  2060bd: 78 29                        	js	0x2060e8 <dwarf.DwarfInfo.getAbbrevTable+0x1258>
  2060bf: 48 c1 e0 3f                  	shlq	$63, %rax
  2060c3: 48 09 c5                     	orq	%rax, %rbp
  2060c6: e9 e5 f3 ff ff               	jmp	0x2054b0 <dwarf.DwarfInfo.getAbbrevTable+0x620>
  2060cb: 48 89 0f                     	movq	%rcx, (%rdi)
  2060ce: e9 a0 07 00 00               	jmp	0x206873 <dwarf.DwarfInfo.getAbbrevTable+0x19e3>
  2060d3: 4c 8b 6c 24 08               	movq	8(%rsp), %r13
  2060d8: 4c 89 ef                     	movq	%r13, %rdi
  2060db: e8 70 5c 01 00               	callq	0x21bd50 <builtin.returnError>
  2060e0: 66 b8 33 00                  	movw	$51, %ax
  2060e4: 89 44 24 10                  	movl	%eax, 16(%rsp)
  2060e8: 4c 89 ef                     	movq	%r13, %rdi
  2060eb: e8 60 5c 01 00               	callq	0x21bd50 <builtin.returnError>
  2060f0: 48 8b 5c 24 28               	movq	40(%rsp), %rbx
  2060f5: 48 8b 6c 24 30               	movq	48(%rsp), %rbp
  2060fa: 48 85 ed                     	testq	%rbp, %rbp
  2060fd: 0f 84 33 01 00 00            	je	0x206236 <dwarf.DwarfInfo.getAbbrevTable+0x13a6>
  206103: 48 83 c3 30                  	addq	$48, %rbx
  206107: eb 4c                        	jmp	0x206155 <dwarf.DwarfInfo.getAbbrevTable+0x12c5>
  206109: 0f 1f 80 00 00 00 00         	nopl	(%rax)
  206110: 41 bc 08 00 00 00            	movl	$8, %r12d
  206116: 45 31 ff                     	xorl	%r15d, %r15d
  206119: 4d 85 ff                     	testq	%r15, %r15
  20611c: 74 2a                        	je	0x206148 <dwarf.DwarfInfo.getAbbrevTable+0x12b8>
  20611e: 4c 89 e7                     	movq	%r12, %rdi
  206121: be aa 00 00 00               	movl	$170, %esi
  206126: 4c 89 fa                     	movq	%r15, %rdx
  206129: e8 b2 62 01 00               	callq	0x21c3e0 <memset>
  20612e: 4c 8b 84 24 68 02 00 00      	movq	616(%rsp), %r8
  206136: 4c 89 f7                     	movq	%r14, %rdi
  206139: 4c 89 e6                     	movq	%r12, %rsi
  20613c: 4c 89 fa                     	movq	%r15, %rdx
  20613f: b9 03 00 00 00               	movl	$3, %ecx
  206144: 41 ff 55 10                  	callq	*16(%r13)
  206148: 48 83 c3 40                  	addq	$64, %rbx
  20614c: 48 ff cd                     	decq	%rbp
  20614f: 0f 84 dc 00 00 00            	je	0x206231 <dwarf.DwarfInfo.getAbbrevTable+0x13a1>
  206155: 4c 8b 73 f8                  	movq	-8(%rbx), %r14
  206159: 4c 8b 2b                     	movq	(%rbx), %r13
  20615c: 48 8b 43 f0                  	movq	-16(%rbx), %rax
  206160: 48 85 c0                     	testq	%rax, %rax
  206163: 74 ab                        	je	0x206110 <dwarf.DwarfInfo.getAbbrevTable+0x1280>
  206165: b9 18 00 00 00               	movl	$24, %ecx
  20616a: 48 f7 e1                     	mulq	%rcx
  20616d: 0f 80 46 0a 00 00            	jo	0x206bb9 <dwarf.DwarfInfo.getAbbrevTable+0x1d29>
  206173: 4c 8b 63 e0                  	movq	-32(%rbx), %r12
  206177: 49 89 c7                     	movq	%rax, %r15
  20617a: 4d 85 ff                     	testq	%r15, %r15
  20617d: 75 9f                        	jne	0x20611e <dwarf.DwarfInfo.getAbbrevTable+0x128e>
  20617f: eb c7                        	jmp	0x206148 <dwarf.DwarfInfo.getAbbrevTable+0x12b8>
  206181: 48 8b 5c 24 08               	movq	8(%rsp), %rbx
  206186: 48 89 df                     	movq	%rbx, %rdi
  206189: e8 c2 5b 01 00               	callq	0x21bd50 <builtin.returnError>
  20618e: 66 41 bd 33 00               	movw	$51, %r13w
  206193: 48 89 df                     	movq	%rbx, %rdi
  206196: e8 b5 5b 01 00               	callq	0x21bd50 <builtin.returnError>
  20619b: 48 8b 5c 24 28               	movq	40(%rsp), %rbx
  2061a0: 48 8b 6c 24 30               	movq	48(%rsp), %rbp
  2061a5: 48 85 ed                     	testq	%rbp, %rbp
  2061a8: 0f 84 79 02 00 00            	je	0x206427 <dwarf.DwarfInfo.getAbbrevTable+0x1597>
  2061ae: 48 83 c3 30                  	addq	$48, %rbx
  2061b2: 44 89 6c 24 10               	movl	%r13d, 16(%rsp)
  2061b7: eb 4c                        	jmp	0x206205 <dwarf.DwarfInfo.getAbbrevTable+0x1375>
  2061b9: 0f 1f 80 00 00 00 00         	nopl	(%rax)
  2061c0: 41 bc 08 00 00 00            	movl	$8, %r12d
  2061c6: 45 31 ff                     	xorl	%r15d, %r15d
  2061c9: 4d 85 ff                     	testq	%r15, %r15
  2061cc: 74 2a                        	je	0x2061f8 <dwarf.DwarfInfo.getAbbrevTable+0x1368>
  2061ce: 4c 89 e7                     	movq	%r12, %rdi
  2061d1: be aa 00 00 00               	movl	$170, %esi
  2061d6: 4c 89 fa                     	movq	%r15, %rdx
  2061d9: e8 02 62 01 00               	callq	0x21c3e0 <memset>
  2061de: 4c 8b 84 24 68 02 00 00      	movq	616(%rsp), %r8
  2061e6: 4c 89 f7                     	movq	%r14, %rdi
  2061e9: 4c 89 e6                     	movq	%r12, %rsi
  2061ec: 4c 89 fa                     	movq	%r15, %rdx
  2061ef: b9 03 00 00 00               	movl	$3, %ecx
  2061f4: 41 ff 55 10                  	callq	*16(%r13)
  2061f8: 48 83 c3 40                  	addq	$64, %rbx
  2061fc: 48 ff cd                     	decq	%rbp
  2061ff: 0f 84 18 02 00 00            	je	0x20641d <dwarf.DwarfInfo.getAbbrevTable+0x158d>
  206205: 4c 8b 73 f8                  	movq	-8(%rbx), %r14
  206209: 4c 8b 2b                     	movq	(%rbx), %r13
  20620c: 48 8b 43 f0                  	movq	-16(%rbx), %rax
  206210: 48 85 c0                     	testq	%rax, %rax
  206213: 74 ab                        	je	0x2061c0 <dwarf.DwarfInfo.getAbbrevTable+0x1330>
  206215: b9 18 00 00 00               	movl	$24, %ecx
  20621a: 48 f7 e1                     	mulq	%rcx
  20621d: 0f 80 96 09 00 00            	jo	0x206bb9 <dwarf.DwarfInfo.getAbbrevTable+0x1d29>
  206223: 4c 8b 63 e0                  	movq	-32(%rbx), %r12
  206227: 49 89 c7                     	movq	%rax, %r15
  20622a: 4d 85 ff                     	testq	%r15, %r15
  20622d: 75 9f                        	jne	0x2061ce <dwarf.DwarfInfo.getAbbrevTable+0x133e>
  20622f: eb c7                        	jmp	0x2061f8 <dwarf.DwarfInfo.getAbbrevTable+0x1368>
  206231: 48 8b 5c 24 28               	movq	40(%rsp), %rbx
  206236: 4c 8b 74 24 38               	movq	56(%rsp), %r14
  20623b: 4c 8b 7c 24 40               	movq	64(%rsp), %r15
  206240: 4c 8b 64 24 48               	movq	72(%rsp), %r12
  206245: 44 8b 6c 24 10               	movl	16(%rsp), %r13d
  20624a: 4d 85 f6                     	testq	%r14, %r14
  20624d: 0f 84 ec 01 00 00            	je	0x20643f <dwarf.DwarfInfo.getAbbrevTable+0x15af>
  206253: 48 b8 00 00 00 00 00 00 00 04	movabsq	$288230376151711744, %rax # imm = 0x400000000000000
  20625d: 49 39 c6                     	cmpq	%rax, %r14
  206260: 0f 83 53 09 00 00            	jae	0x206bb9 <dwarf.DwarfInfo.getAbbrevTable+0x1d29>
  206266: 49 c1 e6 06                  	shlq	$6, %r14
  20626a: 4d 85 f6                     	testq	%r14, %r14
  20626d: 0f 85 d9 01 00 00            	jne	0x20644c <dwarf.DwarfInfo.getAbbrevTable+0x15bc>
  206273: e9 ff 01 00 00               	jmp	0x206477 <dwarf.DwarfInfo.getAbbrevTable+0x15e7>
  206278: c5 fc 10 44 24 28            	vmovups	40(%rsp), %ymm0
  20627e: 48 8b 44 24 48               	movq	72(%rsp), %rax
  206283: 4c 8b 44 24 60               	movq	96(%rsp), %r8
  206288: 48 89 84 24 30 02 00 00      	movq	%rax, 560(%rsp)
  206290: c5 fc 11 84 24 10 02 00 00   	vmovups	%ymm0, 528(%rsp)
  206299: 49 8b 80 c8 00 00 00         	movq	200(%r8), %rax
  2062a0: 48 89 c1                     	movq	%rax, %rcx
  2062a3: 48 ff c1                     	incq	%rcx
  2062a6: 0f 84 0d 09 00 00            	je	0x206bb9 <dwarf.DwarfInfo.getAbbrevTable+0x1d29>
  2062ac: 4d 8b b8 d0 00 00 00         	movq	208(%r8), %r15
  2062b3: 49 39 cf                     	cmpq	%rcx, %r15
  2062b6: 0f 83 33 05 00 00            	jae	0x2067ef <dwarf.DwarfInfo.getAbbrevTable+0x195f>
  2062bc: 48 c7 c2 ff ff ff ff         	movq	$-1, %rdx
  2062c3: 4d 89 fd                     	movq	%r15, %r13
  2062c6: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
  2062d0: 4c 89 ee                     	movq	%r13, %rsi
  2062d3: 48 d1 ee                     	shrq	%rsi
  2062d6: 48 83 c6 08                  	addq	$8, %rsi
  2062da: 49 01 f5                     	addq	%rsi, %r13
  2062dd: 4c 0f 42 ea                  	cmovbq	%rdx, %r13
  2062e1: 49 39 cd                     	cmpq	%rcx, %r13
  2062e4: 72 ea                        	jb	0x2062d0 <dwarf.DwarfInfo.getAbbrevTable+0x1440>
  2062e6: 4d 39 ef                     	cmpq	%r13, %r15
  2062e9: 0f 83 00 05 00 00            	jae	0x2067ef <dwarf.DwarfInfo.getAbbrevTable+0x195f>
  2062ef: 48 8b 44 24 68               	movq	104(%rsp), %rax
  2062f4: 4d 8b a0 c0 00 00 00         	movq	192(%r8), %r12
  2062fb: 48 8b 38                     	movq	(%rax), %rdi
  2062fe: 4c 8b 50 08                  	movq	8(%rax), %r10
  206302: 48 8d 84 24 90 00 00 00      	leaq	144(%rsp), %rax
  20630a: 48 89 44 24 30               	movq	%rax, 48(%rsp)
  20630f: 48 c7 44 24 38 20 00 00 00   	movq	$32, 56(%rsp)
  206318: 48 c7 44 24 28 00 00 00 00   	movq	$0, 40(%rsp)
  206321: 4d 85 ff                     	testq	%r15, %r15
  206324: 0f 84 21 03 00 00            	je	0x20664b <dwarf.DwarfInfo.getAbbrevTable+0x17bb>
  20632a: be 30 00 00 00               	movl	$48, %esi
  20632f: 4c 89 f8                     	movq	%r15, %rax
  206332: 48 f7 e6                     	mulq	%rsi
  206335: 0f 80 7e 08 00 00            	jo	0x206bb9 <dwarf.DwarfInfo.getAbbrevTable+0x1d29>
  20633b: 48 89 c1                     	movq	%rax, %rcx
  20633e: 4c 89 e8                     	movq	%r13, %rax
  206341: 48 f7 e6                     	mulq	%rsi
  206344: 0f 80 2d 07 00 00            	jo	0x206a77 <dwarf.DwarfInfo.getAbbrevTable+0x1be7>
  20634a: 48 8b 9c 24 68 02 00 00      	movq	616(%rsp), %rbx
  206352: 48 89 ca                     	movq	%rcx, %rdx
  206355: 4c 89 e6                     	movq	%r12, %rsi
  206358: b9 03 00 00 00               	movl	$3, %ecx
  20635d: 49 89 c0                     	movq	%rax, %r8
  206360: 49 89 c6                     	movq	%rax, %r14
  206363: 49 89 d9                     	movq	%rbx, %r9
  206366: c5 f8 77                     	vzeroupper
  206369: 41 ff 52 08                  	callq	*8(%r10)
  20636d: a8 01                        	testb	$1, %al
  20636f: 0f 85 64 04 00 00            	jne	0x2067d9 <dwarf.DwarfInfo.getAbbrevTable+0x1949>
  206375: 48 8b 44 24 68               	movq	104(%rsp), %rax
  20637a: 48 8b 38                     	movq	(%rax), %rdi
  20637d: 4c 8b 50 08                  	movq	8(%rax), %r10
  206381: e9 e1 02 00 00               	jmp	0x206667 <dwarf.DwarfInfo.getAbbrevTable+0x17d7>
  206386: 48 8b 5c 24 28               	movq	40(%rsp), %rbx
  20638b: 48 8b 6c 24 30               	movq	48(%rsp), %rbp
  206390: 48 85 ed                     	testq	%rbp, %rbp
  206393: 0f 84 8e 00 00 00            	je	0x206427 <dwarf.DwarfInfo.getAbbrevTable+0x1597>
  206399: 48 83 c3 30                  	addq	$48, %rbx
  20639d: 44 89 6c 24 10               	movl	%r13d, 16(%rsp)
  2063a2: eb 4d                        	jmp	0x2063f1 <dwarf.DwarfInfo.getAbbrevTable+0x1561>
  2063a4: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
  2063b0: 41 bc 08 00 00 00            	movl	$8, %r12d
  2063b6: 45 31 ff                     	xorl	%r15d, %r15d
  2063b9: 4d 85 ff                     	testq	%r15, %r15
  2063bc: 74 2a                        	je	0x2063e8 <dwarf.DwarfInfo.getAbbrevTable+0x1558>
  2063be: 4c 89 e7                     	movq	%r12, %rdi
  2063c1: be aa 00 00 00               	movl	$170, %esi
  2063c6: 4c 89 fa                     	movq	%r15, %rdx
  2063c9: e8 12 60 01 00               	callq	0x21c3e0 <memset>
  2063ce: 4c 8b 84 24 68 02 00 00      	movq	616(%rsp), %r8
  2063d6: 4c 89 f7                     	movq	%r14, %rdi
  2063d9: 4c 89 e6                     	movq	%r12, %rsi
  2063dc: 4c 89 fa                     	movq	%r15, %rdx
  2063df: b9 03 00 00 00               	movl	$3, %ecx
  2063e4: 41 ff 55 10                  	callq	*16(%r13)
  2063e8: 48 83 c3 40                  	addq	$64, %rbx
  2063ec: 48 ff cd                     	decq	%rbp
  2063ef: 74 2c                        	je	0x20641d <dwarf.DwarfInfo.getAbbrevTable+0x158d>
  2063f1: 4c 8b 73 f8                  	movq	-8(%rbx), %r14
  2063f5: 4c 8b 2b                     	movq	(%rbx), %r13
  2063f8: 48 8b 43 f0                  	movq	-16(%rbx), %rax
  2063fc: 48 85 c0                     	testq	%rax, %rax
  2063ff: 74 af                        	je	0x2063b0 <dwarf.DwarfInfo.getAbbrevTable+0x1520>
  206401: b9 18 00 00 00               	movl	$24, %ecx
  206406: 48 f7 e1                     	mulq	%rcx
  206409: 0f 80 aa 07 00 00            	jo	0x206bb9 <dwarf.DwarfInfo.getAbbrevTable+0x1d29>
  20640f: 4c 8b 63 e0                  	movq	-32(%rbx), %r12
  206413: 49 89 c7                     	movq	%rax, %r15
  206416: 4d 85 ff                     	testq	%r15, %r15
  206419: 75 a3                        	jne	0x2063be <dwarf.DwarfInfo.getAbbrevTable+0x152e>
  20641b: eb cb                        	jmp	0x2063e8 <dwarf.DwarfInfo.getAbbrevTable+0x1558>
  20641d: 48 8b 5c 24 28               	movq	40(%rsp), %rbx
  206422: 44 8b 6c 24 10               	movl	16(%rsp), %r13d
  206427: 4c 8b 74 24 38               	movq	56(%rsp), %r14
  20642c: 4c 8b 7c 24 40               	movq	64(%rsp), %r15
  206431: 4c 8b 64 24 48               	movq	72(%rsp), %r12
  206436: 4d 85 f6                     	testq	%r14, %r14
  206439: 0f 85 14 fe ff ff            	jne	0x206253 <dwarf.DwarfInfo.getAbbrevTable+0x13c3>
  20643f: bb 08 00 00 00               	movl	$8, %ebx
  206444: 45 31 f6                     	xorl	%r14d, %r14d
  206447: 4d 85 f6                     	testq	%r14, %r14
  20644a: 74 2b                        	je	0x206477 <dwarf.DwarfInfo.getAbbrevTable+0x15e7>
  20644c: 48 89 df                     	movq	%rbx, %rdi
  20644f: be aa 00 00 00               	movl	$170, %esi
  206454: 4c 89 f2                     	movq	%r14, %rdx
  206457: e8 84 5f 01 00               	callq	0x21c3e0 <memset>
  20645c: 4c 8b 84 24 68 02 00 00      	movq	616(%rsp), %r8
  206464: 4c 89 ff                     	movq	%r15, %rdi
  206467: 48 89 de                     	movq	%rbx, %rsi
  20646a: 4c 89 f2                     	movq	%r14, %rdx
  20646d: b9 03 00 00 00               	movl	$3, %ecx
  206472: 41 ff 54 24 10               	callq	*16(%r12)
  206477: 48 8b 5c 24 08               	movq	8(%rsp), %rbx
  20647c: 48 89 df                     	movq	%rbx, %rdi
  20647f: e8 cc 58 01 00               	callq	0x21bd50 <builtin.returnError>
  206484: 48 89 df                     	movq	%rbx, %rdi
  206487: e8 c4 58 01 00               	callq	0x21bd50 <builtin.returnError>
  20648c: 48 8b 7c 24 70               	movq	112(%rsp), %rdi
  206491: e9 e0 03 00 00               	jmp	0x206876 <dwarf.DwarfInfo.getAbbrevTable+0x19e6>
  206496: 4d 89 fc                     	movq	%r15, %r12
  206499: 48 8b 5c 24 38               	movq	56(%rsp), %rbx
  20649e: 4c 8b 74 24 40               	movq	64(%rsp), %r14
  2064a3: 4c 8b 7c 24 48               	movq	72(%rsp), %r15
  2064a8: 48 85 db                     	testq	%rbx, %rbx
  2064ab: 75 0a                        	jne	0x2064b7 <dwarf.DwarfInfo.getAbbrevTable+0x1627>
  2064ad: 41 bc 08 00 00 00            	movl	$8, %r12d
  2064b3: 31 db                        	xorl	%ebx, %ebx
  2064b5: eb 11                        	jmp	0x2064c8 <dwarf.DwarfInfo.getAbbrevTable+0x1638>
  2064b7: 48 89 d8                     	movq	%rbx, %rax
  2064ba: 48 c1 e8 3a                  	shrq	$58, %rax
  2064be: 0f 85 f5 06 00 00            	jne	0x206bb9 <dwarf.DwarfInfo.getAbbrevTable+0x1d29>
  2064c4: 48 c1 e3 06                  	shlq	$6, %rbx
  2064c8: 48 85 db                     	testq	%rbx, %rbx
  2064cb: 74 aa                        	je	0x206477 <dwarf.DwarfInfo.getAbbrevTable+0x15e7>
  2064cd: 4c 89 e7                     	movq	%r12, %rdi
  2064d0: be aa 00 00 00               	movl	$170, %esi
  2064d5: 48 89 da                     	movq	%rbx, %rdx
  2064d8: e8 03 5f 01 00               	callq	0x21c3e0 <memset>
  2064dd: 4c 8b 84 24 68 02 00 00      	movq	616(%rsp), %r8
  2064e5: 4c 89 f7                     	movq	%r14, %rdi
  2064e8: 4c 89 e6                     	movq	%r12, %rsi
  2064eb: 48 89 da                     	movq	%rbx, %rdx
  2064ee: b9 03 00 00 00               	movl	$3, %ecx
  2064f3: 41 ff 57 10                  	callq	*16(%r15)
  2064f7: e9 7b ff ff ff               	jmp	0x206477 <dwarf.DwarfInfo.getAbbrevTable+0x15e7>
  2064fc: 48 8b 5c 24 08               	movq	8(%rsp), %rbx
  206501: eb 2b                        	jmp	0x20652e <dwarf.DwarfInfo.getAbbrevTable+0x169e>
  206503: 48 8d 7c 24 78               	leaq	120(%rsp), %rdi
  206508: e8 43 58 01 00               	callq	0x21bd50 <builtin.returnError>
  20650d: 48 8b 84 24 68 02 00 00      	movq	616(%rsp), %rax
  206515: 48 89 44 24 20               	movq	%rax, 32(%rsp)
  20651a: eb 05                        	jmp	0x206521 <dwarf.DwarfInfo.getAbbrevTable+0x1691>
  20651c: 48 89 4c 24 20               	movq	%rcx, 32(%rsp)
  206521: 48 8b 5c 24 08               	movq	8(%rsp), %rbx
  206526: 48 89 df                     	movq	%rbx, %rdi
  206529: e8 22 58 01 00               	callq	0x21bd50 <builtin.returnError>
  20652e: 48 89 df                     	movq	%rbx, %rdi
  206531: e8 1a 58 01 00               	callq	0x21bd50 <builtin.returnError>
  206536: 48 89 df                     	movq	%rbx, %rdi
  206539: e8 12 58 01 00               	callq	0x21bd50 <builtin.returnError>
  20653e: 48 89 df                     	movq	%rbx, %rdi
  206541: e8 0a 58 01 00               	callq	0x21bd50 <builtin.returnError>
  206546: 48 89 df                     	movq	%rbx, %rdi
  206549: e8 02 58 01 00               	callq	0x21bd50 <builtin.returnError>
  20654e: 48 89 df                     	movq	%rbx, %rdi
  206551: e8 fa 57 01 00               	callq	0x21bd50 <builtin.returnError>
  206556: 48 89 df                     	movq	%rbx, %rdi
  206559: e8 f2 57 01 00               	callq	0x21bd50 <builtin.returnError>
  20655e: 48 8b 5c 24 28               	movq	40(%rsp), %rbx
  206563: 4c 8b 64 24 30               	movq	48(%rsp), %r12
  206568: 4d 85 e4                     	testq	%r12, %r12
  20656b: 0f 84 7d 00 00 00            	je	0x2065ee <dwarf.DwarfInfo.getAbbrevTable+0x175e>
  206571: 48 83 c3 30                  	addq	$48, %rbx
  206575: eb 46                        	jmp	0x2065bd <dwarf.DwarfInfo.getAbbrevTable+0x172d>
  206577: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
  206580: 41 bd 08 00 00 00            	movl	$8, %r13d
  206586: 45 31 ff                     	xorl	%r15d, %r15d
  206589: 4d 85 ff                     	testq	%r15, %r15
  20658c: 74 26                        	je	0x2065b4 <dwarf.DwarfInfo.getAbbrevTable+0x1724>
  20658e: 4c 89 ef                     	movq	%r13, %rdi
  206591: be aa 00 00 00               	movl	$170, %esi
  206596: 4c 89 fa                     	movq	%r15, %rdx
  206599: e8 42 5e 01 00               	callq	0x21c3e0 <memset>
  20659e: 4c 8b 44 24 20               	movq	32(%rsp), %r8
  2065a3: 4c 89 f7                     	movq	%r14, %rdi
  2065a6: 4c 89 ee                     	movq	%r13, %rsi
  2065a9: 4c 89 fa                     	movq	%r15, %rdx
  2065ac: b9 03 00 00 00               	movl	$3, %ecx
  2065b1: ff 55 10                     	callq	*16(%rbp)
  2065b4: 48 83 c3 40                  	addq	$64, %rbx
  2065b8: 49 ff cc                     	decq	%r12
  2065bb: 74 2c                        	je	0x2065e9 <dwarf.DwarfInfo.getAbbrevTable+0x1759>
  2065bd: 4c 8b 73 f8                  	movq	-8(%rbx), %r14
  2065c1: 48 8b 2b                     	movq	(%rbx), %rbp
  2065c4: 48 8b 43 f0                  	movq	-16(%rbx), %rax
  2065c8: 48 85 c0                     	testq	%rax, %rax
  2065cb: 74 b3                        	je	0x206580 <dwarf.DwarfInfo.getAbbrevTable+0x16f0>
  2065cd: b9 18 00 00 00               	movl	$24, %ecx
  2065d2: 48 f7 e1                     	mulq	%rcx
  2065d5: 0f 80 de 05 00 00            	jo	0x206bb9 <dwarf.DwarfInfo.getAbbrevTable+0x1d29>
  2065db: 4c 8b 6b e0                  	movq	-32(%rbx), %r13
  2065df: 49 89 c7                     	movq	%rax, %r15
  2065e2: 4d 85 ff                     	testq	%r15, %r15
  2065e5: 75 a7                        	jne	0x20658e <dwarf.DwarfInfo.getAbbrevTable+0x16fe>
  2065e7: eb cb                        	jmp	0x2065b4 <dwarf.DwarfInfo.getAbbrevTable+0x1724>
  2065e9: 48 8b 5c 24 28               	movq	40(%rsp), %rbx
  2065ee: 4c 8b 74 24 38               	movq	56(%rsp), %r14
  2065f3: 4c 8b 7c 24 40               	movq	64(%rsp), %r15
  2065f8: 4c 8b 64 24 48               	movq	72(%rsp), %r12
  2065fd: 4d 85 f6                     	testq	%r14, %r14
  206600: 75 0a                        	jne	0x20660c <dwarf.DwarfInfo.getAbbrevTable+0x177c>
  206602: bb 08 00 00 00               	movl	$8, %ebx
  206607: 45 31 f6                     	xorl	%r14d, %r14d
  20660a: eb 17                        	jmp	0x206623 <dwarf.DwarfInfo.getAbbrevTable+0x1793>
  20660c: 48 b8 00 00 00 00 00 00 00 04	movabsq	$288230376151711744, %rax # imm = 0x400000000000000
  206616: 49 39 c6                     	cmpq	%rax, %r14
  206619: 0f 83 9a 05 00 00            	jae	0x206bb9 <dwarf.DwarfInfo.getAbbrevTable+0x1d29>
  20661f: 49 c1 e6 06                  	shlq	$6, %r14
  206623: 66 41 bd 15 00               	movw	$21, %r13w
  206628: 4d 85 f6                     	testq	%r14, %r14
  20662b: 0f 84 46 fe ff ff            	je	0x206477 <dwarf.DwarfInfo.getAbbrevTable+0x15e7>
  206631: 48 89 df                     	movq	%rbx, %rdi
  206634: be aa 00 00 00               	movl	$170, %esi
  206639: 4c 89 f2                     	movq	%r14, %rdx
  20663c: e8 9f 5d 01 00               	callq	0x21c3e0 <memset>
  206641: 4c 8b 44 24 20               	movq	32(%rsp), %r8
  206646: e9 19 fe ff ff               	jmp	0x206464 <dwarf.DwarfInfo.getAbbrevTable+0x15d4>
  20664b: b9 30 00 00 00               	movl	$48, %ecx
  206650: 4c 89 e8                     	movq	%r13, %rax
  206653: 48 f7 e1                     	mulq	%rcx
  206656: 0f 80 28 04 00 00            	jo	0x206a84 <dwarf.DwarfInfo.getAbbrevTable+0x1bf4>
  20665c: 48 8b 9c 24 68 02 00 00      	movq	616(%rsp), %rbx
  206664: 49 89 c6                     	movq	%rax, %r14
  206667: 4c 89 f6                     	movq	%r14, %rsi
  20666a: ba 03 00 00 00               	movl	$3, %edx
  20666f: 48 89 d9                     	movq	%rbx, %rcx
  206672: c5 f8 77                     	vzeroupper
  206675: 41 ff 12                     	callq	*(%r10)
  206678: 48 85 c0                     	testq	%rax, %rax
  20667b: 0f 84 10 04 00 00            	je	0x206a91 <dwarf.DwarfInfo.getAbbrevTable+0x1c01>
  206681: 48 89 c7                     	movq	%rax, %rdi
  206684: be aa 00 00 00               	movl	$170, %esi
  206689: 4c 89 f2                     	movq	%r14, %rdx
  20668c: 48 89 c5                     	movq	%rax, %rbp
  20668f: e8 4c 5d 01 00               	callq	0x21c3e0 <memset>
  206694: 4d 85 f6                     	testq	%r14, %r14
  206697: 74 0b                        	je	0x2066a4 <dwarf.DwarfInfo.getAbbrevTable+0x1814>
  206699: 89 e8                        	movl	%ebp, %eax
  20669b: 83 e0 07                     	andl	$7, %eax
  20669e: 0f 85 76 05 00 00            	jne	0x206c1a <dwarf.DwarfInfo.getAbbrevTable+0x1d8a>
  2066a4: 4d 85 f6                     	testq	%r14, %r14
  2066a7: 74 7a                        	je	0x206723 <dwarf.DwarfInfo.getAbbrevTable+0x1893>
  2066a9: 4c 89 f2                     	movq	%r14, %rdx
  2066ac: 48 b8 ab aa aa aa aa aa aa aa	movabsq	$-6148914691236517205, %rax # imm = 0xAAAAAAAAAAAAAAAB
  2066b6: 48 b9 56 55 55 55 55 55 55 05	movabsq	$384307168202282326, %rcx # imm = 0x555555555555556
  2066c0: c4 62 fb f6 e8               	mulxq	%rax, %rax, %r13
  2066c5: c4 e3 fb f0 c0 04            	rorxq	$4, %rax, %rax
  2066cb: 48 39 c8                     	cmpq	%rcx, %rax
  2066ce: 0f 83 57 05 00 00            	jae	0x206c2b <dwarf.DwarfInfo.getAbbrevTable+0x1d9b>
  2066d4: 49 c1 ed 05                  	shrq	$5, %r13
  2066d8: eb 56                        	jmp	0x206730 <dwarf.DwarfInfo.getAbbrevTable+0x18a0>
  2066da: 4c 8b 64 24 30               	movq	48(%rsp), %r12
  2066df: 4d 85 e4                     	testq	%r12, %r12
  2066e2: 0f 85 c3 01 00 00            	jne	0x2068ab <dwarf.DwarfInfo.getAbbrevTable+0x1a1b>
  2066e8: 48 8d 7c 24 28               	leaq	40(%rsp), %rdi
  2066ed: e8 0e e7 ff ff               	callq	0x204e00 <array_list.ArrayListAligned(dwarf.AbbrevTableEntry,null).deinit>
  2066f2: e9 80 fd ff ff               	jmp	0x206477 <dwarf.DwarfInfo.getAbbrevTable+0x15e7>
  2066f7: 48 8b 7c 24 08               	movq	8(%rsp), %rdi
  2066fc: e8 4f 56 01 00               	callq	0x21bd50 <builtin.returnError>
  206701: 4c 8b 64 24 30               	movq	48(%rsp), %r12
  206706: 4d 85 e4                     	testq	%r12, %r12
  206709: 0f 85 2c 02 00 00            	jne	0x20693b <dwarf.DwarfInfo.getAbbrevTable+0x1aab>
  20670f: 48 8d 7c 24 28               	leaq	40(%rsp), %rdi
  206714: e8 e7 e6 ff ff               	callq	0x204e00 <array_list.ArrayListAligned(dwarf.AbbrevTableEntry,null).deinit>
  206719: 66 41 bd 33 00               	movw	$51, %r13w
  20671e: e9 54 fd ff ff               	jmp	0x206477 <dwarf.DwarfInfo.getAbbrevTable+0x15e7>
  206723: 45 31 ed                     	xorl	%r13d, %r13d
  206726: 48 bd aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rbp # imm = 0xAAAAAAAAAAAAAAAA
  206730: 48 8b 4c 24 60               	movq	96(%rsp), %rcx
  206735: 48 8b 81 c8 00 00 00         	movq	200(%rcx), %rax
  20673c: 4c 39 e8                     	cmpq	%r13, %rax
  20673f: 0f 87 99 04 00 00            	ja	0x206bde <dwarf.DwarfInfo.getAbbrevTable+0x1d4e>
  206745: 48 8b b1 c0 00 00 00         	movq	192(%rcx), %rsi
  20674c: 48 c1 e0 04                  	shlq	$4, %rax
  206750: 48 8d 14 40                  	leaq	(%rax,%rax,2), %rdx
  206754: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  206758: 48 39 c5                     	cmpq	%rax, %rbp
  20675b: 73 0e                        	jae	0x20676b <dwarf.DwarfInfo.getAbbrevTable+0x18db>
  20675d: 48 8d 44 15 00               	leaq	(%rbp,%rdx), %rax
  206762: 48 39 c6                     	cmpq	%rax, %rsi
  206765: 0f 82 62 04 00 00            	jb	0x206bcd <dwarf.DwarfInfo.getAbbrevTable+0x1d3d>
  20676b: 48 89 ef                     	movq	%rbp, %rdi
  20676e: e8 6d 5b 01 00               	callq	0x21c2e0 <memcpy>
  206773: 4c 89 f8                     	movq	%r15, %rax
  206776: 48 c1 e0 04                  	shlq	$4, %rax
  20677a: 4d 85 ff                     	testq	%r15, %r15
  20677d: 4c 8d 34 40                  	leaq	(%rax,%rax,2), %r14
  206781: b8 08 00 00 00               	movl	$8, %eax
  206786: 4c 0f 44 e0                  	cmoveq	%rax, %r12
  20678a: 4d 0f 44 f7                  	cmoveq	%r15, %r14
  20678e: 4d 85 f6                     	testq	%r14, %r14
  206791: 74 3a                        	je	0x2067cd <dwarf.DwarfInfo.getAbbrevTable+0x193d>
  206793: 48 8b 44 24 68               	movq	104(%rsp), %rax
  206798: 4c 89 e7                     	movq	%r12, %rdi
  20679b: be aa 00 00 00               	movl	$170, %esi
  2067a0: 4c 89 f2                     	movq	%r14, %rdx
  2067a3: 4c 8b 38                     	movq	(%rax), %r15
  2067a6: 48 8b 40 08                  	movq	8(%rax), %rax
  2067aa: 48 89 44 24 18               	movq	%rax, 24(%rsp)
  2067af: e8 2c 5c 01 00               	callq	0x21c3e0 <memset>
  2067b4: 48 8b 44 24 18               	movq	24(%rsp), %rax
  2067b9: 4c 89 ff                     	movq	%r15, %rdi
  2067bc: 4c 89 e6                     	movq	%r12, %rsi
  2067bf: 4c 89 f2                     	movq	%r14, %rdx
  2067c2: b9 03 00 00 00               	movl	$3, %ecx
  2067c7: 49 89 d8                     	movq	%rbx, %r8
  2067ca: ff 50 10                     	callq	*16(%rax)
  2067cd: 48 8b 44 24 60               	movq	96(%rsp), %rax
  2067d2: 48 89 a8 c0 00 00 00         	movq	%rbp, 192(%rax)
  2067d9: 4c 8b 44 24 60               	movq	96(%rsp), %r8
  2067de: 4d 89 ef                     	movq	%r13, %r15
  2067e1: 4d 89 a8 d0 00 00 00         	movq	%r13, 208(%r8)
  2067e8: 49 8b 80 c8 00 00 00         	movq	200(%r8), %rax
  2067ef: 4c 39 f8                     	cmpq	%r15, %rax
  2067f2: 0f 83 fa 03 00 00            	jae	0x206bf2 <dwarf.DwarfInfo.getAbbrevTable+0x1d62>
  2067f8: 48 8d 48 01                  	leaq	1(%rax), %rcx
  2067fc: 48 8b 94 24 a8 01 00 00      	movq	424(%rsp), %rdx
  206804: 48 8d 04 40                  	leaq	(%rax,%rax,2), %rax
  206808: 49 89 88 c8 00 00 00         	movq	%rcx, 200(%r8)
  20680f: 48 c1 e0 04                  	shlq	$4, %rax
  206813: 49 8b 88 c0 00 00 00         	movq	192(%r8), %rcx
  20681a: 48 89 14 01                  	movq	%rdx, (%rcx,%rax)
  20681e: 48 8b 94 24 30 02 00 00      	movq	560(%rsp), %rdx
  206826: 48 89 54 01 28               	movq	%rdx, 40(%rcx,%rax)
  20682b: c5 fc 10 84 24 10 02 00 00   	vmovups	528(%rsp), %ymm0
  206834: c5 fc 11 44 01 08            	vmovups	%ymm0, 8(%rcx,%rax)
  20683a: 49 8b 88 c8 00 00 00         	movq	200(%r8), %rcx
  206841: 48 89 c8                     	movq	%rcx, %rax
  206844: 48 83 e8 01                  	subq	$1, %rax
  206848: 0f 82 6b 03 00 00            	jb	0x206bb9 <dwarf.DwarfInfo.getAbbrevTable+0x1d29>
  20684e: 48 8b 7c 24 70               	movq	112(%rsp), %rdi
  206853: 48 39 c8                     	cmpq	%rcx, %rax
  206856: 0f 83 82 03 00 00            	jae	0x206bde <dwarf.DwarfInfo.getAbbrevTable+0x1d4e>
  20685c: 49 8b 88 c0 00 00 00         	movq	192(%r8), %rcx
  206863: 48 8d 04 40                  	leaq	(%rax,%rax,2), %rax
  206867: 48 c1 e0 04                  	shlq	$4, %rax
  20686b: 48 8d 44 01 08               	leaq	8(%rcx,%rax), %rax
  206870: 48 89 07                     	movq	%rax, (%rdi)
  206873: 45 31 ed                     	xorl	%r13d, %r13d
  206876: 66 44 89 6f 08               	movw	%r13w, 8(%rdi)
  20687b: 48 81 c4 38 02 00 00         	addq	$568, %rsp              # imm = 0x238
  206882: 5b                           	popq	%rbx
  206883: 41 5c                        	popq	%r12
  206885: 41 5d                        	popq	%r13
  206887: 41 5e                        	popq	%r14
  206889: 41 5f                        	popq	%r15
  20688b: 5d                           	popq	%rbp
  20688c: c5 f8 77                     	vzeroupper
  20688f: c3                           	retq
  206890: 48 8b 4c 24 28               	movq	40(%rsp), %rcx
  206895: 4c 8b 64 24 30               	movq	48(%rsp), %r12
  20689a: 4d 85 e4                     	testq	%r12, %r12
  20689d: 0f 85 1e 01 00 00            	jne	0x2069c1 <dwarf.DwarfInfo.getAbbrevTable+0x1b31>
  2068a3: 49 89 cc                     	movq	%rcx, %r12
  2068a6: e9 ee fb ff ff               	jmp	0x206499 <dwarf.DwarfInfo.getAbbrevTable+0x1609>
  2068ab: 48 8b 6c 24 28               	movq	40(%rsp), %rbp
  2068b0: 48 83 c5 30                  	addq	$48, %rbp
  2068b4: eb 58                        	jmp	0x20690e <dwarf.DwarfInfo.getAbbrevTable+0x1a7e>
  2068b6: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
  2068c0: 41 bf 08 00 00 00            	movl	$8, %r15d
  2068c6: 45 31 f6                     	xorl	%r14d, %r14d
  2068c9: 4d 85 f6                     	testq	%r14, %r14
  2068cc: 74 33                        	je	0x206901 <dwarf.DwarfInfo.getAbbrevTable+0x1a71>
  2068ce: 48 89 74 24 18               	movq	%rsi, 24(%rsp)
  2068d3: 4c 89 ff                     	movq	%r15, %rdi
  2068d6: be aa 00 00 00               	movl	$170, %esi
  2068db: 4c 89 f2                     	movq	%r14, %rdx
  2068de: e8 fd 5a 01 00               	callq	0x21c3e0 <memset>
  2068e3: 4c 8b 84 24 68 02 00 00      	movq	616(%rsp), %r8
  2068eb: 48 8b 44 24 18               	movq	24(%rsp), %rax
  2068f0: 48 89 df                     	movq	%rbx, %rdi
  2068f3: 4c 89 fe                     	movq	%r15, %rsi
  2068f6: 4c 89 f2                     	movq	%r14, %rdx
  2068f9: b9 03 00 00 00               	movl	$3, %ecx
  2068fe: ff 50 10                     	callq	*16(%rax)
  206901: 48 83 c5 40                  	addq	$64, %rbp
  206905: 49 ff cc                     	decq	%r12
  206908: 0f 84 da fd ff ff            	je	0x2066e8 <dwarf.DwarfInfo.getAbbrevTable+0x1858>
  20690e: 48 8b 5d f8                  	movq	-8(%rbp), %rbx
  206912: 48 8b 75 00                  	movq	(%rbp), %rsi
  206916: 48 8b 45 f0                  	movq	-16(%rbp), %rax
  20691a: 48 85 c0                     	testq	%rax, %rax
  20691d: 74 a1                        	je	0x2068c0 <dwarf.DwarfInfo.getAbbrevTable+0x1a30>
  20691f: b9 18 00 00 00               	movl	$24, %ecx
  206924: 48 f7 e1                     	mulq	%rcx
  206927: 0f 80 8c 02 00 00            	jo	0x206bb9 <dwarf.DwarfInfo.getAbbrevTable+0x1d29>
  20692d: 4c 8b 7d e0                  	movq	-32(%rbp), %r15
  206931: 49 89 c6                     	movq	%rax, %r14
  206934: 4d 85 f6                     	testq	%r14, %r14
  206937: 75 95                        	jne	0x2068ce <dwarf.DwarfInfo.getAbbrevTable+0x1a3e>
  206939: eb c6                        	jmp	0x206901 <dwarf.DwarfInfo.getAbbrevTable+0x1a71>
  20693b: 4c 8b 6c 24 28               	movq	40(%rsp), %r13
  206940: 49 83 c5 30                  	addq	$48, %r13
  206944: eb 4e                        	jmp	0x206994 <dwarf.DwarfInfo.getAbbrevTable+0x1b04>
  206946: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
  206950: 41 bf 08 00 00 00            	movl	$8, %r15d
  206956: 45 31 f6                     	xorl	%r14d, %r14d
  206959: 4d 85 f6                     	testq	%r14, %r14
  20695c: 74 29                        	je	0x206987 <dwarf.DwarfInfo.getAbbrevTable+0x1af7>
  20695e: 4c 89 ff                     	movq	%r15, %rdi
  206961: be aa 00 00 00               	movl	$170, %esi
  206966: 4c 89 f2                     	movq	%r14, %rdx
  206969: e8 72 5a 01 00               	callq	0x21c3e0 <memset>
  20696e: 4c 8b 84 24 68 02 00 00      	movq	616(%rsp), %r8
  206976: 48 89 df                     	movq	%rbx, %rdi
  206979: 4c 89 fe                     	movq	%r15, %rsi
  20697c: 4c 89 f2                     	movq	%r14, %rdx
  20697f: b9 03 00 00 00               	movl	$3, %ecx
  206984: ff 55 10                     	callq	*16(%rbp)
  206987: 49 83 c5 40                  	addq	$64, %r13
  20698b: 49 ff cc                     	decq	%r12
  20698e: 0f 84 7b fd ff ff            	je	0x20670f <dwarf.DwarfInfo.getAbbrevTable+0x187f>
  206994: 49 8b 5d f8                  	movq	-8(%r13), %rbx
  206998: 49 8b 6d 00                  	movq	(%r13), %rbp
  20699c: 49 8b 45 f0                  	movq	-16(%r13), %rax
  2069a0: 48 85 c0                     	testq	%rax, %rax
  2069a3: 74 ab                        	je	0x206950 <dwarf.DwarfInfo.getAbbrevTable+0x1ac0>
  2069a5: b9 18 00 00 00               	movl	$24, %ecx
  2069aa: 48 f7 e1                     	mulq	%rcx
  2069ad: 0f 80 06 02 00 00            	jo	0x206bb9 <dwarf.DwarfInfo.getAbbrevTable+0x1d29>
  2069b3: 4d 8b 7d e0                  	movq	-32(%r13), %r15
  2069b7: 49 89 c6                     	movq	%rax, %r14
  2069ba: 4d 85 f6                     	testq	%r14, %r14
  2069bd: 75 9f                        	jne	0x20695e <dwarf.DwarfInfo.getAbbrevTable+0x1ace>
  2069bf: eb c6                        	jmp	0x206987 <dwarf.DwarfInfo.getAbbrevTable+0x1af7>
  2069c1: 48 83 c1 30                  	addq	$48, %rcx
  2069c5: 44 89 6c 24 10               	movl	%r13d, 16(%rsp)
  2069ca: eb 4f                        	jmp	0x206a1b <dwarf.DwarfInfo.getAbbrevTable+0x1b8b>
  2069cc: 0f 1f 40 00                  	nopl	(%rax)
  2069d0: 49 89 cd                     	movq	%rcx, %r13
  2069d3: 41 bf 08 00 00 00            	movl	$8, %r15d
  2069d9: 45 31 f6                     	xorl	%r14d, %r14d
  2069dc: 4d 85 f6                     	testq	%r14, %r14
  2069df: 74 29                        	je	0x206a0a <dwarf.DwarfInfo.getAbbrevTable+0x1b7a>
  2069e1: 4c 89 ff                     	movq	%r15, %rdi
  2069e4: be aa 00 00 00               	movl	$170, %esi
  2069e9: 4c 89 f2                     	movq	%r14, %rdx
  2069ec: e8 ef 59 01 00               	callq	0x21c3e0 <memset>
  2069f1: 4c 8b 84 24 68 02 00 00      	movq	616(%rsp), %r8
  2069f9: 48 89 df                     	movq	%rbx, %rdi
  2069fc: 4c 89 fe                     	movq	%r15, %rsi
  2069ff: 4c 89 f2                     	movq	%r14, %rdx
  206a02: b9 03 00 00 00               	movl	$3, %ecx
  206a07: ff 55 10                     	callq	*16(%rbp)
  206a0a: 4c 89 e9                     	movq	%r13, %rcx
  206a0d: 44 8b 6c 24 10               	movl	16(%rsp), %r13d
  206a12: 48 83 c1 40                  	addq	$64, %rcx
  206a16: 49 ff cc                     	decq	%r12
  206a19: 74 2f                        	je	0x206a4a <dwarf.DwarfInfo.getAbbrevTable+0x1bba>
  206a1b: 48 8b 59 f8                  	movq	-8(%rcx), %rbx
  206a1f: 48 8b 29                     	movq	(%rcx), %rbp
  206a22: 48 8b 41 f0                  	movq	-16(%rcx), %rax
  206a26: 48 85 c0                     	testq	%rax, %rax
  206a29: 74 a5                        	je	0x2069d0 <dwarf.DwarfInfo.getAbbrevTable+0x1b40>
  206a2b: ba 18 00 00 00               	movl	$24, %edx
  206a30: 48 f7 e2                     	mulq	%rdx
  206a33: 0f 80 80 01 00 00            	jo	0x206bb9 <dwarf.DwarfInfo.getAbbrevTable+0x1d29>
  206a39: 4c 8b 79 e0                  	movq	-32(%rcx), %r15
  206a3d: 49 89 c6                     	movq	%rax, %r14
  206a40: 49 89 cd                     	movq	%rcx, %r13
  206a43: 4d 85 f6                     	testq	%r14, %r14
  206a46: 75 99                        	jne	0x2069e1 <dwarf.DwarfInfo.getAbbrevTable+0x1b51>
  206a48: eb c0                        	jmp	0x206a0a <dwarf.DwarfInfo.getAbbrevTable+0x1b7a>
  206a4a: 4c 8b 64 24 28               	movq	40(%rsp), %r12
  206a4f: e9 45 fa ff ff               	jmp	0x206499 <dwarf.DwarfInfo.getAbbrevTable+0x1609>
  206a54: 48 8b 5c 24 08               	movq	8(%rsp), %rbx
  206a59: e9 91 00 00 00               	jmp	0x206aef <dwarf.DwarfInfo.getAbbrevTable+0x1c5f>
  206a5e: 48 8d 7c 24 78               	leaq	120(%rsp), %rdi
  206a63: e8 e8 52 01 00               	callq	0x21bd50 <builtin.returnError>
  206a68: 48 8b 84 24 68 02 00 00      	movq	616(%rsp), %rax
  206a70: 48 89 44 24 50               	movq	%rax, 80(%rsp)
  206a75: eb 6b                        	jmp	0x206ae2 <dwarf.DwarfInfo.getAbbrevTable+0x1c52>
  206a77: 48 8d 7c 24 28               	leaq	40(%rsp), %rdi
  206a7c: c5 f8 77                     	vzeroupper
  206a7f: e8 cc 52 01 00               	callq	0x21bd50 <builtin.returnError>
  206a84: 48 8b 7c 24 08               	movq	8(%rsp), %rdi
  206a89: c5 f8 77                     	vzeroupper
  206a8c: e8 bf 52 01 00               	callq	0x21bd50 <builtin.returnError>
  206a91: 48 8b 5c 24 08               	movq	8(%rsp), %rbx
  206a96: 48 89 df                     	movq	%rbx, %rdi
  206a99: e8 b2 52 01 00               	callq	0x21bd50 <builtin.returnError>
  206a9e: 48 89 df                     	movq	%rbx, %rdi
  206aa1: e8 aa 52 01 00               	callq	0x21bd50 <builtin.returnError>
  206aa6: 48 89 df                     	movq	%rbx, %rdi
  206aa9: e8 a2 52 01 00               	callq	0x21bd50 <builtin.returnError>
  206aae: 48 89 df                     	movq	%rbx, %rdi
  206ab1: e8 9a 52 01 00               	callq	0x21bd50 <builtin.returnError>
  206ab6: 48 89 df                     	movq	%rbx, %rdi
  206ab9: e8 92 52 01 00               	callq	0x21bd50 <builtin.returnError>
  206abe: 48 89 df                     	movq	%rbx, %rdi
  206ac1: e8 8a 52 01 00               	callq	0x21bd50 <builtin.returnError>
  206ac6: 48 89 df                     	movq	%rbx, %rdi
  206ac9: e8 82 52 01 00               	callq	0x21bd50 <builtin.returnError>
  206ace: 48 8b 7c 24 70               	movq	112(%rsp), %rdi
  206ad3: 66 41 bd 15 00               	movw	$21, %r13w
  206ad8: e9 99 fd ff ff               	jmp	0x206876 <dwarf.DwarfInfo.getAbbrevTable+0x19e6>
  206add: 48 89 4c 24 50               	movq	%rcx, 80(%rsp)
  206ae2: 48 8b 5c 24 08               	movq	8(%rsp), %rbx
  206ae7: 48 89 df                     	movq	%rbx, %rdi
  206aea: e8 61 52 01 00               	callq	0x21bd50 <builtin.returnError>
  206aef: 48 89 df                     	movq	%rbx, %rdi
  206af2: e8 59 52 01 00               	callq	0x21bd50 <builtin.returnError>
  206af7: 48 89 df                     	movq	%rbx, %rdi
  206afa: e8 51 52 01 00               	callq	0x21bd50 <builtin.returnError>
  206aff: 48 89 df                     	movq	%rbx, %rdi
  206b02: e8 49 52 01 00               	callq	0x21bd50 <builtin.returnError>
  206b07: 48 89 df                     	movq	%rbx, %rdi
  206b0a: e8 41 52 01 00               	callq	0x21bd50 <builtin.returnError>
  206b0f: 48 89 df                     	movq	%rbx, %rdi
  206b12: e8 39 52 01 00               	callq	0x21bd50 <builtin.returnError>
  206b17: 48 89 df                     	movq	%rbx, %rdi
  206b1a: e8 31 52 01 00               	callq	0x21bd50 <builtin.returnError>
  206b1f: 4c 8b 64 24 10               	movq	16(%rsp), %r12
  206b24: 4d 85 ed                     	testq	%r13, %r13
  206b27: 75 14                        	jne	0x206b3d <dwarf.DwarfInfo.getAbbrevTable+0x1cad>
  206b29: 48 8d 7c 24 28               	leaq	40(%rsp), %rdi
  206b2e: e8 cd e2 ff ff               	callq	0x204e00 <array_list.ArrayListAligned(dwarf.AbbrevTableEntry,null).deinit>
  206b33: 66 41 bd 15 00               	movw	$21, %r13w
  206b38: e9 3a f9 ff ff               	jmp	0x206477 <dwarf.DwarfInfo.getAbbrevTable+0x15e7>
  206b3d: 49 83 c4 30                  	addq	$48, %r12
  206b41: eb 4a                        	jmp	0x206b8d <dwarf.DwarfInfo.getAbbrevTable+0x1cfd>
  206b43: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
  206b50: 41 bf 08 00 00 00            	movl	$8, %r15d
  206b56: 45 31 f6                     	xorl	%r14d, %r14d
  206b59: 4d 85 f6                     	testq	%r14, %r14
  206b5c: 74 26                        	je	0x206b84 <dwarf.DwarfInfo.getAbbrevTable+0x1cf4>
  206b5e: 4c 89 ff                     	movq	%r15, %rdi
  206b61: be aa 00 00 00               	movl	$170, %esi
  206b66: 4c 89 f2                     	movq	%r14, %rdx
  206b69: e8 72 58 01 00               	callq	0x21c3e0 <memset>
  206b6e: 4c 8b 44 24 50               	movq	80(%rsp), %r8
  206b73: 48 89 df                     	movq	%rbx, %rdi
  206b76: 4c 89 fe                     	movq	%r15, %rsi
  206b79: 4c 89 f2                     	movq	%r14, %rdx
  206b7c: b9 03 00 00 00               	movl	$3, %ecx
  206b81: ff 55 10                     	callq	*16(%rbp)
  206b84: 49 83 c4 40                  	addq	$64, %r12
  206b88: 49 ff cd                     	decq	%r13
  206b8b: 74 9c                        	je	0x206b29 <dwarf.DwarfInfo.getAbbrevTable+0x1c99>
  206b8d: 49 8b 5c 24 f8               	movq	-8(%r12), %rbx
  206b92: 49 8b 2c 24                  	movq	(%r12), %rbp
  206b96: 49 8b 44 24 f0               	movq	-16(%r12), %rax
  206b9b: 48 85 c0                     	testq	%rax, %rax
  206b9e: 74 b0                        	je	0x206b50 <dwarf.DwarfInfo.getAbbrevTable+0x1cc0>
  206ba0: ba 18 00 00 00               	movl	$24, %edx
  206ba5: 48 f7 e2                     	mulq	%rdx
  206ba8: 70 0f                        	jo	0x206bb9 <dwarf.DwarfInfo.getAbbrevTable+0x1d29>
  206baa: 4d 8b 7c 24 e0               	movq	-32(%r12), %r15
  206baf: 49 89 c6                     	movq	%rax, %r14
  206bb2: 4d 85 f6                     	testq	%r14, %r14
  206bb5: 75 a7                        	jne	0x206b5e <dwarf.DwarfInfo.getAbbrevTable+0x1cce>
  206bb7: eb cb                        	jmp	0x206b84 <dwarf.DwarfInfo.getAbbrevTable+0x1cf4>
  206bb9: bf 59 1d 20 00               	movl	$2104665, %edi          # imm = 0x201D59
  206bbe: be 10 00 00 00               	movl	$16, %esi
  206bc3: 31 c9                        	xorl	%ecx, %ecx
  206bc5: c5 f8 77                     	vzeroupper
  206bc8: e8 43 47 01 00               	callq	0x21b310 <builtin.default_panic>
  206bcd: bf b0 1e 20 00               	movl	$2105008, %edi          # imm = 0x201EB0
  206bd2: be 17 00 00 00               	movl	$23, %esi
  206bd7: 31 c9                        	xorl	%ecx, %ecx
  206bd9: e8 32 47 01 00               	callq	0x21b310 <builtin.default_panic>
  206bde: bf 9c 1e 20 00               	movl	$2104988, %edi          # imm = 0x201E9C
  206be3: be 13 00 00 00               	movl	$19, %esi
  206be8: 31 c9                        	xorl	%ecx, %ecx
  206bea: c5 f8 77                     	vzeroupper
  206bed: e8 1e 47 01 00               	callq	0x21b310 <builtin.default_panic>
  206bf2: bf 32 22 20 00               	movl	$2105906, %edi          # imm = 0x202232
  206bf7: be 18 00 00 00               	movl	$24, %esi
  206bfc: 31 c9                        	xorl	%ecx, %ecx
  206bfe: c5 f8 77                     	vzeroupper
  206c01: e8 0a 47 01 00               	callq	0x21b310 <builtin.default_panic>
  206c06: 48 8b 5c 24 08               	movq	8(%rsp), %rbx
  206c0b: e9 83 f5 ff ff               	jmp	0x206193 <dwarf.DwarfInfo.getAbbrevTable+0x1303>
  206c10: 4c 8b 6c 24 08               	movq	8(%rsp), %r13
  206c15: e9 ce f4 ff ff               	jmp	0x2060e8 <dwarf.DwarfInfo.getAbbrevTable+0x1258>
  206c1a: bf c7 1d 20 00               	movl	$2104775, %edi          # imm = 0x201DC7
  206c1f: be 13 00 00 00               	movl	$19, %esi
  206c24: 31 c9                        	xorl	%ecx, %ecx
  206c26: e8 e5 46 01 00               	callq	0x21b310 <builtin.default_panic>
  206c2b: bf 1e 1f 20 00               	movl	$2105118, %edi          # imm = 0x201F1E
  206c30: be 21 00 00 00               	movl	$33, %esi
  206c35: 31 c9                        	xorl	%ecx, %ecx
  206c37: e8 d4 46 01 00               	callq	0x21b310 <builtin.default_panic>
  206c3c: 0f 1f 40 00                  	nopl	(%rax)

0000000000206c40 <leb128.readULEB128__anon_5347>:
  206c40: 41 57                        	pushq	%r15
  206c42: 41 56                        	pushq	%r14
  206c44: 41 54                        	pushq	%r12
  206c46: 53                           	pushq	%rbx
  206c47: 48 83 ec 18                  	subq	$24, %rsp
  206c4b: 49 89 f6                     	movq	%rsi, %r14
  206c4e: 48 8b 32                     	movq	(%rdx), %rsi
  206c51: 49 89 d7                     	movq	%rdx, %r15
  206c54: 48 89 fb                     	movq	%rdi, %rbx
  206c57: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  206c5c: 48 8d 54 24 07               	leaq	7(%rsp), %rdx
  206c61: b9 01 00 00 00               	movl	$1, %ecx
  206c66: c6 44 24 07 aa               	movb	$-86, 7(%rsp)
  206c6b: e8 10 26 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  206c70: 48 83 7c 24 08 00            	cmpq	$0, 8(%rsp)
  206c76: 0f 84 5d 02 00 00            	je	0x206ed9 <leb128.readULEB128__anon_5347+0x299>
  206c7c: 0f b6 44 24 07               	movzbl	7(%rsp), %eax
  206c81: 41 89 c4                     	movl	%eax, %r12d
  206c84: 41 83 e4 7f                  	andl	$127, %r12d
  206c88: 84 c0                        	testb	%al, %al
  206c8a: 0f 89 34 02 00 00            	jns	0x206ec4 <leb128.readULEB128__anon_5347+0x284>
  206c90: 49 8b 37                     	movq	(%r15), %rsi
  206c93: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  206c98: 48 8d 54 24 07               	leaq	7(%rsp), %rdx
  206c9d: b9 01 00 00 00               	movl	$1, %ecx
  206ca2: c6 44 24 07 aa               	movb	$-86, 7(%rsp)
  206ca7: e8 d4 25 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  206cac: 48 83 7c 24 08 00            	cmpq	$0, 8(%rsp)
  206cb2: 0f 84 21 02 00 00            	je	0x206ed9 <leb128.readULEB128__anon_5347+0x299>
  206cb8: 0f b6 44 24 07               	movzbl	7(%rsp), %eax
  206cbd: 89 c1                        	movl	%eax, %ecx
  206cbf: 83 e1 7f                     	andl	$127, %ecx
  206cc2: 48 c1 e1 07                  	shlq	$7, %rcx
  206cc6: 49 09 cc                     	orq	%rcx, %r12
  206cc9: 84 c0                        	testb	%al, %al
  206ccb: 0f 89 f3 01 00 00            	jns	0x206ec4 <leb128.readULEB128__anon_5347+0x284>
  206cd1: 49 8b 37                     	movq	(%r15), %rsi
  206cd4: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  206cd9: 48 8d 54 24 07               	leaq	7(%rsp), %rdx
  206cde: b9 01 00 00 00               	movl	$1, %ecx
  206ce3: c6 44 24 07 aa               	movb	$-86, 7(%rsp)
  206ce8: e8 93 25 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  206ced: 48 83 7c 24 08 00            	cmpq	$0, 8(%rsp)
  206cf3: 0f 84 e0 01 00 00            	je	0x206ed9 <leb128.readULEB128__anon_5347+0x299>
  206cf9: 0f b6 44 24 07               	movzbl	7(%rsp), %eax
  206cfe: 89 c1                        	movl	%eax, %ecx
  206d00: 83 e1 7f                     	andl	$127, %ecx
  206d03: 48 c1 e1 0e                  	shlq	$14, %rcx
  206d07: 49 09 cc                     	orq	%rcx, %r12
  206d0a: 84 c0                        	testb	%al, %al
  206d0c: 0f 89 b2 01 00 00            	jns	0x206ec4 <leb128.readULEB128__anon_5347+0x284>
  206d12: 49 8b 37                     	movq	(%r15), %rsi
  206d15: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  206d1a: 48 8d 54 24 07               	leaq	7(%rsp), %rdx
  206d1f: b9 01 00 00 00               	movl	$1, %ecx
  206d24: c6 44 24 07 aa               	movb	$-86, 7(%rsp)
  206d29: e8 52 25 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  206d2e: 48 83 7c 24 08 00            	cmpq	$0, 8(%rsp)
  206d34: 0f 84 9f 01 00 00            	je	0x206ed9 <leb128.readULEB128__anon_5347+0x299>
  206d3a: 0f b6 44 24 07               	movzbl	7(%rsp), %eax
  206d3f: 89 c1                        	movl	%eax, %ecx
  206d41: 83 e1 7f                     	andl	$127, %ecx
  206d44: 48 c1 e1 15                  	shlq	$21, %rcx
  206d48: 49 09 cc                     	orq	%rcx, %r12
  206d4b: 84 c0                        	testb	%al, %al
  206d4d: 0f 89 71 01 00 00            	jns	0x206ec4 <leb128.readULEB128__anon_5347+0x284>
  206d53: 49 8b 37                     	movq	(%r15), %rsi
  206d56: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  206d5b: 48 8d 54 24 07               	leaq	7(%rsp), %rdx
  206d60: b9 01 00 00 00               	movl	$1, %ecx
  206d65: c6 44 24 07 aa               	movb	$-86, 7(%rsp)
  206d6a: e8 11 25 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  206d6f: 48 83 7c 24 08 00            	cmpq	$0, 8(%rsp)
  206d75: 0f 84 5e 01 00 00            	je	0x206ed9 <leb128.readULEB128__anon_5347+0x299>
  206d7b: 0f b6 44 24 07               	movzbl	7(%rsp), %eax
  206d80: 89 c1                        	movl	%eax, %ecx
  206d82: 83 e1 7f                     	andl	$127, %ecx
  206d85: 48 c1 e1 1c                  	shlq	$28, %rcx
  206d89: 49 09 cc                     	orq	%rcx, %r12
  206d8c: 84 c0                        	testb	%al, %al
  206d8e: 0f 89 30 01 00 00            	jns	0x206ec4 <leb128.readULEB128__anon_5347+0x284>
  206d94: 49 8b 37                     	movq	(%r15), %rsi
  206d97: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  206d9c: 48 8d 54 24 07               	leaq	7(%rsp), %rdx
  206da1: b9 01 00 00 00               	movl	$1, %ecx
  206da6: c6 44 24 07 aa               	movb	$-86, 7(%rsp)
  206dab: e8 d0 24 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  206db0: 48 83 7c 24 08 00            	cmpq	$0, 8(%rsp)
  206db6: 0f 84 1d 01 00 00            	je	0x206ed9 <leb128.readULEB128__anon_5347+0x299>
  206dbc: 0f b6 44 24 07               	movzbl	7(%rsp), %eax
  206dc1: 89 c1                        	movl	%eax, %ecx
  206dc3: 83 e1 7f                     	andl	$127, %ecx
  206dc6: 48 c1 e1 23                  	shlq	$35, %rcx
  206dca: 49 09 cc                     	orq	%rcx, %r12
  206dcd: 84 c0                        	testb	%al, %al
  206dcf: 0f 89 ef 00 00 00            	jns	0x206ec4 <leb128.readULEB128__anon_5347+0x284>
  206dd5: 49 8b 37                     	movq	(%r15), %rsi
  206dd8: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  206ddd: 48 8d 54 24 07               	leaq	7(%rsp), %rdx
  206de2: b9 01 00 00 00               	movl	$1, %ecx
  206de7: c6 44 24 07 aa               	movb	$-86, 7(%rsp)
  206dec: e8 8f 24 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  206df1: 48 83 7c 24 08 00            	cmpq	$0, 8(%rsp)
  206df7: 0f 84 dc 00 00 00            	je	0x206ed9 <leb128.readULEB128__anon_5347+0x299>
  206dfd: 0f b6 44 24 07               	movzbl	7(%rsp), %eax
  206e02: 89 c1                        	movl	%eax, %ecx
  206e04: 83 e1 7f                     	andl	$127, %ecx
  206e07: 48 c1 e1 2a                  	shlq	$42, %rcx
  206e0b: 49 09 cc                     	orq	%rcx, %r12
  206e0e: 84 c0                        	testb	%al, %al
  206e10: 0f 89 ae 00 00 00            	jns	0x206ec4 <leb128.readULEB128__anon_5347+0x284>
  206e16: 49 8b 37                     	movq	(%r15), %rsi
  206e19: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  206e1e: 48 8d 54 24 07               	leaq	7(%rsp), %rdx
  206e23: b9 01 00 00 00               	movl	$1, %ecx
  206e28: c6 44 24 07 aa               	movb	$-86, 7(%rsp)
  206e2d: e8 4e 24 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  206e32: 48 83 7c 24 08 00            	cmpq	$0, 8(%rsp)
  206e38: 0f 84 9b 00 00 00            	je	0x206ed9 <leb128.readULEB128__anon_5347+0x299>
  206e3e: 0f b6 44 24 07               	movzbl	7(%rsp), %eax
  206e43: 89 c1                        	movl	%eax, %ecx
  206e45: 83 e1 7f                     	andl	$127, %ecx
  206e48: 48 c1 e1 31                  	shlq	$49, %rcx
  206e4c: 49 09 cc                     	orq	%rcx, %r12
  206e4f: 84 c0                        	testb	%al, %al
  206e51: 79 71                        	jns	0x206ec4 <leb128.readULEB128__anon_5347+0x284>
  206e53: 49 8b 37                     	movq	(%r15), %rsi
  206e56: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  206e5b: 48 8d 54 24 07               	leaq	7(%rsp), %rdx
  206e60: b9 01 00 00 00               	movl	$1, %ecx
  206e65: c6 44 24 07 aa               	movb	$-86, 7(%rsp)
  206e6a: e8 11 24 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  206e6f: 48 83 7c 24 08 00            	cmpq	$0, 8(%rsp)
  206e75: 74 62                        	je	0x206ed9 <leb128.readULEB128__anon_5347+0x299>
  206e77: 0f b6 44 24 07               	movzbl	7(%rsp), %eax
  206e7c: 89 c1                        	movl	%eax, %ecx
  206e7e: 83 e1 7f                     	andl	$127, %ecx
  206e81: 48 c1 e1 38                  	shlq	$56, %rcx
  206e85: 49 09 cc                     	orq	%rcx, %r12
  206e88: 84 c0                        	testb	%al, %al
  206e8a: 79 38                        	jns	0x206ec4 <leb128.readULEB128__anon_5347+0x284>
  206e8c: 49 8b 37                     	movq	(%r15), %rsi
  206e8f: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  206e94: 48 8d 54 24 07               	leaq	7(%rsp), %rdx
  206e99: b9 01 00 00 00               	movl	$1, %ecx
  206e9e: c6 44 24 07 aa               	movb	$-86, 7(%rsp)
  206ea3: e8 d8 23 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  206ea8: 48 83 7c 24 08 00            	cmpq	$0, 8(%rsp)
  206eae: 74 29                        	je	0x206ed9 <leb128.readULEB128__anon_5347+0x299>
  206eb0: 0f b6 44 24 07               	movzbl	7(%rsp), %eax
  206eb5: a8 7e                        	testb	$126, %al
  206eb7: 75 38                        	jne	0x206ef1 <leb128.readULEB128__anon_5347+0x2b1>
  206eb9: 84 c0                        	testb	%al, %al
  206ebb: 78 34                        	js	0x206ef1 <leb128.readULEB128__anon_5347+0x2b1>
  206ebd: 48 c1 e0 3f                  	shlq	$63, %rax
  206ec1: 49 09 c4                     	orq	%rax, %r12
  206ec4: 4c 89 23                     	movq	%r12, (%rbx)
  206ec7: 66 c7 43 08 00 00            	movw	$0, 8(%rbx)
  206ecd: 48 83 c4 18                  	addq	$24, %rsp
  206ed1: 5b                           	popq	%rbx
  206ed2: 41 5c                        	popq	%r12
  206ed4: 41 5e                        	popq	%r14
  206ed6: 41 5f                        	popq	%r15
  206ed8: c3                           	retq
  206ed9: 4c 89 f7                     	movq	%r14, %rdi
  206edc: e8 6f 4e 01 00               	callq	0x21bd50 <builtin.returnError>
  206ee1: 4c 89 f7                     	movq	%r14, %rdi
  206ee4: e8 67 4e 01 00               	callq	0x21bd50 <builtin.returnError>
  206ee9: 66 c7 43 08 33 00            	movw	$51, 8(%rbx)
  206eef: eb dc                        	jmp	0x206ecd <leb128.readULEB128__anon_5347+0x28d>
  206ef1: 4c 89 f7                     	movq	%r14, %rdi
  206ef4: e8 57 4e 01 00               	callq	0x21bd50 <builtin.returnError>
  206ef9: c5 f8 10 05 9f 93 ff ff      	vmovups	-27745(%rip), %xmm0     # 0x2002a0 <zig-graph+0x2002a0>
  206f01: c5 f8 11 03                  	vmovups	%xmm0, (%rbx)
  206f05: eb c6                        	jmp	0x206ecd <leb128.readULEB128__anon_5347+0x28d>
  206f07: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)

0000000000206f10 <dwarf.DwarfInfo.parseDie__anon_5346>:
  206f10: 55                           	pushq	%rbp
  206f11: 41 57                        	pushq	%r15
  206f13: 41 56                        	pushq	%r14
  206f15: 41 55                        	pushq	%r13
  206f17: 41 54                        	pushq	%r12
  206f19: 53                           	pushq	%rbx
  206f1a: 48 81 ec f8 00 00 00         	subq	$248, %rsp
  206f21: 48 89 54 24 78               	movq	%rdx, 120(%rsp)
  206f26: 49 89 ff                     	movq	%rdi, %r15
  206f29: 48 8d bc 24 90 00 00 00      	leaq	144(%rsp), %rdi
  206f31: 4c 89 c2                     	movq	%r8, %rdx
  206f34: 4c 89 cb                     	movq	%r9, %rbx
  206f37: 49 89 cd                     	movq	%rcx, %r13
  206f3a: 44 0f b6 a4 24 30 01 00 00   	movzbl	304(%rsp), %r12d
  206f43: 48 89 74 24 08               	movq	%rsi, 8(%rsp)
  206f48: 4c 89 84 24 80 00 00 00      	movq	%r8, 128(%rsp)
  206f50: e8 eb fc ff ff               	callq	0x206c40 <leb128.readULEB128__anon_5347>
  206f55: 0f b7 ac 24 98 00 00 00      	movzwl	152(%rsp), %ebp
  206f5d: 66 85 ed                     	testw	%bp, %bp
  206f60: 0f 85 98 02 00 00            	jne	0x2071fe <dwarf.DwarfInfo.parseDie__anon_5346+0x2ee>
  206f66: 48 8b 84 24 90 00 00 00      	movq	144(%rsp), %rax
  206f6e: 48 85 c0                     	testq	%rax, %rax
  206f71: 0f 84 5d 02 00 00            	je	0x2071d4 <dwarf.DwarfInfo.parseDie__anon_5346+0x2c4>
  206f77: 48 8b 4b 08                  	movq	8(%rbx), %rcx
  206f7b: 48 85 c9                     	testq	%rcx, %rcx
  206f7e: 74 1e                        	je	0x206f9e <dwarf.DwarfInfo.parseDie__anon_5346+0x8e>
  206f80: 4c 8b 33                     	movq	(%rbx), %r14
  206f83: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
  206f90: 49 39 06                     	cmpq	%rax, (%r14)
  206f93: 74 36                        	je	0x206fcb <dwarf.DwarfInfo.parseDie__anon_5346+0xbb>
  206f95: 49 83 c6 40                  	addq	$64, %r14
  206f99: 48 ff c9                     	decq	%rcx
  206f9c: 75 f2                        	jne	0x206f90 <dwarf.DwarfInfo.parseDie__anon_5346+0x80>
  206f9e: 48 8b 5c 24 08               	movq	8(%rsp), %rbx
  206fa3: 48 89 df                     	movq	%rbx, %rdi
  206fa6: e8 a5 4d 01 00               	callq	0x21bd50 <builtin.returnError>
  206fab: 66 41 c7 47 50 34 00         	movw	$52, 80(%r15)
  206fb2: 48 89 df                     	movq	%rbx, %rdi
  206fb5: 48 81 c4 f8 00 00 00         	addq	$248, %rsp
  206fbc: 5b                           	popq	%rbx
  206fbd: 41 5c                        	popq	%r12
  206fbf: 41 5d                        	popq	%r13
  206fc1: 41 5e                        	popq	%r14
  206fc3: 41 5f                        	popq	%r15
  206fc5: 5d                           	popq	%rbp
  206fc6: e9 85 4d 01 00               	jmp	0x21bd50 <builtin.returnError>
  206fcb: c4 c1 78 10 45 00            	vmovups	(%r13), %xmm0
  206fd1: 48 8b 7c 24 08               	movq	8(%rsp), %rdi
  206fd6: 48 8d 74 24 48               	leaq	72(%rsp), %rsi
  206fdb: 4c 89 ea                     	movq	%r13, %rdx
  206fde: c5 f8 29 84 24 b0 00 00 00   	vmovaps	%xmm0, 176(%rsp)
  206fe7: c5 f8 57 c0                  	vxorps	%xmm0, %xmm0, %xmm0
  206feb: c5 f8 29 84 24 c0 00 00 00   	vmovaps	%xmm0, 192(%rsp)
  206ff4: c5 f8 10 84 24 b0 00 00 00   	vmovups	176(%rsp), %xmm0
  206ffd: c5 f8 11 44 24 20            	vmovups	%xmm0, 32(%rsp)
  207003: c5 f8 10 84 24 c0 00 00 00   	vmovups	192(%rsp), %xmm0
  20700c: c5 f8 11 44 24 30            	vmovups	%xmm0, 48(%rsp)
  207012: c5 f8 10 05 f6 a4 ff ff      	vmovups	-23306(%rip), %xmm0     # 0x201510 <os.abort__anon_4125+0x98>
  20701a: 49 8b 46 08                  	movq	8(%r14), %rax
  20701e: 48 89 44 24 40               	movq	%rax, 64(%rsp)
  207023: 41 0f b6 46 38               	movzbl	56(%r14), %eax
  207028: 88 44 24 60                  	movb	%al, 96(%rsp)
  20702c: c5 f8 11 44 24 48            	vmovups	%xmm0, 72(%rsp)
  207032: 48 c7 44 24 58 00 00 00 00   	movq	$0, 88(%rsp)
  20703b: 49 8b 6e 18                  	movq	24(%r14), %rbp
  20703f: 48 89 e9                     	movq	%rbp, %rcx
  207042: e8 f9 22 01 00               	callq	0x219340 <array_list.ArrayListAlignedUnmanaged(dwarf.Die.Attr,null).ensureTotalCapacity>
  207047: 66 85 c0                     	testw	%ax, %ax
  20704a: 0f 85 bf 01 00 00            	jne	0x20720f <dwarf.DwarfInfo.parseDie__anon_5346+0x2ff>
  207050: 48 89 6c 24 50               	movq	%rbp, 80(%rsp)
  207055: 4c 89 7c 24 18               	movq	%r15, 24(%rsp)
  20705a: 49 8b 46 18                  	movq	24(%r14), %rax
  20705e: 48 89 44 24 70               	movq	%rax, 112(%rsp)
  207063: 48 85 c0                     	testq	%rax, %rax
  207066: 0f 84 27 01 00 00            	je	0x207193 <dwarf.DwarfInfo.parseDie__anon_5346+0x283>
  20706c: 49 8b 6e 10                  	movq	16(%r14), %rbp
  207070: 44 89 e0                     	movl	%r12d, %eax
  207073: 45 31 e4                     	xorl	%r12d, %r12d
  207076: 45 31 ff                     	xorl	%r15d, %r15d
  207079: 0f b6 c0                     	movzbl	%al, %eax
  20707c: 89 44 24 14                  	movl	%eax, 20(%rsp)
  207080: 48 83 c5 10                  	addq	$16, %rbp
  207084: eb 2d                        	jmp	0x2070b3 <dwarf.DwarfInfo.parseDie__anon_5346+0x1a3>
  207086: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
  207090: 48 8b 8c 24 88 00 00 00      	movq	136(%rsp), %rcx
  207098: 4a 89 4c 20 08               	movq	%rcx, 8(%rax,%r12)
  20709d: 49 ff c7                     	incq	%r15
  2070a0: 48 83 c5 18                  	addq	$24, %rbp
  2070a4: 49 83 c4 20                  	addq	$32, %r12
  2070a8: 4c 39 7c 24 70               	cmpq	%r15, 112(%rsp)
  2070ad: 0f 84 e0 00 00 00            	je	0x207193 <dwarf.DwarfInfo.parseDie__anon_5346+0x283>
  2070b3: 4c 3b 7c 24 50               	cmpq	80(%rsp), %r15
  2070b8: 0f 83 85 01 00 00            	jae	0x207243 <dwarf.DwarfInfo.parseDie__anon_5346+0x333>
  2070be: 48 8b 45 00                  	movq	(%rbp), %rax
  2070c2: 4c 8b 74 24 48               	movq	72(%rsp), %r14
  2070c7: 48 8b 55 f0                  	movq	-16(%rbp), %rdx
  2070cb: 48 8b 5d f8                  	movq	-8(%rbp), %rbx
  2070cf: 48 8d 74 24 20               	leaq	32(%rsp), %rsi
  2070d4: 48 8d bc 24 d8 00 00 00      	leaq	216(%rsp), %rdi
  2070dc: 48 89 84 24 88 00 00 00      	movq	%rax, 136(%rsp)
  2070e4: 4b 89 14 26                  	movq	%rdx, (%r14,%r12)
  2070e8: 48 89 b4 24 a0 00 00 00      	movq	%rsi, 160(%rsp)
  2070f0: 48 c7 84 24 a8 00 00 00 10 18 20 00  	movq	$2103312, 168(%rsp) # imm = 0x201810
  2070fc: 49 89 d8                     	movq	%rbx, %r8
  2070ff: 48 8b 54 24 78               	movq	120(%rsp), %rdx
  207104: 8b 4c 24 14                  	movl	20(%rsp), %ecx
  207108: 44 8b 8a 08 01 00 00         	movl	264(%rdx), %r9d
  20710f: 89 0c 24                     	movl	%ecx, (%rsp)
  207112: 48 8d 94 24 a0 00 00 00      	leaq	160(%rsp), %rdx
  20711a: 48 8b 74 24 08               	movq	8(%rsp), %rsi
  20711f: 48 8b 8c 24 80 00 00 00      	movq	128(%rsp), %rcx
  207127: e8 34 01 00 00               	callq	0x207260 <dwarf.parseFormValue__anon_5348>
  20712c: 44 0f b7 ac 24 f0 00 00 00   	movzwl	240(%rsp), %r13d
  207135: 66 45 85 ed                  	testw	%r13w, %r13w
  207139: 0f 85 ee 00 00 00            	jne	0x20722d <dwarf.DwarfInfo.parseDie__anon_5346+0x31d>
  20713f: 48 8b 84 24 e8 00 00 00      	movq	232(%rsp), %rax
  207147: 4b 89 44 26 18               	movq	%rax, 24(%r14,%r12)
  20714c: c5 f8 10 84 24 d8 00 00 00   	vmovups	216(%rsp), %xmm0
  207155: c4 81 78 11 44 26 08         	vmovups	%xmm0, 8(%r14,%r12)
  20715c: 48 83 fb 21                  	cmpq	$33, %rbx
  207160: 0f 85 37 ff ff ff            	jne	0x20709d <dwarf.DwarfInfo.parseDie__anon_5346+0x18d>
  207166: 4c 3b 7c 24 50               	cmpq	80(%rsp), %r15
  20716b: 0f 83 d2 00 00 00            	jae	0x207243 <dwarf.DwarfInfo.parseDie__anon_5346+0x333>
  207171: 48 8b 44 24 48               	movq	72(%rsp), %rax
  207176: 42 80 7c 20 18 03            	cmpb	$3, 24(%rax,%r12)
  20717c: 0f 84 0e ff ff ff            	je	0x207090 <dwarf.DwarfInfo.parseDie__anon_5346+0x180>
  207182: bf 6c 22 20 00               	movl	$2105964, %edi          # imm = 0x20226C
  207187: be 1e 00 00 00               	movl	$30, %esi
  20718c: 31 c9                        	xorl	%ecx, %ecx
  20718e: e8 7d 41 01 00               	callq	0x21b310 <builtin.default_panic>
  207193: c5 fc 10 44 24 20            	vmovups	32(%rsp), %ymm0
  207199: c5 f8 10 4c 24 40            	vmovups	64(%rsp), %xmm1
  20719f: 48 8b 4c 24 18               	movq	24(%rsp), %rcx
  2071a4: 48 8b 44 24 60               	movq	96(%rsp), %rax
  2071a9: 48 8b 74 24 50               	movq	80(%rsp), %rsi
  2071ae: 48 8b 54 24 58               	movq	88(%rsp), %rdx
  2071b3: 48 89 41 40                  	movq	%rax, 64(%rcx)
  2071b7: 48 89 71 30                  	movq	%rsi, 48(%rcx)
  2071bb: 48 89 51 38                  	movq	%rdx, 56(%rcx)
  2071bf: c5 f8 11 49 20               	vmovups	%xmm1, 32(%rcx)
  2071c4: c5 fc 11 01                  	vmovups	%ymm0, (%rcx)
  2071c8: c6 41 48 01                  	movb	$1, 72(%rcx)
  2071cc: 66 c7 41 50 00 00            	movw	$0, 80(%rcx)
  2071d2: eb 15                        	jmp	0x2071e9 <dwarf.DwarfInfo.parseDie__anon_5346+0x2d9>
  2071d4: c5 f8 57 c0                  	vxorps	%xmm0, %xmm0, %xmm0
  2071d8: c4 c1 7c 11 47 38            	vmovups	%ymm0, 56(%r15)
  2071de: c4 c1 7c 11 47 20            	vmovups	%ymm0, 32(%r15)
  2071e4: c4 c1 7c 11 07               	vmovups	%ymm0, (%r15)
  2071e9: 48 81 c4 f8 00 00 00         	addq	$248, %rsp
  2071f0: 5b                           	popq	%rbx
  2071f1: 41 5c                        	popq	%r12
  2071f3: 41 5d                        	popq	%r13
  2071f5: 41 5e                        	popq	%r14
  2071f7: 41 5f                        	popq	%r15
  2071f9: 5d                           	popq	%rbp
  2071fa: c5 f8 77                     	vzeroupper
  2071fd: c3                           	retq
  2071fe: 48 8b 7c 24 08               	movq	8(%rsp), %rdi
  207203: e8 48 4b 01 00               	callq	0x21bd50 <builtin.returnError>
  207208: 66 41 89 6f 50               	movw	%bp, 80(%r15)
  20720d: eb da                        	jmp	0x2071e9 <dwarf.DwarfInfo.parseDie__anon_5346+0x2d9>
  20720f: 4c 8b 74 24 08               	movq	8(%rsp), %r14
  207214: 89 c3                        	movl	%eax, %ebx
  207216: 4c 89 f7                     	movq	%r14, %rdi
  207219: e8 32 4b 01 00               	callq	0x21bd50 <builtin.returnError>
  20721e: 4c 89 f7                     	movq	%r14, %rdi
  207221: e8 2a 4b 01 00               	callq	0x21bd50 <builtin.returnError>
  207226: 66 41 89 5f 50               	movw	%bx, 80(%r15)
  20722b: eb bc                        	jmp	0x2071e9 <dwarf.DwarfInfo.parseDie__anon_5346+0x2d9>
  20722d: 48 8b 7c 24 08               	movq	8(%rsp), %rdi
  207232: e8 19 4b 01 00               	callq	0x21bd50 <builtin.returnError>
  207237: 48 8b 44 24 18               	movq	24(%rsp), %rax
  20723c: 66 44 89 68 50               	movw	%r13w, 80(%rax)
  207241: eb a6                        	jmp	0x2071e9 <dwarf.DwarfInfo.parseDie__anon_5346+0x2d9>
  207243: bf 9c 1e 20 00               	movl	$2104988, %edi          # imm = 0x201E9C
  207248: be 13 00 00 00               	movl	$19, %esi
  20724d: 31 c9                        	xorl	%ecx, %ecx
  20724f: e8 bc 40 01 00               	callq	0x21b310 <builtin.default_panic>
  207254: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)

0000000000207260 <dwarf.parseFormValue__anon_5348>:
  207260: 55                           	pushq	%rbp
  207261: 41 57                        	pushq	%r15
  207263: 41 56                        	pushq	%r14
  207265: 41 55                        	pushq	%r13
  207267: 41 54                        	pushq	%r12
  207269: 53                           	pushq	%rbx
  20726a: 48 81 ec 08 01 00 00         	subq	$264, %rsp              # imm = 0x108
  207271: 49 89 f5                     	movq	%rsi, %r13
  207274: 48 89 fb                     	movq	%rdi, %rbx
  207277: 49 8d 40 ff                  	leaq	-1(%r8), %rax
  20727b: 48 83 f8 2b                  	cmpq	$43, %rax
  20727f: 0f 87 7c 1b 00 00            	ja	0x208e01 <dwarf.parseFormValue__anon_5348+0x1ba1>
  207285: 44 0f b6 b4 24 40 01 00 00   	movzbl	320(%rsp), %r14d
  20728e: 44 89 cd                     	movl	%r9d, %ebp
  207291: 49 89 d4                     	movq	%rdx, %r12
  207294: ff 24 c5 08 09 20 00         	jmpq	*2099464(,%rax,8)
  20729b: 49 83 f8 0d                  	cmpq	$13, %r8
  20729f: 0f 94 44 24 38               	sete	56(%rsp)
  2072a4: 0f 85 41 19 00 00            	jne	0x208beb <dwarf.parseFormValue__anon_5348+0x198b>
  2072aa: 48 8b 31                     	movq	(%rcx), %rsi
  2072ad: 49 89 cc                     	movq	%rcx, %r12
  2072b0: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  2072b5: 48 8d 54 24 0f               	leaq	15(%rsp), %rdx
  2072ba: b9 01 00 00 00               	movl	$1, %ecx
  2072bf: c6 44 24 0f aa               	movb	$-86, 15(%rsp)
  2072c4: e8 b7 1f 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2072c9: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  2072cf: 0f 84 36 1e 00 00            	je	0x20910b <dwarf.parseFormValue__anon_5348+0x1eab>
  2072d5: 0f b6 44 24 0f               	movzbl	15(%rsp), %eax
  2072da: b9 07 00 00 00               	movl	$7, %ecx
  2072df: 41 89 c6                     	movl	%eax, %r14d
  2072e2: 41 83 e6 7f                  	andl	$127, %r14d
  2072e6: 84 c0                        	testb	%al, %al
  2072e8: 0f 89 3a 02 00 00            	jns	0x207528 <dwarf.parseFormValue__anon_5348+0x2c8>
  2072ee: 49 8b 34 24                  	movq	(%r12), %rsi
  2072f2: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  2072f7: 48 8d 54 24 0f               	leaq	15(%rsp), %rdx
  2072fc: b9 01 00 00 00               	movl	$1, %ecx
  207301: c6 44 24 0f aa               	movb	$-86, 15(%rsp)
  207306: e8 75 1f 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20730b: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  207311: 0f 84 f4 1d 00 00            	je	0x20910b <dwarf.parseFormValue__anon_5348+0x1eab>
  207317: 0f b6 44 24 0f               	movzbl	15(%rsp), %eax
  20731c: 89 c1                        	movl	%eax, %ecx
  20731e: 83 e1 7f                     	andl	$127, %ecx
  207321: 48 c1 e1 07                  	shlq	$7, %rcx
  207325: 49 09 ce                     	orq	%rcx, %r14
  207328: b9 0e 00 00 00               	movl	$14, %ecx
  20732d: 84 c0                        	testb	%al, %al
  20732f: 0f 89 f3 01 00 00            	jns	0x207528 <dwarf.parseFormValue__anon_5348+0x2c8>
  207335: 49 8b 34 24                  	movq	(%r12), %rsi
  207339: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20733e: 48 8d 54 24 0f               	leaq	15(%rsp), %rdx
  207343: b9 01 00 00 00               	movl	$1, %ecx
  207348: c6 44 24 0f aa               	movb	$-86, 15(%rsp)
  20734d: e8 2e 1f 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  207352: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  207358: 0f 84 ad 1d 00 00            	je	0x20910b <dwarf.parseFormValue__anon_5348+0x1eab>
  20735e: 0f b6 44 24 0f               	movzbl	15(%rsp), %eax
  207363: 89 c1                        	movl	%eax, %ecx
  207365: 83 e1 7f                     	andl	$127, %ecx
  207368: 48 c1 e1 0e                  	shlq	$14, %rcx
  20736c: 49 09 ce                     	orq	%rcx, %r14
  20736f: b9 15 00 00 00               	movl	$21, %ecx
  207374: 84 c0                        	testb	%al, %al
  207376: 0f 89 ac 01 00 00            	jns	0x207528 <dwarf.parseFormValue__anon_5348+0x2c8>
  20737c: 49 8b 34 24                  	movq	(%r12), %rsi
  207380: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  207385: 48 8d 54 24 0f               	leaq	15(%rsp), %rdx
  20738a: b9 01 00 00 00               	movl	$1, %ecx
  20738f: c6 44 24 0f aa               	movb	$-86, 15(%rsp)
  207394: e8 e7 1e 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  207399: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20739f: 0f 84 66 1d 00 00            	je	0x20910b <dwarf.parseFormValue__anon_5348+0x1eab>
  2073a5: 0f b6 44 24 0f               	movzbl	15(%rsp), %eax
  2073aa: 89 c1                        	movl	%eax, %ecx
  2073ac: 83 e1 7f                     	andl	$127, %ecx
  2073af: 48 c1 e1 15                  	shlq	$21, %rcx
  2073b3: 49 09 ce                     	orq	%rcx, %r14
  2073b6: b9 1c 00 00 00               	movl	$28, %ecx
  2073bb: 84 c0                        	testb	%al, %al
  2073bd: 0f 89 65 01 00 00            	jns	0x207528 <dwarf.parseFormValue__anon_5348+0x2c8>
  2073c3: 49 8b 34 24                  	movq	(%r12), %rsi
  2073c7: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  2073cc: 48 8d 54 24 0f               	leaq	15(%rsp), %rdx
  2073d1: b9 01 00 00 00               	movl	$1, %ecx
  2073d6: c6 44 24 0f aa               	movb	$-86, 15(%rsp)
  2073db: e8 a0 1e 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2073e0: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  2073e6: 0f 84 1f 1d 00 00            	je	0x20910b <dwarf.parseFormValue__anon_5348+0x1eab>
  2073ec: 0f b6 44 24 0f               	movzbl	15(%rsp), %eax
  2073f1: 89 c1                        	movl	%eax, %ecx
  2073f3: 83 e1 7f                     	andl	$127, %ecx
  2073f6: 48 c1 e1 1c                  	shlq	$28, %rcx
  2073fa: 49 09 ce                     	orq	%rcx, %r14
  2073fd: b9 23 00 00 00               	movl	$35, %ecx
  207402: 84 c0                        	testb	%al, %al
  207404: 0f 89 1e 01 00 00            	jns	0x207528 <dwarf.parseFormValue__anon_5348+0x2c8>
  20740a: 49 8b 34 24                  	movq	(%r12), %rsi
  20740e: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  207413: 48 8d 54 24 0f               	leaq	15(%rsp), %rdx
  207418: b9 01 00 00 00               	movl	$1, %ecx
  20741d: c6 44 24 0f aa               	movb	$-86, 15(%rsp)
  207422: e8 59 1e 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  207427: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20742d: 0f 84 d8 1c 00 00            	je	0x20910b <dwarf.parseFormValue__anon_5348+0x1eab>
  207433: 0f b6 44 24 0f               	movzbl	15(%rsp), %eax
  207438: 89 c1                        	movl	%eax, %ecx
  20743a: 83 e1 7f                     	andl	$127, %ecx
  20743d: 48 c1 e1 23                  	shlq	$35, %rcx
  207441: 49 09 ce                     	orq	%rcx, %r14
  207444: b9 2a 00 00 00               	movl	$42, %ecx
  207449: 84 c0                        	testb	%al, %al
  20744b: 0f 89 d7 00 00 00            	jns	0x207528 <dwarf.parseFormValue__anon_5348+0x2c8>
  207451: 49 8b 34 24                  	movq	(%r12), %rsi
  207455: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20745a: 48 8d 54 24 0f               	leaq	15(%rsp), %rdx
  20745f: b9 01 00 00 00               	movl	$1, %ecx
  207464: c6 44 24 0f aa               	movb	$-86, 15(%rsp)
  207469: e8 12 1e 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20746e: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  207474: 0f 84 91 1c 00 00            	je	0x20910b <dwarf.parseFormValue__anon_5348+0x1eab>
  20747a: 0f b6 44 24 0f               	movzbl	15(%rsp), %eax
  20747f: 89 c1                        	movl	%eax, %ecx
  207481: 83 e1 7f                     	andl	$127, %ecx
  207484: 48 c1 e1 2a                  	shlq	$42, %rcx
  207488: 49 09 ce                     	orq	%rcx, %r14
  20748b: b9 31 00 00 00               	movl	$49, %ecx
  207490: 84 c0                        	testb	%al, %al
  207492: 0f 89 90 00 00 00            	jns	0x207528 <dwarf.parseFormValue__anon_5348+0x2c8>
  207498: 49 8b 34 24                  	movq	(%r12), %rsi
  20749c: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  2074a1: 48 8d 54 24 0f               	leaq	15(%rsp), %rdx
  2074a6: b9 01 00 00 00               	movl	$1, %ecx
  2074ab: 4d 89 ef                     	movq	%r13, %r15
  2074ae: c6 44 24 0f aa               	movb	$-86, 15(%rsp)
  2074b3: e8 c8 1d 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2074b8: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  2074be: 0f 84 47 1c 00 00            	je	0x20910b <dwarf.parseFormValue__anon_5348+0x1eab>
  2074c4: 0f b6 44 24 0f               	movzbl	15(%rsp), %eax
  2074c9: 89 c1                        	movl	%eax, %ecx
  2074cb: 83 e1 7f                     	andl	$127, %ecx
  2074ce: 48 c1 e1 31                  	shlq	$49, %rcx
  2074d2: 49 09 ce                     	orq	%rcx, %r14
  2074d5: b9 38 00 00 00               	movl	$56, %ecx
  2074da: 84 c0                        	testb	%al, %al
  2074dc: 79 4a                        	jns	0x207528 <dwarf.parseFormValue__anon_5348+0x2c8>
  2074de: 49 8b 34 24                  	movq	(%r12), %rsi
  2074e2: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  2074e7: 48 8d 54 24 0f               	leaq	15(%rsp), %rdx
  2074ec: b9 01 00 00 00               	movl	$1, %ecx
  2074f1: c6 44 24 0f aa               	movb	$-86, 15(%rsp)
  2074f6: e8 85 1d 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2074fb: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  207501: 4d 89 fd                     	movq	%r15, %r13
  207504: 0f 84 01 1c 00 00            	je	0x20910b <dwarf.parseFormValue__anon_5348+0x1eab>
  20750a: 0f b6 44 24 0f               	movzbl	15(%rsp), %eax
  20750f: 89 c1                        	movl	%eax, %ecx
  207511: 83 e1 7f                     	andl	$127, %ecx
  207514: 48 c1 e1 38                  	shlq	$56, %rcx
  207518: 49 09 ce                     	orq	%rcx, %r14
  20751b: b9 3f 00 00 00               	movl	$63, %ecx
  207520: 84 c0                        	testb	%al, %al
  207522: 0f 88 7c 1b 00 00            	js	0x2090a4 <dwarf.parseFormValue__anon_5348+0x1e44>
  207528: a8 40                        	testb	$64, %al
  20752a: 0f 84 de 16 00 00            	je	0x208c0e <dwarf.parseFormValue__anon_5348+0x19ae>
  207530: 48 c7 c0 ff ff ff ff         	movq	$-1, %rax
  207537: c4 e2 f1 f7 c0               	shlxq	%rcx, %rax, %rax
  20753c: 49 09 c6                     	orq	%rax, %r14
  20753f: e9 ca 16 00 00               	jmp	0x208c0e <dwarf.parseFormValue__anon_5348+0x19ae>
  207544: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  20754a: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  207554: 45 31 e4                     	xorl	%r12d, %r12d
  207557: 4c 8d 74 24 20               	leaq	32(%rsp), %r14
  20755c: 4c 8b 39                     	movq	(%rcx), %r15
  20755f: 48 89 44 24 10               	movq	%rax, 16(%rsp)
  207564: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
  207570: b9 08 00 00 00               	movl	$8, %ecx
  207575: 4a 8d 54 24 10               	leaq	16(%rsp,%r12), %rdx
  20757a: 4c 89 f7                     	movq	%r14, %rdi
  20757d: 4c 89 fe                     	movq	%r15, %rsi
  207580: 4c 29 e1                     	subq	%r12, %rcx
  207583: e8 f8 1c 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  207588: 48 8b 44 24 20               	movq	32(%rsp), %rax
  20758d: 48 85 c0                     	testq	%rax, %rax
  207590: 0f 84 92 18 00 00            	je	0x208e28 <dwarf.parseFormValue__anon_5348+0x1bc8>
  207596: 49 01 c4                     	addq	%rax, %r12
  207599: 0f 82 f4 1a 00 00            	jb	0x209093 <dwarf.parseFormValue__anon_5348+0x1e33>
  20759f: 49 83 fc 08                  	cmpq	$8, %r12
  2075a3: 72 cb                        	jb	0x207570 <dwarf.parseFormValue__anon_5348+0x310>
  2075a5: 48 8b 44 24 10               	movq	16(%rsp), %rax
  2075aa: 40 f6 c5 01                  	testb	$1, %bpl
  2075ae: 48 89 c1                     	movq	%rax, %rcx
  2075b1: 48 0f c9                     	bswapq	%rcx
  2075b4: 48 0f 45 c8                  	cmovneq	%rax, %rcx
  2075b8: 48 89 0b                     	movq	%rcx, (%rbx)
  2075bb: c6 43 10 00                  	movb	$0, 16(%rbx)
  2075bf: 66 83 7b 18 00               	cmpw	$0, 24(%rbx)
  2075c4: 0f 84 34 1c 00 00            	je	0x2091fe <dwarf.parseFormValue__anon_5348+0x1f9e>
  2075ca: e9 68 1b 00 00               	jmp	0x209137 <dwarf.parseFormValue__anon_5348+0x1ed7>
  2075cf: 4c 89 6c 24 68               	movq	%r13, 104(%rsp)
  2075d4: 4c 8b 29                     	movq	(%rcx), %r13
  2075d7: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  2075e1: 45 31 ff                     	xorl	%r15d, %r15d
  2075e4: 4c 8d 74 24 20               	leaq	32(%rsp), %r14
  2075e9: 48 89 4c 24 60               	movq	%rcx, 96(%rsp)
  2075ee: 48 89 44 24 10               	movq	%rax, 16(%rsp)
  2075f3: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
  207600: b9 02 00 00 00               	movl	$2, %ecx
  207605: 4a 8d 54 3c 10               	leaq	16(%rsp,%r15), %rdx
  20760a: 4c 89 f7                     	movq	%r14, %rdi
  20760d: 4c 89 ee                     	movq	%r13, %rsi
  207610: 4c 29 f9                     	subq	%r15, %rcx
  207613: e8 68 1c 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  207618: 48 8b 44 24 20               	movq	32(%rsp), %rax
  20761d: 48 85 c0                     	testq	%rax, %rax
  207620: 0f 84 35 18 00 00            	je	0x208e5b <dwarf.parseFormValue__anon_5348+0x1bfb>
  207626: 49 01 c7                     	addq	%rax, %r15
  207629: 0f 82 64 1a 00 00            	jb	0x209093 <dwarf.parseFormValue__anon_5348+0x1e33>
  20762f: 49 83 ff 02                  	cmpq	$2, %r15
  207633: 72 cb                        	jb	0x207600 <dwarf.parseFormValue__anon_5348+0x3a0>
  207635: 0f b6 44 24 11               	movzbl	17(%rsp), %eax
  20763a: 44 0f b6 44 24 10            	movzbl	16(%rsp), %r8d
  207640: 4c 8b 6c 24 68               	movq	104(%rsp), %r13
  207645: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20764a: 4c 89 e2                     	movq	%r12, %rdx
  20764d: 48 89 c1                     	movq	%rax, %rcx
  207650: 4c 89 ee                     	movq	%r13, %rsi
  207653: 48 c1 e1 08                  	shlq	$8, %rcx
  207657: 4c 09 c1                     	orq	%r8, %rcx
  20765a: 49 c1 e0 08                  	shlq	$8, %r8
  20765e: 49 09 c0                     	orq	%rax, %r8
  207661: 40 f6 c5 01                  	testb	$1, %bpl
  207665: 4c 0f 45 c1                  	cmovneq	%rcx, %r8
  207669: 48 8b 4c 24 60               	movq	96(%rsp), %rcx
  20766e: e9 82 05 00 00               	jmp	0x207bf5 <dwarf.parseFormValue__anon_5348+0x995>
  207673: 4c 89 6c 24 68               	movq	%r13, 104(%rsp)
  207678: 4c 8b 29                     	movq	(%rcx), %r13
  20767b: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  207685: 45 31 ff                     	xorl	%r15d, %r15d
  207688: 4c 8d 74 24 20               	leaq	32(%rsp), %r14
  20768d: 48 89 4c 24 60               	movq	%rcx, 96(%rsp)
  207692: 48 89 44 24 10               	movq	%rax, 16(%rsp)
  207697: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
  2076a0: b9 04 00 00 00               	movl	$4, %ecx
  2076a5: 4a 8d 54 3c 10               	leaq	16(%rsp,%r15), %rdx
  2076aa: 4c 89 f7                     	movq	%r14, %rdi
  2076ad: 4c 89 ee                     	movq	%r13, %rsi
  2076b0: 4c 29 f9                     	subq	%r15, %rcx
  2076b3: e8 c8 1b 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2076b8: 48 8b 44 24 20               	movq	32(%rsp), %rax
  2076bd: 48 85 c0                     	testq	%rax, %rax
  2076c0: 0f 84 bb 17 00 00            	je	0x208e81 <dwarf.parseFormValue__anon_5348+0x1c21>
  2076c6: 49 01 c7                     	addq	%rax, %r15
  2076c9: 0f 82 c4 19 00 00            	jb	0x209093 <dwarf.parseFormValue__anon_5348+0x1e33>
  2076cf: 49 83 ff 04                  	cmpq	$4, %r15
  2076d3: 72 cb                        	jb	0x2076a0 <dwarf.parseFormValue__anon_5348+0x440>
  2076d5: 0f b6 4c 24 10               	movzbl	16(%rsp), %ecx
  2076da: 44 0f b6 44 24 11            	movzbl	17(%rsp), %r8d
  2076e0: 0f b6 44 24 13               	movzbl	19(%rsp), %eax
  2076e5: 40 f6 c5 01                  	testb	$1, %bpl
  2076e9: 0f 84 11 16 00 00            	je	0x208d00 <dwarf.parseFormValue__anon_5348+0x1aa0>
  2076ef: 0f b6 54 24 12               	movzbl	18(%rsp), %edx
  2076f4: 49 c1 e0 08                  	shlq	$8, %r8
  2076f8: 48 c1 e0 18                  	shlq	$24, %rax
  2076fc: 4c 09 c0                     	orq	%r8, %rax
  2076ff: 48 c1 e2 10                  	shlq	$16, %rdx
  207703: 48 09 d0                     	orq	%rdx, %rax
  207706: 48 09 c8                     	orq	%rcx, %rax
  207709: 49 89 c0                     	movq	%rax, %r8
  20770c: e9 09 16 00 00               	jmp	0x208d1a <dwarf.parseFormValue__anon_5348+0x1aba>
  207711: c6 44 24 48 00               	movb	$0, 72(%rsp)
  207716: 45 31 f6                     	xorl	%r14d, %r14d
  207719: 4c 8d 64 24 20               	leaq	32(%rsp), %r12
  20771e: 4c 8b 39                     	movq	(%rcx), %r15
  207721: 66 c7 44 24 10 aa aa         	movw	$43690, 16(%rsp)        # imm = 0xAAAA
  207728: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
  207730: b9 02 00 00 00               	movl	$2, %ecx
  207735: 4a 8d 54 34 10               	leaq	16(%rsp,%r14), %rdx
  20773a: 4c 89 e7                     	movq	%r12, %rdi
  20773d: 4c 89 fe                     	movq	%r15, %rsi
  207740: 4c 29 f1                     	subq	%r14, %rcx
  207743: e8 38 1b 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  207748: 48 8b 44 24 20               	movq	32(%rsp), %rax
  20774d: 48 85 c0                     	testq	%rax, %rax
  207750: 0f 84 51 17 00 00            	je	0x208ea7 <dwarf.parseFormValue__anon_5348+0x1c47>
  207756: 49 01 c6                     	addq	%rax, %r14
  207759: 0f 82 34 19 00 00            	jb	0x209093 <dwarf.parseFormValue__anon_5348+0x1e33>
  20775f: 49 83 fe 02                  	cmpq	$2, %r14
  207763: 72 cb                        	jb	0x207730 <dwarf.parseFormValue__anon_5348+0x4d0>
  207765: 0f b7 44 24 10               	movzwl	16(%rsp), %eax
  20776a: 89 c1                        	movl	%eax, %ecx
  20776c: 66 c1 c1 08                  	rolw	$8, %cx
  207770: 40 f6 c5 01                  	testb	$1, %bpl
  207774: 0f 45 c8                     	cmovnel	%eax, %ecx
  207777: 31 c0                        	xorl	%eax, %eax
  207779: 0f b7 c9                     	movzwl	%cx, %ecx
  20777c: 48 89 0b                     	movq	%rcx, (%rbx)
  20777f: 0f b6 4c 24 48               	movzbl	72(%rsp), %ecx
  207784: e9 d3 04 00 00               	jmp	0x207c5c <dwarf.parseFormValue__anon_5348+0x9fc>
  207789: c6 44 24 50 00               	movb	$0, 80(%rsp)
  20778e: 45 31 f6                     	xorl	%r14d, %r14d
  207791: 4c 8d 64 24 20               	leaq	32(%rsp), %r12
  207796: 4c 8b 39                     	movq	(%rcx), %r15
  207799: c7 44 24 10 aa aa aa aa      	movl	$2863311530, 16(%rsp)   # imm = 0xAAAAAAAA
  2077a1: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
  2077b0: b9 04 00 00 00               	movl	$4, %ecx
  2077b5: 4a 8d 54 34 10               	leaq	16(%rsp,%r14), %rdx
  2077ba: 4c 89 e7                     	movq	%r12, %rdi
  2077bd: 4c 89 fe                     	movq	%r15, %rsi
  2077c0: 4c 29 f1                     	subq	%r14, %rcx
  2077c3: e8 b8 1a 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2077c8: 48 8b 44 24 20               	movq	32(%rsp), %rax
  2077cd: 48 85 c0                     	testq	%rax, %rax
  2077d0: 0f 84 fa 16 00 00            	je	0x208ed0 <dwarf.parseFormValue__anon_5348+0x1c70>
  2077d6: 49 01 c6                     	addq	%rax, %r14
  2077d9: 0f 82 b4 18 00 00            	jb	0x209093 <dwarf.parseFormValue__anon_5348+0x1e33>
  2077df: 49 83 fe 04                  	cmpq	$4, %r14
  2077e3: 72 cb                        	jb	0x2077b0 <dwarf.parseFormValue__anon_5348+0x550>
  2077e5: 8b 44 24 10                  	movl	16(%rsp), %eax
  2077e9: 40 f6 c5 01                  	testb	$1, %bpl
  2077ed: 89 c1                        	movl	%eax, %ecx
  2077ef: 0f c9                        	bswapl	%ecx
  2077f1: 0f 45 c8                     	cmovnel	%eax, %ecx
  2077f4: 31 c0                        	xorl	%eax, %eax
  2077f6: 48 89 0b                     	movq	%rcx, (%rbx)
  2077f9: 0f b6 4c 24 50               	movzbl	80(%rsp), %ecx
  2077fe: e9 59 04 00 00               	jmp	0x207c5c <dwarf.parseFormValue__anon_5348+0x9fc>
  207803: c6 44 24 58 00               	movb	$0, 88(%rsp)
  207808: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  207812: 45 31 f6                     	xorl	%r14d, %r14d
  207815: 4c 8d 64 24 20               	leaq	32(%rsp), %r12
  20781a: 4c 8b 39                     	movq	(%rcx), %r15
  20781d: 48 89 44 24 10               	movq	%rax, 16(%rsp)
  207822: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)
  207830: b9 08 00 00 00               	movl	$8, %ecx
  207835: 4a 8d 54 34 10               	leaq	16(%rsp,%r14), %rdx
  20783a: 4c 89 e7                     	movq	%r12, %rdi
  20783d: 4c 89 fe                     	movq	%r15, %rsi
  207840: 4c 29 f1                     	subq	%r14, %rcx
  207843: e8 38 1a 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  207848: 48 8b 44 24 20               	movq	32(%rsp), %rax
  20784d: 48 85 c0                     	testq	%rax, %rax
  207850: 0f 84 a3 16 00 00            	je	0x208ef9 <dwarf.parseFormValue__anon_5348+0x1c99>
  207856: 49 01 c6                     	addq	%rax, %r14
  207859: 0f 82 34 18 00 00            	jb	0x209093 <dwarf.parseFormValue__anon_5348+0x1e33>
  20785f: 49 83 fe 08                  	cmpq	$8, %r14
  207863: 72 cb                        	jb	0x207830 <dwarf.parseFormValue__anon_5348+0x5d0>
  207865: 48 8b 44 24 10               	movq	16(%rsp), %rax
  20786a: 40 f6 c5 01                  	testb	$1, %bpl
  20786e: 48 89 c1                     	movq	%rax, %rcx
  207871: 48 0f c9                     	bswapq	%rcx
  207874: 48 0f 45 c8                  	cmovneq	%rax, %rcx
  207878: 31 c0                        	xorl	%eax, %eax
  20787a: 48 89 0b                     	movq	%rcx, (%rbx)
  20787d: 0f b6 4c 24 58               	movzbl	88(%rsp), %ecx
  207882: e9 d5 03 00 00               	jmp	0x207c5c <dwarf.parseFormValue__anon_5348+0x9fc>
  207887: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  20788d: 48 8d bc 24 d0 00 00 00      	leaq	208(%rsp), %rdi
  207895: 4c 89 ee                     	movq	%r13, %rsi
  207898: 48 8b 11                     	movq	(%rcx), %rdx
  20789b: 4c 89 e1                     	movq	%r12, %rcx
  20789e: e8 1d 52 00 00               	callq	0x20cac0 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readUntilDelimiterAlloc>
  2078a3: 0f b7 ac 24 e0 00 00 00      	movzwl	224(%rsp), %ebp
  2078ab: 66 85 ed                     	testw	%bp, %bp
  2078ae: 0f 85 3e 19 00 00            	jne	0x2091f2 <dwarf.parseFormValue__anon_5348+0x1f92>
  2078b4: c5 f8 10 84 24 d0 00 00 00   	vmovups	208(%rsp), %xmm0
  2078bd: c5 f8 11 03                  	vmovups	%xmm0, (%rbx)
  2078c1: c6 43 10 09                  	movb	$9, 16(%rbx)
  2078c5: 66 83 7b 18 00               	cmpw	$0, 24(%rbx)
  2078ca: 0f 84 2e 19 00 00            	je	0x2091fe <dwarf.parseFormValue__anon_5348+0x1f9e>
  2078d0: e9 62 18 00 00               	jmp	0x209137 <dwarf.parseFormValue__anon_5348+0x1ed7>
  2078d5: 48 8b 31                     	movq	(%rcx), %rsi
  2078d8: 48 89 cd                     	movq	%rcx, %rbp
  2078db: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  2078e0: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  2078e5: b9 01 00 00 00               	movl	$1, %ecx
  2078ea: 4d 89 ef                     	movq	%r13, %r15
  2078ed: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  2078f2: e8 89 19 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2078f7: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  2078fd: 0f 84 6a 14 00 00            	je	0x208d6d <dwarf.parseFormValue__anon_5348+0x1b0d>
  207903: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  207908: 41 89 c5                     	movl	%eax, %r13d
  20790b: 41 83 e5 7f                  	andl	$127, %r13d
  20790f: 84 c0                        	testb	%al, %al
  207911: 0f 89 5b 02 00 00            	jns	0x207b72 <dwarf.parseFormValue__anon_5348+0x912>
  207917: 48 8b 75 00                  	movq	(%rbp), %rsi
  20791b: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  207920: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  207925: b9 01 00 00 00               	movl	$1, %ecx
  20792a: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20792f: e8 4c 19 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  207934: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20793a: 0f 84 2d 14 00 00            	je	0x208d6d <dwarf.parseFormValue__anon_5348+0x1b0d>
  207940: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  207945: 89 c1                        	movl	%eax, %ecx
  207947: 83 e1 7f                     	andl	$127, %ecx
  20794a: 48 c1 e1 07                  	shlq	$7, %rcx
  20794e: 49 09 cd                     	orq	%rcx, %r13
  207951: 84 c0                        	testb	%al, %al
  207953: 0f 89 19 02 00 00            	jns	0x207b72 <dwarf.parseFormValue__anon_5348+0x912>
  207959: 48 8b 75 00                  	movq	(%rbp), %rsi
  20795d: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  207962: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  207967: b9 01 00 00 00               	movl	$1, %ecx
  20796c: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  207971: e8 0a 19 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  207976: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20797c: 0f 84 eb 13 00 00            	je	0x208d6d <dwarf.parseFormValue__anon_5348+0x1b0d>
  207982: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  207987: 89 c1                        	movl	%eax, %ecx
  207989: 83 e1 7f                     	andl	$127, %ecx
  20798c: 48 c1 e1 0e                  	shlq	$14, %rcx
  207990: 49 09 cd                     	orq	%rcx, %r13
  207993: 84 c0                        	testb	%al, %al
  207995: 0f 89 d7 01 00 00            	jns	0x207b72 <dwarf.parseFormValue__anon_5348+0x912>
  20799b: 48 8b 75 00                  	movq	(%rbp), %rsi
  20799f: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  2079a4: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  2079a9: b9 01 00 00 00               	movl	$1, %ecx
  2079ae: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  2079b3: e8 c8 18 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2079b8: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  2079be: 0f 84 a9 13 00 00            	je	0x208d6d <dwarf.parseFormValue__anon_5348+0x1b0d>
  2079c4: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  2079c9: 89 c1                        	movl	%eax, %ecx
  2079cb: 83 e1 7f                     	andl	$127, %ecx
  2079ce: 48 c1 e1 15                  	shlq	$21, %rcx
  2079d2: 49 09 cd                     	orq	%rcx, %r13
  2079d5: 84 c0                        	testb	%al, %al
  2079d7: 0f 89 95 01 00 00            	jns	0x207b72 <dwarf.parseFormValue__anon_5348+0x912>
  2079dd: 48 8b 75 00                  	movq	(%rbp), %rsi
  2079e1: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  2079e6: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  2079eb: b9 01 00 00 00               	movl	$1, %ecx
  2079f0: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  2079f5: e8 86 18 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2079fa: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  207a00: 0f 84 67 13 00 00            	je	0x208d6d <dwarf.parseFormValue__anon_5348+0x1b0d>
  207a06: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  207a0b: 89 c1                        	movl	%eax, %ecx
  207a0d: 83 e1 7f                     	andl	$127, %ecx
  207a10: 48 c1 e1 1c                  	shlq	$28, %rcx
  207a14: 49 09 cd                     	orq	%rcx, %r13
  207a17: 84 c0                        	testb	%al, %al
  207a19: 0f 89 53 01 00 00            	jns	0x207b72 <dwarf.parseFormValue__anon_5348+0x912>
  207a1f: 48 8b 75 00                  	movq	(%rbp), %rsi
  207a23: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  207a28: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  207a2d: b9 01 00 00 00               	movl	$1, %ecx
  207a32: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  207a37: e8 44 18 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  207a3c: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  207a42: 0f 84 25 13 00 00            	je	0x208d6d <dwarf.parseFormValue__anon_5348+0x1b0d>
  207a48: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  207a4d: 89 c1                        	movl	%eax, %ecx
  207a4f: 83 e1 7f                     	andl	$127, %ecx
  207a52: 48 c1 e1 23                  	shlq	$35, %rcx
  207a56: 49 09 cd                     	orq	%rcx, %r13
  207a59: 84 c0                        	testb	%al, %al
  207a5b: 0f 89 11 01 00 00            	jns	0x207b72 <dwarf.parseFormValue__anon_5348+0x912>
  207a61: 48 8b 75 00                  	movq	(%rbp), %rsi
  207a65: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  207a6a: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  207a6f: b9 01 00 00 00               	movl	$1, %ecx
  207a74: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  207a79: e8 02 18 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  207a7e: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  207a84: 0f 84 e3 12 00 00            	je	0x208d6d <dwarf.parseFormValue__anon_5348+0x1b0d>
  207a8a: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  207a8f: 89 c1                        	movl	%eax, %ecx
  207a91: 83 e1 7f                     	andl	$127, %ecx
  207a94: 48 c1 e1 2a                  	shlq	$42, %rcx
  207a98: 49 09 cd                     	orq	%rcx, %r13
  207a9b: 84 c0                        	testb	%al, %al
  207a9d: 0f 89 cf 00 00 00            	jns	0x207b72 <dwarf.parseFormValue__anon_5348+0x912>
  207aa3: 48 8b 75 00                  	movq	(%rbp), %rsi
  207aa7: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  207aac: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  207ab1: b9 01 00 00 00               	movl	$1, %ecx
  207ab6: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  207abb: e8 c0 17 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  207ac0: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  207ac6: 0f 84 a1 12 00 00            	je	0x208d6d <dwarf.parseFormValue__anon_5348+0x1b0d>
  207acc: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  207ad1: 89 c1                        	movl	%eax, %ecx
  207ad3: 83 e1 7f                     	andl	$127, %ecx
  207ad6: 48 c1 e1 31                  	shlq	$49, %rcx
  207ada: 49 09 cd                     	orq	%rcx, %r13
  207add: 84 c0                        	testb	%al, %al
  207adf: 0f 89 8d 00 00 00            	jns	0x207b72 <dwarf.parseFormValue__anon_5348+0x912>
  207ae5: 48 8b 75 00                  	movq	(%rbp), %rsi
  207ae9: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  207aee: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  207af3: b9 01 00 00 00               	movl	$1, %ecx
  207af8: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  207afd: e8 7e 17 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  207b02: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  207b08: 0f 84 5f 12 00 00            	je	0x208d6d <dwarf.parseFormValue__anon_5348+0x1b0d>
  207b0e: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  207b13: 89 c1                        	movl	%eax, %ecx
  207b15: 83 e1 7f                     	andl	$127, %ecx
  207b18: 48 c1 e1 38                  	shlq	$56, %rcx
  207b1c: 49 09 cd                     	orq	%rcx, %r13
  207b1f: 84 c0                        	testb	%al, %al
  207b21: 79 4f                        	jns	0x207b72 <dwarf.parseFormValue__anon_5348+0x912>
  207b23: 48 8b 75 00                  	movq	(%rbp), %rsi
  207b27: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  207b2c: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  207b31: b9 01 00 00 00               	movl	$1, %ecx
  207b36: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  207b3b: e8 40 17 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  207b40: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  207b46: 0f 84 21 12 00 00            	je	0x208d6d <dwarf.parseFormValue__anon_5348+0x1b0d>
  207b4c: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  207b51: a8 7e                        	testb	$126, %al
  207b53: 0f 85 da 16 00 00            	jne	0x209233 <dwarf.parseFormValue__anon_5348+0x1fd3>
  207b59: 4d 89 fe                     	movq	%r15, %r14
  207b5c: 66 c7 44 24 60 29 00         	movw	$41, 96(%rsp)
  207b63: 84 c0                        	testb	%al, %al
  207b65: 0f 88 14 12 00 00            	js	0x208d7f <dwarf.parseFormValue__anon_5348+0x1b1f>
  207b6b: 48 c1 e0 3f                  	shlq	$63, %rax
  207b6f: 49 09 c5                     	orq	%rax, %r13
  207b72: 48 89 e9                     	movq	%rbp, %rcx
  207b75: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  207b7a: 4c 89 fe                     	movq	%r15, %rsi
  207b7d: 4c 89 e2                     	movq	%r12, %rdx
  207b80: 4d 89 e8                     	movq	%r13, %r8
  207b83: 4d 89 fe                     	movq	%r15, %r14
  207b86: e8 15 1a 01 00               	callq	0x2195a0 <dwarf.readAllocBytes__anon_6387>
  207b8b: 0f b7 6c 24 30               	movzwl	48(%rsp), %ebp
  207b90: 66 85 ed                     	testw	%bp, %bp
  207b93: 0f 85 ff 13 00 00            	jne	0x208f98 <dwarf.parseFormValue__anon_5348+0x1d38>
  207b99: c5 f8 10 44 24 20            	vmovups	32(%rsp), %xmm0
  207b9f: c5 f8 11 03                  	vmovups	%xmm0, (%rbx)
  207ba3: c6 43 10 02                  	movb	$2, 16(%rbx)
  207ba7: e9 71 10 00 00               	jmp	0x208c1d <dwarf.parseFormValue__anon_5348+0x19bd>
  207bac: 48 8b 31                     	movq	(%rcx), %rsi
  207baf: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  207bb9: 49 89 ce                     	movq	%rcx, %r14
  207bbc: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  207bc1: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  207bc6: b9 01 00 00 00               	movl	$1, %ecx
  207bcb: 48 89 44 24 10               	movq	%rax, 16(%rsp)
  207bd0: e8 ab 16 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  207bd5: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  207bdb: 0f 84 7f 12 00 00            	je	0x208e60 <dwarf.parseFormValue__anon_5348+0x1c00>
  207be1: 44 0f b6 44 24 10            	movzbl	16(%rsp), %r8d
  207be7: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  207bec: 4c 89 ee                     	movq	%r13, %rsi
  207bef: 4c 89 e2                     	movq	%r12, %rdx
  207bf2: 4c 89 f1                     	movq	%r14, %rcx
  207bf5: e8 a6 19 01 00               	callq	0x2195a0 <dwarf.readAllocBytes__anon_6387>
  207bfa: 0f b7 6c 24 30               	movzwl	48(%rsp), %ebp
  207bff: 66 85 ed                     	testw	%bp, %bp
  207c02: 0f 85 e7 11 00 00            	jne	0x208def <dwarf.parseFormValue__anon_5348+0x1b8f>
  207c08: 48 8b 4c 24 20               	movq	32(%rsp), %rcx
  207c0d: 48 8b 44 24 28               	movq	40(%rsp), %rax
  207c12: 31 ed                        	xorl	%ebp, %ebp
  207c14: 48 89 0b                     	movq	%rcx, (%rbx)
  207c17: 48 89 43 08                  	movq	%rax, 8(%rbx)
  207c1b: e9 35 11 00 00               	jmp	0x208d55 <dwarf.parseFormValue__anon_5348+0x1af5>
  207c20: c6 44 24 40 00               	movb	$0, 64(%rsp)
  207c25: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  207c2a: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  207c2f: 48 8b 31                     	movq	(%rcx), %rsi
  207c32: b9 01 00 00 00               	movl	$1, %ecx
  207c37: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  207c3c: e8 3f 16 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  207c41: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  207c47: 0f 84 ee 12 00 00            	je	0x208f3b <dwarf.parseFormValue__anon_5348+0x1cdb>
  207c4d: 0f b6 4c 24 10               	movzbl	16(%rsp), %ecx
  207c52: 31 c0                        	xorl	%eax, %eax
  207c54: 48 89 0b                     	movq	%rcx, (%rbx)
  207c57: 0f b6 4c 24 40               	movzbl	64(%rsp), %ecx
  207c5c: 88 4b 08                     	movb	%cl, 8(%rbx)
  207c5f: c6 43 10 03                  	movb	$3, 16(%rbx)
  207c63: 66 89 43 18                  	movw	%ax, 24(%rbx)
  207c67: 66 83 7b 18 00               	cmpw	$0, 24(%rbx)
  207c6c: 0f 84 8c 15 00 00            	je	0x2091fe <dwarf.parseFormValue__anon_5348+0x1f9e>
  207c72: e9 c0 14 00 00               	jmp	0x209137 <dwarf.parseFormValue__anon_5348+0x1ed7>
  207c77: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  207c7d: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  207c82: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  207c87: 48 8b 31                     	movq	(%rcx), %rsi
  207c8a: b9 01 00 00 00               	movl	$1, %ecx
  207c8f: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  207c94: e8 e7 15 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  207c99: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  207c9f: 0f 84 9b 11 00 00            	je	0x208e40 <dwarf.parseFormValue__anon_5348+0x1be0>
  207ca5: 80 7c 24 10 00               	cmpb	$0, 16(%rsp)
  207caa: 0f 95 03                     	setne	(%rbx)
  207cad: c6 43 10 05                  	movb	$5, 16(%rbx)
  207cb1: 66 83 7b 18 00               	cmpw	$0, 24(%rbx)
  207cb6: 0f 84 42 15 00 00            	je	0x2091fe <dwarf.parseFormValue__anon_5348+0x1f9e>
  207cbc: e9 76 14 00 00               	jmp	0x209137 <dwarf.parseFormValue__anon_5348+0x1ed7>
  207cc1: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  207cc7: 48 8b 11                     	movq	(%rcx), %rdx
  207cca: 40 0f b6 cd                  	movzbl	%bpl, %ecx
  207cce: 41 f6 c6 01                  	testb	$1, %r14b
  207cd2: 0f 84 50 0f 00 00            	je	0x208c28 <dwarf.parseFormValue__anon_5348+0x19c8>
  207cd8: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  207cdd: 4c 89 ee                     	movq	%r13, %rsi
  207ce0: e8 4b ca ff ff               	callq	0x204730 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readInt__anon_5249>
  207ce5: 0f b7 6c 24 28               	movzwl	40(%rsp), %ebp
  207cea: 66 85 ed                     	testw	%bp, %bp
  207ced: 0f 85 f7 14 00 00            	jne	0x2091ea <dwarf.parseFormValue__anon_5348+0x1f8a>
  207cf3: 48 8b 44 24 20               	movq	32(%rsp), %rax
  207cf8: e9 4a 0f 00 00               	jmp	0x208c47 <dwarf.parseFormValue__anon_5348+0x19e7>
  207cfd: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  207d03: 48 8b 11                     	movq	(%rcx), %rdx
  207d06: 40 0f b6 cd                  	movzbl	%bpl, %ecx
  207d0a: 41 f6 c6 01                  	testb	$1, %r14b
  207d0e: 0f 84 4a 0f 00 00            	je	0x208c5e <dwarf.parseFormValue__anon_5348+0x19fe>
  207d14: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  207d19: 4c 89 ee                     	movq	%r13, %rsi
  207d1c: e8 0f ca ff ff               	callq	0x204730 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readInt__anon_5249>
  207d21: 0f b7 6c 24 28               	movzwl	40(%rsp), %ebp
  207d26: 66 85 ed                     	testw	%bp, %bp
  207d29: 0f 85 bb 14 00 00            	jne	0x2091ea <dwarf.parseFormValue__anon_5348+0x1f8a>
  207d2f: 48 8b 44 24 20               	movq	32(%rsp), %rax
  207d34: e9 44 0f 00 00               	jmp	0x208c7d <dwarf.parseFormValue__anon_5348+0x1a1d>
  207d39: 48 8b 31                     	movq	(%rcx), %rsi
  207d3c: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  207d41: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  207d46: b9 01 00 00 00               	movl	$1, %ecx
  207d4b: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  207d50: e8 2b 15 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  207d55: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  207d5b: 0f 84 65 10 00 00            	je	0x208dc6 <dwarf.parseFormValue__anon_5348+0x1b66>
  207d61: 0f b6 4c 24 10               	movzbl	16(%rsp), %ecx
  207d66: 31 c0                        	xorl	%eax, %eax
  207d68: eb 62                        	jmp	0x207dcc <dwarf.parseFormValue__anon_5348+0xb6c>
  207d6a: 4c 8b 39                     	movq	(%rcx), %r15
  207d6d: 45 31 f6                     	xorl	%r14d, %r14d
  207d70: 4c 8d 64 24 20               	leaq	32(%rsp), %r12
  207d75: 66 c7 44 24 10 aa aa         	movw	$43690, 16(%rsp)        # imm = 0xAAAA
  207d7c: 0f 1f 40 00                  	nopl	(%rax)
  207d80: b9 02 00 00 00               	movl	$2, %ecx
  207d85: 4a 8d 54 34 10               	leaq	16(%rsp,%r14), %rdx
  207d8a: 4c 89 e7                     	movq	%r12, %rdi
  207d8d: 4c 89 fe                     	movq	%r15, %rsi
  207d90: 4c 29 f1                     	subq	%r14, %rcx
  207d93: e8 e8 14 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  207d98: 48 8b 44 24 20               	movq	32(%rsp), %rax
  207d9d: 48 85 c0                     	testq	%rax, %rax
  207da0: 0f 84 20 10 00 00            	je	0x208dc6 <dwarf.parseFormValue__anon_5348+0x1b66>
  207da6: 49 01 c6                     	addq	%rax, %r14
  207da9: 0f 82 e4 12 00 00            	jb	0x209093 <dwarf.parseFormValue__anon_5348+0x1e33>
  207daf: 49 83 fe 02                  	cmpq	$2, %r14
  207db3: 72 cb                        	jb	0x207d80 <dwarf.parseFormValue__anon_5348+0xb20>
  207db5: 0f b7 44 24 10               	movzwl	16(%rsp), %eax
  207dba: 89 c1                        	movl	%eax, %ecx
  207dbc: 66 c1 c1 08                  	rolw	$8, %cx
  207dc0: 40 f6 c5 01                  	testb	$1, %bpl
  207dc4: 0f 45 c8                     	cmovnel	%eax, %ecx
  207dc7: 31 c0                        	xorl	%eax, %eax
  207dc9: 0f b7 c9                     	movzwl	%cx, %ecx
  207dcc: 48 89 0b                     	movq	%rcx, (%rbx)
  207dcf: c6 43 10 07                  	movb	$7, 16(%rbx)
  207dd3: 66 89 43 18                  	movw	%ax, 24(%rbx)
  207dd7: 66 83 7b 18 00               	cmpw	$0, 24(%rbx)
  207ddc: 0f 84 1c 14 00 00            	je	0x2091fe <dwarf.parseFormValue__anon_5348+0x1f9e>
  207de2: e9 50 13 00 00               	jmp	0x209137 <dwarf.parseFormValue__anon_5348+0x1ed7>
  207de7: 4c 8b 39                     	movq	(%rcx), %r15
  207dea: 45 31 f6                     	xorl	%r14d, %r14d
  207ded: 4c 8d 64 24 20               	leaq	32(%rsp), %r12
  207df2: c7 44 24 10 aa aa aa aa      	movl	$2863311530, 16(%rsp)   # imm = 0xAAAAAAAA
  207dfa: 66 0f 1f 44 00 00            	nopw	(%rax,%rax)
  207e00: b9 04 00 00 00               	movl	$4, %ecx
  207e05: 4a 8d 54 34 10               	leaq	16(%rsp,%r14), %rdx
  207e0a: 4c 89 e7                     	movq	%r12, %rdi
  207e0d: 4c 89 fe                     	movq	%r15, %rsi
  207e10: 4c 29 f1                     	subq	%r14, %rcx
  207e13: e8 68 14 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  207e18: 48 8b 44 24 20               	movq	32(%rsp), %rax
  207e1d: 48 85 c0                     	testq	%rax, %rax
  207e20: 0f 84 77 0f 00 00            	je	0x208d9d <dwarf.parseFormValue__anon_5348+0x1b3d>
  207e26: 49 01 c6                     	addq	%rax, %r14
  207e29: 0f 82 64 12 00 00            	jb	0x209093 <dwarf.parseFormValue__anon_5348+0x1e33>
  207e2f: 49 83 fe 04                  	cmpq	$4, %r14
  207e33: 72 cb                        	jb	0x207e00 <dwarf.parseFormValue__anon_5348+0xba0>
  207e35: 8b 4c 24 10                  	movl	16(%rsp), %ecx
  207e39: 40 f6 c5 01                  	testb	$1, %bpl
  207e3d: 89 c8                        	movl	%ecx, %eax
  207e3f: 0f c8                        	bswapl	%eax
  207e41: 0f 45 c1                     	cmovnel	%ecx, %eax
  207e44: eb 62                        	jmp	0x207ea8 <dwarf.parseFormValue__anon_5348+0xc48>
  207e46: 4c 8b 39                     	movq	(%rcx), %r15
  207e49: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  207e53: 45 31 f6                     	xorl	%r14d, %r14d
  207e56: 4c 8d 64 24 20               	leaq	32(%rsp), %r12
  207e5b: 48 89 44 24 10               	movq	%rax, 16(%rsp)
  207e60: b9 08 00 00 00               	movl	$8, %ecx
  207e65: 4a 8d 54 34 10               	leaq	16(%rsp,%r14), %rdx
  207e6a: 4c 89 e7                     	movq	%r12, %rdi
  207e6d: 4c 89 fe                     	movq	%r15, %rsi
  207e70: 4c 29 f1                     	subq	%r14, %rcx
  207e73: e8 08 14 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  207e78: 48 8b 44 24 20               	movq	32(%rsp), %rax
  207e7d: 48 85 c0                     	testq	%rax, %rax
  207e80: 0f 84 17 0f 00 00            	je	0x208d9d <dwarf.parseFormValue__anon_5348+0x1b3d>
  207e86: 49 01 c6                     	addq	%rax, %r14
  207e89: 0f 82 04 12 00 00            	jb	0x209093 <dwarf.parseFormValue__anon_5348+0x1e33>
  207e8f: 49 83 fe 08                  	cmpq	$8, %r14
  207e93: 72 cb                        	jb	0x207e60 <dwarf.parseFormValue__anon_5348+0xc00>
  207e95: 48 8b 4c 24 10               	movq	16(%rsp), %rcx
  207e9a: 40 f6 c5 01                  	testb	$1, %bpl
  207e9e: 48 89 c8                     	movq	%rcx, %rax
  207ea1: 48 0f c8                     	bswapq	%rax
  207ea4: 48 0f 45 c1                  	cmovneq	%rcx, %rax
  207ea8: 31 c9                        	xorl	%ecx, %ecx
  207eaa: 48 89 03                     	movq	%rax, (%rbx)
  207ead: c6 43 10 07                  	movb	$7, 16(%rbx)
  207eb1: 66 89 4b 18                  	movw	%cx, 24(%rbx)
  207eb5: 66 83 7b 18 00               	cmpw	$0, 24(%rbx)
  207eba: 0f 84 3e 13 00 00            	je	0x2091fe <dwarf.parseFormValue__anon_5348+0x1f9e>
  207ec0: e9 72 12 00 00               	jmp	0x209137 <dwarf.parseFormValue__anon_5348+0x1ed7>
  207ec5: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  207eca: 4c 89 ee                     	movq	%r13, %rsi
  207ecd: 48 89 ca                     	movq	%rcx, %rdx
  207ed0: e8 6b ed ff ff               	callq	0x206c40 <leb128.readULEB128__anon_5347>
  207ed5: 0f b7 6c 24 28               	movzwl	40(%rsp), %ebp
  207eda: 66 85 ed                     	testw	%bp, %bp
  207edd: 0f 85 81 10 00 00            	jne	0x208f64 <dwarf.parseFormValue__anon_5348+0x1d04>
  207ee3: 48 8b 44 24 20               	movq	32(%rsp), %rax
  207ee8: 48 89 03                     	movq	%rax, (%rbx)
  207eeb: c6 43 10 07                  	movb	$7, 16(%rbx)
  207eef: 66 89 6b 18                  	movw	%bp, 24(%rbx)
  207ef3: 66 83 7b 18 00               	cmpw	$0, 24(%rbx)
  207ef8: 0f 84 00 13 00 00            	je	0x2091fe <dwarf.parseFormValue__anon_5348+0x1f9e>
  207efe: e9 34 12 00 00               	jmp	0x209137 <dwarf.parseFormValue__anon_5348+0x1ed7>
  207f03: 48 8d bc 24 88 00 00 00      	leaq	136(%rsp), %rdi
  207f0b: 4c 89 ee                     	movq	%r13, %rsi
  207f0e: 48 89 ca                     	movq	%rcx, %rdx
  207f11: 48 89 4c 24 60               	movq	%rcx, 96(%rsp)
  207f16: e8 25 ed ff ff               	callq	0x206c40 <leb128.readULEB128__anon_5347>
  207f1b: 44 0f b7 bc 24 90 00 00 00   	movzwl	144(%rsp), %r15d
  207f24: 66 45 85 ff                  	testw	%r15w, %r15w
  207f28: 0f 85 43 10 00 00            	jne	0x208f71 <dwarf.parseFormValue__anon_5348+0x1d11>
  207f2e: 41 0f b6 c6                  	movzbl	%r14b, %eax
  207f32: 4c 8b 84 24 88 00 00 00      	movq	136(%rsp), %r8
  207f3a: 44 0f b6 cd                  	movzbl	%bpl, %r9d
  207f3e: 48 8d bc 24 e8 00 00 00      	leaq	232(%rsp), %rdi
  207f46: 4c 89 ee                     	movq	%r13, %rsi
  207f49: 4c 89 e2                     	movq	%r12, %rdx
  207f4c: 89 04 24                     	movl	%eax, (%rsp)
  207f4f: 48 8b 4c 24 60               	movq	96(%rsp), %rcx
  207f54: e8 07 f3 ff ff               	callq	0x207260 <dwarf.parseFormValue__anon_5348>
  207f59: c5 fc 10 84 24 e8 00 00 00   	vmovups	232(%rsp), %ymm0
  207f62: c5 fc 11 03                  	vmovups	%ymm0, (%rbx)
  207f66: 66 83 7b 18 00               	cmpw	$0, 24(%rbx)
  207f6b: 0f 84 8d 12 00 00            	je	0x2091fe <dwarf.parseFormValue__anon_5348+0x1f9e>
  207f71: e9 c1 11 00 00               	jmp	0x209137 <dwarf.parseFormValue__anon_5348+0x1ed7>
  207f76: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  207f7c: 48 8b 11                     	movq	(%rcx), %rdx
  207f7f: 40 0f b6 cd                  	movzbl	%bpl, %ecx
  207f83: 41 f6 c6 01                  	testb	$1, %r14b
  207f87: 0f 84 07 0d 00 00            	je	0x208c94 <dwarf.parseFormValue__anon_5348+0x1a34>
  207f8d: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  207f92: 4c 89 ee                     	movq	%r13, %rsi
  207f95: e8 96 c7 ff ff               	callq	0x204730 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readInt__anon_5249>
  207f9a: 0f b7 6c 24 28               	movzwl	40(%rsp), %ebp
  207f9f: 66 85 ed                     	testw	%bp, %bp
  207fa2: 0f 85 42 12 00 00            	jne	0x2091ea <dwarf.parseFormValue__anon_5348+0x1f8a>
  207fa8: 48 8b 44 24 20               	movq	32(%rsp), %rax
  207fad: e9 01 0d 00 00               	jmp	0x208cb3 <dwarf.parseFormValue__anon_5348+0x1a53>
  207fb2: 48 8b 31                     	movq	(%rcx), %rsi
  207fb5: 48 89 cd                     	movq	%rcx, %rbp
  207fb8: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  207fbd: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  207fc2: b9 01 00 00 00               	movl	$1, %ecx
  207fc7: 4d 89 ef                     	movq	%r13, %r15
  207fca: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  207fcf: e8 ac 12 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  207fd4: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  207fda: 0f 84 8d 0d 00 00            	je	0x208d6d <dwarf.parseFormValue__anon_5348+0x1b0d>
  207fe0: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  207fe5: 41 89 c5                     	movl	%eax, %r13d
  207fe8: 41 83 e5 7f                  	andl	$127, %r13d
  207fec: 84 c0                        	testb	%al, %al
  207fee: 0f 89 5b 02 00 00            	jns	0x20824f <dwarf.parseFormValue__anon_5348+0xfef>
  207ff4: 48 8b 75 00                  	movq	(%rbp), %rsi
  207ff8: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  207ffd: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  208002: b9 01 00 00 00               	movl	$1, %ecx
  208007: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20800c: e8 6f 12 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  208011: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  208017: 0f 84 50 0d 00 00            	je	0x208d6d <dwarf.parseFormValue__anon_5348+0x1b0d>
  20801d: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  208022: 89 c1                        	movl	%eax, %ecx
  208024: 83 e1 7f                     	andl	$127, %ecx
  208027: 48 c1 e1 07                  	shlq	$7, %rcx
  20802b: 49 09 cd                     	orq	%rcx, %r13
  20802e: 84 c0                        	testb	%al, %al
  208030: 0f 89 19 02 00 00            	jns	0x20824f <dwarf.parseFormValue__anon_5348+0xfef>
  208036: 48 8b 75 00                  	movq	(%rbp), %rsi
  20803a: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20803f: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  208044: b9 01 00 00 00               	movl	$1, %ecx
  208049: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20804e: e8 2d 12 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  208053: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  208059: 0f 84 0e 0d 00 00            	je	0x208d6d <dwarf.parseFormValue__anon_5348+0x1b0d>
  20805f: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  208064: 89 c1                        	movl	%eax, %ecx
  208066: 83 e1 7f                     	andl	$127, %ecx
  208069: 48 c1 e1 0e                  	shlq	$14, %rcx
  20806d: 49 09 cd                     	orq	%rcx, %r13
  208070: 84 c0                        	testb	%al, %al
  208072: 0f 89 d7 01 00 00            	jns	0x20824f <dwarf.parseFormValue__anon_5348+0xfef>
  208078: 48 8b 75 00                  	movq	(%rbp), %rsi
  20807c: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  208081: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  208086: b9 01 00 00 00               	movl	$1, %ecx
  20808b: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  208090: e8 eb 11 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  208095: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20809b: 0f 84 cc 0c 00 00            	je	0x208d6d <dwarf.parseFormValue__anon_5348+0x1b0d>
  2080a1: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  2080a6: 89 c1                        	movl	%eax, %ecx
  2080a8: 83 e1 7f                     	andl	$127, %ecx
  2080ab: 48 c1 e1 15                  	shlq	$21, %rcx
  2080af: 49 09 cd                     	orq	%rcx, %r13
  2080b2: 84 c0                        	testb	%al, %al
  2080b4: 0f 89 95 01 00 00            	jns	0x20824f <dwarf.parseFormValue__anon_5348+0xfef>
  2080ba: 48 8b 75 00                  	movq	(%rbp), %rsi
  2080be: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  2080c3: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  2080c8: b9 01 00 00 00               	movl	$1, %ecx
  2080cd: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  2080d2: e8 a9 11 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2080d7: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  2080dd: 0f 84 8a 0c 00 00            	je	0x208d6d <dwarf.parseFormValue__anon_5348+0x1b0d>
  2080e3: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  2080e8: 89 c1                        	movl	%eax, %ecx
  2080ea: 83 e1 7f                     	andl	$127, %ecx
  2080ed: 48 c1 e1 1c                  	shlq	$28, %rcx
  2080f1: 49 09 cd                     	orq	%rcx, %r13
  2080f4: 84 c0                        	testb	%al, %al
  2080f6: 0f 89 53 01 00 00            	jns	0x20824f <dwarf.parseFormValue__anon_5348+0xfef>
  2080fc: 48 8b 75 00                  	movq	(%rbp), %rsi
  208100: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  208105: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20810a: b9 01 00 00 00               	movl	$1, %ecx
  20810f: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  208114: e8 67 11 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  208119: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20811f: 0f 84 48 0c 00 00            	je	0x208d6d <dwarf.parseFormValue__anon_5348+0x1b0d>
  208125: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20812a: 89 c1                        	movl	%eax, %ecx
  20812c: 83 e1 7f                     	andl	$127, %ecx
  20812f: 48 c1 e1 23                  	shlq	$35, %rcx
  208133: 49 09 cd                     	orq	%rcx, %r13
  208136: 84 c0                        	testb	%al, %al
  208138: 0f 89 11 01 00 00            	jns	0x20824f <dwarf.parseFormValue__anon_5348+0xfef>
  20813e: 48 8b 75 00                  	movq	(%rbp), %rsi
  208142: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  208147: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20814c: b9 01 00 00 00               	movl	$1, %ecx
  208151: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  208156: e8 25 11 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20815b: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  208161: 0f 84 06 0c 00 00            	je	0x208d6d <dwarf.parseFormValue__anon_5348+0x1b0d>
  208167: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20816c: 89 c1                        	movl	%eax, %ecx
  20816e: 83 e1 7f                     	andl	$127, %ecx
  208171: 48 c1 e1 2a                  	shlq	$42, %rcx
  208175: 49 09 cd                     	orq	%rcx, %r13
  208178: 84 c0                        	testb	%al, %al
  20817a: 0f 89 cf 00 00 00            	jns	0x20824f <dwarf.parseFormValue__anon_5348+0xfef>
  208180: 48 8b 75 00                  	movq	(%rbp), %rsi
  208184: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  208189: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20818e: b9 01 00 00 00               	movl	$1, %ecx
  208193: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  208198: e8 e3 10 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20819d: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  2081a3: 0f 84 c4 0b 00 00            	je	0x208d6d <dwarf.parseFormValue__anon_5348+0x1b0d>
  2081a9: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  2081ae: 89 c1                        	movl	%eax, %ecx
  2081b0: 83 e1 7f                     	andl	$127, %ecx
  2081b3: 48 c1 e1 31                  	shlq	$49, %rcx
  2081b7: 49 09 cd                     	orq	%rcx, %r13
  2081ba: 84 c0                        	testb	%al, %al
  2081bc: 0f 89 8d 00 00 00            	jns	0x20824f <dwarf.parseFormValue__anon_5348+0xfef>
  2081c2: 48 8b 75 00                  	movq	(%rbp), %rsi
  2081c6: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  2081cb: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  2081d0: b9 01 00 00 00               	movl	$1, %ecx
  2081d5: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  2081da: e8 a1 10 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2081df: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  2081e5: 0f 84 82 0b 00 00            	je	0x208d6d <dwarf.parseFormValue__anon_5348+0x1b0d>
  2081eb: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  2081f0: 89 c1                        	movl	%eax, %ecx
  2081f2: 83 e1 7f                     	andl	$127, %ecx
  2081f5: 48 c1 e1 38                  	shlq	$56, %rcx
  2081f9: 49 09 cd                     	orq	%rcx, %r13
  2081fc: 84 c0                        	testb	%al, %al
  2081fe: 79 4f                        	jns	0x20824f <dwarf.parseFormValue__anon_5348+0xfef>
  208200: 48 8b 75 00                  	movq	(%rbp), %rsi
  208204: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  208209: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20820e: b9 01 00 00 00               	movl	$1, %ecx
  208213: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  208218: e8 63 10 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20821d: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  208223: 0f 84 44 0b 00 00            	je	0x208d6d <dwarf.parseFormValue__anon_5348+0x1b0d>
  208229: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20822e: a8 7e                        	testb	$126, %al
  208230: 0f 85 fd 0f 00 00            	jne	0x209233 <dwarf.parseFormValue__anon_5348+0x1fd3>
  208236: 4d 89 fe                     	movq	%r15, %r14
  208239: 66 c7 44 24 60 29 00         	movw	$41, 96(%rsp)
  208240: 84 c0                        	testb	%al, %al
  208242: 0f 88 37 0b 00 00            	js	0x208d7f <dwarf.parseFormValue__anon_5348+0x1b1f>
  208248: 48 c1 e0 3f                  	shlq	$63, %rax
  20824c: 49 09 c5                     	orq	%rax, %r13
  20824f: 48 89 e9                     	movq	%rbp, %rcx
  208252: 48 8d bc 24 b8 00 00 00      	leaq	184(%rsp), %rdi
  20825a: 4c 89 fe                     	movq	%r15, %rsi
  20825d: 4c 89 e2                     	movq	%r12, %rdx
  208260: 4d 89 e8                     	movq	%r13, %r8
  208263: 4d 89 fe                     	movq	%r15, %r14
  208266: e8 35 13 01 00               	callq	0x2195a0 <dwarf.readAllocBytes__anon_6387>
  20826b: 0f b7 ac 24 c8 00 00 00      	movzwl	200(%rsp), %ebp
  208273: 66 85 ed                     	testw	%bp, %bp
  208276: 0f 85 39 0d 00 00            	jne	0x208fb5 <dwarf.parseFormValue__anon_5348+0x1d55>
  20827c: c5 f8 10 84 24 b8 00 00 00   	vmovups	184(%rsp), %xmm0
  208285: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  20828b: c5 f8 11 03                  	vmovups	%xmm0, (%rbx)
  20828f: c6 43 10 04                  	movb	$4, 16(%rbx)
  208293: e9 66 0f 00 00               	jmp	0x2091fe <dwarf.parseFormValue__anon_5348+0x1f9e>
  208298: c5 f8 10 05 b8 95 ff ff      	vmovups	-27208(%rip), %xmm0     # 0x201858 <heap.arena_allocator.ArenaAllocator.allocator__anon_6362+0x48>
  2082a0: 48 8b 05 c1 95 ff ff         	movq	-27199(%rip), %rax      # 0x201868 <heap.arena_allocator.ArenaAllocator.allocator__anon_6362+0x58>
  2082a7: e9 42 05 00 00               	jmp	0x2087ee <dwarf.parseFormValue__anon_5348+0x158e>
  2082ac: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  2082b2: 49 89 cc                     	movq	%rcx, %r12
  2082b5: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  2082ba: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  2082bf: 48 8b 31                     	movq	(%rcx), %rsi
  2082c2: b9 01 00 00 00               	movl	$1, %ecx
  2082c7: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  2082cc: e8 af 0f 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2082d1: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  2082d7: 0f 84 01 0f 00 00            	je	0x2091de <dwarf.parseFormValue__anon_5348+0x1f7e>
  2082dd: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  2082e2: 41 89 c6                     	movl	%eax, %r14d
  2082e5: 41 83 e6 7f                  	andl	$127, %r14d
  2082e9: 84 c0                        	testb	%al, %al
  2082eb: 0f 89 18 02 00 00            	jns	0x208509 <dwarf.parseFormValue__anon_5348+0x12a9>
  2082f1: 49 8b 34 24                  	movq	(%r12), %rsi
  2082f5: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  2082fa: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  2082ff: b9 01 00 00 00               	movl	$1, %ecx
  208304: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  208309: e8 72 0f 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20830e: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  208314: 0f 84 c4 0e 00 00            	je	0x2091de <dwarf.parseFormValue__anon_5348+0x1f7e>
  20831a: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20831f: 89 c1                        	movl	%eax, %ecx
  208321: 83 e1 7f                     	andl	$127, %ecx
  208324: 48 c1 e1 07                  	shlq	$7, %rcx
  208328: 49 09 ce                     	orq	%rcx, %r14
  20832b: 84 c0                        	testb	%al, %al
  20832d: 0f 89 d6 01 00 00            	jns	0x208509 <dwarf.parseFormValue__anon_5348+0x12a9>
  208333: 49 8b 34 24                  	movq	(%r12), %rsi
  208337: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20833c: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  208341: b9 01 00 00 00               	movl	$1, %ecx
  208346: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20834b: e8 30 0f 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  208350: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  208356: 0f 84 82 0e 00 00            	je	0x2091de <dwarf.parseFormValue__anon_5348+0x1f7e>
  20835c: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  208361: 89 c1                        	movl	%eax, %ecx
  208363: 83 e1 7f                     	andl	$127, %ecx
  208366: 48 c1 e1 0e                  	shlq	$14, %rcx
  20836a: 49 09 ce                     	orq	%rcx, %r14
  20836d: 84 c0                        	testb	%al, %al
  20836f: 0f 89 94 01 00 00            	jns	0x208509 <dwarf.parseFormValue__anon_5348+0x12a9>
  208375: 49 8b 34 24                  	movq	(%r12), %rsi
  208379: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20837e: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  208383: b9 01 00 00 00               	movl	$1, %ecx
  208388: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20838d: e8 ee 0e 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  208392: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  208398: 0f 84 40 0e 00 00            	je	0x2091de <dwarf.parseFormValue__anon_5348+0x1f7e>
  20839e: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  2083a3: 89 c1                        	movl	%eax, %ecx
  2083a5: 83 e1 7f                     	andl	$127, %ecx
  2083a8: 48 c1 e1 15                  	shlq	$21, %rcx
  2083ac: 49 09 ce                     	orq	%rcx, %r14
  2083af: 84 c0                        	testb	%al, %al
  2083b1: 0f 89 52 01 00 00            	jns	0x208509 <dwarf.parseFormValue__anon_5348+0x12a9>
  2083b7: 49 8b 34 24                  	movq	(%r12), %rsi
  2083bb: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  2083c0: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  2083c5: b9 01 00 00 00               	movl	$1, %ecx
  2083ca: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  2083cf: e8 ac 0e 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2083d4: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  2083da: 0f 84 fe 0d 00 00            	je	0x2091de <dwarf.parseFormValue__anon_5348+0x1f7e>
  2083e0: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  2083e5: 89 c1                        	movl	%eax, %ecx
  2083e7: 83 e1 7f                     	andl	$127, %ecx
  2083ea: 48 c1 e1 1c                  	shlq	$28, %rcx
  2083ee: 49 09 ce                     	orq	%rcx, %r14
  2083f1: 84 c0                        	testb	%al, %al
  2083f3: 0f 89 10 01 00 00            	jns	0x208509 <dwarf.parseFormValue__anon_5348+0x12a9>
  2083f9: 49 8b 34 24                  	movq	(%r12), %rsi
  2083fd: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  208402: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  208407: b9 01 00 00 00               	movl	$1, %ecx
  20840c: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  208411: e8 6a 0e 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  208416: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20841c: 0f 84 bc 0d 00 00            	je	0x2091de <dwarf.parseFormValue__anon_5348+0x1f7e>
  208422: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  208427: 89 c1                        	movl	%eax, %ecx
  208429: 83 e1 7f                     	andl	$127, %ecx
  20842c: 48 c1 e1 23                  	shlq	$35, %rcx
  208430: 49 09 ce                     	orq	%rcx, %r14
  208433: 84 c0                        	testb	%al, %al
  208435: 0f 89 ce 00 00 00            	jns	0x208509 <dwarf.parseFormValue__anon_5348+0x12a9>
  20843b: 49 8b 34 24                  	movq	(%r12), %rsi
  20843f: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  208444: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  208449: b9 01 00 00 00               	movl	$1, %ecx
  20844e: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  208453: e8 28 0e 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  208458: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20845e: 0f 84 7a 0d 00 00            	je	0x2091de <dwarf.parseFormValue__anon_5348+0x1f7e>
  208464: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  208469: 4d 89 ef                     	movq	%r13, %r15
  20846c: 89 c1                        	movl	%eax, %ecx
  20846e: 83 e1 7f                     	andl	$127, %ecx
  208471: 48 c1 e1 2a                  	shlq	$42, %rcx
  208475: 49 09 ce                     	orq	%rcx, %r14
  208478: 84 c0                        	testb	%al, %al
  20847a: 0f 89 86 00 00 00            	jns	0x208506 <dwarf.parseFormValue__anon_5348+0x12a6>
  208480: 49 8b 34 24                  	movq	(%r12), %rsi
  208484: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  208489: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20848e: b9 01 00 00 00               	movl	$1, %ecx
  208493: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  208498: e8 e3 0d 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20849d: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  2084a3: 4d 89 fd                     	movq	%r15, %r13
  2084a6: 0f 84 32 0d 00 00            	je	0x2091de <dwarf.parseFormValue__anon_5348+0x1f7e>
  2084ac: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  2084b1: 89 c1                        	movl	%eax, %ecx
  2084b3: 83 e1 7f                     	andl	$127, %ecx
  2084b6: 48 c1 e1 31                  	shlq	$49, %rcx
  2084ba: 49 09 ce                     	orq	%rcx, %r14
  2084bd: 84 c0                        	testb	%al, %al
  2084bf: 79 45                        	jns	0x208506 <dwarf.parseFormValue__anon_5348+0x12a6>
  2084c1: 49 8b 34 24                  	movq	(%r12), %rsi
  2084c5: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  2084ca: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  2084cf: b9 01 00 00 00               	movl	$1, %ecx
  2084d4: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  2084d9: e8 a2 0d 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2084de: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  2084e4: 4d 89 fd                     	movq	%r15, %r13
  2084e7: 0f 84 f1 0c 00 00            	je	0x2091de <dwarf.parseFormValue__anon_5348+0x1f7e>
  2084ed: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  2084f2: 89 c1                        	movl	%eax, %ecx
  2084f4: 83 e1 7f                     	andl	$127, %ecx
  2084f7: 48 c1 e1 38                  	shlq	$56, %rcx
  2084fb: 49 09 ce                     	orq	%rcx, %r14
  2084fe: 84 c0                        	testb	%al, %al
  208500: 0f 88 41 0c 00 00            	js	0x209147 <dwarf.parseFormValue__anon_5348+0x1ee7>
  208506: 4d 89 fd                     	movq	%r15, %r13
  208509: 4c 89 33                     	movq	%r14, (%rbx)
  20850c: c6 43 10 0b                  	movb	$11, 16(%rbx)
  208510: 66 83 7b 18 00               	cmpw	$0, 24(%rbx)
  208515: 0f 84 e3 0c 00 00            	je	0x2091fe <dwarf.parseFormValue__anon_5348+0x1f9e>
  20851b: e9 17 0c 00 00               	jmp	0x209137 <dwarf.parseFormValue__anon_5348+0x1ed7>
  208520: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  208526: 49 89 cc                     	movq	%rcx, %r12
  208529: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20852e: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  208533: 48 8b 31                     	movq	(%rcx), %rsi
  208536: b9 01 00 00 00               	movl	$1, %ecx
  20853b: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  208540: e8 3b 0d 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  208545: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20854b: 0f 84 8d 0c 00 00            	je	0x2091de <dwarf.parseFormValue__anon_5348+0x1f7e>
  208551: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  208556: 41 89 c6                     	movl	%eax, %r14d
  208559: 41 83 e6 7f                  	andl	$127, %r14d
  20855d: 84 c0                        	testb	%al, %al
  20855f: 0f 89 46 01 00 00            	jns	0x2086ab <dwarf.parseFormValue__anon_5348+0x144b>
  208565: 49 8b 34 24                  	movq	(%r12), %rsi
  208569: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20856e: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  208573: b9 01 00 00 00               	movl	$1, %ecx
  208578: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20857d: e8 fe 0c 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  208582: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  208588: 0f 84 50 0c 00 00            	je	0x2091de <dwarf.parseFormValue__anon_5348+0x1f7e>
  20858e: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  208593: 89 c1                        	movl	%eax, %ecx
  208595: 83 e1 7f                     	andl	$127, %ecx
  208598: 48 c1 e1 07                  	shlq	$7, %rcx
  20859c: 49 09 ce                     	orq	%rcx, %r14
  20859f: 84 c0                        	testb	%al, %al
  2085a1: 0f 89 04 01 00 00            	jns	0x2086ab <dwarf.parseFormValue__anon_5348+0x144b>
  2085a7: 49 8b 34 24                  	movq	(%r12), %rsi
  2085ab: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  2085b0: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  2085b5: b9 01 00 00 00               	movl	$1, %ecx
  2085ba: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  2085bf: e8 bc 0c 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2085c4: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  2085ca: 0f 84 0e 0c 00 00            	je	0x2091de <dwarf.parseFormValue__anon_5348+0x1f7e>
  2085d0: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  2085d5: 89 c1                        	movl	%eax, %ecx
  2085d7: 83 e1 7f                     	andl	$127, %ecx
  2085da: 48 c1 e1 0e                  	shlq	$14, %rcx
  2085de: 49 09 ce                     	orq	%rcx, %r14
  2085e1: 84 c0                        	testb	%al, %al
  2085e3: 0f 89 c2 00 00 00            	jns	0x2086ab <dwarf.parseFormValue__anon_5348+0x144b>
  2085e9: 49 8b 34 24                  	movq	(%r12), %rsi
  2085ed: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  2085f2: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  2085f7: b9 01 00 00 00               	movl	$1, %ecx
  2085fc: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  208601: e8 7a 0c 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  208606: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20860c: 0f 84 cc 0b 00 00            	je	0x2091de <dwarf.parseFormValue__anon_5348+0x1f7e>
  208612: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  208617: 89 c1                        	movl	%eax, %ecx
  208619: 83 e1 7f                     	andl	$127, %ecx
  20861c: 48 c1 e1 15                  	shlq	$21, %rcx
  208620: 49 09 ce                     	orq	%rcx, %r14
  208623: 84 c0                        	testb	%al, %al
  208625: 0f 89 80 00 00 00            	jns	0x2086ab <dwarf.parseFormValue__anon_5348+0x144b>
  20862b: 49 8b 34 24                  	movq	(%r12), %rsi
  20862f: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  208634: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  208639: b9 01 00 00 00               	movl	$1, %ecx
  20863e: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  208643: e8 38 0c 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  208648: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20864e: 0f 84 8a 0b 00 00            	je	0x2091de <dwarf.parseFormValue__anon_5348+0x1f7e>
  208654: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  208659: 89 c1                        	movl	%eax, %ecx
  20865b: 83 e1 7f                     	andl	$127, %ecx
  20865e: 48 c1 e1 1c                  	shlq	$28, %rcx
  208662: 49 09 ce                     	orq	%rcx, %r14
  208665: 84 c0                        	testb	%al, %al
  208667: 79 42                        	jns	0x2086ab <dwarf.parseFormValue__anon_5348+0x144b>
  208669: 49 8b 34 24                  	movq	(%r12), %rsi
  20866d: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  208672: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  208677: b9 01 00 00 00               	movl	$1, %ecx
  20867c: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  208681: e8 fa 0b 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  208686: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20868c: 0f 84 4c 0b 00 00            	je	0x2091de <dwarf.parseFormValue__anon_5348+0x1f7e>
  208692: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  208697: 89 c1                        	movl	%eax, %ecx
  208699: 83 e1 7f                     	andl	$127, %ecx
  20869c: 48 c1 e1 23                  	shlq	$35, %rcx
  2086a0: 49 09 ce                     	orq	%rcx, %r14
  2086a3: 84 c0                        	testb	%al, %al
  2086a5: 0f 88 12 09 00 00            	js	0x208fbd <dwarf.parseFormValue__anon_5348+0x1d5d>
  2086ab: 4c 89 33                     	movq	%r14, (%rbx)
  2086ae: e9 24 05 00 00               	jmp	0x208bd7 <dwarf.parseFormValue__anon_5348+0x1977>
  2086b3: c5 f8 28 05 05 7c ff ff      	vmovaps	-33787(%rip), %xmm0     # 0x2002c0 <zig-graph+0x2002c0>
  2086bb: 45 31 f6                     	xorl	%r14d, %r14d
  2086be: 4c 8d 64 24 20               	leaq	32(%rsp), %r12
  2086c3: c5 f8 29 44 24 70            	vmovaps	%xmm0, 112(%rsp)
  2086c9: 4c 8b 39                     	movq	(%rcx), %r15
  2086cc: 0f 1f 40 00                  	nopl	(%rax)
  2086d0: b9 10 00 00 00               	movl	$16, %ecx
  2086d5: 4a 8d 54 34 70               	leaq	112(%rsp,%r14), %rdx
  2086da: 4c 89 e7                     	movq	%r12, %rdi
  2086dd: 4c 89 fe                     	movq	%r15, %rsi
  2086e0: 4c 29 f1                     	subq	%r14, %rcx
  2086e3: e8 98 0b 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2086e8: 48 8b 44 24 20               	movq	32(%rsp), %rax
  2086ed: 48 85 c0                     	testq	%rax, %rax
  2086f0: 0f 84 2c 08 00 00            	je	0x208f22 <dwarf.parseFormValue__anon_5348+0x1cc2>
  2086f6: 49 01 c6                     	addq	%rax, %r14
  2086f9: 0f 82 94 09 00 00            	jb	0x209093 <dwarf.parseFormValue__anon_5348+0x1e33>
  2086ff: 49 83 fe 10                  	cmpq	$16, %r14
  208703: 72 cb                        	jb	0x2086d0 <dwarf.parseFormValue__anon_5348+0x1470>
  208705: c5 f8 28 44 24 70            	vmovaps	112(%rsp), %xmm0
  20870b: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  208711: c5 f8 11 03                  	vmovups	%xmm0, (%rbx)
  208715: c6 43 10 0f                  	movb	$15, 16(%rbx)
  208719: e9 e0 0a 00 00               	jmp	0x2091fe <dwarf.parseFormValue__anon_5348+0x1f9e>
  20871e: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  208724: 48 8b 11                     	movq	(%rcx), %rdx
  208727: 40 0f b6 cd                  	movzbl	%bpl, %ecx
  20872b: 41 f6 c6 01                  	testb	$1, %r14b
  20872f: 0f 84 95 05 00 00            	je	0x208cca <dwarf.parseFormValue__anon_5348+0x1a6a>
  208735: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20873a: 4c 89 ee                     	movq	%r13, %rsi
  20873d: e8 ee bf ff ff               	callq	0x204730 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readInt__anon_5249>
  208742: 0f b7 6c 24 28               	movzwl	40(%rsp), %ebp
  208747: 66 85 ed                     	testw	%bp, %bp
  20874a: 0f 85 9a 0a 00 00            	jne	0x2091ea <dwarf.parseFormValue__anon_5348+0x1f8a>
  208750: 48 8b 44 24 20               	movq	32(%rsp), %rax
  208755: e9 8f 05 00 00               	jmp	0x208ce9 <dwarf.parseFormValue__anon_5348+0x1a89>
  20875a: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  208760: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  20876a: 45 31 f6                     	xorl	%r14d, %r14d
  20876d: 4c 8d 64 24 20               	leaq	32(%rsp), %r12
  208772: 4c 8b 39                     	movq	(%rcx), %r15
  208775: 48 89 44 24 10               	movq	%rax, 16(%rsp)
  20877a: 66 0f 1f 44 00 00            	nopw	(%rax,%rax)
  208780: b9 08 00 00 00               	movl	$8, %ecx
  208785: 4a 8d 54 34 10               	leaq	16(%rsp,%r14), %rdx
  20878a: 4c 89 e7                     	movq	%r12, %rdi
  20878d: 4c 89 fe                     	movq	%r15, %rsi
  208790: 4c 29 f1                     	subq	%r14, %rcx
  208793: e8 e8 0a 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  208798: 48 8b 44 24 20               	movq	32(%rsp), %rax
  20879d: 48 85 c0                     	testq	%rax, %rax
  2087a0: 0f 84 8a 06 00 00            	je	0x208e30 <dwarf.parseFormValue__anon_5348+0x1bd0>
  2087a6: 49 01 c6                     	addq	%rax, %r14
  2087a9: 0f 82 e4 08 00 00            	jb	0x209093 <dwarf.parseFormValue__anon_5348+0x1e33>
  2087af: 49 83 fe 08                  	cmpq	$8, %r14
  2087b3: 72 cb                        	jb	0x208780 <dwarf.parseFormValue__anon_5348+0x1520>
  2087b5: 48 8b 44 24 10               	movq	16(%rsp), %rax
  2087ba: 40 f6 c5 01                  	testb	$1, %bpl
  2087be: 48 89 c1                     	movq	%rax, %rcx
  2087c1: 48 0f c9                     	bswapq	%rcx
  2087c4: 48 0f 45 c8                  	cmovneq	%rax, %rcx
  2087c8: 48 89 0b                     	movq	%rcx, (%rbx)
  2087cb: c6 43 10 07                  	movb	$7, 16(%rbx)
  2087cf: 66 83 7b 18 00               	cmpw	$0, 24(%rbx)
  2087d4: 0f 84 24 0a 00 00            	je	0x2091fe <dwarf.parseFormValue__anon_5348+0x1f9e>
  2087da: e9 58 09 00 00               	jmp	0x209137 <dwarf.parseFormValue__anon_5348+0x1ed7>
  2087df: c5 f8 10 05 89 90 ff ff      	vmovups	-28535(%rip), %xmm0     # 0x201870 <heap.arena_allocator.ArenaAllocator.allocator__anon_6362+0x60>
  2087e7: 48 8b 05 92 90 ff ff         	movq	-28526(%rip), %rax      # 0x201880 <heap.arena_allocator.ArenaAllocator.allocator__anon_6362+0x70>
  2087ee: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  2087f4: 48 89 43 10                  	movq	%rax, 16(%rbx)
  2087f8: c5 f8 11 03                  	vmovups	%xmm0, (%rbx)
  2087fc: 66 83 7b 18 00               	cmpw	$0, 24(%rbx)
  208801: 0f 84 f7 09 00 00            	je	0x2091fe <dwarf.parseFormValue__anon_5348+0x1f9e>
  208807: e9 2b 09 00 00               	jmp	0x209137 <dwarf.parseFormValue__anon_5348+0x1ed7>
  20880c: 48 8d bc 24 98 00 00 00      	leaq	152(%rsp), %rdi
  208814: 4c 89 ee                     	movq	%r13, %rsi
  208817: 48 89 ca                     	movq	%rcx, %rdx
  20881a: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  208820: e8 1b e4 ff ff               	callq	0x206c40 <leb128.readULEB128__anon_5347>
  208825: 0f b7 ac 24 a0 00 00 00      	movzwl	160(%rsp), %ebp
  20882d: 66 85 ed                     	testw	%bp, %bp
  208830: 0f 85 bc 09 00 00            	jne	0x2091f2 <dwarf.parseFormValue__anon_5348+0x1f92>
  208836: 48 8b 84 24 98 00 00 00      	movq	152(%rsp), %rax
  20883e: 48 89 03                     	movq	%rax, (%rbx)
  208841: c6 43 10 0d                  	movb	$13, 16(%rbx)
  208845: e9 0e 03 00 00               	jmp	0x208b58 <dwarf.parseFormValue__anon_5348+0x18f8>
  20884a: 48 8d bc 24 a8 00 00 00      	leaq	168(%rsp), %rdi
  208852: 4c 89 ee                     	movq	%r13, %rsi
  208855: 48 89 ca                     	movq	%rcx, %rdx
  208858: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  20885e: e8 dd e3 ff ff               	callq	0x206c40 <leb128.readULEB128__anon_5347>
  208863: 0f b7 ac 24 b0 00 00 00      	movzwl	176(%rsp), %ebp
  20886b: 66 85 ed                     	testw	%bp, %bp
  20886e: 0f 85 7e 09 00 00            	jne	0x2091f2 <dwarf.parseFormValue__anon_5348+0x1f92>
  208874: 48 8b 84 24 a8 00 00 00      	movq	168(%rsp), %rax
  20887c: 48 89 03                     	movq	%rax, (%rbx)
  20887f: c6 43 10 0e                  	movb	$14, 16(%rbx)
  208883: e9 d0 02 00 00               	jmp	0x208b58 <dwarf.parseFormValue__anon_5348+0x18f8>
  208888: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  20888e: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  208893: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  208898: 48 8b 31                     	movq	(%rcx), %rsi
  20889b: b9 01 00 00 00               	movl	$1, %ecx
  2088a0: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  2088a5: e8 d6 09 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2088aa: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  2088b0: 0f 84 7a 05 00 00            	je	0x208e30 <dwarf.parseFormValue__anon_5348+0x1bd0>
  2088b6: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  2088bb: eb 6d                        	jmp	0x20892a <dwarf.parseFormValue__anon_5348+0x16ca>
  2088bd: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  2088c3: 45 31 f6                     	xorl	%r14d, %r14d
  2088c6: 4c 8d 64 24 20               	leaq	32(%rsp), %r12
  2088cb: 4c 8b 39                     	movq	(%rcx), %r15
  2088ce: 66 c7 44 24 10 aa aa         	movw	$43690, 16(%rsp)        # imm = 0xAAAA
  2088d5: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
  2088e0: b9 02 00 00 00               	movl	$2, %ecx
  2088e5: 4a 8d 54 34 10               	leaq	16(%rsp,%r14), %rdx
  2088ea: 4c 89 e7                     	movq	%r12, %rdi
  2088ed: 4c 89 fe                     	movq	%r15, %rsi
  2088f0: 4c 29 f1                     	subq	%r14, %rcx
  2088f3: e8 88 09 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2088f8: 48 8b 44 24 20               	movq	32(%rsp), %rax
  2088fd: 48 85 c0                     	testq	%rax, %rax
  208900: 0f 84 2a 05 00 00            	je	0x208e30 <dwarf.parseFormValue__anon_5348+0x1bd0>
  208906: 49 01 c6                     	addq	%rax, %r14
  208909: 0f 82 84 07 00 00            	jb	0x209093 <dwarf.parseFormValue__anon_5348+0x1e33>
  20890f: 49 83 fe 02                  	cmpq	$2, %r14
  208913: 72 cb                        	jb	0x2088e0 <dwarf.parseFormValue__anon_5348+0x1680>
  208915: 0f b7 44 24 10               	movzwl	16(%rsp), %eax
  20891a: 89 c1                        	movl	%eax, %ecx
  20891c: 66 c1 c1 08                  	rolw	$8, %cx
  208920: 40 f6 c5 01                  	testb	$1, %bpl
  208924: 0f 45 c8                     	cmovnel	%eax, %ecx
  208927: 0f b7 c1                     	movzwl	%cx, %eax
  20892a: 48 89 03                     	movq	%rax, (%rbx)
  20892d: c6 43 10 0b                  	movb	$11, 16(%rbx)
  208931: 66 83 7b 18 00               	cmpw	$0, 24(%rbx)
  208936: 0f 84 c2 08 00 00            	je	0x2091fe <dwarf.parseFormValue__anon_5348+0x1f9e>
  20893c: e9 f6 07 00 00               	jmp	0x209137 <dwarf.parseFormValue__anon_5348+0x1ed7>
  208941: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  208947: 45 31 f6                     	xorl	%r14d, %r14d
  20894a: 4c 8d 64 24 20               	leaq	32(%rsp), %r12
  20894f: 4c 8b 39                     	movq	(%rcx), %r15
  208952: c6 44 24 12 aa               	movb	$-86, 18(%rsp)
  208957: 66 c7 44 24 10 aa aa         	movw	$43690, 16(%rsp)        # imm = 0xAAAA
  20895e: 66 90                        	nop
  208960: 4c 89 f1                     	movq	%r14, %rcx
  208963: 4a 8d 54 34 10               	leaq	16(%rsp,%r14), %rdx
  208968: 4c 89 e7                     	movq	%r12, %rdi
  20896b: 4c 89 fe                     	movq	%r15, %rsi
  20896e: 48 83 f1 03                  	xorq	$3, %rcx
  208972: e8 09 09 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  208977: 48 8b 44 24 20               	movq	32(%rsp), %rax
  20897c: 48 85 c0                     	testq	%rax, %rax
  20897f: 0f 84 ab 04 00 00            	je	0x208e30 <dwarf.parseFormValue__anon_5348+0x1bd0>
  208985: 49 01 c6                     	addq	%rax, %r14
  208988: 0f 82 05 07 00 00            	jb	0x209093 <dwarf.parseFormValue__anon_5348+0x1e33>
  20898e: 49 83 fe 03                  	cmpq	$3, %r14
  208992: 72 cc                        	jb	0x208960 <dwarf.parseFormValue__anon_5348+0x1700>
  208994: 0f b6 44 24 12               	movzbl	18(%rsp), %eax
  208999: 0f b7 4c 24 10               	movzwl	16(%rsp), %ecx
  20899e: c1 e0 10                     	shll	$16, %eax
  2089a1: 09 c1                        	orl	%eax, %ecx
  2089a3: 89 c8                        	movl	%ecx, %eax
  2089a5: 0f c8                        	bswapl	%eax
  2089a7: c1 e8 08                     	shrl	$8, %eax
  2089aa: 40 f6 c5 01                  	testb	$1, %bpl
  2089ae: 0f 45 c1                     	cmovnel	%ecx, %eax
  2089b1: 48 89 03                     	movq	%rax, (%rbx)
  2089b4: c6 43 10 0b                  	movb	$11, 16(%rbx)
  2089b8: e9 9b 01 00 00               	jmp	0x208b58 <dwarf.parseFormValue__anon_5348+0x18f8>
  2089bd: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  2089c3: 45 31 f6                     	xorl	%r14d, %r14d
  2089c6: 4c 8d 64 24 20               	leaq	32(%rsp), %r12
  2089cb: 4c 8b 39                     	movq	(%rcx), %r15
  2089ce: c7 44 24 10 aa aa aa aa      	movl	$2863311530, 16(%rsp)   # imm = 0xAAAAAAAA
  2089d6: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
  2089e0: b9 04 00 00 00               	movl	$4, %ecx
  2089e5: 4a 8d 54 34 10               	leaq	16(%rsp,%r14), %rdx
  2089ea: 4c 89 e7                     	movq	%r12, %rdi
  2089ed: 4c 89 fe                     	movq	%r15, %rsi
  2089f0: 4c 29 f1                     	subq	%r14, %rcx
  2089f3: e8 88 08 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2089f8: 48 8b 44 24 20               	movq	32(%rsp), %rax
  2089fd: 48 85 c0                     	testq	%rax, %rax
  208a00: 0f 84 2a 04 00 00            	je	0x208e30 <dwarf.parseFormValue__anon_5348+0x1bd0>
  208a06: 49 01 c6                     	addq	%rax, %r14
  208a09: 0f 82 84 06 00 00            	jb	0x209093 <dwarf.parseFormValue__anon_5348+0x1e33>
  208a0f: 49 83 fe 04                  	cmpq	$4, %r14
  208a13: 72 cb                        	jb	0x2089e0 <dwarf.parseFormValue__anon_5348+0x1780>
  208a15: 8b 44 24 10                  	movl	16(%rsp), %eax
  208a19: 40 f6 c5 01                  	testb	$1, %bpl
  208a1d: 89 c1                        	movl	%eax, %ecx
  208a1f: 0f c9                        	bswapl	%ecx
  208a21: 0f 45 c8                     	cmovnel	%eax, %ecx
  208a24: 48 89 0b                     	movq	%rcx, (%rbx)
  208a27: c6 43 10 0b                  	movb	$11, 16(%rbx)
  208a2b: 66 83 7b 18 00               	cmpw	$0, 24(%rbx)
  208a30: 0f 84 c8 07 00 00            	je	0x2091fe <dwarf.parseFormValue__anon_5348+0x1f9e>
  208a36: e9 fc 06 00 00               	jmp	0x209137 <dwarf.parseFormValue__anon_5348+0x1ed7>
  208a3b: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  208a41: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  208a46: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  208a4b: 48 8b 31                     	movq	(%rcx), %rsi
  208a4e: b9 01 00 00 00               	movl	$1, %ecx
  208a53: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  208a58: e8 23 08 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  208a5d: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  208a63: 0f 84 c7 03 00 00            	je	0x208e30 <dwarf.parseFormValue__anon_5348+0x1bd0>
  208a69: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  208a6e: eb 6a                        	jmp	0x208ada <dwarf.parseFormValue__anon_5348+0x187a>
  208a70: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  208a76: 45 31 e4                     	xorl	%r12d, %r12d
  208a79: 4c 8d 74 24 20               	leaq	32(%rsp), %r14
  208a7e: 4c 8b 39                     	movq	(%rcx), %r15
  208a81: 66 c7 44 24 10 aa aa         	movw	$43690, 16(%rsp)        # imm = 0xAAAA
  208a88: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
  208a90: b9 02 00 00 00               	movl	$2, %ecx
  208a95: 4a 8d 54 24 10               	leaq	16(%rsp,%r12), %rdx
  208a9a: 4c 89 f7                     	movq	%r14, %rdi
  208a9d: 4c 89 fe                     	movq	%r15, %rsi
  208aa0: 4c 29 e1                     	subq	%r12, %rcx
  208aa3: e8 d8 07 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  208aa8: 48 8b 44 24 20               	movq	32(%rsp), %rax
  208aad: 48 85 c0                     	testq	%rax, %rax
  208ab0: 0f 84 7a 03 00 00            	je	0x208e30 <dwarf.parseFormValue__anon_5348+0x1bd0>
  208ab6: 49 01 c4                     	addq	%rax, %r12
  208ab9: 0f 82 d4 05 00 00            	jb	0x209093 <dwarf.parseFormValue__anon_5348+0x1e33>
  208abf: 49 83 fc 02                  	cmpq	$2, %r12
  208ac3: 72 cb                        	jb	0x208a90 <dwarf.parseFormValue__anon_5348+0x1830>
  208ac5: 0f b7 44 24 10               	movzwl	16(%rsp), %eax
  208aca: 89 c1                        	movl	%eax, %ecx
  208acc: 66 c1 c1 08                  	rolw	$8, %cx
  208ad0: 40 f6 c5 01                  	testb	$1, %bpl
  208ad4: 0f 45 c8                     	cmovnel	%eax, %ecx
  208ad7: 0f b7 c1                     	movzwl	%cx, %eax
  208ada: 48 89 03                     	movq	%rax, (%rbx)
  208add: e9 f5 00 00 00               	jmp	0x208bd7 <dwarf.parseFormValue__anon_5348+0x1977>
  208ae2: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  208ae8: 45 31 e4                     	xorl	%r12d, %r12d
  208aeb: 4c 8d 74 24 20               	leaq	32(%rsp), %r14
  208af0: 4c 8b 39                     	movq	(%rcx), %r15
  208af3: c6 44 24 12 aa               	movb	$-86, 18(%rsp)
  208af8: 66 c7 44 24 10 aa aa         	movw	$43690, 16(%rsp)        # imm = 0xAAAA
  208aff: 90                           	nop
  208b00: 4c 89 e1                     	movq	%r12, %rcx
  208b03: 4a 8d 54 24 10               	leaq	16(%rsp,%r12), %rdx
  208b08: 4c 89 f7                     	movq	%r14, %rdi
  208b0b: 4c 89 fe                     	movq	%r15, %rsi
  208b0e: 48 83 f1 03                  	xorq	$3, %rcx
  208b12: e8 69 07 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  208b17: 48 8b 44 24 20               	movq	32(%rsp), %rax
  208b1c: 48 85 c0                     	testq	%rax, %rax
  208b1f: 0f 84 0b 03 00 00            	je	0x208e30 <dwarf.parseFormValue__anon_5348+0x1bd0>
  208b25: 49 01 c4                     	addq	%rax, %r12
  208b28: 0f 82 65 05 00 00            	jb	0x209093 <dwarf.parseFormValue__anon_5348+0x1e33>
  208b2e: 49 83 fc 03                  	cmpq	$3, %r12
  208b32: 72 cc                        	jb	0x208b00 <dwarf.parseFormValue__anon_5348+0x18a0>
  208b34: 0f b6 44 24 12               	movzbl	18(%rsp), %eax
  208b39: 0f b7 4c 24 10               	movzwl	16(%rsp), %ecx
  208b3e: c1 e0 10                     	shll	$16, %eax
  208b41: 09 c1                        	orl	%eax, %ecx
  208b43: 89 c8                        	movl	%ecx, %eax
  208b45: 0f c8                        	bswapl	%eax
  208b47: c1 e8 08                     	shrl	$8, %eax
  208b4a: 40 f6 c5 01                  	testb	$1, %bpl
  208b4e: 0f 45 c1                     	cmovnel	%ecx, %eax
  208b51: 48 89 03                     	movq	%rax, (%rbx)
  208b54: c6 43 10 01                  	movb	$1, 16(%rbx)
  208b58: 66 83 7b 18 00               	cmpw	$0, 24(%rbx)
  208b5d: 0f 84 9b 06 00 00            	je	0x2091fe <dwarf.parseFormValue__anon_5348+0x1f9e>
  208b63: e9 a7 02 00 00               	jmp	0x208e0f <dwarf.parseFormValue__anon_5348+0x1baf>
  208b68: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  208b6e: 45 31 e4                     	xorl	%r12d, %r12d
  208b71: 4c 8d 74 24 20               	leaq	32(%rsp), %r14
  208b76: 4c 8b 39                     	movq	(%rcx), %r15
  208b79: c7 44 24 10 aa aa aa aa      	movl	$2863311530, 16(%rsp)   # imm = 0xAAAAAAAA
  208b81: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
  208b90: b9 04 00 00 00               	movl	$4, %ecx
  208b95: 4a 8d 54 24 10               	leaq	16(%rsp,%r12), %rdx
  208b9a: 4c 89 f7                     	movq	%r14, %rdi
  208b9d: 4c 89 fe                     	movq	%r15, %rsi
  208ba0: 4c 29 e1                     	subq	%r12, %rcx
  208ba3: e8 d8 06 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  208ba8: 48 8b 44 24 20               	movq	32(%rsp), %rax
  208bad: 48 85 c0                     	testq	%rax, %rax
  208bb0: 0f 84 7a 02 00 00            	je	0x208e30 <dwarf.parseFormValue__anon_5348+0x1bd0>
  208bb6: 49 01 c4                     	addq	%rax, %r12
  208bb9: 0f 82 d4 04 00 00            	jb	0x209093 <dwarf.parseFormValue__anon_5348+0x1e33>
  208bbf: 49 83 fc 04                  	cmpq	$4, %r12
  208bc3: 72 cb                        	jb	0x208b90 <dwarf.parseFormValue__anon_5348+0x1930>
  208bc5: 8b 44 24 10                  	movl	16(%rsp), %eax
  208bc9: 40 f6 c5 01                  	testb	$1, %bpl
  208bcd: 89 c1                        	movl	%eax, %ecx
  208bcf: 0f c9                        	bswapl	%ecx
  208bd1: 0f 45 c8                     	cmovnel	%eax, %ecx
  208bd4: 48 89 0b                     	movq	%rcx, (%rbx)
  208bd7: c6 43 10 01                  	movb	$1, 16(%rbx)
  208bdb: 66 83 7b 18 00               	cmpw	$0, 24(%rbx)
  208be0: 0f 84 18 06 00 00            	je	0x2091fe <dwarf.parseFormValue__anon_5348+0x1f9e>
  208be6: e9 4c 05 00 00               	jmp	0x209137 <dwarf.parseFormValue__anon_5348+0x1ed7>
  208beb: 48 8d 7c 24 10               	leaq	16(%rsp), %rdi
  208bf0: 4c 89 ee                     	movq	%r13, %rsi
  208bf3: 48 89 ca                     	movq	%rcx, %rdx
  208bf6: e8 45 e0 ff ff               	callq	0x206c40 <leb128.readULEB128__anon_5347>
  208bfb: 0f b7 6c 24 18               	movzwl	24(%rsp), %ebp
  208c00: 66 85 ed                     	testw	%bp, %bp
  208c03: 0f 85 16 05 00 00            	jne	0x20911f <dwarf.parseFormValue__anon_5348+0x1ebf>
  208c09: 4c 8b 74 24 10               	movq	16(%rsp), %r14
  208c0e: 0f b6 44 24 38               	movzbl	56(%rsp), %eax
  208c13: 4c 89 33                     	movq	%r14, (%rbx)
  208c16: 88 43 08                     	movb	%al, 8(%rbx)
  208c19: c6 43 10 03                  	movb	$3, 16(%rbx)
  208c1d: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  208c23: e9 d6 05 00 00               	jmp	0x2091fe <dwarf.parseFormValue__anon_5348+0x1f9e>
  208c28: 48 8d 7c 24 10               	leaq	16(%rsp), %rdi
  208c2d: 4c 89 ee                     	movq	%r13, %rsi
  208c30: e8 3b ba ff ff               	callq	0x204670 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readInt__anon_5246>
  208c35: 0f b7 6c 24 14               	movzwl	20(%rsp), %ebp
  208c3a: 66 85 ed                     	testw	%bp, %bp
  208c3d: 0f 85 a7 05 00 00            	jne	0x2091ea <dwarf.parseFormValue__anon_5348+0x1f8a>
  208c43: 8b 44 24 10                  	movl	16(%rsp), %eax
  208c47: 48 89 03                     	movq	%rax, (%rbx)
  208c4a: c6 43 10 0a                  	movb	$10, 16(%rbx)
  208c4e: 66 83 7b 18 00               	cmpw	$0, 24(%rbx)
  208c53: 0f 84 a5 05 00 00            	je	0x2091fe <dwarf.parseFormValue__anon_5348+0x1f9e>
  208c59: e9 d9 04 00 00               	jmp	0x209137 <dwarf.parseFormValue__anon_5348+0x1ed7>
  208c5e: 48 8d 7c 24 10               	leaq	16(%rsp), %rdi
  208c63: 4c 89 ee                     	movq	%r13, %rsi
  208c66: e8 05 ba ff ff               	callq	0x204670 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readInt__anon_5246>
  208c6b: 0f b7 6c 24 14               	movzwl	20(%rsp), %ebp
  208c70: 66 85 ed                     	testw	%bp, %bp
  208c73: 0f 85 71 05 00 00            	jne	0x2091ea <dwarf.parseFormValue__anon_5348+0x1f8a>
  208c79: 8b 44 24 10                  	movl	16(%rsp), %eax
  208c7d: 48 89 03                     	movq	%rax, (%rbx)
  208c80: c6 43 10 08                  	movb	$8, 16(%rbx)
  208c84: 66 83 7b 18 00               	cmpw	$0, 24(%rbx)
  208c89: 0f 84 6f 05 00 00            	je	0x2091fe <dwarf.parseFormValue__anon_5348+0x1f9e>
  208c8f: e9 a3 04 00 00               	jmp	0x209137 <dwarf.parseFormValue__anon_5348+0x1ed7>
  208c94: 48 8d 7c 24 10               	leaq	16(%rsp), %rdi
  208c99: 4c 89 ee                     	movq	%r13, %rsi
  208c9c: e8 cf b9 ff ff               	callq	0x204670 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readInt__anon_5246>
  208ca1: 0f b7 6c 24 14               	movzwl	20(%rsp), %ebp
  208ca6: 66 85 ed                     	testw	%bp, %bp
  208ca9: 0f 85 3b 05 00 00            	jne	0x2091ea <dwarf.parseFormValue__anon_5348+0x1f8a>
  208caf: 8b 44 24 10                  	movl	16(%rsp), %eax
  208cb3: 48 89 03                     	movq	%rax, (%rbx)
  208cb6: c6 43 10 06                  	movb	$6, 16(%rbx)
  208cba: 66 83 7b 18 00               	cmpw	$0, 24(%rbx)
  208cbf: 0f 84 39 05 00 00            	je	0x2091fe <dwarf.parseFormValue__anon_5348+0x1f9e>
  208cc5: e9 6d 04 00 00               	jmp	0x209137 <dwarf.parseFormValue__anon_5348+0x1ed7>
  208cca: 48 8d 7c 24 10               	leaq	16(%rsp), %rdi
  208ccf: 4c 89 ee                     	movq	%r13, %rsi
  208cd2: e8 99 b9 ff ff               	callq	0x204670 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readInt__anon_5246>
  208cd7: 0f b7 6c 24 14               	movzwl	20(%rsp), %ebp
  208cdc: 66 85 ed                     	testw	%bp, %bp
  208cdf: 0f 85 05 05 00 00            	jne	0x2091ea <dwarf.parseFormValue__anon_5348+0x1f8a>
  208ce5: 8b 44 24 10                  	movl	16(%rsp), %eax
  208ce9: 48 89 03                     	movq	%rax, (%rbx)
  208cec: c6 43 10 0c                  	movb	$12, 16(%rbx)
  208cf0: 66 83 7b 18 00               	cmpw	$0, 24(%rbx)
  208cf5: 0f 84 03 05 00 00            	je	0x2091fe <dwarf.parseFormValue__anon_5348+0x1f9e>
  208cfb: e9 37 04 00 00               	jmp	0x209137 <dwarf.parseFormValue__anon_5348+0x1ed7>
  208d00: 0f b6 54 24 12               	movzbl	18(%rsp), %edx
  208d05: 48 c1 e1 10                  	shlq	$16, %rcx
  208d09: 49 c1 e0 08                  	shlq	$8, %r8
  208d0d: 49 09 c8                     	orq	%rcx, %r8
  208d10: 49 09 d0                     	orq	%rdx, %r8
  208d13: 49 c1 e0 08                  	shlq	$8, %r8
  208d17: 49 09 c0                     	orq	%rax, %r8
  208d1a: 4c 8b 6c 24 68               	movq	104(%rsp), %r13
  208d1f: 48 8b 4c 24 60               	movq	96(%rsp), %rcx
  208d24: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  208d29: 4c 89 e2                     	movq	%r12, %rdx
  208d2c: 4c 89 ee                     	movq	%r13, %rsi
  208d2f: e8 6c 08 01 00               	callq	0x2195a0 <dwarf.readAllocBytes__anon_6387>
  208d34: 0f b7 6c 24 30               	movzwl	48(%rsp), %ebp
  208d39: 66 85 ed                     	testw	%bp, %bp
  208d3c: 0f 85 41 02 00 00            	jne	0x208f83 <dwarf.parseFormValue__anon_5348+0x1d23>
  208d42: 48 8b 44 24 20               	movq	32(%rsp), %rax
  208d47: 48 8b 4c 24 28               	movq	40(%rsp), %rcx
  208d4c: 31 ed                        	xorl	%ebp, %ebp
  208d4e: 48 89 03                     	movq	%rax, (%rbx)
  208d51: 48 89 4b 08                  	movq	%rcx, 8(%rbx)
  208d55: c6 43 10 02                  	movb	$2, 16(%rbx)
  208d59: 66 89 6b 18                  	movw	%bp, 24(%rbx)
  208d5d: 66 83 7b 18 00               	cmpw	$0, 24(%rbx)
  208d62: 0f 84 96 04 00 00            	je	0x2091fe <dwarf.parseFormValue__anon_5348+0x1f9e>
  208d68: e9 ca 03 00 00               	jmp	0x209137 <dwarf.parseFormValue__anon_5348+0x1ed7>
  208d6d: 4c 89 ff                     	movq	%r15, %rdi
  208d70: 4d 89 fe                     	movq	%r15, %r14
  208d73: e8 d8 2f 01 00               	callq	0x21bd50 <builtin.returnError>
  208d78: 66 c7 44 24 60 33 00         	movw	$51, 96(%rsp)
  208d7f: 4c 89 f7                     	movq	%r14, %rdi
  208d82: e8 c9 2f 01 00               	callq	0x21bd50 <builtin.returnError>
  208d87: 4c 89 f7                     	movq	%r14, %rdi
  208d8a: e8 c1 2f 01 00               	callq	0x21bd50 <builtin.returnError>
  208d8f: 0f b7 44 24 60               	movzwl	96(%rsp), %eax
  208d94: 66 89 43 18                  	movw	%ax, 24(%rbx)
  208d98: e9 61 04 00 00               	jmp	0x2091fe <dwarf.parseFormValue__anon_5348+0x1f9e>
  208d9d: 4c 89 ef                     	movq	%r13, %rdi
  208da0: e8 ab 2f 01 00               	callq	0x21bd50 <builtin.returnError>
  208da5: 4c 89 ef                     	movq	%r13, %rdi
  208da8: e8 a3 2f 01 00               	callq	0x21bd50 <builtin.returnError>
  208dad: 4c 89 ef                     	movq	%r13, %rdi
  208db0: e8 9b 2f 01 00               	callq	0x21bd50 <builtin.returnError>
  208db5: 4c 89 ef                     	movq	%r13, %rdi
  208db8: e8 93 2f 01 00               	callq	0x21bd50 <builtin.returnError>
  208dbd: 66 b9 33 00                  	movw	$51, %cx
  208dc1: e9 e4 f0 ff ff               	jmp	0x207eaa <dwarf.parseFormValue__anon_5348+0xc4a>
  208dc6: 4c 89 ef                     	movq	%r13, %rdi
  208dc9: e8 82 2f 01 00               	callq	0x21bd50 <builtin.returnError>
  208dce: 4c 89 ef                     	movq	%r13, %rdi
  208dd1: e8 7a 2f 01 00               	callq	0x21bd50 <builtin.returnError>
  208dd6: 4c 89 ef                     	movq	%r13, %rdi
  208dd9: e8 72 2f 01 00               	callq	0x21bd50 <builtin.returnError>
  208dde: 4c 89 ef                     	movq	%r13, %rdi
  208de1: e8 6a 2f 01 00               	callq	0x21bd50 <builtin.returnError>
  208de6: 66 b8 33 00                  	movw	$51, %ax
  208dea: e9 dd ef ff ff               	jmp	0x207dcc <dwarf.parseFormValue__anon_5348+0xb6c>
  208def: 4c 89 ef                     	movq	%r13, %rdi
  208df2: e8 59 2f 01 00               	callq	0x21bd50 <builtin.returnError>
  208df7: 4c 89 ef                     	movq	%r13, %rdi
  208dfa: e8 51 2f 01 00               	callq	0x21bd50 <builtin.returnError>
  208dff: eb 7b                        	jmp	0x208e7c <dwarf.parseFormValue__anon_5348+0x1c1c>
  208e01: 4c 89 ef                     	movq	%r13, %rdi
  208e04: e8 47 2f 01 00               	callq	0x21bd50 <builtin.returnError>
  208e09: 66 c7 43 18 34 00            	movw	$52, 24(%rbx)
  208e0f: 4c 89 ef                     	movq	%r13, %rdi
  208e12: 48 81 c4 08 01 00 00         	addq	$264, %rsp              # imm = 0x108
  208e19: 5b                           	popq	%rbx
  208e1a: 41 5c                        	popq	%r12
  208e1c: 41 5d                        	popq	%r13
  208e1e: 41 5e                        	popq	%r14
  208e20: 41 5f                        	popq	%r15
  208e22: 5d                           	popq	%rbp
  208e23: e9 28 2f 01 00               	jmp	0x21bd50 <builtin.returnError>
  208e28: 4c 89 ef                     	movq	%r13, %rdi
  208e2b: e8 20 2f 01 00               	callq	0x21bd50 <builtin.returnError>
  208e30: 4c 89 ef                     	movq	%r13, %rdi
  208e33: e8 18 2f 01 00               	callq	0x21bd50 <builtin.returnError>
  208e38: 4c 89 ef                     	movq	%r13, %rdi
  208e3b: e8 10 2f 01 00               	callq	0x21bd50 <builtin.returnError>
  208e40: 4c 89 ef                     	movq	%r13, %rdi
  208e43: e8 08 2f 01 00               	callq	0x21bd50 <builtin.returnError>
  208e48: 4c 89 ef                     	movq	%r13, %rdi
  208e4b: e8 00 2f 01 00               	callq	0x21bd50 <builtin.returnError>
  208e50: 66 c7 43 18 33 00            	movw	$51, 24(%rbx)
  208e56: e9 a3 03 00 00               	jmp	0x2091fe <dwarf.parseFormValue__anon_5348+0x1f9e>
  208e5b: 4c 8b 6c 24 68               	movq	104(%rsp), %r13
  208e60: 4c 89 ef                     	movq	%r13, %rdi
  208e63: e8 e8 2e 01 00               	callq	0x21bd50 <builtin.returnError>
  208e68: 4c 89 ef                     	movq	%r13, %rdi
  208e6b: e8 e0 2e 01 00               	callq	0x21bd50 <builtin.returnError>
  208e70: 4c 89 ef                     	movq	%r13, %rdi
  208e73: e8 d8 2e 01 00               	callq	0x21bd50 <builtin.returnError>
  208e78: 66 bd 33 00                  	movw	$51, %bp
  208e7c: e9 93 ed ff ff               	jmp	0x207c14 <dwarf.parseFormValue__anon_5348+0x9b4>
  208e81: 4c 8b 6c 24 68               	movq	104(%rsp), %r13
  208e86: 4c 89 ef                     	movq	%r13, %rdi
  208e89: e8 c2 2e 01 00               	callq	0x21bd50 <builtin.returnError>
  208e8e: 4c 89 ef                     	movq	%r13, %rdi
  208e91: e8 ba 2e 01 00               	callq	0x21bd50 <builtin.returnError>
  208e96: 4c 89 ef                     	movq	%r13, %rdi
  208e99: e8 b2 2e 01 00               	callq	0x21bd50 <builtin.returnError>
  208e9e: 66 bd 33 00                  	movw	$51, %bp
  208ea2: e9 ec 00 00 00               	jmp	0x208f93 <dwarf.parseFormValue__anon_5348+0x1d33>
  208ea7: 4c 89 ef                     	movq	%r13, %rdi
  208eaa: e8 a1 2e 01 00               	callq	0x21bd50 <builtin.returnError>
  208eaf: 4c 89 ef                     	movq	%r13, %rdi
  208eb2: e8 99 2e 01 00               	callq	0x21bd50 <builtin.returnError>
  208eb7: 4c 89 ef                     	movq	%r13, %rdi
  208eba: e8 91 2e 01 00               	callq	0x21bd50 <builtin.returnError>
  208ebf: 4c 89 ef                     	movq	%r13, %rdi
  208ec2: e8 89 2e 01 00               	callq	0x21bd50 <builtin.returnError>
  208ec7: 66 b8 33 00                  	movw	$51, %ax
  208ecb: e9 ac e8 ff ff               	jmp	0x20777c <dwarf.parseFormValue__anon_5348+0x51c>
  208ed0: 4c 89 ef                     	movq	%r13, %rdi
  208ed3: e8 78 2e 01 00               	callq	0x21bd50 <builtin.returnError>
  208ed8: 4c 89 ef                     	movq	%r13, %rdi
  208edb: e8 70 2e 01 00               	callq	0x21bd50 <builtin.returnError>
  208ee0: 4c 89 ef                     	movq	%r13, %rdi
  208ee3: e8 68 2e 01 00               	callq	0x21bd50 <builtin.returnError>
  208ee8: 4c 89 ef                     	movq	%r13, %rdi
  208eeb: e8 60 2e 01 00               	callq	0x21bd50 <builtin.returnError>
  208ef0: 66 b8 33 00                  	movw	$51, %ax
  208ef4: e9 fd e8 ff ff               	jmp	0x2077f6 <dwarf.parseFormValue__anon_5348+0x596>
  208ef9: 4c 89 ef                     	movq	%r13, %rdi
  208efc: e8 4f 2e 01 00               	callq	0x21bd50 <builtin.returnError>
  208f01: 4c 89 ef                     	movq	%r13, %rdi
  208f04: e8 47 2e 01 00               	callq	0x21bd50 <builtin.returnError>
  208f09: 4c 89 ef                     	movq	%r13, %rdi
  208f0c: e8 3f 2e 01 00               	callq	0x21bd50 <builtin.returnError>
  208f11: 4c 89 ef                     	movq	%r13, %rdi
  208f14: e8 37 2e 01 00               	callq	0x21bd50 <builtin.returnError>
  208f19: 66 b8 33 00                  	movw	$51, %ax
  208f1d: e9 58 e9 ff ff               	jmp	0x20787a <dwarf.parseFormValue__anon_5348+0x61a>
  208f22: 4c 89 ef                     	movq	%r13, %rdi
  208f25: e8 26 2e 01 00               	callq	0x21bd50 <builtin.returnError>
  208f2a: c5 fc 10 05 2e 73 ff ff      	vmovups	-36050(%rip), %ymm0     # 0x200260 <zig-graph+0x200260>
  208f32: c5 fc 11 03                  	vmovups	%ymm0, (%rbx)
  208f36: e9 c3 02 00 00               	jmp	0x2091fe <dwarf.parseFormValue__anon_5348+0x1f9e>
  208f3b: 4c 89 ef                     	movq	%r13, %rdi
  208f3e: e8 0d 2e 01 00               	callq	0x21bd50 <builtin.returnError>
  208f43: 4c 89 ef                     	movq	%r13, %rdi
  208f46: e8 05 2e 01 00               	callq	0x21bd50 <builtin.returnError>
  208f4b: 4c 89 ef                     	movq	%r13, %rdi
  208f4e: e8 fd 2d 01 00               	callq	0x21bd50 <builtin.returnError>
  208f53: 4c 89 ef                     	movq	%r13, %rdi
  208f56: e8 f5 2d 01 00               	callq	0x21bd50 <builtin.returnError>
  208f5b: 66 b8 33 00                  	movw	$51, %ax
  208f5f: e9 f0 ec ff ff               	jmp	0x207c54 <dwarf.parseFormValue__anon_5348+0x9f4>
  208f64: 4c 89 ef                     	movq	%r13, %rdi
  208f67: e8 e4 2d 01 00               	callq	0x21bd50 <builtin.returnError>
  208f6c: e9 77 ef ff ff               	jmp	0x207ee8 <dwarf.parseFormValue__anon_5348+0xc88>
  208f71: 4c 89 ef                     	movq	%r13, %rdi
  208f74: e8 d7 2d 01 00               	callq	0x21bd50 <builtin.returnError>
  208f79: 66 44 89 7b 18               	movw	%r15w, 24(%rbx)
  208f7e: e9 7b 02 00 00               	jmp	0x2091fe <dwarf.parseFormValue__anon_5348+0x1f9e>
  208f83: 4c 89 ef                     	movq	%r13, %rdi
  208f86: e8 c5 2d 01 00               	callq	0x21bd50 <builtin.returnError>
  208f8b: 4c 89 ef                     	movq	%r13, %rdi
  208f8e: e8 bd 2d 01 00               	callq	0x21bd50 <builtin.returnError>
  208f93: e9 b6 fd ff ff               	jmp	0x208d4e <dwarf.parseFormValue__anon_5348+0x1aee>
  208f98: 4c 89 f7                     	movq	%r14, %rdi
  208f9b: e8 b0 2d 01 00               	callq	0x21bd50 <builtin.returnError>
  208fa0: 4c 89 f7                     	movq	%r14, %rdi
  208fa3: c6 43 10 02                  	movb	$2, 16(%rbx)
  208fa7: 66 89 6b 18                  	movw	%bp, 24(%rbx)
  208fab: e8 a0 2d 01 00               	callq	0x21bd50 <builtin.returnError>
  208fb0: e9 49 02 00 00               	jmp	0x2091fe <dwarf.parseFormValue__anon_5348+0x1f9e>
  208fb5: 4c 89 f7                     	movq	%r14, %rdi
  208fb8: e9 38 02 00 00               	jmp	0x2091f5 <dwarf.parseFormValue__anon_5348+0x1f95>
  208fbd: 49 8b 34 24                  	movq	(%r12), %rsi
  208fc1: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  208fc6: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  208fcb: b9 01 00 00 00               	movl	$1, %ecx
  208fd0: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  208fd5: e8 a6 02 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  208fda: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  208fe0: 0f 84 f8 01 00 00            	je	0x2091de <dwarf.parseFormValue__anon_5348+0x1f7e>
  208fe6: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  208feb: 4d 89 ef                     	movq	%r13, %r15
  208fee: 89 c1                        	movl	%eax, %ecx
  208ff0: 83 e1 7f                     	andl	$127, %ecx
  208ff3: 48 c1 e1 2a                  	shlq	$42, %rcx
  208ff7: 49 09 ce                     	orq	%rcx, %r14
  208ffa: 84 c0                        	testb	%al, %al
  208ffc: 0f 89 86 00 00 00            	jns	0x209088 <dwarf.parseFormValue__anon_5348+0x1e28>
  209002: 49 8b 34 24                  	movq	(%r12), %rsi
  209006: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20900b: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  209010: b9 01 00 00 00               	movl	$1, %ecx
  209015: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20901a: e8 61 02 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20901f: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  209025: 4d 89 fd                     	movq	%r15, %r13
  209028: 0f 84 b0 01 00 00            	je	0x2091de <dwarf.parseFormValue__anon_5348+0x1f7e>
  20902e: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  209033: 89 c1                        	movl	%eax, %ecx
  209035: 83 e1 7f                     	andl	$127, %ecx
  209038: 48 c1 e1 31                  	shlq	$49, %rcx
  20903c: 49 09 ce                     	orq	%rcx, %r14
  20903f: 84 c0                        	testb	%al, %al
  209041: 79 45                        	jns	0x209088 <dwarf.parseFormValue__anon_5348+0x1e28>
  209043: 49 8b 34 24                  	movq	(%r12), %rsi
  209047: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20904c: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  209051: b9 01 00 00 00               	movl	$1, %ecx
  209056: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20905b: e8 20 02 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  209060: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  209066: 4d 89 fd                     	movq	%r15, %r13
  209069: 0f 84 6f 01 00 00            	je	0x2091de <dwarf.parseFormValue__anon_5348+0x1f7e>
  20906f: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  209074: 89 c1                        	movl	%eax, %ecx
  209076: 83 e1 7f                     	andl	$127, %ecx
  209079: 48 c1 e1 38                  	shlq	$56, %rcx
  20907d: 49 09 ce                     	orq	%rcx, %r14
  209080: 84 c0                        	testb	%al, %al
  209082: 0f 88 0b 01 00 00            	js	0x209193 <dwarf.parseFormValue__anon_5348+0x1f33>
  209088: 4d 89 fd                     	movq	%r15, %r13
  20908b: 4c 89 33                     	movq	%r14, (%rbx)
  20908e: e9 44 fb ff ff               	jmp	0x208bd7 <dwarf.parseFormValue__anon_5348+0x1977>
  209093: bf 59 1d 20 00               	movl	$2104665, %edi          # imm = 0x201D59
  209098: be 10 00 00 00               	movl	$16, %esi
  20909d: 31 c9                        	xorl	%ecx, %ecx
  20909f: e8 6c 22 01 00               	callq	0x21b310 <builtin.default_panic>
  2090a4: 49 8b 34 24                  	movq	(%r12), %rsi
  2090a8: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  2090ad: 48 8d 54 24 0f               	leaq	15(%rsp), %rdx
  2090b2: b9 01 00 00 00               	movl	$1, %ecx
  2090b7: c6 44 24 0f aa               	movb	$-86, 15(%rsp)
  2090bc: e8 bf 01 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2090c1: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  2090c7: 4d 89 fd                     	movq	%r15, %r13
  2090ca: 74 3f                        	je	0x20910b <dwarf.parseFormValue__anon_5348+0x1eab>
  2090cc: 0f b6 4c 24 0f               	movzbl	15(%rsp), %ecx
  2090d1: 48 89 c8                     	movq	%rcx, %rax
  2090d4: 48 c1 e0 3f                  	shlq	$63, %rax
  2090d8: f6 c1 7e                     	testb	$126, %cl
  2090db: 0f 84 32 01 00 00            	je	0x209213 <dwarf.parseFormValue__anon_5348+0x1fb3>
  2090e1: 80 e1 fe                     	andb	$-2, %cl
  2090e4: 66 bd 29 00                  	movw	$41, %bp
  2090e8: 80 f9 7e                     	cmpb	$126, %cl
  2090eb: 0f 85 56 01 00 00            	jne	0x209247 <dwarf.parseFormValue__anon_5348+0x1fe7>
  2090f1: 4d 89 fd                     	movq	%r15, %r13
  2090f4: 48 85 c0                     	testq	%rax, %rax
  2090f7: 74 1e                        	je	0x209117 <dwarf.parseFormValue__anon_5348+0x1eb7>
  2090f9: 48 b8 00 00 00 00 00 00 00 80	movabsq	$-9223372036854775808, %rax # imm = 0x8000000000000000
  209103: 49 09 c6                     	orq	%rax, %r14
  209106: e9 03 fb ff ff               	jmp	0x208c0e <dwarf.parseFormValue__anon_5348+0x19ae>
  20910b: 4c 89 ef                     	movq	%r13, %rdi
  20910e: e8 3d 2c 01 00               	callq	0x21bd50 <builtin.returnError>
  209113: 66 bd 33 00                  	movw	$51, %bp
  209117: 4c 89 ef                     	movq	%r13, %rdi
  20911a: e8 31 2c 01 00               	callq	0x21bd50 <builtin.returnError>
  20911f: 4c 89 ef                     	movq	%r13, %rdi
  209122: e8 29 2c 01 00               	callq	0x21bd50 <builtin.returnError>
  209127: 0f b6 44 24 38               	movzbl	56(%rsp), %eax
  20912c: 88 43 08                     	movb	%al, 8(%rbx)
  20912f: c6 43 10 03                  	movb	$3, 16(%rbx)
  209133: 66 89 6b 18                  	movw	%bp, 24(%rbx)
  209137: 4c 89 ef                     	movq	%r13, %rdi
  20913a: c5 f8 77                     	vzeroupper
  20913d: e8 0e 2c 01 00               	callq	0x21bd50 <builtin.returnError>
  209142: e9 b7 00 00 00               	jmp	0x2091fe <dwarf.parseFormValue__anon_5348+0x1f9e>
  209147: 49 8b 34 24                  	movq	(%r12), %rsi
  20914b: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  209150: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  209155: b9 01 00 00 00               	movl	$1, %ecx
  20915a: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20915f: e8 1c 01 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  209164: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20916a: 4d 89 fd                     	movq	%r15, %r13
  20916d: 74 6f                        	je	0x2091de <dwarf.parseFormValue__anon_5348+0x1f7e>
  20916f: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  209174: 66 bd 29 00                  	movw	$41, %bp
  209178: a8 7e                        	testb	$126, %al
  20917a: 0f 85 c2 00 00 00            	jne	0x209242 <dwarf.parseFormValue__anon_5348+0x1fe2>
  209180: 4d 89 fd                     	movq	%r15, %r13
  209183: 84 c0                        	testb	%al, %al
  209185: 78 63                        	js	0x2091ea <dwarf.parseFormValue__anon_5348+0x1f8a>
  209187: 48 c1 e0 3f                  	shlq	$63, %rax
  20918b: 49 09 c6                     	orq	%rax, %r14
  20918e: e9 76 f3 ff ff               	jmp	0x208509 <dwarf.parseFormValue__anon_5348+0x12a9>
  209193: 49 8b 34 24                  	movq	(%r12), %rsi
  209197: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20919c: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  2091a1: b9 01 00 00 00               	movl	$1, %ecx
  2091a6: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  2091ab: e8 d0 00 01 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2091b0: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  2091b6: 4d 89 fd                     	movq	%r15, %r13
  2091b9: 74 23                        	je	0x2091de <dwarf.parseFormValue__anon_5348+0x1f7e>
  2091bb: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  2091c0: 66 bd 29 00                  	movw	$41, %bp
  2091c4: a8 7e                        	testb	$126, %al
  2091c6: 75 7a                        	jne	0x209242 <dwarf.parseFormValue__anon_5348+0x1fe2>
  2091c8: 4d 89 fd                     	movq	%r15, %r13
  2091cb: 84 c0                        	testb	%al, %al
  2091cd: 78 1b                        	js	0x2091ea <dwarf.parseFormValue__anon_5348+0x1f8a>
  2091cf: 48 c1 e0 3f                  	shlq	$63, %rax
  2091d3: 49 09 c6                     	orq	%rax, %r14
  2091d6: 4c 89 33                     	movq	%r14, (%rbx)
  2091d9: e9 f9 f9 ff ff               	jmp	0x208bd7 <dwarf.parseFormValue__anon_5348+0x1977>
  2091de: 4c 89 ef                     	movq	%r13, %rdi
  2091e1: e8 6a 2b 01 00               	callq	0x21bd50 <builtin.returnError>
  2091e6: 66 bd 33 00                  	movw	$51, %bp
  2091ea: 4c 89 ef                     	movq	%r13, %rdi
  2091ed: e8 5e 2b 01 00               	callq	0x21bd50 <builtin.returnError>
  2091f2: 4c 89 ef                     	movq	%r13, %rdi
  2091f5: e8 56 2b 01 00               	callq	0x21bd50 <builtin.returnError>
  2091fa: 66 89 6b 18                  	movw	%bp, 24(%rbx)
  2091fe: 48 81 c4 08 01 00 00         	addq	$264, %rsp              # imm = 0x108
  209205: 5b                           	popq	%rbx
  209206: 41 5c                        	popq	%r12
  209208: 41 5d                        	popq	%r13
  20920a: 41 5e                        	popq	%r14
  20920c: 41 5f                        	popq	%r15
  20920e: 5d                           	popq	%rbp
  20920f: c5 f8 77                     	vzeroupper
  209212: c3                           	retq
  209213: 66 bd 29 00                  	movw	$41, %bp
  209217: 84 c9                        	testb	%cl, %cl
  209219: 78 05                        	js	0x209220 <dwarf.parseFormValue__anon_5348+0x1fc0>
  20921b: 48 85 c0                     	testq	%rax, %rax
  20921e: 75 27                        	jne	0x209247 <dwarf.parseFormValue__anon_5348+0x1fe7>
  209220: 4d 89 fd                     	movq	%r15, %r13
  209223: 84 c9                        	testb	%cl, %cl
  209225: 0f 88 ec fe ff ff            	js	0x209117 <dwarf.parseFormValue__anon_5348+0x1eb7>
  20922b: 49 09 c6                     	orq	%rax, %r14
  20922e: e9 db f9 ff ff               	jmp	0x208c0e <dwarf.parseFormValue__anon_5348+0x19ae>
  209233: 4d 89 fe                     	movq	%r15, %r14
  209236: 66 c7 44 24 60 29 00         	movw	$41, 96(%rsp)
  20923d: e9 3d fb ff ff               	jmp	0x208d7f <dwarf.parseFormValue__anon_5348+0x1b1f>
  209242: 4d 89 fd                     	movq	%r15, %r13
  209245: eb a3                        	jmp	0x2091ea <dwarf.parseFormValue__anon_5348+0x1f8a>
  209247: 4d 89 fd                     	movq	%r15, %r13
  20924a: e9 c8 fe ff ff               	jmp	0x209117 <dwarf.parseFormValue__anon_5348+0x1eb7>
  20924f: 90                           	nop

0000000000209250 <dwarf.Die.getAttrString>:
  209250: 55                           	pushq	%rbp
  209251: 41 56                        	pushq	%r14
  209253: 53                           	pushq	%rbx
  209254: 48 81 ec 80 00 00 00         	subq	$128, %rsp
  20925b: 49 89 f6                     	movq	%rsi, %r14
  20925e: 48 8b 72 30                  	movq	48(%rdx), %rsi
  209262: 48 89 fb                     	movq	%rdi, %rbx
  209265: 48 85 f6                     	testq	%rsi, %rsi
  209268: 74 35                        	je	0x20929f <dwarf.Die.getAttrString+0x4f>
  20926a: 48 8b 52 28                  	movq	40(%rdx), %rdx
  20926e: 48 89 c8                     	movq	%rcx, %rax
  209271: 4c 8b 94 24 a8 00 00 00      	movq	168(%rsp), %r10
  209279: 48 8b 8c 24 a0 00 00 00      	movq	160(%rsp), %rcx
  209281: 48 83 c2 18                  	addq	$24, %rdx
  209285: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
  209290: 4c 39 42 e8                  	cmpq	%r8, -24(%rdx)
  209294: 74 2a                        	je	0x2092c0 <dwarf.Die.getAttrString+0x70>
  209296: 48 83 c2 20                  	addq	$32, %rdx
  20929a: 48 ff ce                     	decq	%rsi
  20929d: 75 f1                        	jne	0x209290 <dwarf.Die.getAttrString+0x40>
  20929f: 4c 89 f7                     	movq	%r14, %rdi
  2092a2: e8 a9 2a 01 00               	callq	0x21bd50 <builtin.returnError>
  2092a7: c5 f8 10 05 79 85 ff ff      	vmovups	-31367(%rip), %xmm0     # 0x201828 <heap.arena_allocator.ArenaAllocator.allocator__anon_6362+0x18>
  2092af: 48 c7 43 10 18 00 00 00      	movq	$24, 16(%rbx)
  2092b7: c5 f8 11 03                  	vmovups	%xmm0, (%rbx)
  2092bb: e9 11 02 00 00               	jmp	0x2094d1 <dwarf.Die.getAttrString+0x281>
  2092c0: 0f b6 32                     	movzbl	(%rdx), %esi
  2092c3: 83 c6 f7                     	addl	$-9, %esi
  2092c6: 83 fe 03                     	cmpl	$3, %esi
  2092c9: 0f 87 0e 02 00 00            	ja	0x2094dd <dwarf.Die.getAttrString+0x28d>
  2092cf: 4c 8b 42 f0                  	movq	-16(%rdx), %r8
  2092d3: ff 24 f5 68 0a 20 00         	jmpq	*2099816(,%rsi,8)
  2092da: 48 8b 42 f8                  	movq	-8(%rdx), %rax
  2092de: 4c 89 03                     	movq	%r8, (%rbx)
  2092e1: 48 89 43 08                  	movq	%rax, 8(%rbx)
  2092e5: 66 c7 43 10 00 00            	movw	$0, 16(%rbx)
  2092eb: e9 e1 01 00 00               	jmp	0x2094d1 <dwarf.Die.getAttrString+0x281>
  2092f0: 48 8b 50 20                  	movq	32(%rax), %rdx
  2092f4: 48 8b 48 28                  	movq	40(%rax), %rcx
  2092f8: 48 8d 7c 24 18               	leaq	24(%rsp), %rdi
  2092fd: 4c 89 f6                     	movq	%r14, %rsi
  209300: e8 0b 3e 00 00               	callq	0x20d110 <dwarf.getStringGeneric>
  209305: c5 f8 10 44 24 18            	vmovups	24(%rsp), %xmm0
  20930b: 0f b7 4c 24 2e               	movzwl	46(%rsp), %ecx
  209310: 0f b7 6c 24 28               	movzwl	40(%rsp), %ebp
  209315: 8b 44 24 2a                  	movl	42(%rsp), %eax
  209319: 89 44 24 08                  	movl	%eax, 8(%rsp)
  20931d: 66 89 4c 24 0c               	movw	%cx, 12(%rsp)
  209322: c5 f8 29 44 24 30            	vmovaps	%xmm0, 48(%rsp)
  209328: 66 85 ed                     	testw	%bp, %bp
  20932b: 0f 85 bc 01 00 00            	jne	0x2094ed <dwarf.Die.getAttrString+0x29d>
  209331: c5 f8 28 44 24 30            	vmovaps	48(%rsp), %xmm0
  209337: 8b 44 24 08                  	movl	8(%rsp), %eax
  20933b: c5 f8 11 03                  	vmovups	%xmm0, (%rbx)
  20933f: 66 c7 43 10 00 00            	movw	$0, 16(%rbx)
  209345: 89 43 12                     	movl	%eax, 18(%rbx)
  209348: 0f b7 44 24 0c               	movzwl	12(%rsp), %eax
  20934d: e9 fe 00 00 00               	jmp	0x209450 <dwarf.Die.getAttrString+0x200>
  209352: 48 8b 50 30                  	movq	48(%rax), %rdx
  209356: 48 85 d2                     	testq	%rdx, %rdx
  209359: 0f 84 7e 01 00 00            	je	0x2094dd <dwarf.Die.getAttrString+0x28d>
  20935f: 49 8b 72 20                  	movq	32(%r10), %rsi
  209363: 48 85 f6                     	testq	%rsi, %rsi
  209366: 0f 84 71 01 00 00            	je	0x2094dd <dwarf.Die.getAttrString+0x28d>
  20936c: 41 80 7a 42 01               	cmpb	$1, 66(%r10)
  209371: 48 8b 78 38                  	movq	56(%rax), %rdi
  209375: 0f 85 db 00 00 00            	jne	0x209456 <dwarf.Die.getAttrString+0x206>
  20937b: 4d 89 c2                     	movq	%r8, %r10
  20937e: 49 c1 ea 3d                  	shrq	$61, %r10
  209382: 0f 85 b7 01 00 00            	jne	0x20953f <dwarf.Die.getAttrString+0x2ef>
  209388: 49 c1 e0 03                  	shlq	$3, %r8
  20938c: 4c 01 c6                     	addq	%r8, %rsi
  20938f: 0f 82 aa 01 00 00            	jb	0x20953f <dwarf.Die.getAttrString+0x2ef>
  209395: 49 89 f0                     	movq	%rsi, %r8
  209398: 49 83 c0 08                  	addq	$8, %r8
  20939c: 0f 82 9d 01 00 00            	jb	0x20953f <dwarf.Die.getAttrString+0x2ef>
  2093a2: 49 39 f8                     	cmpq	%rdi, %r8
  2093a5: 0f 87 32 01 00 00            	ja	0x2094dd <dwarf.Die.getAttrString+0x28d>
  2093ab: 48 29 f7                     	subq	%rsi, %rdi
  2093ae: 0f 82 9c 01 00 00            	jb	0x209550 <dwarf.Die.getAttrString+0x300>
  2093b4: 48 83 ff 07                  	cmpq	$7, %rdi
  2093b8: 0f 86 a3 01 00 00            	jbe	0x209561 <dwarf.Die.getAttrString+0x311>
  2093be: 48 8b 14 32                  	movq	(%rdx,%rsi), %rdx
  2093c2: 80 b8 08 01 00 00 00         	cmpb	$0, 264(%rax)
  2093c9: 48 8d 7c 24 50               	leaq	80(%rsp), %rdi
  2093ce: 4c 89 f6                     	movq	%r14, %rsi
  2093d1: 49 89 d0                     	movq	%rdx, %r8
  2093d4: 49 0f c8                     	bswapq	%r8
  2093d7: 4c 0f 45 c2                  	cmovneq	%rdx, %r8
  2093db: 4c 89 ca                     	movq	%r9, %rdx
  2093de: e8 2d 3d 00 00               	callq	0x20d110 <dwarf.getStringGeneric>
  2093e3: c5 f8 10 44 24 50            	vmovups	80(%rsp), %xmm0
  2093e9: 48 8b 44 24 60               	movq	96(%rsp), %rax
  2093ee: e9 d1 00 00 00               	jmp	0x2094c4 <dwarf.Die.getAttrString+0x274>
  2093f3: 48 8b 50 50                  	movq	80(%rax), %rdx
  2093f7: 48 8b 48 58                  	movq	88(%rax), %rcx
  2093fb: 48 8d 7c 24 18               	leaq	24(%rsp), %rdi
  209400: 4c 89 f6                     	movq	%r14, %rsi
  209403: e8 08 3d 00 00               	callq	0x20d110 <dwarf.getStringGeneric>
  209408: c5 f8 10 44 24 18            	vmovups	24(%rsp), %xmm0
  20940e: 0f b7 4c 24 2e               	movzwl	46(%rsp), %ecx
  209413: 0f b7 6c 24 28               	movzwl	40(%rsp), %ebp
  209418: 8b 44 24 2a                  	movl	42(%rsp), %eax
  20941c: 89 44 24 10                  	movl	%eax, 16(%rsp)
  209420: 66 89 4c 24 14               	movw	%cx, 20(%rsp)
  209425: c5 f8 29 44 24 40            	vmovaps	%xmm0, 64(%rsp)
  20942b: 66 85 ed                     	testw	%bp, %bp
  20942e: 0f 85 d2 00 00 00            	jne	0x209506 <dwarf.Die.getAttrString+0x2b6>
  209434: c5 f8 28 44 24 40            	vmovaps	64(%rsp), %xmm0
  20943a: 8b 44 24 10                  	movl	16(%rsp), %eax
  20943e: c5 f8 11 03                  	vmovups	%xmm0, (%rbx)
  209442: 66 c7 43 10 00 00            	movw	$0, 16(%rbx)
  209448: 89 43 12                     	movl	%eax, 18(%rbx)
  20944b: 0f b7 44 24 14               	movzwl	20(%rsp), %eax
  209450: 66 89 43 16                  	movw	%ax, 22(%rbx)
  209454: eb 7b                        	jmp	0x2094d1 <dwarf.Die.getAttrString+0x281>
  209456: 4d 89 c2                     	movq	%r8, %r10
  209459: 49 c1 ea 3e                  	shrq	$62, %r10
  20945d: 0f 85 dc 00 00 00            	jne	0x20953f <dwarf.Die.getAttrString+0x2ef>
  209463: 49 c1 e0 02                  	shlq	$2, %r8
  209467: 4c 01 c6                     	addq	%r8, %rsi
  20946a: 0f 82 cf 00 00 00            	jb	0x20953f <dwarf.Die.getAttrString+0x2ef>
  209470: 49 89 f0                     	movq	%rsi, %r8
  209473: 49 83 c0 04                  	addq	$4, %r8
  209477: 0f 82 c2 00 00 00            	jb	0x20953f <dwarf.Die.getAttrString+0x2ef>
  20947d: 49 39 f8                     	cmpq	%rdi, %r8
  209480: 77 5b                        	ja	0x2094dd <dwarf.Die.getAttrString+0x28d>
  209482: 48 29 f7                     	subq	%rsi, %rdi
  209485: 0f 82 c5 00 00 00            	jb	0x209550 <dwarf.Die.getAttrString+0x300>
  20948b: 48 83 ff 03                  	cmpq	$3, %rdi
  20948f: 0f 86 cc 00 00 00            	jbe	0x209561 <dwarf.Die.getAttrString+0x311>
  209495: 8b 14 32                     	movl	(%rdx,%rsi), %edx
  209498: 80 b8 08 01 00 00 00         	cmpb	$0, 264(%rax)
  20949f: 48 8d 7c 24 68               	leaq	104(%rsp), %rdi
  2094a4: 4c 89 f6                     	movq	%r14, %rsi
  2094a7: 41 89 d0                     	movl	%edx, %r8d
  2094aa: 41 0f c8                     	bswapl	%r8d
  2094ad: 44 0f 45 c2                  	cmovnel	%edx, %r8d
  2094b1: 4c 89 ca                     	movq	%r9, %rdx
  2094b4: e8 57 3c 00 00               	callq	0x20d110 <dwarf.getStringGeneric>
  2094b9: c5 f8 10 44 24 68            	vmovups	104(%rsp), %xmm0
  2094bf: 48 8b 44 24 78               	movq	120(%rsp), %rax
  2094c4: 48 89 43 10                  	movq	%rax, 16(%rbx)
  2094c8: c5 f8 11 03                  	vmovups	%xmm0, (%rbx)
  2094cc: 66 85 c0                     	testw	%ax, %ax
  2094cf: 75 5b                        	jne	0x20952c <dwarf.Die.getAttrString+0x2dc>
  2094d1: 48 81 c4 80 00 00 00         	addq	$128, %rsp
  2094d8: 5b                           	popq	%rbx
  2094d9: 41 5e                        	popq	%r14
  2094db: 5d                           	popq	%rbp
  2094dc: c3                           	retq
  2094dd: 4c 89 f7                     	movq	%r14, %rdi
  2094e0: e8 6b 28 01 00               	callq	0x21bd50 <builtin.returnError>
  2094e5: 66 c7 43 10 34 00            	movw	$52, 16(%rbx)
  2094eb: eb 3f                        	jmp	0x20952c <dwarf.Die.getAttrString+0x2dc>
  2094ed: 4c 89 f7                     	movq	%r14, %rdi
  2094f0: e8 5b 28 01 00               	callq	0x21bd50 <builtin.returnError>
  2094f5: c5 f8 28 44 24 30            	vmovaps	48(%rsp), %xmm0
  2094fb: 0f b7 4c 24 0c               	movzwl	12(%rsp), %ecx
  209500: 8b 44 24 08                  	movl	8(%rsp), %eax
  209504: eb 17                        	jmp	0x20951d <dwarf.Die.getAttrString+0x2cd>
  209506: 4c 89 f7                     	movq	%r14, %rdi
  209509: e8 42 28 01 00               	callq	0x21bd50 <builtin.returnError>
  20950e: c5 f8 28 44 24 40            	vmovaps	64(%rsp), %xmm0
  209514: 0f b7 4c 24 14               	movzwl	20(%rsp), %ecx
  209519: 8b 44 24 10                  	movl	16(%rsp), %eax
  20951d: c5 f8 11 03                  	vmovups	%xmm0, (%rbx)
  209521: 66 89 6b 10                  	movw	%bp, 16(%rbx)
  209525: 89 43 12                     	movl	%eax, 18(%rbx)
  209528: 66 89 4b 16                  	movw	%cx, 22(%rbx)
  20952c: 4c 89 f7                     	movq	%r14, %rdi
  20952f: 48 81 c4 80 00 00 00         	addq	$128, %rsp
  209536: 5b                           	popq	%rbx
  209537: 41 5e                        	popq	%r14
  209539: 5d                           	popq	%rbp
  20953a: e9 11 28 01 00               	jmp	0x21bd50 <builtin.returnError>
  20953f: bf 59 1d 20 00               	movl	$2104665, %edi          # imm = 0x201D59
  209544: be 10 00 00 00               	movl	$16, %esi
  209549: 31 c9                        	xorl	%ecx, %ecx
  20954b: e8 c0 1d 01 00               	callq	0x21b310 <builtin.default_panic>
  209550: bf 34 1d 20 00               	movl	$2104628, %edi          # imm = 0x201D34
  209555: be 24 00 00 00               	movl	$36, %esi
  20955a: 31 c9                        	xorl	%ecx, %ecx
  20955c: e8 af 1d 01 00               	callq	0x21b310 <builtin.default_panic>
  209561: bf 9c 1e 20 00               	movl	$2104988, %edi          # imm = 0x201E9C
  209566: be 13 00 00 00               	movl	$19, %esi
  20956b: 31 c9                        	xorl	%ecx, %ecx
  20956d: e8 9e 1d 01 00               	callq	0x21b310 <builtin.default_panic>
  209572: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)

0000000000209580 <dwarf.Die.getAttrAddr>:
  209580: 41 56                        	pushq	%r14
  209582: 53                           	pushq	%rbx
  209583: 50                           	pushq	%rax
  209584: 48 8b 42 30                  	movq	48(%rdx), %rax
  209588: 49 89 f6                     	movq	%rsi, %r14
  20958b: 48 89 fb                     	movq	%rdi, %rbx
  20958e: 48 85 c0                     	testq	%rax, %rax
  209591: 74 1c                        	je	0x2095af <dwarf.Die.getAttrAddr+0x2f>
  209593: 48 8b 52 28                  	movq	40(%rdx), %rdx
  209597: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
  2095a0: 48 83 3a 11                  	cmpq	$17, (%rdx)
  2095a4: 74 25                        	je	0x2095cb <dwarf.Die.getAttrAddr+0x4b>
  2095a6: 48 83 c2 20                  	addq	$32, %rdx
  2095aa: 48 ff c8                     	decq	%rax
  2095ad: 75 f1                        	jne	0x2095a0 <dwarf.Die.getAttrAddr+0x20>
  2095af: 4c 89 f7                     	movq	%r14, %rdi
  2095b2: e8 99 27 01 00               	callq	0x21bd50 <builtin.returnError>
  2095b7: c5 f8 10 05 f1 6c ff ff      	vmovups	-37647(%rip), %xmm0     # 0x2002b0 <zig-graph+0x2002b0>
  2095bf: c5 f8 11 03                  	vmovups	%xmm0, (%rbx)
  2095c3: 48 83 c4 08                  	addq	$8, %rsp
  2095c7: 5b                           	popq	%rbx
  2095c8: 41 5e                        	popq	%r14
  2095ca: c3                           	retq
  2095cb: 4c 8b 4a 08                  	movq	8(%rdx), %r9
  2095cf: 0f b6 42 18                  	movzbl	24(%rdx), %eax
  2095d3: 83 f8 01                     	cmpl	$1, %eax
  2095d6: 74 19                        	je	0x2095f1 <dwarf.Die.getAttrAddr+0x71>
  2095d8: 85 c0                        	testl	%eax, %eax
  2095da: 0f 85 64 01 00 00            	jne	0x209744 <dwarf.Die.getAttrAddr+0x1c4>
  2095e0: 4c 89 0b                     	movq	%r9, (%rbx)
  2095e3: 66 c7 43 08 00 00            	movw	$0, 8(%rbx)
  2095e9: 48 83 c4 08                  	addq	$8, %rsp
  2095ed: 5b                           	popq	%rbx
  2095ee: 41 5e                        	popq	%r14
  2095f0: c3                           	retq
  2095f1: 48 8b b1 90 00 00 00         	movq	144(%rcx), %rsi
  2095f8: 48 85 f6                     	testq	%rsi, %rsi
  2095fb: 0f 84 c4 00 00 00            	je	0x2096c5 <dwarf.Die.getAttrAddr+0x145>
  209601: 49 8b 78 28                  	movq	40(%r8), %rdi
  209605: 48 83 ff 07                  	cmpq	$7, %rdi
  209609: 0f 86 b6 00 00 00            	jbe	0x2096c5 <dwarf.Die.getAttrAddr+0x145>
  20960f: 4c 8b 81 98 00 00 00         	movq	152(%rcx), %r8
  209616: 48 8d 47 fc                  	leaq	-4(%rdi), %rax
  20961a: 4c 89 c2                     	movq	%r8, %rdx
  20961d: 48 29 c2                     	subq	%rax, %rdx
  209620: 0f 82 5b 01 00 00            	jb	0x209781 <dwarf.Die.getAttrAddr+0x201>
  209626: 48 83 fa 01                  	cmpq	$1, %rdx
  20962a: 0f 86 40 01 00 00            	jbe	0x209770 <dwarf.Die.getAttrAddr+0x1f0>
  209630: 0f b7 04 06                  	movzwl	(%rsi,%rax), %eax
  209634: 0f b6 89 08 01 00 00         	movzbl	264(%rcx), %ecx
  20963b: 89 c2                        	movl	%eax, %edx
  20963d: 66 c1 c2 08                  	rolw	$8, %dx
  209641: 84 c9                        	testb	%cl, %cl
  209643: 0f 45 d0                     	cmovnel	%eax, %edx
  209646: 66 83 fa 05                  	cmpw	$5, %dx
  20964a: 75 79                        	jne	0x2096c5 <dwarf.Die.getAttrAddr+0x145>
  20964c: 48 8d 47 fe                  	leaq	-2(%rdi), %rax
  209650: 4c 39 c0                     	cmpq	%r8, %rax
  209653: 0f 83 17 01 00 00            	jae	0x209770 <dwarf.Die.getAttrAddr+0x1f0>
  209659: 48 8d 47 ff                  	leaq	-1(%rdi), %rax
  20965d: 4c 39 c0                     	cmpq	%r8, %rax
  209660: 0f 83 0a 01 00 00            	jae	0x209770 <dwarf.Die.getAttrAddr+0x1f0>
  209666: 44 0f b6 54 3e fe            	movzbl	-2(%rsi,%rdi), %r10d
  20966c: 0f b6 04 06                  	movzbl	(%rsi,%rax), %eax
  209670: 44 00 d0                     	addb	%r10b, %al
  209673: 0f 82 e6 00 00 00            	jb	0x20975f <dwarf.Die.getAttrAddr+0x1df>
  209679: 0f b6 c0                     	movzbl	%al, %eax
  20967c: 49 f7 e1                     	mulq	%r9
  20967f: 0f 80 da 00 00 00            	jo	0x20975f <dwarf.Die.getAttrAddr+0x1df>
  209685: 48 01 c7                     	addq	%rax, %rdi
  209688: 0f 82 d1 00 00 00            	jb	0x20975f <dwarf.Die.getAttrAddr+0x1df>
  20968e: 48 89 f8                     	movq	%rdi, %rax
  209691: 4c 01 d0                     	addq	%r10, %rax
  209694: 0f 82 c5 00 00 00            	jb	0x20975f <dwarf.Die.getAttrAddr+0x1df>
  20969a: 4c 39 c0                     	cmpq	%r8, %rax
  20969d: 77 26                        	ja	0x2096c5 <dwarf.Die.getAttrAddr+0x145>
  20969f: 41 ff ca                     	decl	%r10d
  2096a2: 41 83 fa 07                  	cmpl	$7, %r10d
  2096a6: 77 1d                        	ja	0x2096c5 <dwarf.Die.getAttrAddr+0x145>
  2096a8: 42 ff 24 d5 88 0a 20 00      	jmpq	*2099848(,%r10,8)
  2096b0: 49 39 f8                     	cmpq	%rdi, %r8
  2096b3: 0f 86 b7 00 00 00            	jbe	0x209770 <dwarf.Die.getAttrAddr+0x1f0>
  2096b9: 0f b6 04 3e                  	movzbl	(%rsi,%rdi), %eax
  2096bd: 48 89 03                     	movq	%rax, (%rbx)
  2096c0: e9 1e ff ff ff               	jmp	0x2095e3 <dwarf.Die.getAttrAddr+0x63>
  2096c5: 4c 89 f7                     	movq	%r14, %rdi
  2096c8: e8 83 26 01 00               	callq	0x21bd50 <builtin.returnError>
  2096cd: 66 c7 43 08 34 00            	movw	$52, 8(%rbx)
  2096d3: eb 7b                        	jmp	0x209750 <dwarf.Die.getAttrAddr+0x1d0>
  2096d5: 49 29 f8                     	subq	%rdi, %r8
  2096d8: 0f 82 a3 00 00 00            	jb	0x209781 <dwarf.Die.getAttrAddr+0x201>
  2096de: 49 83 f8 01                  	cmpq	$1, %r8
  2096e2: 0f 86 88 00 00 00            	jbe	0x209770 <dwarf.Die.getAttrAddr+0x1f0>
  2096e8: 0f b7 04 3e                  	movzwl	(%rsi,%rdi), %eax
  2096ec: 89 c2                        	movl	%eax, %edx
  2096ee: 66 c1 c2 08                  	rolw	$8, %dx
  2096f2: 84 c9                        	testb	%cl, %cl
  2096f4: 0f 45 d0                     	cmovnel	%eax, %edx
  2096f7: 0f b7 c2                     	movzwl	%dx, %eax
  2096fa: 48 89 03                     	movq	%rax, (%rbx)
  2096fd: e9 e1 fe ff ff               	jmp	0x2095e3 <dwarf.Die.getAttrAddr+0x63>
  209702: 49 29 f8                     	subq	%rdi, %r8
  209705: 72 7a                        	jb	0x209781 <dwarf.Die.getAttrAddr+0x201>
  209707: 49 83 f8 03                  	cmpq	$3, %r8
  20970b: 76 63                        	jbe	0x209770 <dwarf.Die.getAttrAddr+0x1f0>
  20970d: 8b 04 3e                     	movl	(%rsi,%rdi), %eax
  209710: 84 c9                        	testb	%cl, %cl
  209712: 89 c2                        	movl	%eax, %edx
  209714: 0f ca                        	bswapl	%edx
  209716: 0f 45 d0                     	cmovnel	%eax, %edx
  209719: 48 89 13                     	movq	%rdx, (%rbx)
  20971c: e9 c2 fe ff ff               	jmp	0x2095e3 <dwarf.Die.getAttrAddr+0x63>
  209721: 49 29 f8                     	subq	%rdi, %r8
  209724: 72 5b                        	jb	0x209781 <dwarf.Die.getAttrAddr+0x201>
  209726: 49 83 f8 07                  	cmpq	$7, %r8
  20972a: 76 44                        	jbe	0x209770 <dwarf.Die.getAttrAddr+0x1f0>
  20972c: 48 8b 04 3e                  	movq	(%rsi,%rdi), %rax
  209730: 84 c9                        	testb	%cl, %cl
  209732: 48 89 c2                     	movq	%rax, %rdx
  209735: 48 0f ca                     	bswapq	%rdx
  209738: 48 0f 45 d0                  	cmovneq	%rax, %rdx
  20973c: 48 89 13                     	movq	%rdx, (%rbx)
  20973f: e9 9f fe ff ff               	jmp	0x2095e3 <dwarf.Die.getAttrAddr+0x63>
  209744: c5 f8 10 05 44 6b ff ff      	vmovups	-38076(%rip), %xmm0     # 0x200290 <zig-graph+0x200290>
  20974c: c5 f8 11 03                  	vmovups	%xmm0, (%rbx)
  209750: 4c 89 f7                     	movq	%r14, %rdi
  209753: 48 83 c4 08                  	addq	$8, %rsp
  209757: 5b                           	popq	%rbx
  209758: 41 5e                        	popq	%r14
  20975a: e9 f1 25 01 00               	jmp	0x21bd50 <builtin.returnError>
  20975f: bf 59 1d 20 00               	movl	$2104665, %edi          # imm = 0x201D59
  209764: be 10 00 00 00               	movl	$16, %esi
  209769: 31 c9                        	xorl	%ecx, %ecx
  20976b: e8 a0 1b 01 00               	callq	0x21b310 <builtin.default_panic>
  209770: bf 9c 1e 20 00               	movl	$2104988, %edi          # imm = 0x201E9C
  209775: be 13 00 00 00               	movl	$19, %esi
  20977a: 31 c9                        	xorl	%ecx, %ecx
  20977c: e8 8f 1b 01 00               	callq	0x21b310 <builtin.default_panic>
  209781: bf 34 1d 20 00               	movl	$2104628, %edi          # imm = 0x201D34
  209786: be 24 00 00 00               	movl	$36, %esi
  20978b: 31 c9                        	xorl	%ecx, %ecx
  20978d: e8 7e 1b 01 00               	callq	0x21b310 <builtin.default_panic>
  209792: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)

00000000002097a0 <dwarf.readUnitLength__anon_5647>:
  2097a0: 55                           	pushq	%rbp
  2097a1: 41 57                        	pushq	%r15
  2097a3: 41 56                        	pushq	%r14
  2097a5: 41 55                        	pushq	%r13
  2097a7: 41 54                        	pushq	%r12
  2097a9: 53                           	pushq	%rbx
  2097aa: 48 83 ec 28                  	subq	$40, %rsp
  2097ae: 4c 8b 2a                     	movq	(%rdx), %r13
  2097b1: 4d 89 c4                     	movq	%r8, %r12
  2097b4: 89 cd                        	movl	%ecx, %ebp
  2097b6: 49 89 d7                     	movq	%rdx, %r15
  2097b9: 31 db                        	xorl	%ebx, %ebx
  2097bb: 4c 8d 74 24 18               	leaq	24(%rsp), %r14
  2097c0: 48 89 74 24 10               	movq	%rsi, 16(%rsp)
  2097c5: 48 89 3c 24                  	movq	%rdi, (%rsp)
  2097c9: c7 44 24 08 aa aa aa aa      	movl	$2863311530, 8(%rsp)    # imm = 0xAAAAAAAA
  2097d1: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
  2097e0: b9 04 00 00 00               	movl	$4, %ecx
  2097e5: 48 8d 54 1c 08               	leaq	8(%rsp,%rbx), %rdx
  2097ea: 4c 89 f7                     	movq	%r14, %rdi
  2097ed: 4c 89 ee                     	movq	%r13, %rsi
  2097f0: 48 29 d9                     	subq	%rbx, %rcx
  2097f3: e8 88 fa 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2097f8: 48 8b 44 24 18               	movq	24(%rsp), %rax
  2097fd: 48 85 c0                     	testq	%rax, %rax
  209800: 0f 84 ce 00 00 00            	je	0x2098d4 <dwarf.readUnitLength__anon_5647+0x134>
  209806: 48 01 c3                     	addq	%rax, %rbx
  209809: 0f 82 43 01 00 00            	jb	0x209952 <dwarf.readUnitLength__anon_5647+0x1b2>
  20980f: 48 83 fb 04                  	cmpq	$4, %rbx
  209813: 72 cb                        	jb	0x2097e0 <dwarf.readUnitLength__anon_5647+0x40>
  209815: 8b 4c 24 08                  	movl	8(%rsp), %ecx
  209819: 40 f6 c5 01                  	testb	$1, %bpl
  20981d: 89 c8                        	movl	%ecx, %eax
  20981f: 0f c8                        	bswapl	%eax
  209821: 0f 45 c1                     	cmovnel	%ecx, %eax
  209824: 83 f8 ff                     	cmpl	$-1, %eax
  209827: 41 0f 94 04 24               	sete	(%r12)
  20982c: 74 1a                        	je	0x209848 <dwarf.readUnitLength__anon_5647+0xa8>
  20982e: 83 f8 ef                     	cmpl	$-17, %eax
  209831: 0f 87 ce 00 00 00            	ja	0x209905 <dwarf.readUnitLength__anon_5647+0x165>
  209837: 48 8b 0c 24                  	movq	(%rsp), %rcx
  20983b: 89 c0                        	movl	%eax, %eax
  20983d: 48 89 01                     	movq	%rax, (%rcx)
  209840: 66 c7 41 08 00 00            	movw	$0, 8(%rcx)
  209846: eb 7d                        	jmp	0x2098c5 <dwarf.readUnitLength__anon_5647+0x125>
  209848: 4d 8b 3f                     	movq	(%r15), %r15
  20984b: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  209855: 31 db                        	xorl	%ebx, %ebx
  209857: 4c 8d 74 24 18               	leaq	24(%rsp), %r14
  20985c: 48 89 44 24 08               	movq	%rax, 8(%rsp)
  209861: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
  209870: b9 08 00 00 00               	movl	$8, %ecx
  209875: 48 8d 54 1c 08               	leaq	8(%rsp,%rbx), %rdx
  20987a: 4c 89 f7                     	movq	%r14, %rdi
  20987d: 4c 89 fe                     	movq	%r15, %rsi
  209880: 48 29 d9                     	subq	%rbx, %rcx
  209883: e8 f8 f9 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  209888: 48 8b 44 24 18               	movq	24(%rsp), %rax
  20988d: 48 85 c0                     	testq	%rax, %rax
  209890: 0f 84 88 00 00 00            	je	0x20991e <dwarf.readUnitLength__anon_5647+0x17e>
  209896: 48 01 c3                     	addq	%rax, %rbx
  209899: 0f 82 b3 00 00 00            	jb	0x209952 <dwarf.readUnitLength__anon_5647+0x1b2>
  20989f: 48 83 fb 08                  	cmpq	$8, %rbx
  2098a3: 72 cb                        	jb	0x209870 <dwarf.readUnitLength__anon_5647+0xd0>
  2098a5: 48 8b 44 24 08               	movq	8(%rsp), %rax
  2098aa: 48 8b 14 24                  	movq	(%rsp), %rdx
  2098ae: 40 f6 c5 01                  	testb	$1, %bpl
  2098b2: 48 89 c1                     	movq	%rax, %rcx
  2098b5: 48 0f c9                     	bswapq	%rcx
  2098b8: 48 0f 45 c8                  	cmovneq	%rax, %rcx
  2098bc: 48 89 0a                     	movq	%rcx, (%rdx)
  2098bf: 66 c7 42 08 00 00            	movw	$0, 8(%rdx)
  2098c5: 48 83 c4 28                  	addq	$40, %rsp
  2098c9: 5b                           	popq	%rbx
  2098ca: 41 5c                        	popq	%r12
  2098cc: 41 5d                        	popq	%r13
  2098ce: 41 5e                        	popq	%r14
  2098d0: 41 5f                        	popq	%r15
  2098d2: 5d                           	popq	%rbp
  2098d3: c3                           	retq
  2098d4: 48 8b 5c 24 10               	movq	16(%rsp), %rbx
  2098d9: 48 89 df                     	movq	%rbx, %rdi
  2098dc: e8 6f 24 01 00               	callq	0x21bd50 <builtin.returnError>
  2098e1: 48 89 df                     	movq	%rbx, %rdi
  2098e4: e8 67 24 01 00               	callq	0x21bd50 <builtin.returnError>
  2098e9: 48 89 df                     	movq	%rbx, %rdi
  2098ec: e8 5f 24 01 00               	callq	0x21bd50 <builtin.returnError>
  2098f1: 48 89 df                     	movq	%rbx, %rdi
  2098f4: e8 57 24 01 00               	callq	0x21bd50 <builtin.returnError>
  2098f9: 48 8b 04 24                  	movq	(%rsp), %rax
  2098fd: 66 c7 40 08 33 00            	movw	$51, 8(%rax)
  209903: eb c0                        	jmp	0x2098c5 <dwarf.readUnitLength__anon_5647+0x125>
  209905: 48 8b 5c 24 10               	movq	16(%rsp), %rbx
  20990a: 48 89 df                     	movq	%rbx, %rdi
  20990d: e8 3e 24 01 00               	callq	0x21bd50 <builtin.returnError>
  209912: 48 8b 04 24                  	movq	(%rsp), %rax
  209916: 66 c7 40 08 34 00            	movw	$52, 8(%rax)
  20991c: eb 27                        	jmp	0x209945 <dwarf.readUnitLength__anon_5647+0x1a5>
  20991e: 48 8b 5c 24 10               	movq	16(%rsp), %rbx
  209923: 48 89 df                     	movq	%rbx, %rdi
  209926: e8 25 24 01 00               	callq	0x21bd50 <builtin.returnError>
  20992b: 48 89 df                     	movq	%rbx, %rdi
  20992e: e8 1d 24 01 00               	callq	0x21bd50 <builtin.returnError>
  209933: 48 89 df                     	movq	%rbx, %rdi
  209936: e8 15 24 01 00               	callq	0x21bd50 <builtin.returnError>
  20993b: 48 8b 04 24                  	movq	(%rsp), %rax
  20993f: 66 c7 40 08 33 00            	movw	$51, 8(%rax)
  209945: 48 89 df                     	movq	%rbx, %rdi
  209948: e8 03 24 01 00               	callq	0x21bd50 <builtin.returnError>
  20994d: e9 73 ff ff ff               	jmp	0x2098c5 <dwarf.readUnitLength__anon_5647+0x125>
  209952: bf 59 1d 20 00               	movl	$2104665, %edi          # imm = 0x201D59
  209957: be 10 00 00 00               	movl	$16, %esi
  20995c: 31 c9                        	xorl	%ecx, %ecx
  20995e: e8 ad 19 01 00               	callq	0x21b310 <builtin.default_panic>
  209963: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)

0000000000209970 <dwarf.parseFormValue__anon_5650>:
  209970: 55                           	pushq	%rbp
  209971: 41 57                        	pushq	%r15
  209973: 41 56                        	pushq	%r14
  209975: 41 55                        	pushq	%r13
  209977: 41 54                        	pushq	%r12
  209979: 53                           	pushq	%rbx
  20997a: 48 81 ec d8 00 00 00         	subq	$216, %rsp
  209981: 49 89 f5                     	movq	%rsi, %r13
  209984: 48 89 fb                     	movq	%rdi, %rbx
  209987: 49 8d 40 ff                  	leaq	-1(%r8), %rax
  20998b: 48 83 f8 2b                  	cmpq	$43, %rax
  20998f: 0f 87 81 1e 00 00            	ja	0x20b816 <dwarf.parseFormValue__anon_5650+0x1ea6>
  209995: 44 0f b6 b4 24 10 01 00 00   	movzbl	272(%rsp), %r14d
  20999e: 44 89 cd                     	movl	%r9d, %ebp
  2099a1: 49 89 cf                     	movq	%rcx, %r15
  2099a4: 49 89 d4                     	movq	%rdx, %r12
  2099a7: ff 24 c5 c8 0a 20 00         	jmpq	*2099912(,%rax,8)
  2099ae: 49 83 f8 0d                  	cmpq	$13, %r8
  2099b2: 0f 94 44 24 38               	sete	56(%rsp)
  2099b7: 0f 85 23 1c 00 00            	jne	0x20b5e0 <dwarf.parseFormValue__anon_5650+0x1c70>
  2099bd: 4c 8d 74 24 10               	leaq	16(%rsp), %r14
  2099c2: 4c 89 ee                     	movq	%r13, %rsi
  2099c5: 4c 89 fa                     	movq	%r15, %rdx
  2099c8: 4c 89 f7                     	movq	%r14, %rdi
  2099cb: e8 f0 b0 ff ff               	callq	0x204ac0 <leb128.readILEB128__anon_5345>
  2099d0: 0f b7 6c 24 18               	movzwl	24(%rsp), %ebp
  2099d5: e9 1e 1c 00 00               	jmp	0x20b5f8 <dwarf.parseFormValue__anon_5650+0x1c88>
  2099da: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  2099e0: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  2099ea: 45 31 e4                     	xorl	%r12d, %r12d
  2099ed: 4c 8d 74 24 20               	leaq	32(%rsp), %r14
  2099f2: 4d 8b 3f                     	movq	(%r15), %r15
  2099f5: 48 89 44 24 10               	movq	%rax, 16(%rsp)
  2099fa: 66 0f 1f 44 00 00            	nopw	(%rax,%rax)
  209a00: b9 08 00 00 00               	movl	$8, %ecx
  209a05: 4a 8d 54 24 10               	leaq	16(%rsp,%r12), %rdx
  209a0a: 4c 89 f7                     	movq	%r14, %rdi
  209a0d: 4c 89 fe                     	movq	%r15, %rsi
  209a10: 4c 29 e1                     	subq	%r12, %rcx
  209a13: e8 68 f8 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  209a18: 48 8b 44 24 20               	movq	32(%rsp), %rax
  209a1d: 48 85 c0                     	testq	%rax, %rax
  209a20: 0f 84 17 1e 00 00            	je	0x20b83d <dwarf.parseFormValue__anon_5650+0x1ecd>
  209a26: 49 01 c4                     	addq	%rax, %r12
  209a29: 0f 82 06 20 00 00            	jb	0x20ba35 <dwarf.parseFormValue__anon_5650+0x20c5>
  209a2f: 49 83 fc 08                  	cmpq	$8, %r12
  209a33: 72 cb                        	jb	0x209a00 <dwarf.parseFormValue__anon_5650+0x90>
  209a35: 48 8b 44 24 10               	movq	16(%rsp), %rax
  209a3a: 40 f6 c5 01                  	testb	$1, %bpl
  209a3e: 48 89 c1                     	movq	%rax, %rcx
  209a41: 48 0f c9                     	bswapq	%rcx
  209a44: 48 0f 45 c8                  	cmovneq	%rax, %rcx
  209a48: 48 89 0b                     	movq	%rcx, (%rbx)
  209a4b: c6 43 10 00                  	movb	$0, 16(%rbx)
  209a4f: e9 cc 1c 00 00               	jmp	0x20b720 <dwarf.parseFormValue__anon_5650+0x1db0>
  209a54: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  209a5e: 4c 89 64 24 68               	movq	%r12, 104(%rsp)
  209a63: 4c 89 6c 24 40               	movq	%r13, 64(%rsp)
  209a68: 45 31 e4                     	xorl	%r12d, %r12d
  209a6b: 4c 8d 74 24 20               	leaq	32(%rsp), %r14
  209a70: 48 89 44 24 10               	movq	%rax, 16(%rsp)
  209a75: 4d 8b 2f                     	movq	(%r15), %r13
  209a78: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
  209a80: b9 02 00 00 00               	movl	$2, %ecx
  209a85: 4a 8d 54 24 10               	leaq	16(%rsp,%r12), %rdx
  209a8a: 4c 89 f7                     	movq	%r14, %rdi
  209a8d: 4c 89 ee                     	movq	%r13, %rsi
  209a90: 4c 29 e1                     	subq	%r12, %rcx
  209a93: e8 e8 f7 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  209a98: 48 8b 44 24 20               	movq	32(%rsp), %rax
  209a9d: 48 85 c0                     	testq	%rax, %rax
  209aa0: 0f 84 de 1c 00 00            	je	0x20b784 <dwarf.parseFormValue__anon_5650+0x1e14>
  209aa6: 49 01 c4                     	addq	%rax, %r12
  209aa9: 0f 82 86 1f 00 00            	jb	0x20ba35 <dwarf.parseFormValue__anon_5650+0x20c5>
  209aaf: 49 83 fc 02                  	cmpq	$2, %r12
  209ab3: 72 cb                        	jb	0x209a80 <dwarf.parseFormValue__anon_5650+0x110>
  209ab5: 0f b6 44 24 11               	movzbl	17(%rsp), %eax
  209aba: 44 0f b6 44 24 10            	movzbl	16(%rsp), %r8d
  209ac0: 4c 8b 6c 24 40               	movq	64(%rsp), %r13
  209ac5: 48 8b 54 24 68               	movq	104(%rsp), %rdx
  209aca: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  209acf: 48 89 c1                     	movq	%rax, %rcx
  209ad2: 4c 89 ee                     	movq	%r13, %rsi
  209ad5: 48 c1 e1 08                  	shlq	$8, %rcx
  209ad9: 4c 09 c1                     	orq	%r8, %rcx
  209adc: 49 c1 e0 08                  	shlq	$8, %r8
  209ae0: 49 09 c0                     	orq	%rax, %r8
  209ae3: 40 f6 c5 01                  	testb	$1, %bpl
  209ae7: 4c 0f 45 c1                  	cmovneq	%rcx, %r8
  209aeb: e9 03 1c 00 00               	jmp	0x20b6f3 <dwarf.parseFormValue__anon_5650+0x1d83>
  209af0: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  209afa: 4c 89 64 24 68               	movq	%r12, 104(%rsp)
  209aff: 4c 89 6c 24 40               	movq	%r13, 64(%rsp)
  209b04: 45 31 e4                     	xorl	%r12d, %r12d
  209b07: 4c 8d 74 24 20               	leaq	32(%rsp), %r14
  209b0c: 48 89 44 24 10               	movq	%rax, 16(%rsp)
  209b11: 4d 8b 2f                     	movq	(%r15), %r13
  209b14: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
  209b20: b9 04 00 00 00               	movl	$4, %ecx
  209b25: 4a 8d 54 24 10               	leaq	16(%rsp,%r12), %rdx
  209b2a: 4c 89 f7                     	movq	%r14, %rdi
  209b2d: 4c 89 ee                     	movq	%r13, %rsi
  209b30: 4c 29 e1                     	subq	%r12, %rcx
  209b33: e8 48 f7 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  209b38: 48 8b 44 24 20               	movq	32(%rsp), %rax
  209b3d: 48 85 c0                     	testq	%rax, %rax
  209b40: 0f 84 3e 1c 00 00            	je	0x20b784 <dwarf.parseFormValue__anon_5650+0x1e14>
  209b46: 49 01 c4                     	addq	%rax, %r12
  209b49: 0f 82 e6 1e 00 00            	jb	0x20ba35 <dwarf.parseFormValue__anon_5650+0x20c5>
  209b4f: 49 83 fc 04                  	cmpq	$4, %r12
  209b53: 72 cb                        	jb	0x209b20 <dwarf.parseFormValue__anon_5650+0x1b0>
  209b55: 0f b6 4c 24 10               	movzbl	16(%rsp), %ecx
  209b5a: 44 0f b6 44 24 11            	movzbl	17(%rsp), %r8d
  209b60: 0f b6 44 24 13               	movzbl	19(%rsp), %eax
  209b65: 40 f6 c5 01                  	testb	$1, %bpl
  209b69: 0f 84 58 1b 00 00            	je	0x20b6c7 <dwarf.parseFormValue__anon_5650+0x1d57>
  209b6f: 0f b6 54 24 12               	movzbl	18(%rsp), %edx
  209b74: 49 c1 e0 08                  	shlq	$8, %r8
  209b78: 48 c1 e0 18                  	shlq	$24, %rax
  209b7c: 4c 09 c0                     	orq	%r8, %rax
  209b7f: 48 c1 e2 10                  	shlq	$16, %rdx
  209b83: 48 09 d0                     	orq	%rdx, %rax
  209b86: 48 09 c8                     	orq	%rcx, %rax
  209b89: 49 89 c0                     	movq	%rax, %r8
  209b8c: e9 50 1b 00 00               	jmp	0x20b6e1 <dwarf.parseFormValue__anon_5650+0x1d71>
  209b91: c6 44 24 50 00               	movb	$0, 80(%rsp)
  209b96: 45 31 f6                     	xorl	%r14d, %r14d
  209b99: 4c 8d 64 24 20               	leaq	32(%rsp), %r12
  209b9e: 4d 8b 3f                     	movq	(%r15), %r15
  209ba1: 66 c7 44 24 10 aa aa         	movw	$43690, 16(%rsp)        # imm = 0xAAAA
  209ba8: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
  209bb0: b9 02 00 00 00               	movl	$2, %ecx
  209bb5: 4a 8d 54 34 10               	leaq	16(%rsp,%r14), %rdx
  209bba: 4c 89 e7                     	movq	%r12, %rdi
  209bbd: 4c 89 fe                     	movq	%r15, %rsi
  209bc0: 4c 29 f1                     	subq	%r14, %rcx
  209bc3: e8 b8 f6 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  209bc8: 48 8b 44 24 20               	movq	32(%rsp), %rax
  209bcd: 48 85 c0                     	testq	%rax, %rax
  209bd0: 0f 84 9a 1c 00 00            	je	0x20b870 <dwarf.parseFormValue__anon_5650+0x1f00>
  209bd6: 49 01 c6                     	addq	%rax, %r14
  209bd9: 0f 82 56 1e 00 00            	jb	0x20ba35 <dwarf.parseFormValue__anon_5650+0x20c5>
  209bdf: 49 83 fe 02                  	cmpq	$2, %r14
  209be3: 72 cb                        	jb	0x209bb0 <dwarf.parseFormValue__anon_5650+0x240>
  209be5: 0f b7 44 24 10               	movzwl	16(%rsp), %eax
  209bea: 89 c1                        	movl	%eax, %ecx
  209bec: 66 c1 c1 08                  	rolw	$8, %cx
  209bf0: 40 f6 c5 01                  	testb	$1, %bpl
  209bf4: 0f 45 c8                     	cmovnel	%eax, %ecx
  209bf7: 31 c0                        	xorl	%eax, %eax
  209bf9: 0f b7 c9                     	movzwl	%cx, %ecx
  209bfc: 48 89 0b                     	movq	%rcx, (%rbx)
  209bff: 0f b6 4c 24 50               	movzbl	80(%rsp), %ecx
  209c04: e9 93 04 00 00               	jmp	0x20a09c <dwarf.parseFormValue__anon_5650+0x72c>
  209c09: c6 44 24 58 00               	movb	$0, 88(%rsp)
  209c0e: 45 31 f6                     	xorl	%r14d, %r14d
  209c11: 4c 8d 64 24 20               	leaq	32(%rsp), %r12
  209c16: 4d 8b 3f                     	movq	(%r15), %r15
  209c19: c7 44 24 10 aa aa aa aa      	movl	$2863311530, 16(%rsp)   # imm = 0xAAAAAAAA
  209c21: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
  209c30: b9 04 00 00 00               	movl	$4, %ecx
  209c35: 4a 8d 54 34 10               	leaq	16(%rsp,%r14), %rdx
  209c3a: 4c 89 e7                     	movq	%r12, %rdi
  209c3d: 4c 89 fe                     	movq	%r15, %rsi
  209c40: 4c 29 f1                     	subq	%r14, %rcx
  209c43: e8 38 f6 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  209c48: 48 8b 44 24 20               	movq	32(%rsp), %rax
  209c4d: 48 85 c0                     	testq	%rax, %rax
  209c50: 0f 84 43 1c 00 00            	je	0x20b899 <dwarf.parseFormValue__anon_5650+0x1f29>
  209c56: 49 01 c6                     	addq	%rax, %r14
  209c59: 0f 82 d6 1d 00 00            	jb	0x20ba35 <dwarf.parseFormValue__anon_5650+0x20c5>
  209c5f: 49 83 fe 04                  	cmpq	$4, %r14
  209c63: 72 cb                        	jb	0x209c30 <dwarf.parseFormValue__anon_5650+0x2c0>
  209c65: 8b 44 24 10                  	movl	16(%rsp), %eax
  209c69: 40 f6 c5 01                  	testb	$1, %bpl
  209c6d: 89 c1                        	movl	%eax, %ecx
  209c6f: 0f c9                        	bswapl	%ecx
  209c71: 0f 45 c8                     	cmovnel	%eax, %ecx
  209c74: 31 c0                        	xorl	%eax, %eax
  209c76: 48 89 0b                     	movq	%rcx, (%rbx)
  209c79: 0f b6 4c 24 58               	movzbl	88(%rsp), %ecx
  209c7e: e9 19 04 00 00               	jmp	0x20a09c <dwarf.parseFormValue__anon_5650+0x72c>
  209c83: c6 44 24 60 00               	movb	$0, 96(%rsp)
  209c88: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  209c92: 45 31 f6                     	xorl	%r14d, %r14d
  209c95: 4c 8d 64 24 20               	leaq	32(%rsp), %r12
  209c9a: 4d 8b 3f                     	movq	(%r15), %r15
  209c9d: 48 89 44 24 10               	movq	%rax, 16(%rsp)
  209ca2: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)
  209cb0: b9 08 00 00 00               	movl	$8, %ecx
  209cb5: 4a 8d 54 34 10               	leaq	16(%rsp,%r14), %rdx
  209cba: 4c 89 e7                     	movq	%r12, %rdi
  209cbd: 4c 89 fe                     	movq	%r15, %rsi
  209cc0: 4c 29 f1                     	subq	%r14, %rcx
  209cc3: e8 b8 f5 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  209cc8: 48 8b 44 24 20               	movq	32(%rsp), %rax
  209ccd: 48 85 c0                     	testq	%rax, %rax
  209cd0: 0f 84 ec 1b 00 00            	je	0x20b8c2 <dwarf.parseFormValue__anon_5650+0x1f52>
  209cd6: 49 01 c6                     	addq	%rax, %r14
  209cd9: 0f 82 56 1d 00 00            	jb	0x20ba35 <dwarf.parseFormValue__anon_5650+0x20c5>
  209cdf: 49 83 fe 08                  	cmpq	$8, %r14
  209ce3: 72 cb                        	jb	0x209cb0 <dwarf.parseFormValue__anon_5650+0x340>
  209ce5: 48 8b 44 24 10               	movq	16(%rsp), %rax
  209cea: 40 f6 c5 01                  	testb	$1, %bpl
  209cee: 48 89 c1                     	movq	%rax, %rcx
  209cf1: 48 0f c9                     	bswapq	%rcx
  209cf4: 48 0f 45 c8                  	cmovneq	%rax, %rcx
  209cf8: 31 c0                        	xorl	%eax, %eax
  209cfa: 48 89 0b                     	movq	%rcx, (%rbx)
  209cfd: 0f b6 4c 24 60               	movzbl	96(%rsp), %ecx
  209d02: e9 95 03 00 00               	jmp	0x20a09c <dwarf.parseFormValue__anon_5650+0x72c>
  209d07: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  209d0d: 48 8d bc 24 a0 00 00 00      	leaq	160(%rsp), %rdi
  209d15: 4c 89 ee                     	movq	%r13, %rsi
  209d18: 4c 89 e1                     	movq	%r12, %rcx
  209d1b: 49 8b 17                     	movq	(%r15), %rdx
  209d1e: e8 9d 2d 00 00               	callq	0x20cac0 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readUntilDelimiterAlloc>
  209d23: 0f b7 ac 24 b0 00 00 00      	movzwl	176(%rsp), %ebp
  209d2b: 66 85 ed                     	testw	%bp, %bp
  209d2e: 0f 85 e5 1e 00 00            	jne	0x20bc19 <dwarf.parseFormValue__anon_5650+0x22a9>
  209d34: c5 f8 10 84 24 a0 00 00 00   	vmovups	160(%rsp), %xmm0
  209d3d: c5 f8 11 03                  	vmovups	%xmm0, (%rbx)
  209d41: c6 43 10 09                  	movb	$9, 16(%rbx)
  209d45: e9 d6 19 00 00               	jmp	0x20b720 <dwarf.parseFormValue__anon_5650+0x1db0>
  209d4a: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  209d4f: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  209d54: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  209d59: b9 01 00 00 00               	movl	$1, %ecx
  209d5e: 4c 89 e5                     	movq	%r12, %rbp
  209d61: 4d 89 ec                     	movq	%r13, %r12
  209d64: 49 8b 37                     	movq	(%r15), %rsi
  209d67: e8 14 f5 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  209d6c: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  209d72: 0f 84 ce 19 00 00            	je	0x20b746 <dwarf.parseFormValue__anon_5650+0x1dd6>
  209d78: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  209d7d: 41 89 c5                     	movl	%eax, %r13d
  209d80: 41 83 e5 7f                  	andl	$127, %r13d
  209d84: 84 c0                        	testb	%al, %al
  209d86: 0f 89 52 02 00 00            	jns	0x209fde <dwarf.parseFormValue__anon_5650+0x66e>
  209d8c: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  209d91: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  209d96: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  209d9b: b9 01 00 00 00               	movl	$1, %ecx
  209da0: 49 8b 37                     	movq	(%r15), %rsi
  209da3: e8 d8 f4 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  209da8: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  209dae: 0f 84 92 19 00 00            	je	0x20b746 <dwarf.parseFormValue__anon_5650+0x1dd6>
  209db4: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  209db9: 89 c1                        	movl	%eax, %ecx
  209dbb: 83 e1 7f                     	andl	$127, %ecx
  209dbe: 48 c1 e1 07                  	shlq	$7, %rcx
  209dc2: 49 09 cd                     	orq	%rcx, %r13
  209dc5: 84 c0                        	testb	%al, %al
  209dc7: 0f 89 11 02 00 00            	jns	0x209fde <dwarf.parseFormValue__anon_5650+0x66e>
  209dcd: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  209dd2: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  209dd7: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  209ddc: b9 01 00 00 00               	movl	$1, %ecx
  209de1: 49 8b 37                     	movq	(%r15), %rsi
  209de4: e8 97 f4 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  209de9: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  209def: 0f 84 51 19 00 00            	je	0x20b746 <dwarf.parseFormValue__anon_5650+0x1dd6>
  209df5: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  209dfa: 89 c1                        	movl	%eax, %ecx
  209dfc: 83 e1 7f                     	andl	$127, %ecx
  209dff: 48 c1 e1 0e                  	shlq	$14, %rcx
  209e03: 49 09 cd                     	orq	%rcx, %r13
  209e06: 84 c0                        	testb	%al, %al
  209e08: 0f 89 d0 01 00 00            	jns	0x209fde <dwarf.parseFormValue__anon_5650+0x66e>
  209e0e: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  209e13: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  209e18: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  209e1d: b9 01 00 00 00               	movl	$1, %ecx
  209e22: 49 8b 37                     	movq	(%r15), %rsi
  209e25: e8 56 f4 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  209e2a: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  209e30: 0f 84 10 19 00 00            	je	0x20b746 <dwarf.parseFormValue__anon_5650+0x1dd6>
  209e36: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  209e3b: 89 c1                        	movl	%eax, %ecx
  209e3d: 83 e1 7f                     	andl	$127, %ecx
  209e40: 48 c1 e1 15                  	shlq	$21, %rcx
  209e44: 49 09 cd                     	orq	%rcx, %r13
  209e47: 84 c0                        	testb	%al, %al
  209e49: 0f 89 8f 01 00 00            	jns	0x209fde <dwarf.parseFormValue__anon_5650+0x66e>
  209e4f: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  209e54: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  209e59: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  209e5e: b9 01 00 00 00               	movl	$1, %ecx
  209e63: 49 8b 37                     	movq	(%r15), %rsi
  209e66: e8 15 f4 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  209e6b: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  209e71: 0f 84 cf 18 00 00            	je	0x20b746 <dwarf.parseFormValue__anon_5650+0x1dd6>
  209e77: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  209e7c: 89 c1                        	movl	%eax, %ecx
  209e7e: 83 e1 7f                     	andl	$127, %ecx
  209e81: 48 c1 e1 1c                  	shlq	$28, %rcx
  209e85: 49 09 cd                     	orq	%rcx, %r13
  209e88: 84 c0                        	testb	%al, %al
  209e8a: 0f 89 4e 01 00 00            	jns	0x209fde <dwarf.parseFormValue__anon_5650+0x66e>
  209e90: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  209e95: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  209e9a: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  209e9f: b9 01 00 00 00               	movl	$1, %ecx
  209ea4: 49 8b 37                     	movq	(%r15), %rsi
  209ea7: e8 d4 f3 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  209eac: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  209eb2: 0f 84 8e 18 00 00            	je	0x20b746 <dwarf.parseFormValue__anon_5650+0x1dd6>
  209eb8: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  209ebd: 89 c1                        	movl	%eax, %ecx
  209ebf: 83 e1 7f                     	andl	$127, %ecx
  209ec2: 48 c1 e1 23                  	shlq	$35, %rcx
  209ec6: 49 09 cd                     	orq	%rcx, %r13
  209ec9: 84 c0                        	testb	%al, %al
  209ecb: 0f 89 0d 01 00 00            	jns	0x209fde <dwarf.parseFormValue__anon_5650+0x66e>
  209ed1: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  209ed6: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  209edb: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  209ee0: b9 01 00 00 00               	movl	$1, %ecx
  209ee5: 49 8b 37                     	movq	(%r15), %rsi
  209ee8: e8 93 f3 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  209eed: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  209ef3: 0f 84 4d 18 00 00            	je	0x20b746 <dwarf.parseFormValue__anon_5650+0x1dd6>
  209ef9: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  209efe: 89 c1                        	movl	%eax, %ecx
  209f00: 83 e1 7f                     	andl	$127, %ecx
  209f03: 48 c1 e1 2a                  	shlq	$42, %rcx
  209f07: 49 09 cd                     	orq	%rcx, %r13
  209f0a: 84 c0                        	testb	%al, %al
  209f0c: 0f 89 cc 00 00 00            	jns	0x209fde <dwarf.parseFormValue__anon_5650+0x66e>
  209f12: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  209f17: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  209f1c: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  209f21: b9 01 00 00 00               	movl	$1, %ecx
  209f26: 49 8b 37                     	movq	(%r15), %rsi
  209f29: e8 52 f3 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  209f2e: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  209f34: 0f 84 0c 18 00 00            	je	0x20b746 <dwarf.parseFormValue__anon_5650+0x1dd6>
  209f3a: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  209f3f: 89 c1                        	movl	%eax, %ecx
  209f41: 83 e1 7f                     	andl	$127, %ecx
  209f44: 48 c1 e1 31                  	shlq	$49, %rcx
  209f48: 49 09 cd                     	orq	%rcx, %r13
  209f4b: 84 c0                        	testb	%al, %al
  209f4d: 0f 89 8b 00 00 00            	jns	0x209fde <dwarf.parseFormValue__anon_5650+0x66e>
  209f53: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  209f58: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  209f5d: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  209f62: b9 01 00 00 00               	movl	$1, %ecx
  209f67: 49 8b 37                     	movq	(%r15), %rsi
  209f6a: e8 11 f3 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  209f6f: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  209f75: 0f 84 cb 17 00 00            	je	0x20b746 <dwarf.parseFormValue__anon_5650+0x1dd6>
  209f7b: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  209f80: 89 c1                        	movl	%eax, %ecx
  209f82: 83 e1 7f                     	andl	$127, %ecx
  209f85: 48 c1 e1 38                  	shlq	$56, %rcx
  209f89: 49 09 cd                     	orq	%rcx, %r13
  209f8c: 84 c0                        	testb	%al, %al
  209f8e: 79 4e                        	jns	0x209fde <dwarf.parseFormValue__anon_5650+0x66e>
  209f90: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  209f95: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  209f9a: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  209f9f: b9 01 00 00 00               	movl	$1, %ecx
  209fa4: 49 8b 37                     	movq	(%r15), %rsi
  209fa7: e8 d4 f2 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  209fac: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  209fb2: 0f 84 8e 17 00 00            	je	0x20b746 <dwarf.parseFormValue__anon_5650+0x1dd6>
  209fb8: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  209fbd: a8 7e                        	testb	$126, %al
  209fbf: 0f 85 6a 1c 00 00            	jne	0x20bc2f <dwarf.parseFormValue__anon_5650+0x22bf>
  209fc5: 4d 89 e6                     	movq	%r12, %r14
  209fc8: 66 c7 44 24 40 29 00         	movw	$41, 64(%rsp)
  209fcf: 84 c0                        	testb	%al, %al
  209fd1: 0f 88 81 17 00 00            	js	0x20b758 <dwarf.parseFormValue__anon_5650+0x1de8>
  209fd7: 48 c1 e0 3f                  	shlq	$63, %rax
  209fdb: 49 09 c5                     	orq	%rax, %r13
  209fde: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  209fe3: 4c 89 e6                     	movq	%r12, %rsi
  209fe6: 48 89 ea                     	movq	%rbp, %rdx
  209fe9: 4c 89 f9                     	movq	%r15, %rcx
  209fec: 4d 89 e8                     	movq	%r13, %r8
  209fef: 4d 89 e6                     	movq	%r12, %r14
  209ff2: e8 a9 f6 00 00               	callq	0x2196a0 <dwarf.readAllocBytes__anon_6399>
  209ff7: 0f b7 6c 24 30               	movzwl	48(%rsp), %ebp
  209ffc: 66 85 ed                     	testw	%bp, %bp
  209fff: 0f 85 35 19 00 00            	jne	0x20b93a <dwarf.parseFormValue__anon_5650+0x1fca>
  20a005: c5 f8 10 44 24 20            	vmovups	32(%rsp), %xmm0
  20a00b: c5 f8 11 03                  	vmovups	%xmm0, (%rbx)
  20a00f: c6 43 10 02                  	movb	$2, 16(%rbx)
  20a013: e9 fb 15 00 00               	jmp	0x20b613 <dwarf.parseFormValue__anon_5650+0x1ca3>
  20a018: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  20a022: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20a027: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20a02c: b9 01 00 00 00               	movl	$1, %ecx
  20a031: 48 89 44 24 10               	movq	%rax, 16(%rsp)
  20a036: 49 8b 37                     	movq	(%r15), %rsi
  20a039: e8 42 f2 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20a03e: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20a044: 0f 84 3f 17 00 00            	je	0x20b789 <dwarf.parseFormValue__anon_5650+0x1e19>
  20a04a: 44 0f b6 44 24 10            	movzbl	16(%rsp), %r8d
  20a050: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20a055: 4c 89 ee                     	movq	%r13, %rsi
  20a058: 4c 89 e2                     	movq	%r12, %rdx
  20a05b: e9 93 16 00 00               	jmp	0x20b6f3 <dwarf.parseFormValue__anon_5650+0x1d83>
  20a060: c6 44 24 48 00               	movb	$0, 72(%rsp)
  20a065: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20a06a: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20a06f: b9 01 00 00 00               	movl	$1, %ecx
  20a074: 49 8b 37                     	movq	(%r15), %rsi
  20a077: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20a07c: e8 ff f1 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20a081: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20a087: 0f 84 77 18 00 00            	je	0x20b904 <dwarf.parseFormValue__anon_5650+0x1f94>
  20a08d: 0f b6 4c 24 10               	movzbl	16(%rsp), %ecx
  20a092: 31 c0                        	xorl	%eax, %eax
  20a094: 48 89 0b                     	movq	%rcx, (%rbx)
  20a097: 0f b6 4c 24 48               	movzbl	72(%rsp), %ecx
  20a09c: 88 4b 08                     	movb	%cl, 8(%rbx)
  20a09f: c6 43 10 03                  	movb	$3, 16(%rbx)
  20a0a3: 66 89 43 18                  	movw	%ax, 24(%rbx)
  20a0a7: e9 74 16 00 00               	jmp	0x20b720 <dwarf.parseFormValue__anon_5650+0x1db0>
  20a0ac: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  20a0b2: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20a0b7: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20a0bc: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20a0c1: b9 01 00 00 00               	movl	$1, %ecx
  20a0c6: 49 8b 37                     	movq	(%r15), %rsi
  20a0c9: e8 b2 f1 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20a0ce: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20a0d4: 0f 84 7b 17 00 00            	je	0x20b855 <dwarf.parseFormValue__anon_5650+0x1ee5>
  20a0da: 80 7c 24 10 00               	cmpb	$0, 16(%rsp)
  20a0df: 0f 95 03                     	setne	(%rbx)
  20a0e2: c6 43 10 05                  	movb	$5, 16(%rbx)
  20a0e6: e9 35 16 00 00               	jmp	0x20b720 <dwarf.parseFormValue__anon_5650+0x1db0>
  20a0eb: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  20a0f1: 40 0f b6 cd                  	movzbl	%bpl, %ecx
  20a0f5: 49 8b 17                     	movq	(%r15), %rdx
  20a0f8: 41 f6 c6 01                  	testb	$1, %r14b
  20a0fc: 0f 84 1c 15 00 00            	je	0x20b61e <dwarf.parseFormValue__anon_5650+0x1cae>
  20a102: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20a107: 4c 89 ee                     	movq	%r13, %rsi
  20a10a: e8 21 a6 ff ff               	callq	0x204730 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readInt__anon_5249>
  20a10f: 0f b7 6c 24 28               	movzwl	40(%rsp), %ebp
  20a114: 66 85 ed                     	testw	%bp, %bp
  20a117: 0f 85 f4 1a 00 00            	jne	0x20bc11 <dwarf.parseFormValue__anon_5650+0x22a1>
  20a11d: 48 8b 44 24 20               	movq	32(%rsp), %rax
  20a122: e9 16 15 00 00               	jmp	0x20b63d <dwarf.parseFormValue__anon_5650+0x1ccd>
  20a127: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  20a12d: 40 0f b6 cd                  	movzbl	%bpl, %ecx
  20a131: 49 8b 17                     	movq	(%r15), %rdx
  20a134: 41 f6 c6 01                  	testb	$1, %r14b
  20a138: 0f 84 0b 15 00 00            	je	0x20b649 <dwarf.parseFormValue__anon_5650+0x1cd9>
  20a13e: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20a143: 4c 89 ee                     	movq	%r13, %rsi
  20a146: e8 e5 a5 ff ff               	callq	0x204730 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readInt__anon_5249>
  20a14b: 0f b7 6c 24 28               	movzwl	40(%rsp), %ebp
  20a150: 66 85 ed                     	testw	%bp, %bp
  20a153: 0f 85 b8 1a 00 00            	jne	0x20bc11 <dwarf.parseFormValue__anon_5650+0x22a1>
  20a159: 48 8b 44 24 20               	movq	32(%rsp), %rax
  20a15e: e9 05 15 00 00               	jmp	0x20b668 <dwarf.parseFormValue__anon_5650+0x1cf8>
  20a163: 49 8b 37                     	movq	(%r15), %rsi
  20a166: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20a16b: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20a170: b9 01 00 00 00               	movl	$1, %ecx
  20a175: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20a17a: e8 01 f1 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20a17f: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20a185: 0f 84 48 16 00 00            	je	0x20b7d3 <dwarf.parseFormValue__anon_5650+0x1e63>
  20a18b: 0f b6 4c 24 10               	movzbl	16(%rsp), %ecx
  20a190: 31 c0                        	xorl	%eax, %eax
  20a192: eb 68                        	jmp	0x20a1fc <dwarf.parseFormValue__anon_5650+0x88c>
  20a194: 4d 8b 3f                     	movq	(%r15), %r15
  20a197: 45 31 f6                     	xorl	%r14d, %r14d
  20a19a: 4c 8d 64 24 20               	leaq	32(%rsp), %r12
  20a19f: 66 c7 44 24 10 aa aa         	movw	$43690, 16(%rsp)        # imm = 0xAAAA
  20a1a6: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
  20a1b0: b9 02 00 00 00               	movl	$2, %ecx
  20a1b5: 4a 8d 54 34 10               	leaq	16(%rsp,%r14), %rdx
  20a1ba: 4c 89 e7                     	movq	%r12, %rdi
  20a1bd: 4c 89 fe                     	movq	%r15, %rsi
  20a1c0: 4c 29 f1                     	subq	%r14, %rcx
  20a1c3: e8 b8 f0 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20a1c8: 48 8b 44 24 20               	movq	32(%rsp), %rax
  20a1cd: 48 85 c0                     	testq	%rax, %rax
  20a1d0: 0f 84 fd 15 00 00            	je	0x20b7d3 <dwarf.parseFormValue__anon_5650+0x1e63>
  20a1d6: 49 01 c6                     	addq	%rax, %r14
  20a1d9: 0f 82 56 18 00 00            	jb	0x20ba35 <dwarf.parseFormValue__anon_5650+0x20c5>
  20a1df: 49 83 fe 02                  	cmpq	$2, %r14
  20a1e3: 72 cb                        	jb	0x20a1b0 <dwarf.parseFormValue__anon_5650+0x840>
  20a1e5: 0f b7 44 24 10               	movzwl	16(%rsp), %eax
  20a1ea: 89 c1                        	movl	%eax, %ecx
  20a1ec: 66 c1 c1 08                  	rolw	$8, %cx
  20a1f0: 40 f6 c5 01                  	testb	$1, %bpl
  20a1f4: 0f 45 c8                     	cmovnel	%eax, %ecx
  20a1f7: 31 c0                        	xorl	%eax, %eax
  20a1f9: 0f b7 c9                     	movzwl	%cx, %ecx
  20a1fc: 48 89 0b                     	movq	%rcx, (%rbx)
  20a1ff: c6 43 10 07                  	movb	$7, 16(%rbx)
  20a203: 66 89 43 18                  	movw	%ax, 24(%rbx)
  20a207: e9 14 15 00 00               	jmp	0x20b720 <dwarf.parseFormValue__anon_5650+0x1db0>
  20a20c: 4d 8b 3f                     	movq	(%r15), %r15
  20a20f: 45 31 f6                     	xorl	%r14d, %r14d
  20a212: 4c 8d 64 24 20               	leaq	32(%rsp), %r12
  20a217: c7 44 24 10 aa aa aa aa      	movl	$2863311530, 16(%rsp)   # imm = 0xAAAAAAAA
  20a21f: 90                           	nop
  20a220: b9 04 00 00 00               	movl	$4, %ecx
  20a225: 4a 8d 54 34 10               	leaq	16(%rsp,%r14), %rdx
  20a22a: 4c 89 e7                     	movq	%r12, %rdi
  20a22d: 4c 89 fe                     	movq	%r15, %rsi
  20a230: 4c 29 f1                     	subq	%r14, %rcx
  20a233: e8 48 f0 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20a238: 48 8b 44 24 20               	movq	32(%rsp), %rax
  20a23d: 48 85 c0                     	testq	%rax, %rax
  20a240: 0f 84 64 15 00 00            	je	0x20b7aa <dwarf.parseFormValue__anon_5650+0x1e3a>
  20a246: 49 01 c6                     	addq	%rax, %r14
  20a249: 0f 82 e6 17 00 00            	jb	0x20ba35 <dwarf.parseFormValue__anon_5650+0x20c5>
  20a24f: 49 83 fe 04                  	cmpq	$4, %r14
  20a253: 72 cb                        	jb	0x20a220 <dwarf.parseFormValue__anon_5650+0x8b0>
  20a255: 8b 4c 24 10                  	movl	16(%rsp), %ecx
  20a259: 40 f6 c5 01                  	testb	$1, %bpl
  20a25d: 89 c8                        	movl	%ecx, %eax
  20a25f: 0f c8                        	bswapl	%eax
  20a261: 0f 45 c1                     	cmovnel	%ecx, %eax
  20a264: eb 62                        	jmp	0x20a2c8 <dwarf.parseFormValue__anon_5650+0x958>
  20a266: 4d 8b 3f                     	movq	(%r15), %r15
  20a269: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  20a273: 45 31 f6                     	xorl	%r14d, %r14d
  20a276: 4c 8d 64 24 20               	leaq	32(%rsp), %r12
  20a27b: 48 89 44 24 10               	movq	%rax, 16(%rsp)
  20a280: b9 08 00 00 00               	movl	$8, %ecx
  20a285: 4a 8d 54 34 10               	leaq	16(%rsp,%r14), %rdx
  20a28a: 4c 89 e7                     	movq	%r12, %rdi
  20a28d: 4c 89 fe                     	movq	%r15, %rsi
  20a290: 4c 29 f1                     	subq	%r14, %rcx
  20a293: e8 e8 ef 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20a298: 48 8b 44 24 20               	movq	32(%rsp), %rax
  20a29d: 48 85 c0                     	testq	%rax, %rax
  20a2a0: 0f 84 04 15 00 00            	je	0x20b7aa <dwarf.parseFormValue__anon_5650+0x1e3a>
  20a2a6: 49 01 c6                     	addq	%rax, %r14
  20a2a9: 0f 82 86 17 00 00            	jb	0x20ba35 <dwarf.parseFormValue__anon_5650+0x20c5>
  20a2af: 49 83 fe 08                  	cmpq	$8, %r14
  20a2b3: 72 cb                        	jb	0x20a280 <dwarf.parseFormValue__anon_5650+0x910>
  20a2b5: 48 8b 4c 24 10               	movq	16(%rsp), %rcx
  20a2ba: 40 f6 c5 01                  	testb	$1, %bpl
  20a2be: 48 89 c8                     	movq	%rcx, %rax
  20a2c1: 48 0f c8                     	bswapq	%rax
  20a2c4: 48 0f 45 c1                  	cmovneq	%rcx, %rax
  20a2c8: 31 c9                        	xorl	%ecx, %ecx
  20a2ca: 48 89 03                     	movq	%rax, (%rbx)
  20a2cd: c6 43 10 07                  	movb	$7, 16(%rbx)
  20a2d1: 66 89 4b 18                  	movw	%cx, 24(%rbx)
  20a2d5: e9 46 14 00 00               	jmp	0x20b720 <dwarf.parseFormValue__anon_5650+0x1db0>
  20a2da: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20a2df: 4c 89 ee                     	movq	%r13, %rsi
  20a2e2: 4c 89 fa                     	movq	%r15, %rdx
  20a2e5: e8 06 a5 ff ff               	callq	0x2047f0 <leb128.readULEB128__anon_5289>
  20a2ea: 0f b7 6c 24 28               	movzwl	40(%rsp), %ebp
  20a2ef: 66 85 ed                     	testw	%bp, %bp
  20a2f2: 0f 85 35 16 00 00            	jne	0x20b92d <dwarf.parseFormValue__anon_5650+0x1fbd>
  20a2f8: 48 8b 44 24 20               	movq	32(%rsp), %rax
  20a2fd: 48 89 03                     	movq	%rax, (%rbx)
  20a300: c6 43 10 07                  	movb	$7, 16(%rbx)
  20a304: 66 89 6b 18                  	movw	%bp, 24(%rbx)
  20a308: e9 13 14 00 00               	jmp	0x20b720 <dwarf.parseFormValue__anon_5650+0x1db0>
  20a30d: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20a312: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20a317: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20a31c: b9 01 00 00 00               	movl	$1, %ecx
  20a321: 4c 89 6c 24 40               	movq	%r13, 64(%rsp)
  20a326: 49 8b 37                     	movq	(%r15), %rsi
  20a329: e8 52 ef 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20a32e: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20a334: 0f 84 5e 17 00 00            	je	0x20ba98 <dwarf.parseFormValue__anon_5650+0x2128>
  20a33a: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20a33f: 41 89 c5                     	movl	%eax, %r13d
  20a342: 41 83 e5 7f                  	andl	$127, %r13d
  20a346: 84 c0                        	testb	%al, %al
  20a348: 0f 89 0a 02 00 00            	jns	0x20a558 <dwarf.parseFormValue__anon_5650+0xbe8>
  20a34e: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20a353: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20a358: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20a35d: b9 01 00 00 00               	movl	$1, %ecx
  20a362: 49 8b 37                     	movq	(%r15), %rsi
  20a365: e8 16 ef 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20a36a: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20a370: 0f 84 22 17 00 00            	je	0x20ba98 <dwarf.parseFormValue__anon_5650+0x2128>
  20a376: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20a37b: 89 c1                        	movl	%eax, %ecx
  20a37d: 83 e1 7f                     	andl	$127, %ecx
  20a380: 48 c1 e1 07                  	shlq	$7, %rcx
  20a384: 49 09 cd                     	orq	%rcx, %r13
  20a387: 84 c0                        	testb	%al, %al
  20a389: 0f 89 c9 01 00 00            	jns	0x20a558 <dwarf.parseFormValue__anon_5650+0xbe8>
  20a38f: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20a394: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20a399: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20a39e: b9 01 00 00 00               	movl	$1, %ecx
  20a3a3: 49 8b 37                     	movq	(%r15), %rsi
  20a3a6: e8 d5 ee 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20a3ab: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20a3b1: 0f 84 e1 16 00 00            	je	0x20ba98 <dwarf.parseFormValue__anon_5650+0x2128>
  20a3b7: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20a3bc: 89 c1                        	movl	%eax, %ecx
  20a3be: 83 e1 7f                     	andl	$127, %ecx
  20a3c1: 48 c1 e1 0e                  	shlq	$14, %rcx
  20a3c5: 49 09 cd                     	orq	%rcx, %r13
  20a3c8: 84 c0                        	testb	%al, %al
  20a3ca: 0f 89 88 01 00 00            	jns	0x20a558 <dwarf.parseFormValue__anon_5650+0xbe8>
  20a3d0: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20a3d5: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20a3da: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20a3df: b9 01 00 00 00               	movl	$1, %ecx
  20a3e4: 49 8b 37                     	movq	(%r15), %rsi
  20a3e7: e8 94 ee 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20a3ec: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20a3f2: 0f 84 a0 16 00 00            	je	0x20ba98 <dwarf.parseFormValue__anon_5650+0x2128>
  20a3f8: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20a3fd: 89 c1                        	movl	%eax, %ecx
  20a3ff: 83 e1 7f                     	andl	$127, %ecx
  20a402: 48 c1 e1 15                  	shlq	$21, %rcx
  20a406: 49 09 cd                     	orq	%rcx, %r13
  20a409: 84 c0                        	testb	%al, %al
  20a40b: 0f 89 47 01 00 00            	jns	0x20a558 <dwarf.parseFormValue__anon_5650+0xbe8>
  20a411: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20a416: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20a41b: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20a420: b9 01 00 00 00               	movl	$1, %ecx
  20a425: 49 8b 37                     	movq	(%r15), %rsi
  20a428: e8 53 ee 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20a42d: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20a433: 0f 84 5f 16 00 00            	je	0x20ba98 <dwarf.parseFormValue__anon_5650+0x2128>
  20a439: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20a43e: 89 c1                        	movl	%eax, %ecx
  20a440: 83 e1 7f                     	andl	$127, %ecx
  20a443: 48 c1 e1 1c                  	shlq	$28, %rcx
  20a447: 49 09 cd                     	orq	%rcx, %r13
  20a44a: 84 c0                        	testb	%al, %al
  20a44c: 0f 89 06 01 00 00            	jns	0x20a558 <dwarf.parseFormValue__anon_5650+0xbe8>
  20a452: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20a457: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20a45c: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20a461: b9 01 00 00 00               	movl	$1, %ecx
  20a466: 49 8b 37                     	movq	(%r15), %rsi
  20a469: e8 12 ee 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20a46e: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20a474: 0f 84 1e 16 00 00            	je	0x20ba98 <dwarf.parseFormValue__anon_5650+0x2128>
  20a47a: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20a47f: 89 c1                        	movl	%eax, %ecx
  20a481: 83 e1 7f                     	andl	$127, %ecx
  20a484: 48 c1 e1 23                  	shlq	$35, %rcx
  20a488: 49 09 cd                     	orq	%rcx, %r13
  20a48b: 84 c0                        	testb	%al, %al
  20a48d: 0f 89 c5 00 00 00            	jns	0x20a558 <dwarf.parseFormValue__anon_5650+0xbe8>
  20a493: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20a498: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20a49d: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20a4a2: b9 01 00 00 00               	movl	$1, %ecx
  20a4a7: 49 8b 37                     	movq	(%r15), %rsi
  20a4aa: e8 d1 ed 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20a4af: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20a4b5: 0f 84 dd 15 00 00            	je	0x20ba98 <dwarf.parseFormValue__anon_5650+0x2128>
  20a4bb: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20a4c0: 4c 89 64 24 68               	movq	%r12, 104(%rsp)
  20a4c5: 89 c1                        	movl	%eax, %ecx
  20a4c7: 83 e1 7f                     	andl	$127, %ecx
  20a4ca: 48 c1 e1 2a                  	shlq	$42, %rcx
  20a4ce: 49 09 cd                     	orq	%rcx, %r13
  20a4d1: 84 c0                        	testb	%al, %al
  20a4d3: 79 7e                        	jns	0x20a553 <dwarf.parseFormValue__anon_5650+0xbe3>
  20a4d5: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20a4da: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20a4df: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20a4e4: b9 01 00 00 00               	movl	$1, %ecx
  20a4e9: 49 8b 37                     	movq	(%r15), %rsi
  20a4ec: e8 8f ed 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20a4f1: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20a4f7: 0f 84 9b 15 00 00            	je	0x20ba98 <dwarf.parseFormValue__anon_5650+0x2128>
  20a4fd: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20a502: 89 c1                        	movl	%eax, %ecx
  20a504: 83 e1 7f                     	andl	$127, %ecx
  20a507: 48 c1 e1 31                  	shlq	$49, %rcx
  20a50b: 49 09 cd                     	orq	%rcx, %r13
  20a50e: 84 c0                        	testb	%al, %al
  20a510: 79 41                        	jns	0x20a553 <dwarf.parseFormValue__anon_5650+0xbe3>
  20a512: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20a517: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20a51c: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20a521: b9 01 00 00 00               	movl	$1, %ecx
  20a526: 49 8b 37                     	movq	(%r15), %rsi
  20a529: e8 52 ed 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20a52e: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20a534: 0f 84 5e 15 00 00            	je	0x20ba98 <dwarf.parseFormValue__anon_5650+0x2128>
  20a53a: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20a53f: 89 c1                        	movl	%eax, %ecx
  20a541: 83 e1 7f                     	andl	$127, %ecx
  20a544: 48 c1 e1 38                  	shlq	$56, %rcx
  20a548: 49 09 cd                     	orq	%rcx, %r13
  20a54b: 84 c0                        	testb	%al, %al
  20a54d: 0f 88 f3 14 00 00            	js	0x20ba46 <dwarf.parseFormValue__anon_5650+0x20d6>
  20a553: 4c 8b 64 24 68               	movq	104(%rsp), %r12
  20a558: 41 0f b6 c6                  	movzbl	%r14b, %eax
  20a55c: 44 0f b6 cd                  	movzbl	%bpl, %r9d
  20a560: 48 8d bc 24 b8 00 00 00      	leaq	184(%rsp), %rdi
  20a568: 4c 89 e2                     	movq	%r12, %rdx
  20a56b: 4c 89 f9                     	movq	%r15, %rcx
  20a56e: 4d 89 e8                     	movq	%r13, %r8
  20a571: 89 04 24                     	movl	%eax, (%rsp)
  20a574: 4c 8b 74 24 40               	movq	64(%rsp), %r14
  20a579: 4c 89 f6                     	movq	%r14, %rsi
  20a57c: e8 ef f3 ff ff               	callq	0x209970 <dwarf.parseFormValue__anon_5650>
  20a581: c5 fc 10 84 24 b8 00 00 00   	vmovups	184(%rsp), %ymm0
  20a58a: c5 fc 11 03                  	vmovups	%ymm0, (%rbx)
  20a58e: 66 83 7b 18 00               	cmpw	$0, 24(%rbx)
  20a593: 0f 84 8e 11 00 00            	je	0x20b727 <dwarf.parseFormValue__anon_5650+0x1db7>
  20a599: e9 ac 13 00 00               	jmp	0x20b94a <dwarf.parseFormValue__anon_5650+0x1fda>
  20a59e: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  20a5a4: 40 0f b6 cd                  	movzbl	%bpl, %ecx
  20a5a8: 49 8b 17                     	movq	(%r15), %rdx
  20a5ab: 41 f6 c6 01                  	testb	$1, %r14b
  20a5af: 0f 84 bf 10 00 00            	je	0x20b674 <dwarf.parseFormValue__anon_5650+0x1d04>
  20a5b5: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20a5ba: 4c 89 ee                     	movq	%r13, %rsi
  20a5bd: e8 6e a1 ff ff               	callq	0x204730 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readInt__anon_5249>
  20a5c2: 0f b7 6c 24 28               	movzwl	40(%rsp), %ebp
  20a5c7: 66 85 ed                     	testw	%bp, %bp
  20a5ca: 0f 85 41 16 00 00            	jne	0x20bc11 <dwarf.parseFormValue__anon_5650+0x22a1>
  20a5d0: 48 8b 44 24 20               	movq	32(%rsp), %rax
  20a5d5: e9 b9 10 00 00               	jmp	0x20b693 <dwarf.parseFormValue__anon_5650+0x1d23>
  20a5da: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20a5df: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20a5e4: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20a5e9: b9 01 00 00 00               	movl	$1, %ecx
  20a5ee: 4c 89 e5                     	movq	%r12, %rbp
  20a5f1: 4d 89 ec                     	movq	%r13, %r12
  20a5f4: 49 8b 37                     	movq	(%r15), %rsi
  20a5f7: e8 84 ec 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20a5fc: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20a602: 0f 84 3e 11 00 00            	je	0x20b746 <dwarf.parseFormValue__anon_5650+0x1dd6>
  20a608: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20a60d: 41 89 c5                     	movl	%eax, %r13d
  20a610: 41 83 e5 7f                  	andl	$127, %r13d
  20a614: 84 c0                        	testb	%al, %al
  20a616: 0f 89 52 02 00 00            	jns	0x20a86e <dwarf.parseFormValue__anon_5650+0xefe>
  20a61c: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20a621: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20a626: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20a62b: b9 01 00 00 00               	movl	$1, %ecx
  20a630: 49 8b 37                     	movq	(%r15), %rsi
  20a633: e8 48 ec 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20a638: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20a63e: 0f 84 02 11 00 00            	je	0x20b746 <dwarf.parseFormValue__anon_5650+0x1dd6>
  20a644: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20a649: 89 c1                        	movl	%eax, %ecx
  20a64b: 83 e1 7f                     	andl	$127, %ecx
  20a64e: 48 c1 e1 07                  	shlq	$7, %rcx
  20a652: 49 09 cd                     	orq	%rcx, %r13
  20a655: 84 c0                        	testb	%al, %al
  20a657: 0f 89 11 02 00 00            	jns	0x20a86e <dwarf.parseFormValue__anon_5650+0xefe>
  20a65d: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20a662: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20a667: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20a66c: b9 01 00 00 00               	movl	$1, %ecx
  20a671: 49 8b 37                     	movq	(%r15), %rsi
  20a674: e8 07 ec 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20a679: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20a67f: 0f 84 c1 10 00 00            	je	0x20b746 <dwarf.parseFormValue__anon_5650+0x1dd6>
  20a685: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20a68a: 89 c1                        	movl	%eax, %ecx
  20a68c: 83 e1 7f                     	andl	$127, %ecx
  20a68f: 48 c1 e1 0e                  	shlq	$14, %rcx
  20a693: 49 09 cd                     	orq	%rcx, %r13
  20a696: 84 c0                        	testb	%al, %al
  20a698: 0f 89 d0 01 00 00            	jns	0x20a86e <dwarf.parseFormValue__anon_5650+0xefe>
  20a69e: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20a6a3: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20a6a8: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20a6ad: b9 01 00 00 00               	movl	$1, %ecx
  20a6b2: 49 8b 37                     	movq	(%r15), %rsi
  20a6b5: e8 c6 eb 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20a6ba: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20a6c0: 0f 84 80 10 00 00            	je	0x20b746 <dwarf.parseFormValue__anon_5650+0x1dd6>
  20a6c6: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20a6cb: 89 c1                        	movl	%eax, %ecx
  20a6cd: 83 e1 7f                     	andl	$127, %ecx
  20a6d0: 48 c1 e1 15                  	shlq	$21, %rcx
  20a6d4: 49 09 cd                     	orq	%rcx, %r13
  20a6d7: 84 c0                        	testb	%al, %al
  20a6d9: 0f 89 8f 01 00 00            	jns	0x20a86e <dwarf.parseFormValue__anon_5650+0xefe>
  20a6df: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20a6e4: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20a6e9: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20a6ee: b9 01 00 00 00               	movl	$1, %ecx
  20a6f3: 49 8b 37                     	movq	(%r15), %rsi
  20a6f6: e8 85 eb 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20a6fb: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20a701: 0f 84 3f 10 00 00            	je	0x20b746 <dwarf.parseFormValue__anon_5650+0x1dd6>
  20a707: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20a70c: 89 c1                        	movl	%eax, %ecx
  20a70e: 83 e1 7f                     	andl	$127, %ecx
  20a711: 48 c1 e1 1c                  	shlq	$28, %rcx
  20a715: 49 09 cd                     	orq	%rcx, %r13
  20a718: 84 c0                        	testb	%al, %al
  20a71a: 0f 89 4e 01 00 00            	jns	0x20a86e <dwarf.parseFormValue__anon_5650+0xefe>
  20a720: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20a725: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20a72a: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20a72f: b9 01 00 00 00               	movl	$1, %ecx
  20a734: 49 8b 37                     	movq	(%r15), %rsi
  20a737: e8 44 eb 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20a73c: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20a742: 0f 84 fe 0f 00 00            	je	0x20b746 <dwarf.parseFormValue__anon_5650+0x1dd6>
  20a748: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20a74d: 89 c1                        	movl	%eax, %ecx
  20a74f: 83 e1 7f                     	andl	$127, %ecx
  20a752: 48 c1 e1 23                  	shlq	$35, %rcx
  20a756: 49 09 cd                     	orq	%rcx, %r13
  20a759: 84 c0                        	testb	%al, %al
  20a75b: 0f 89 0d 01 00 00            	jns	0x20a86e <dwarf.parseFormValue__anon_5650+0xefe>
  20a761: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20a766: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20a76b: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20a770: b9 01 00 00 00               	movl	$1, %ecx
  20a775: 49 8b 37                     	movq	(%r15), %rsi
  20a778: e8 03 eb 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20a77d: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20a783: 0f 84 bd 0f 00 00            	je	0x20b746 <dwarf.parseFormValue__anon_5650+0x1dd6>
  20a789: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20a78e: 89 c1                        	movl	%eax, %ecx
  20a790: 83 e1 7f                     	andl	$127, %ecx
  20a793: 48 c1 e1 2a                  	shlq	$42, %rcx
  20a797: 49 09 cd                     	orq	%rcx, %r13
  20a79a: 84 c0                        	testb	%al, %al
  20a79c: 0f 89 cc 00 00 00            	jns	0x20a86e <dwarf.parseFormValue__anon_5650+0xefe>
  20a7a2: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20a7a7: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20a7ac: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20a7b1: b9 01 00 00 00               	movl	$1, %ecx
  20a7b6: 49 8b 37                     	movq	(%r15), %rsi
  20a7b9: e8 c2 ea 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20a7be: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20a7c4: 0f 84 7c 0f 00 00            	je	0x20b746 <dwarf.parseFormValue__anon_5650+0x1dd6>
  20a7ca: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20a7cf: 89 c1                        	movl	%eax, %ecx
  20a7d1: 83 e1 7f                     	andl	$127, %ecx
  20a7d4: 48 c1 e1 31                  	shlq	$49, %rcx
  20a7d8: 49 09 cd                     	orq	%rcx, %r13
  20a7db: 84 c0                        	testb	%al, %al
  20a7dd: 0f 89 8b 00 00 00            	jns	0x20a86e <dwarf.parseFormValue__anon_5650+0xefe>
  20a7e3: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20a7e8: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20a7ed: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20a7f2: b9 01 00 00 00               	movl	$1, %ecx
  20a7f7: 49 8b 37                     	movq	(%r15), %rsi
  20a7fa: e8 81 ea 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20a7ff: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20a805: 0f 84 3b 0f 00 00            	je	0x20b746 <dwarf.parseFormValue__anon_5650+0x1dd6>
  20a80b: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20a810: 89 c1                        	movl	%eax, %ecx
  20a812: 83 e1 7f                     	andl	$127, %ecx
  20a815: 48 c1 e1 38                  	shlq	$56, %rcx
  20a819: 49 09 cd                     	orq	%rcx, %r13
  20a81c: 84 c0                        	testb	%al, %al
  20a81e: 79 4e                        	jns	0x20a86e <dwarf.parseFormValue__anon_5650+0xefe>
  20a820: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20a825: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20a82a: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20a82f: b9 01 00 00 00               	movl	$1, %ecx
  20a834: 49 8b 37                     	movq	(%r15), %rsi
  20a837: e8 44 ea 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20a83c: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20a842: 0f 84 fe 0e 00 00            	je	0x20b746 <dwarf.parseFormValue__anon_5650+0x1dd6>
  20a848: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20a84d: a8 7e                        	testb	$126, %al
  20a84f: 0f 85 da 13 00 00            	jne	0x20bc2f <dwarf.parseFormValue__anon_5650+0x22bf>
  20a855: 4d 89 e6                     	movq	%r12, %r14
  20a858: 66 c7 44 24 40 29 00         	movw	$41, 64(%rsp)
  20a85f: 84 c0                        	testb	%al, %al
  20a861: 0f 88 f1 0e 00 00            	js	0x20b758 <dwarf.parseFormValue__anon_5650+0x1de8>
  20a867: 48 c1 e0 3f                  	shlq	$63, %rax
  20a86b: 49 09 c5                     	orq	%rax, %r13
  20a86e: 48 8d bc 24 88 00 00 00      	leaq	136(%rsp), %rdi
  20a876: 4c 89 e6                     	movq	%r12, %rsi
  20a879: 48 89 ea                     	movq	%rbp, %rdx
  20a87c: 4c 89 f9                     	movq	%r15, %rcx
  20a87f: 4d 89 e8                     	movq	%r13, %r8
  20a882: 4d 89 e6                     	movq	%r12, %r14
  20a885: e8 16 ee 00 00               	callq	0x2196a0 <dwarf.readAllocBytes__anon_6399>
  20a88a: 0f b7 ac 24 98 00 00 00      	movzwl	152(%rsp), %ebp
  20a892: 66 85 ed                     	testw	%bp, %bp
  20a895: 0f 85 bf 10 00 00            	jne	0x20b95a <dwarf.parseFormValue__anon_5650+0x1fea>
  20a89b: c5 f8 10 84 24 88 00 00 00   	vmovups	136(%rsp), %xmm0
  20a8a4: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  20a8aa: c5 f8 11 03                  	vmovups	%xmm0, (%rbx)
  20a8ae: c6 43 10 04                  	movb	$4, 16(%rbx)
  20a8b2: e9 70 0e 00 00               	jmp	0x20b727 <dwarf.parseFormValue__anon_5650+0x1db7>
  20a8b7: c5 f8 10 05 99 6f ff ff      	vmovups	-36967(%rip), %xmm0     # 0x201858 <heap.arena_allocator.ArenaAllocator.allocator__anon_6362+0x48>
  20a8bf: 48 8b 05 a2 6f ff ff         	movq	-36958(%rip), %rax      # 0x201868 <heap.arena_allocator.ArenaAllocator.allocator__anon_6362+0x58>
  20a8c6: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  20a8cc: 48 89 43 10                  	movq	%rax, 16(%rbx)
  20a8d0: c5 f8 11 03                  	vmovups	%xmm0, (%rbx)
  20a8d4: e9 47 0e 00 00               	jmp	0x20b720 <dwarf.parseFormValue__anon_5650+0x1db0>
  20a8d9: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  20a8df: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20a8e4: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20a8e9: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20a8ee: b9 01 00 00 00               	movl	$1, %ecx
  20a8f3: 49 8b 37                     	movq	(%r15), %rsi
  20a8f6: e8 85 e9 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20a8fb: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20a901: 0f 84 fe 12 00 00            	je	0x20bc05 <dwarf.parseFormValue__anon_5650+0x2295>
  20a907: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20a90c: 41 89 c6                     	movl	%eax, %r14d
  20a90f: 41 83 e6 7f                  	andl	$127, %r14d
  20a913: 84 c0                        	testb	%al, %al
  20a915: 0f 89 10 02 00 00            	jns	0x20ab2b <dwarf.parseFormValue__anon_5650+0x11bb>
  20a91b: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20a920: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20a925: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20a92a: b9 01 00 00 00               	movl	$1, %ecx
  20a92f: 49 8b 37                     	movq	(%r15), %rsi
  20a932: e8 49 e9 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20a937: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20a93d: 0f 84 c2 12 00 00            	je	0x20bc05 <dwarf.parseFormValue__anon_5650+0x2295>
  20a943: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20a948: 89 c1                        	movl	%eax, %ecx
  20a94a: 83 e1 7f                     	andl	$127, %ecx
  20a94d: 48 c1 e1 07                  	shlq	$7, %rcx
  20a951: 49 09 ce                     	orq	%rcx, %r14
  20a954: 84 c0                        	testb	%al, %al
  20a956: 0f 89 cf 01 00 00            	jns	0x20ab2b <dwarf.parseFormValue__anon_5650+0x11bb>
  20a95c: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20a961: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20a966: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20a96b: b9 01 00 00 00               	movl	$1, %ecx
  20a970: 49 8b 37                     	movq	(%r15), %rsi
  20a973: e8 08 e9 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20a978: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20a97e: 0f 84 81 12 00 00            	je	0x20bc05 <dwarf.parseFormValue__anon_5650+0x2295>
  20a984: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20a989: 89 c1                        	movl	%eax, %ecx
  20a98b: 83 e1 7f                     	andl	$127, %ecx
  20a98e: 48 c1 e1 0e                  	shlq	$14, %rcx
  20a992: 49 09 ce                     	orq	%rcx, %r14
  20a995: 84 c0                        	testb	%al, %al
  20a997: 0f 89 8e 01 00 00            	jns	0x20ab2b <dwarf.parseFormValue__anon_5650+0x11bb>
  20a99d: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20a9a2: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20a9a7: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20a9ac: b9 01 00 00 00               	movl	$1, %ecx
  20a9b1: 49 8b 37                     	movq	(%r15), %rsi
  20a9b4: e8 c7 e8 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20a9b9: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20a9bf: 0f 84 40 12 00 00            	je	0x20bc05 <dwarf.parseFormValue__anon_5650+0x2295>
  20a9c5: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20a9ca: 89 c1                        	movl	%eax, %ecx
  20a9cc: 83 e1 7f                     	andl	$127, %ecx
  20a9cf: 48 c1 e1 15                  	shlq	$21, %rcx
  20a9d3: 49 09 ce                     	orq	%rcx, %r14
  20a9d6: 84 c0                        	testb	%al, %al
  20a9d8: 0f 89 4d 01 00 00            	jns	0x20ab2b <dwarf.parseFormValue__anon_5650+0x11bb>
  20a9de: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20a9e3: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20a9e8: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20a9ed: b9 01 00 00 00               	movl	$1, %ecx
  20a9f2: 49 8b 37                     	movq	(%r15), %rsi
  20a9f5: e8 86 e8 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20a9fa: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20aa00: 0f 84 ff 11 00 00            	je	0x20bc05 <dwarf.parseFormValue__anon_5650+0x2295>
  20aa06: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20aa0b: 89 c1                        	movl	%eax, %ecx
  20aa0d: 83 e1 7f                     	andl	$127, %ecx
  20aa10: 48 c1 e1 1c                  	shlq	$28, %rcx
  20aa14: 49 09 ce                     	orq	%rcx, %r14
  20aa17: 84 c0                        	testb	%al, %al
  20aa19: 0f 89 0c 01 00 00            	jns	0x20ab2b <dwarf.parseFormValue__anon_5650+0x11bb>
  20aa1f: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20aa24: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20aa29: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20aa2e: b9 01 00 00 00               	movl	$1, %ecx
  20aa33: 49 8b 37                     	movq	(%r15), %rsi
  20aa36: e8 45 e8 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20aa3b: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20aa41: 0f 84 be 11 00 00            	je	0x20bc05 <dwarf.parseFormValue__anon_5650+0x2295>
  20aa47: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20aa4c: 89 c1                        	movl	%eax, %ecx
  20aa4e: 83 e1 7f                     	andl	$127, %ecx
  20aa51: 48 c1 e1 23                  	shlq	$35, %rcx
  20aa55: 49 09 ce                     	orq	%rcx, %r14
  20aa58: 84 c0                        	testb	%al, %al
  20aa5a: 0f 89 cb 00 00 00            	jns	0x20ab2b <dwarf.parseFormValue__anon_5650+0x11bb>
  20aa60: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20aa65: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20aa6a: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20aa6f: b9 01 00 00 00               	movl	$1, %ecx
  20aa74: 49 8b 37                     	movq	(%r15), %rsi
  20aa77: e8 04 e8 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20aa7c: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20aa82: 0f 84 7d 11 00 00            	je	0x20bc05 <dwarf.parseFormValue__anon_5650+0x2295>
  20aa88: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20aa8d: 4d 89 ec                     	movq	%r13, %r12
  20aa90: 89 c1                        	movl	%eax, %ecx
  20aa92: 83 e1 7f                     	andl	$127, %ecx
  20aa95: 48 c1 e1 2a                  	shlq	$42, %rcx
  20aa99: 49 09 ce                     	orq	%rcx, %r14
  20aa9c: 84 c0                        	testb	%al, %al
  20aa9e: 0f 89 84 00 00 00            	jns	0x20ab28 <dwarf.parseFormValue__anon_5650+0x11b8>
  20aaa4: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20aaa9: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20aaae: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20aab3: b9 01 00 00 00               	movl	$1, %ecx
  20aab8: 49 8b 37                     	movq	(%r15), %rsi
  20aabb: e8 c0 e7 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20aac0: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20aac6: 4d 89 e5                     	movq	%r12, %r13
  20aac9: 0f 84 36 11 00 00            	je	0x20bc05 <dwarf.parseFormValue__anon_5650+0x2295>
  20aacf: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20aad4: 89 c1                        	movl	%eax, %ecx
  20aad6: 83 e1 7f                     	andl	$127, %ecx
  20aad9: 48 c1 e1 31                  	shlq	$49, %rcx
  20aadd: 49 09 ce                     	orq	%rcx, %r14
  20aae0: 84 c0                        	testb	%al, %al
  20aae2: 79 44                        	jns	0x20ab28 <dwarf.parseFormValue__anon_5650+0x11b8>
  20aae4: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20aae9: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20aaee: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20aaf3: b9 01 00 00 00               	movl	$1, %ecx
  20aaf8: 49 8b 37                     	movq	(%r15), %rsi
  20aafb: e8 80 e7 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20ab00: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20ab06: 4d 89 e5                     	movq	%r12, %r13
  20ab09: 0f 84 f6 10 00 00            	je	0x20bc05 <dwarf.parseFormValue__anon_5650+0x2295>
  20ab0f: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20ab14: 89 c1                        	movl	%eax, %ecx
  20ab16: 83 e1 7f                     	andl	$127, %ecx
  20ab19: 48 c1 e1 38                  	shlq	$56, %rcx
  20ab1d: 49 09 ce                     	orq	%rcx, %r14
  20ab20: 84 c0                        	testb	%al, %al
  20ab22: 0f 88 a2 0f 00 00            	js	0x20baca <dwarf.parseFormValue__anon_5650+0x215a>
  20ab28: 4d 89 e5                     	movq	%r12, %r13
  20ab2b: 4c 89 33                     	movq	%r14, (%rbx)
  20ab2e: c6 43 10 0b                  	movb	$11, 16(%rbx)
  20ab32: e9 e9 0b 00 00               	jmp	0x20b720 <dwarf.parseFormValue__anon_5650+0x1db0>
  20ab37: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  20ab3d: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20ab42: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20ab47: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20ab4c: b9 01 00 00 00               	movl	$1, %ecx
  20ab51: 49 8b 37                     	movq	(%r15), %rsi
  20ab54: e8 27 e7 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20ab59: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20ab5f: 0f 84 a0 10 00 00            	je	0x20bc05 <dwarf.parseFormValue__anon_5650+0x2295>
  20ab65: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20ab6a: 41 89 c6                     	movl	%eax, %r14d
  20ab6d: 41 83 e6 7f                  	andl	$127, %r14d
  20ab71: 84 c0                        	testb	%al, %al
  20ab73: 0f 89 3d 01 00 00            	jns	0x20acb6 <dwarf.parseFormValue__anon_5650+0x1346>
  20ab79: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20ab7e: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20ab83: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20ab88: b9 01 00 00 00               	movl	$1, %ecx
  20ab8d: 49 8b 37                     	movq	(%r15), %rsi
  20ab90: e8 eb e6 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20ab95: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20ab9b: 0f 84 64 10 00 00            	je	0x20bc05 <dwarf.parseFormValue__anon_5650+0x2295>
  20aba1: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20aba6: 89 c1                        	movl	%eax, %ecx
  20aba8: 83 e1 7f                     	andl	$127, %ecx
  20abab: 48 c1 e1 07                  	shlq	$7, %rcx
  20abaf: 49 09 ce                     	orq	%rcx, %r14
  20abb2: 84 c0                        	testb	%al, %al
  20abb4: 0f 89 fc 00 00 00            	jns	0x20acb6 <dwarf.parseFormValue__anon_5650+0x1346>
  20abba: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20abbf: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20abc4: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20abc9: b9 01 00 00 00               	movl	$1, %ecx
  20abce: 49 8b 37                     	movq	(%r15), %rsi
  20abd1: e8 aa e6 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20abd6: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20abdc: 0f 84 23 10 00 00            	je	0x20bc05 <dwarf.parseFormValue__anon_5650+0x2295>
  20abe2: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20abe7: 89 c1                        	movl	%eax, %ecx
  20abe9: 83 e1 7f                     	andl	$127, %ecx
  20abec: 48 c1 e1 0e                  	shlq	$14, %rcx
  20abf0: 49 09 ce                     	orq	%rcx, %r14
  20abf3: 84 c0                        	testb	%al, %al
  20abf5: 0f 89 bb 00 00 00            	jns	0x20acb6 <dwarf.parseFormValue__anon_5650+0x1346>
  20abfb: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20ac00: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20ac05: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20ac0a: b9 01 00 00 00               	movl	$1, %ecx
  20ac0f: 49 8b 37                     	movq	(%r15), %rsi
  20ac12: e8 69 e6 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20ac17: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20ac1d: 0f 84 e2 0f 00 00            	je	0x20bc05 <dwarf.parseFormValue__anon_5650+0x2295>
  20ac23: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20ac28: 89 c1                        	movl	%eax, %ecx
  20ac2a: 83 e1 7f                     	andl	$127, %ecx
  20ac2d: 48 c1 e1 15                  	shlq	$21, %rcx
  20ac31: 49 09 ce                     	orq	%rcx, %r14
  20ac34: 84 c0                        	testb	%al, %al
  20ac36: 79 7e                        	jns	0x20acb6 <dwarf.parseFormValue__anon_5650+0x1346>
  20ac38: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20ac3d: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20ac42: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20ac47: b9 01 00 00 00               	movl	$1, %ecx
  20ac4c: 49 8b 37                     	movq	(%r15), %rsi
  20ac4f: e8 2c e6 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20ac54: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20ac5a: 0f 84 a5 0f 00 00            	je	0x20bc05 <dwarf.parseFormValue__anon_5650+0x2295>
  20ac60: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20ac65: 89 c1                        	movl	%eax, %ecx
  20ac67: 83 e1 7f                     	andl	$127, %ecx
  20ac6a: 48 c1 e1 1c                  	shlq	$28, %rcx
  20ac6e: 49 09 ce                     	orq	%rcx, %r14
  20ac71: 84 c0                        	testb	%al, %al
  20ac73: 79 41                        	jns	0x20acb6 <dwarf.parseFormValue__anon_5650+0x1346>
  20ac75: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20ac7a: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20ac7f: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20ac84: b9 01 00 00 00               	movl	$1, %ecx
  20ac89: 49 8b 37                     	movq	(%r15), %rsi
  20ac8c: e8 ef e5 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20ac91: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20ac97: 0f 84 68 0f 00 00            	je	0x20bc05 <dwarf.parseFormValue__anon_5650+0x2295>
  20ac9d: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20aca2: 89 c1                        	movl	%eax, %ecx
  20aca4: 83 e1 7f                     	andl	$127, %ecx
  20aca7: 48 c1 e1 23                  	shlq	$35, %rcx
  20acab: 49 09 ce                     	orq	%rcx, %r14
  20acae: 84 c0                        	testb	%al, %al
  20acb0: 0f 88 ac 0c 00 00            	js	0x20b962 <dwarf.parseFormValue__anon_5650+0x1ff2>
  20acb6: 4c 89 33                     	movq	%r14, (%rbx)
  20acb9: e9 19 09 00 00               	jmp	0x20b5d7 <dwarf.parseFormValue__anon_5650+0x1c67>
  20acbe: c5 f8 28 05 fa 55 ff ff      	vmovaps	-43526(%rip), %xmm0     # 0x2002c0 <zig-graph+0x2002c0>
  20acc6: 45 31 f6                     	xorl	%r14d, %r14d
  20acc9: 4c 8d 64 24 20               	leaq	32(%rsp), %r12
  20acce: c5 f8 29 44 24 70            	vmovaps	%xmm0, 112(%rsp)
  20acd4: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
  20ace0: 49 8b 37                     	movq	(%r15), %rsi
  20ace3: b9 10 00 00 00               	movl	$16, %ecx
  20ace8: 4a 8d 54 34 70               	leaq	112(%rsp,%r14), %rdx
  20aced: 4c 89 e7                     	movq	%r12, %rdi
  20acf0: 4c 29 f1                     	subq	%r14, %rcx
  20acf3: e8 88 e5 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20acf8: 48 8b 44 24 20               	movq	32(%rsp), %rax
  20acfd: 48 85 c0                     	testq	%rax, %rax
  20ad00: 0f 84 e5 0b 00 00            	je	0x20b8eb <dwarf.parseFormValue__anon_5650+0x1f7b>
  20ad06: 49 01 c6                     	addq	%rax, %r14
  20ad09: 0f 82 26 0d 00 00            	jb	0x20ba35 <dwarf.parseFormValue__anon_5650+0x20c5>
  20ad0f: 49 83 fe 10                  	cmpq	$16, %r14
  20ad13: 72 cb                        	jb	0x20ace0 <dwarf.parseFormValue__anon_5650+0x1370>
  20ad15: c5 f8 28 44 24 70            	vmovaps	112(%rsp), %xmm0
  20ad1b: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  20ad21: c5 f8 11 03                  	vmovups	%xmm0, (%rbx)
  20ad25: c6 43 10 0f                  	movb	$15, 16(%rbx)
  20ad29: e9 f9 09 00 00               	jmp	0x20b727 <dwarf.parseFormValue__anon_5650+0x1db7>
  20ad2e: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  20ad34: 40 0f b6 cd                  	movzbl	%bpl, %ecx
  20ad38: 49 8b 17                     	movq	(%r15), %rdx
  20ad3b: 41 f6 c6 01                  	testb	$1, %r14b
  20ad3f: 0f 84 5a 09 00 00            	je	0x20b69f <dwarf.parseFormValue__anon_5650+0x1d2f>
  20ad45: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20ad4a: 4c 89 ee                     	movq	%r13, %rsi
  20ad4d: e8 de 99 ff ff               	callq	0x204730 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readInt__anon_5249>
  20ad52: 0f b7 6c 24 28               	movzwl	40(%rsp), %ebp
  20ad57: 66 85 ed                     	testw	%bp, %bp
  20ad5a: 0f 85 b1 0e 00 00            	jne	0x20bc11 <dwarf.parseFormValue__anon_5650+0x22a1>
  20ad60: 48 8b 44 24 20               	movq	32(%rsp), %rax
  20ad65: e9 54 09 00 00               	jmp	0x20b6be <dwarf.parseFormValue__anon_5650+0x1d4e>
  20ad6a: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  20ad70: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  20ad7a: 45 31 f6                     	xorl	%r14d, %r14d
  20ad7d: 4c 8d 64 24 20               	leaq	32(%rsp), %r12
  20ad82: 4d 8b 3f                     	movq	(%r15), %r15
  20ad85: 48 89 44 24 10               	movq	%rax, 16(%rsp)
  20ad8a: 66 0f 1f 44 00 00            	nopw	(%rax,%rax)
  20ad90: b9 08 00 00 00               	movl	$8, %ecx
  20ad95: 4a 8d 54 34 10               	leaq	16(%rsp,%r14), %rdx
  20ad9a: 4c 89 e7                     	movq	%r12, %rdi
  20ad9d: 4c 89 fe                     	movq	%r15, %rsi
  20ada0: 4c 29 f1                     	subq	%r14, %rcx
  20ada3: e8 d8 e4 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20ada8: 48 8b 44 24 20               	movq	32(%rsp), %rax
  20adad: 48 85 c0                     	testq	%rax, %rax
  20adb0: 0f 84 8f 0a 00 00            	je	0x20b845 <dwarf.parseFormValue__anon_5650+0x1ed5>
  20adb6: 49 01 c6                     	addq	%rax, %r14
  20adb9: 0f 82 76 0c 00 00            	jb	0x20ba35 <dwarf.parseFormValue__anon_5650+0x20c5>
  20adbf: 49 83 fe 08                  	cmpq	$8, %r14
  20adc3: 72 cb                        	jb	0x20ad90 <dwarf.parseFormValue__anon_5650+0x1420>
  20adc5: 48 8b 44 24 10               	movq	16(%rsp), %rax
  20adca: 40 f6 c5 01                  	testb	$1, %bpl
  20adce: 48 89 c1                     	movq	%rax, %rcx
  20add1: 48 0f c9                     	bswapq	%rcx
  20add4: 48 0f 45 c8                  	cmovneq	%rax, %rcx
  20add8: 48 89 0b                     	movq	%rcx, (%rbx)
  20addb: c6 43 10 07                  	movb	$7, 16(%rbx)
  20addf: e9 3c 09 00 00               	jmp	0x20b720 <dwarf.parseFormValue__anon_5650+0x1db0>
  20ade4: c5 f8 10 05 84 6a ff ff      	vmovups	-38268(%rip), %xmm0     # 0x201870 <heap.arena_allocator.ArenaAllocator.allocator__anon_6362+0x60>
  20adec: 48 8b 05 8d 6a ff ff         	movq	-38259(%rip), %rax      # 0x201880 <heap.arena_allocator.ArenaAllocator.allocator__anon_6362+0x70>
  20adf3: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  20adf9: 48 89 43 10                  	movq	%rax, 16(%rbx)
  20adfd: c5 f8 11 03                  	vmovups	%xmm0, (%rbx)
  20ae01: e9 1a 09 00 00               	jmp	0x20b720 <dwarf.parseFormValue__anon_5650+0x1db0>
  20ae06: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  20ae0c: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20ae11: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20ae16: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20ae1b: b9 01 00 00 00               	movl	$1, %ecx
  20ae20: 49 8b 37                     	movq	(%r15), %rsi
  20ae23: e8 58 e4 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20ae28: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20ae2e: 0f 84 d1 0d 00 00            	je	0x20bc05 <dwarf.parseFormValue__anon_5650+0x2295>
  20ae34: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20ae39: 41 89 c6                     	movl	%eax, %r14d
  20ae3c: 41 83 e6 7f                  	andl	$127, %r14d
  20ae40: 84 c0                        	testb	%al, %al
  20ae42: 0f 89 10 02 00 00            	jns	0x20b058 <dwarf.parseFormValue__anon_5650+0x16e8>
  20ae48: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20ae4d: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20ae52: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20ae57: b9 01 00 00 00               	movl	$1, %ecx
  20ae5c: 49 8b 37                     	movq	(%r15), %rsi
  20ae5f: e8 1c e4 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20ae64: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20ae6a: 0f 84 95 0d 00 00            	je	0x20bc05 <dwarf.parseFormValue__anon_5650+0x2295>
  20ae70: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20ae75: 89 c1                        	movl	%eax, %ecx
  20ae77: 83 e1 7f                     	andl	$127, %ecx
  20ae7a: 48 c1 e1 07                  	shlq	$7, %rcx
  20ae7e: 49 09 ce                     	orq	%rcx, %r14
  20ae81: 84 c0                        	testb	%al, %al
  20ae83: 0f 89 cf 01 00 00            	jns	0x20b058 <dwarf.parseFormValue__anon_5650+0x16e8>
  20ae89: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20ae8e: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20ae93: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20ae98: b9 01 00 00 00               	movl	$1, %ecx
  20ae9d: 49 8b 37                     	movq	(%r15), %rsi
  20aea0: e8 db e3 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20aea5: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20aeab: 0f 84 54 0d 00 00            	je	0x20bc05 <dwarf.parseFormValue__anon_5650+0x2295>
  20aeb1: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20aeb6: 89 c1                        	movl	%eax, %ecx
  20aeb8: 83 e1 7f                     	andl	$127, %ecx
  20aebb: 48 c1 e1 0e                  	shlq	$14, %rcx
  20aebf: 49 09 ce                     	orq	%rcx, %r14
  20aec2: 84 c0                        	testb	%al, %al
  20aec4: 0f 89 8e 01 00 00            	jns	0x20b058 <dwarf.parseFormValue__anon_5650+0x16e8>
  20aeca: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20aecf: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20aed4: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20aed9: b9 01 00 00 00               	movl	$1, %ecx
  20aede: 49 8b 37                     	movq	(%r15), %rsi
  20aee1: e8 9a e3 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20aee6: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20aeec: 0f 84 13 0d 00 00            	je	0x20bc05 <dwarf.parseFormValue__anon_5650+0x2295>
  20aef2: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20aef7: 89 c1                        	movl	%eax, %ecx
  20aef9: 83 e1 7f                     	andl	$127, %ecx
  20aefc: 48 c1 e1 15                  	shlq	$21, %rcx
  20af00: 49 09 ce                     	orq	%rcx, %r14
  20af03: 84 c0                        	testb	%al, %al
  20af05: 0f 89 4d 01 00 00            	jns	0x20b058 <dwarf.parseFormValue__anon_5650+0x16e8>
  20af0b: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20af10: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20af15: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20af1a: b9 01 00 00 00               	movl	$1, %ecx
  20af1f: 49 8b 37                     	movq	(%r15), %rsi
  20af22: e8 59 e3 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20af27: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20af2d: 0f 84 d2 0c 00 00            	je	0x20bc05 <dwarf.parseFormValue__anon_5650+0x2295>
  20af33: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20af38: 89 c1                        	movl	%eax, %ecx
  20af3a: 83 e1 7f                     	andl	$127, %ecx
  20af3d: 48 c1 e1 1c                  	shlq	$28, %rcx
  20af41: 49 09 ce                     	orq	%rcx, %r14
  20af44: 84 c0                        	testb	%al, %al
  20af46: 0f 89 0c 01 00 00            	jns	0x20b058 <dwarf.parseFormValue__anon_5650+0x16e8>
  20af4c: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20af51: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20af56: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20af5b: b9 01 00 00 00               	movl	$1, %ecx
  20af60: 49 8b 37                     	movq	(%r15), %rsi
  20af63: e8 18 e3 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20af68: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20af6e: 0f 84 91 0c 00 00            	je	0x20bc05 <dwarf.parseFormValue__anon_5650+0x2295>
  20af74: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20af79: 89 c1                        	movl	%eax, %ecx
  20af7b: 83 e1 7f                     	andl	$127, %ecx
  20af7e: 48 c1 e1 23                  	shlq	$35, %rcx
  20af82: 49 09 ce                     	orq	%rcx, %r14
  20af85: 84 c0                        	testb	%al, %al
  20af87: 0f 89 cb 00 00 00            	jns	0x20b058 <dwarf.parseFormValue__anon_5650+0x16e8>
  20af8d: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20af92: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20af97: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20af9c: b9 01 00 00 00               	movl	$1, %ecx
  20afa1: 49 8b 37                     	movq	(%r15), %rsi
  20afa4: e8 d7 e2 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20afa9: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20afaf: 0f 84 50 0c 00 00            	je	0x20bc05 <dwarf.parseFormValue__anon_5650+0x2295>
  20afb5: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20afba: 4d 89 ec                     	movq	%r13, %r12
  20afbd: 89 c1                        	movl	%eax, %ecx
  20afbf: 83 e1 7f                     	andl	$127, %ecx
  20afc2: 48 c1 e1 2a                  	shlq	$42, %rcx
  20afc6: 49 09 ce                     	orq	%rcx, %r14
  20afc9: 84 c0                        	testb	%al, %al
  20afcb: 0f 89 84 00 00 00            	jns	0x20b055 <dwarf.parseFormValue__anon_5650+0x16e5>
  20afd1: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20afd6: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20afdb: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20afe0: b9 01 00 00 00               	movl	$1, %ecx
  20afe5: 49 8b 37                     	movq	(%r15), %rsi
  20afe8: e8 93 e2 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20afed: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20aff3: 4d 89 e5                     	movq	%r12, %r13
  20aff6: 0f 84 09 0c 00 00            	je	0x20bc05 <dwarf.parseFormValue__anon_5650+0x2295>
  20affc: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20b001: 89 c1                        	movl	%eax, %ecx
  20b003: 83 e1 7f                     	andl	$127, %ecx
  20b006: 48 c1 e1 31                  	shlq	$49, %rcx
  20b00a: 49 09 ce                     	orq	%rcx, %r14
  20b00d: 84 c0                        	testb	%al, %al
  20b00f: 79 44                        	jns	0x20b055 <dwarf.parseFormValue__anon_5650+0x16e5>
  20b011: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20b016: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20b01b: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20b020: b9 01 00 00 00               	movl	$1, %ecx
  20b025: 49 8b 37                     	movq	(%r15), %rsi
  20b028: e8 53 e2 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20b02d: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20b033: 4d 89 e5                     	movq	%r12, %r13
  20b036: 0f 84 c9 0b 00 00            	je	0x20bc05 <dwarf.parseFormValue__anon_5650+0x2295>
  20b03c: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20b041: 89 c1                        	movl	%eax, %ecx
  20b043: 83 e1 7f                     	andl	$127, %ecx
  20b046: 48 c1 e1 38                  	shlq	$56, %rcx
  20b04a: 49 09 ce                     	orq	%rcx, %r14
  20b04d: 84 c0                        	testb	%al, %al
  20b04f: 0f 88 c8 0a 00 00            	js	0x20bb1d <dwarf.parseFormValue__anon_5650+0x21ad>
  20b055: 4d 89 e5                     	movq	%r12, %r13
  20b058: 4c 89 33                     	movq	%r14, (%rbx)
  20b05b: c6 43 10 0d                  	movb	$13, 16(%rbx)
  20b05f: e9 bc 06 00 00               	jmp	0x20b720 <dwarf.parseFormValue__anon_5650+0x1db0>
  20b064: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  20b06a: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20b06f: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20b074: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20b079: b9 01 00 00 00               	movl	$1, %ecx
  20b07e: 49 8b 37                     	movq	(%r15), %rsi
  20b081: e8 fa e1 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20b086: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20b08c: 0f 84 73 0b 00 00            	je	0x20bc05 <dwarf.parseFormValue__anon_5650+0x2295>
  20b092: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20b097: 41 89 c6                     	movl	%eax, %r14d
  20b09a: 41 83 e6 7f                  	andl	$127, %r14d
  20b09e: 84 c0                        	testb	%al, %al
  20b0a0: 0f 89 10 02 00 00            	jns	0x20b2b6 <dwarf.parseFormValue__anon_5650+0x1946>
  20b0a6: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20b0ab: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20b0b0: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20b0b5: b9 01 00 00 00               	movl	$1, %ecx
  20b0ba: 49 8b 37                     	movq	(%r15), %rsi
  20b0bd: e8 be e1 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20b0c2: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20b0c8: 0f 84 37 0b 00 00            	je	0x20bc05 <dwarf.parseFormValue__anon_5650+0x2295>
  20b0ce: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20b0d3: 89 c1                        	movl	%eax, %ecx
  20b0d5: 83 e1 7f                     	andl	$127, %ecx
  20b0d8: 48 c1 e1 07                  	shlq	$7, %rcx
  20b0dc: 49 09 ce                     	orq	%rcx, %r14
  20b0df: 84 c0                        	testb	%al, %al
  20b0e1: 0f 89 cf 01 00 00            	jns	0x20b2b6 <dwarf.parseFormValue__anon_5650+0x1946>
  20b0e7: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20b0ec: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20b0f1: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20b0f6: b9 01 00 00 00               	movl	$1, %ecx
  20b0fb: 49 8b 37                     	movq	(%r15), %rsi
  20b0fe: e8 7d e1 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20b103: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20b109: 0f 84 f6 0a 00 00            	je	0x20bc05 <dwarf.parseFormValue__anon_5650+0x2295>
  20b10f: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20b114: 89 c1                        	movl	%eax, %ecx
  20b116: 83 e1 7f                     	andl	$127, %ecx
  20b119: 48 c1 e1 0e                  	shlq	$14, %rcx
  20b11d: 49 09 ce                     	orq	%rcx, %r14
  20b120: 84 c0                        	testb	%al, %al
  20b122: 0f 89 8e 01 00 00            	jns	0x20b2b6 <dwarf.parseFormValue__anon_5650+0x1946>
  20b128: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20b12d: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20b132: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20b137: b9 01 00 00 00               	movl	$1, %ecx
  20b13c: 49 8b 37                     	movq	(%r15), %rsi
  20b13f: e8 3c e1 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20b144: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20b14a: 0f 84 b5 0a 00 00            	je	0x20bc05 <dwarf.parseFormValue__anon_5650+0x2295>
  20b150: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20b155: 89 c1                        	movl	%eax, %ecx
  20b157: 83 e1 7f                     	andl	$127, %ecx
  20b15a: 48 c1 e1 15                  	shlq	$21, %rcx
  20b15e: 49 09 ce                     	orq	%rcx, %r14
  20b161: 84 c0                        	testb	%al, %al
  20b163: 0f 89 4d 01 00 00            	jns	0x20b2b6 <dwarf.parseFormValue__anon_5650+0x1946>
  20b169: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20b16e: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20b173: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20b178: b9 01 00 00 00               	movl	$1, %ecx
  20b17d: 49 8b 37                     	movq	(%r15), %rsi
  20b180: e8 fb e0 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20b185: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20b18b: 0f 84 74 0a 00 00            	je	0x20bc05 <dwarf.parseFormValue__anon_5650+0x2295>
  20b191: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20b196: 89 c1                        	movl	%eax, %ecx
  20b198: 83 e1 7f                     	andl	$127, %ecx
  20b19b: 48 c1 e1 1c                  	shlq	$28, %rcx
  20b19f: 49 09 ce                     	orq	%rcx, %r14
  20b1a2: 84 c0                        	testb	%al, %al
  20b1a4: 0f 89 0c 01 00 00            	jns	0x20b2b6 <dwarf.parseFormValue__anon_5650+0x1946>
  20b1aa: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20b1af: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20b1b4: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20b1b9: b9 01 00 00 00               	movl	$1, %ecx
  20b1be: 49 8b 37                     	movq	(%r15), %rsi
  20b1c1: e8 ba e0 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20b1c6: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20b1cc: 0f 84 33 0a 00 00            	je	0x20bc05 <dwarf.parseFormValue__anon_5650+0x2295>
  20b1d2: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20b1d7: 89 c1                        	movl	%eax, %ecx
  20b1d9: 83 e1 7f                     	andl	$127, %ecx
  20b1dc: 48 c1 e1 23                  	shlq	$35, %rcx
  20b1e0: 49 09 ce                     	orq	%rcx, %r14
  20b1e3: 84 c0                        	testb	%al, %al
  20b1e5: 0f 89 cb 00 00 00            	jns	0x20b2b6 <dwarf.parseFormValue__anon_5650+0x1946>
  20b1eb: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20b1f0: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20b1f5: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20b1fa: b9 01 00 00 00               	movl	$1, %ecx
  20b1ff: 49 8b 37                     	movq	(%r15), %rsi
  20b202: e8 79 e0 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20b207: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20b20d: 0f 84 f2 09 00 00            	je	0x20bc05 <dwarf.parseFormValue__anon_5650+0x2295>
  20b213: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20b218: 4d 89 ec                     	movq	%r13, %r12
  20b21b: 89 c1                        	movl	%eax, %ecx
  20b21d: 83 e1 7f                     	andl	$127, %ecx
  20b220: 48 c1 e1 2a                  	shlq	$42, %rcx
  20b224: 49 09 ce                     	orq	%rcx, %r14
  20b227: 84 c0                        	testb	%al, %al
  20b229: 0f 89 84 00 00 00            	jns	0x20b2b3 <dwarf.parseFormValue__anon_5650+0x1943>
  20b22f: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20b234: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20b239: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20b23e: b9 01 00 00 00               	movl	$1, %ecx
  20b243: 49 8b 37                     	movq	(%r15), %rsi
  20b246: e8 35 e0 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20b24b: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20b251: 4d 89 e5                     	movq	%r12, %r13
  20b254: 0f 84 ab 09 00 00            	je	0x20bc05 <dwarf.parseFormValue__anon_5650+0x2295>
  20b25a: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20b25f: 89 c1                        	movl	%eax, %ecx
  20b261: 83 e1 7f                     	andl	$127, %ecx
  20b264: 48 c1 e1 31                  	shlq	$49, %rcx
  20b268: 49 09 ce                     	orq	%rcx, %r14
  20b26b: 84 c0                        	testb	%al, %al
  20b26d: 79 44                        	jns	0x20b2b3 <dwarf.parseFormValue__anon_5650+0x1943>
  20b26f: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20b274: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20b279: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20b27e: b9 01 00 00 00               	movl	$1, %ecx
  20b283: 49 8b 37                     	movq	(%r15), %rsi
  20b286: e8 f5 df 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20b28b: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20b291: 4d 89 e5                     	movq	%r12, %r13
  20b294: 0f 84 6b 09 00 00            	je	0x20bc05 <dwarf.parseFormValue__anon_5650+0x2295>
  20b29a: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20b29f: 89 c1                        	movl	%eax, %ecx
  20b2a1: 83 e1 7f                     	andl	$127, %ecx
  20b2a4: 48 c1 e1 38                  	shlq	$56, %rcx
  20b2a8: 49 09 ce                     	orq	%rcx, %r14
  20b2ab: 84 c0                        	testb	%al, %al
  20b2ad: 0f 88 bd 08 00 00            	js	0x20bb70 <dwarf.parseFormValue__anon_5650+0x2200>
  20b2b3: 4d 89 e5                     	movq	%r12, %r13
  20b2b6: 4c 89 33                     	movq	%r14, (%rbx)
  20b2b9: c6 43 10 0e                  	movb	$14, 16(%rbx)
  20b2bd: e9 5e 04 00 00               	jmp	0x20b720 <dwarf.parseFormValue__anon_5650+0x1db0>
  20b2c2: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  20b2c8: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20b2cd: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20b2d2: b9 01 00 00 00               	movl	$1, %ecx
  20b2d7: 49 8b 37                     	movq	(%r15), %rsi
  20b2da: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20b2df: e8 9c df 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20b2e4: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20b2ea: 0f 84 55 05 00 00            	je	0x20b845 <dwarf.parseFormValue__anon_5650+0x1ed5>
  20b2f0: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20b2f5: e9 e7 00 00 00               	jmp	0x20b3e1 <dwarf.parseFormValue__anon_5650+0x1a71>
  20b2fa: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  20b300: 45 31 f6                     	xorl	%r14d, %r14d
  20b303: 4c 8d 64 24 20               	leaq	32(%rsp), %r12
  20b308: 4d 8b 3f                     	movq	(%r15), %r15
  20b30b: 66 c7 44 24 10 aa aa         	movw	$43690, 16(%rsp)        # imm = 0xAAAA
  20b312: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)
  20b320: b9 02 00 00 00               	movl	$2, %ecx
  20b325: 4a 8d 54 34 10               	leaq	16(%rsp,%r14), %rdx
  20b32a: 4c 89 e7                     	movq	%r12, %rdi
  20b32d: 4c 89 fe                     	movq	%r15, %rsi
  20b330: 4c 29 f1                     	subq	%r14, %rcx
  20b333: e8 48 df 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20b338: 48 8b 44 24 20               	movq	32(%rsp), %rax
  20b33d: 48 85 c0                     	testq	%rax, %rax
  20b340: 0f 84 ff 04 00 00            	je	0x20b845 <dwarf.parseFormValue__anon_5650+0x1ed5>
  20b346: 49 01 c6                     	addq	%rax, %r14
  20b349: 0f 82 e6 06 00 00            	jb	0x20ba35 <dwarf.parseFormValue__anon_5650+0x20c5>
  20b34f: 49 83 fe 02                  	cmpq	$2, %r14
  20b353: 72 cb                        	jb	0x20b320 <dwarf.parseFormValue__anon_5650+0x19b0>
  20b355: 0f b7 44 24 10               	movzwl	16(%rsp), %eax
  20b35a: 89 c1                        	movl	%eax, %ecx
  20b35c: 66 c1 c1 08                  	rolw	$8, %cx
  20b360: 40 f6 c5 01                  	testb	$1, %bpl
  20b364: 0f 45 c8                     	cmovnel	%eax, %ecx
  20b367: 0f b7 c1                     	movzwl	%cx, %eax
  20b36a: eb 75                        	jmp	0x20b3e1 <dwarf.parseFormValue__anon_5650+0x1a71>
  20b36c: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  20b372: 45 31 f6                     	xorl	%r14d, %r14d
  20b375: 4c 8d 64 24 20               	leaq	32(%rsp), %r12
  20b37a: 4d 8b 3f                     	movq	(%r15), %r15
  20b37d: c6 44 24 12 aa               	movb	$-86, 18(%rsp)
  20b382: 66 c7 44 24 10 aa aa         	movw	$43690, 16(%rsp)        # imm = 0xAAAA
  20b389: 0f 1f 80 00 00 00 00         	nopl	(%rax)
  20b390: 4c 89 f1                     	movq	%r14, %rcx
  20b393: 4a 8d 54 34 10               	leaq	16(%rsp,%r14), %rdx
  20b398: 4c 89 e7                     	movq	%r12, %rdi
  20b39b: 4c 89 fe                     	movq	%r15, %rsi
  20b39e: 48 83 f1 03                  	xorq	$3, %rcx
  20b3a2: e8 d9 de 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20b3a7: 48 8b 44 24 20               	movq	32(%rsp), %rax
  20b3ac: 48 85 c0                     	testq	%rax, %rax
  20b3af: 0f 84 90 04 00 00            	je	0x20b845 <dwarf.parseFormValue__anon_5650+0x1ed5>
  20b3b5: 49 01 c6                     	addq	%rax, %r14
  20b3b8: 0f 82 77 06 00 00            	jb	0x20ba35 <dwarf.parseFormValue__anon_5650+0x20c5>
  20b3be: 49 83 fe 03                  	cmpq	$3, %r14
  20b3c2: 72 cc                        	jb	0x20b390 <dwarf.parseFormValue__anon_5650+0x1a20>
  20b3c4: 0f b6 44 24 12               	movzbl	18(%rsp), %eax
  20b3c9: 0f b7 4c 24 10               	movzwl	16(%rsp), %ecx
  20b3ce: c1 e0 10                     	shll	$16, %eax
  20b3d1: 09 c1                        	orl	%eax, %ecx
  20b3d3: 89 c8                        	movl	%ecx, %eax
  20b3d5: 0f c8                        	bswapl	%eax
  20b3d7: c1 e8 08                     	shrl	$8, %eax
  20b3da: 40 f6 c5 01                  	testb	$1, %bpl
  20b3de: 0f 45 c1                     	cmovnel	%ecx, %eax
  20b3e1: 48 89 03                     	movq	%rax, (%rbx)
  20b3e4: c6 43 10 0b                  	movb	$11, 16(%rbx)
  20b3e8: e9 33 03 00 00               	jmp	0x20b720 <dwarf.parseFormValue__anon_5650+0x1db0>
  20b3ed: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  20b3f3: 45 31 f6                     	xorl	%r14d, %r14d
  20b3f6: 4c 8d 64 24 20               	leaq	32(%rsp), %r12
  20b3fb: 4d 8b 3f                     	movq	(%r15), %r15
  20b3fe: c7 44 24 10 aa aa aa aa      	movl	$2863311530, 16(%rsp)   # imm = 0xAAAAAAAA
  20b406: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
  20b410: b9 04 00 00 00               	movl	$4, %ecx
  20b415: 4a 8d 54 34 10               	leaq	16(%rsp,%r14), %rdx
  20b41a: 4c 89 e7                     	movq	%r12, %rdi
  20b41d: 4c 89 fe                     	movq	%r15, %rsi
  20b420: 4c 29 f1                     	subq	%r14, %rcx
  20b423: e8 58 de 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20b428: 48 8b 44 24 20               	movq	32(%rsp), %rax
  20b42d: 48 85 c0                     	testq	%rax, %rax
  20b430: 0f 84 0f 04 00 00            	je	0x20b845 <dwarf.parseFormValue__anon_5650+0x1ed5>
  20b436: 49 01 c6                     	addq	%rax, %r14
  20b439: 0f 82 f6 05 00 00            	jb	0x20ba35 <dwarf.parseFormValue__anon_5650+0x20c5>
  20b43f: 49 83 fe 04                  	cmpq	$4, %r14
  20b443: 72 cb                        	jb	0x20b410 <dwarf.parseFormValue__anon_5650+0x1aa0>
  20b445: 8b 44 24 10                  	movl	16(%rsp), %eax
  20b449: 40 f6 c5 01                  	testb	$1, %bpl
  20b44d: 89 c1                        	movl	%eax, %ecx
  20b44f: 0f c9                        	bswapl	%ecx
  20b451: 0f 45 c8                     	cmovnel	%eax, %ecx
  20b454: 48 89 0b                     	movq	%rcx, (%rbx)
  20b457: c6 43 10 0b                  	movb	$11, 16(%rbx)
  20b45b: e9 c0 02 00 00               	jmp	0x20b720 <dwarf.parseFormValue__anon_5650+0x1db0>
  20b460: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  20b466: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20b46b: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20b470: b9 01 00 00 00               	movl	$1, %ecx
  20b475: 49 8b 37                     	movq	(%r15), %rsi
  20b478: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20b47d: e8 fe dd 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20b482: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20b488: 0f 84 b7 03 00 00            	je	0x20b845 <dwarf.parseFormValue__anon_5650+0x1ed5>
  20b48e: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20b493: e9 d9 00 00 00               	jmp	0x20b571 <dwarf.parseFormValue__anon_5650+0x1c01>
  20b498: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  20b49e: 45 31 e4                     	xorl	%r12d, %r12d
  20b4a1: 4c 8d 74 24 20               	leaq	32(%rsp), %r14
  20b4a6: 4d 8b 3f                     	movq	(%r15), %r15
  20b4a9: 66 c7 44 24 10 aa aa         	movw	$43690, 16(%rsp)        # imm = 0xAAAA
  20b4b0: b9 02 00 00 00               	movl	$2, %ecx
  20b4b5: 4a 8d 54 24 10               	leaq	16(%rsp,%r12), %rdx
  20b4ba: 4c 89 f7                     	movq	%r14, %rdi
  20b4bd: 4c 89 fe                     	movq	%r15, %rsi
  20b4c0: 4c 29 e1                     	subq	%r12, %rcx
  20b4c3: e8 b8 dd 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20b4c8: 48 8b 44 24 20               	movq	32(%rsp), %rax
  20b4cd: 48 85 c0                     	testq	%rax, %rax
  20b4d0: 0f 84 6f 03 00 00            	je	0x20b845 <dwarf.parseFormValue__anon_5650+0x1ed5>
  20b4d6: 49 01 c4                     	addq	%rax, %r12
  20b4d9: 0f 82 56 05 00 00            	jb	0x20ba35 <dwarf.parseFormValue__anon_5650+0x20c5>
  20b4df: 49 83 fc 02                  	cmpq	$2, %r12
  20b4e3: 72 cb                        	jb	0x20b4b0 <dwarf.parseFormValue__anon_5650+0x1b40>
  20b4e5: 0f b7 44 24 10               	movzwl	16(%rsp), %eax
  20b4ea: 89 c1                        	movl	%eax, %ecx
  20b4ec: 66 c1 c1 08                  	rolw	$8, %cx
  20b4f0: 40 f6 c5 01                  	testb	$1, %bpl
  20b4f4: 0f 45 c8                     	cmovnel	%eax, %ecx
  20b4f7: 0f b7 c1                     	movzwl	%cx, %eax
  20b4fa: eb 75                        	jmp	0x20b571 <dwarf.parseFormValue__anon_5650+0x1c01>
  20b4fc: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  20b502: 45 31 e4                     	xorl	%r12d, %r12d
  20b505: 4c 8d 74 24 20               	leaq	32(%rsp), %r14
  20b50a: 4d 8b 3f                     	movq	(%r15), %r15
  20b50d: c6 44 24 12 aa               	movb	$-86, 18(%rsp)
  20b512: 66 c7 44 24 10 aa aa         	movw	$43690, 16(%rsp)        # imm = 0xAAAA
  20b519: 0f 1f 80 00 00 00 00         	nopl	(%rax)
  20b520: 4c 89 e1                     	movq	%r12, %rcx
  20b523: 4a 8d 54 24 10               	leaq	16(%rsp,%r12), %rdx
  20b528: 4c 89 f7                     	movq	%r14, %rdi
  20b52b: 4c 89 fe                     	movq	%r15, %rsi
  20b52e: 48 83 f1 03                  	xorq	$3, %rcx
  20b532: e8 49 dd 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20b537: 48 8b 44 24 20               	movq	32(%rsp), %rax
  20b53c: 48 85 c0                     	testq	%rax, %rax
  20b53f: 0f 84 00 03 00 00            	je	0x20b845 <dwarf.parseFormValue__anon_5650+0x1ed5>
  20b545: 49 01 c4                     	addq	%rax, %r12
  20b548: 0f 82 e7 04 00 00            	jb	0x20ba35 <dwarf.parseFormValue__anon_5650+0x20c5>
  20b54e: 49 83 fc 03                  	cmpq	$3, %r12
  20b552: 72 cc                        	jb	0x20b520 <dwarf.parseFormValue__anon_5650+0x1bb0>
  20b554: 0f b6 44 24 12               	movzbl	18(%rsp), %eax
  20b559: 0f b7 4c 24 10               	movzwl	16(%rsp), %ecx
  20b55e: c1 e0 10                     	shll	$16, %eax
  20b561: 09 c1                        	orl	%eax, %ecx
  20b563: 89 c8                        	movl	%ecx, %eax
  20b565: 0f c8                        	bswapl	%eax
  20b567: c1 e8 08                     	shrl	$8, %eax
  20b56a: 40 f6 c5 01                  	testb	$1, %bpl
  20b56e: 0f 45 c1                     	cmovnel	%ecx, %eax
  20b571: 48 89 03                     	movq	%rax, (%rbx)
  20b574: eb 61                        	jmp	0x20b5d7 <dwarf.parseFormValue__anon_5650+0x1c67>
  20b576: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  20b57c: 45 31 e4                     	xorl	%r12d, %r12d
  20b57f: 4c 8d 74 24 20               	leaq	32(%rsp), %r14
  20b584: 4d 8b 3f                     	movq	(%r15), %r15
  20b587: c7 44 24 10 aa aa aa aa      	movl	$2863311530, 16(%rsp)   # imm = 0xAAAAAAAA
  20b58f: 90                           	nop
  20b590: b9 04 00 00 00               	movl	$4, %ecx
  20b595: 4a 8d 54 24 10               	leaq	16(%rsp,%r12), %rdx
  20b59a: 4c 89 f7                     	movq	%r14, %rdi
  20b59d: 4c 89 fe                     	movq	%r15, %rsi
  20b5a0: 4c 29 e1                     	subq	%r12, %rcx
  20b5a3: e8 d8 dc 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20b5a8: 48 8b 44 24 20               	movq	32(%rsp), %rax
  20b5ad: 48 85 c0                     	testq	%rax, %rax
  20b5b0: 0f 84 8f 02 00 00            	je	0x20b845 <dwarf.parseFormValue__anon_5650+0x1ed5>
  20b5b6: 49 01 c4                     	addq	%rax, %r12
  20b5b9: 0f 82 76 04 00 00            	jb	0x20ba35 <dwarf.parseFormValue__anon_5650+0x20c5>
  20b5bf: 49 83 fc 04                  	cmpq	$4, %r12
  20b5c3: 72 cb                        	jb	0x20b590 <dwarf.parseFormValue__anon_5650+0x1c20>
  20b5c5: 8b 44 24 10                  	movl	16(%rsp), %eax
  20b5c9: 40 f6 c5 01                  	testb	$1, %bpl
  20b5cd: 89 c1                        	movl	%eax, %ecx
  20b5cf: 0f c9                        	bswapl	%ecx
  20b5d1: 0f 45 c8                     	cmovnel	%eax, %ecx
  20b5d4: 48 89 0b                     	movq	%rcx, (%rbx)
  20b5d7: c6 43 10 01                  	movb	$1, 16(%rbx)
  20b5db: e9 40 01 00 00               	jmp	0x20b720 <dwarf.parseFormValue__anon_5650+0x1db0>
  20b5e0: 4c 8d 74 24 20               	leaq	32(%rsp), %r14
  20b5e5: 4c 89 ee                     	movq	%r13, %rsi
  20b5e8: 4c 89 fa                     	movq	%r15, %rdx
  20b5eb: 4c 89 f7                     	movq	%r14, %rdi
  20b5ee: e8 fd 91 ff ff               	callq	0x2047f0 <leb128.readULEB128__anon_5289>
  20b5f3: 0f b7 6c 24 28               	movzwl	40(%rsp), %ebp
  20b5f8: 66 85 ed                     	testw	%bp, %bp
  20b5fb: 0f 85 fb 01 00 00            	jne	0x20b7fc <dwarf.parseFormValue__anon_5650+0x1e8c>
  20b601: 49 8b 06                     	movq	(%r14), %rax
  20b604: 0f b6 4c 24 38               	movzbl	56(%rsp), %ecx
  20b609: 48 89 03                     	movq	%rax, (%rbx)
  20b60c: 88 4b 08                     	movb	%cl, 8(%rbx)
  20b60f: c6 43 10 03                  	movb	$3, 16(%rbx)
  20b613: 66 c7 43 18 00 00            	movw	$0, 24(%rbx)
  20b619: e9 09 01 00 00               	jmp	0x20b727 <dwarf.parseFormValue__anon_5650+0x1db7>
  20b61e: 48 8d 7c 24 10               	leaq	16(%rsp), %rdi
  20b623: 4c 89 ee                     	movq	%r13, %rsi
  20b626: e8 45 90 ff ff               	callq	0x204670 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readInt__anon_5246>
  20b62b: 0f b7 6c 24 14               	movzwl	20(%rsp), %ebp
  20b630: 66 85 ed                     	testw	%bp, %bp
  20b633: 0f 85 d8 05 00 00            	jne	0x20bc11 <dwarf.parseFormValue__anon_5650+0x22a1>
  20b639: 8b 44 24 10                  	movl	16(%rsp), %eax
  20b63d: 48 89 03                     	movq	%rax, (%rbx)
  20b640: c6 43 10 0a                  	movb	$10, 16(%rbx)
  20b644: e9 d7 00 00 00               	jmp	0x20b720 <dwarf.parseFormValue__anon_5650+0x1db0>
  20b649: 48 8d 7c 24 10               	leaq	16(%rsp), %rdi
  20b64e: 4c 89 ee                     	movq	%r13, %rsi
  20b651: e8 1a 90 ff ff               	callq	0x204670 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readInt__anon_5246>
  20b656: 0f b7 6c 24 14               	movzwl	20(%rsp), %ebp
  20b65b: 66 85 ed                     	testw	%bp, %bp
  20b65e: 0f 85 ad 05 00 00            	jne	0x20bc11 <dwarf.parseFormValue__anon_5650+0x22a1>
  20b664: 8b 44 24 10                  	movl	16(%rsp), %eax
  20b668: 48 89 03                     	movq	%rax, (%rbx)
  20b66b: c6 43 10 08                  	movb	$8, 16(%rbx)
  20b66f: e9 ac 00 00 00               	jmp	0x20b720 <dwarf.parseFormValue__anon_5650+0x1db0>
  20b674: 48 8d 7c 24 10               	leaq	16(%rsp), %rdi
  20b679: 4c 89 ee                     	movq	%r13, %rsi
  20b67c: e8 ef 8f ff ff               	callq	0x204670 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readInt__anon_5246>
  20b681: 0f b7 6c 24 14               	movzwl	20(%rsp), %ebp
  20b686: 66 85 ed                     	testw	%bp, %bp
  20b689: 0f 85 82 05 00 00            	jne	0x20bc11 <dwarf.parseFormValue__anon_5650+0x22a1>
  20b68f: 8b 44 24 10                  	movl	16(%rsp), %eax
  20b693: 48 89 03                     	movq	%rax, (%rbx)
  20b696: c6 43 10 06                  	movb	$6, 16(%rbx)
  20b69a: e9 81 00 00 00               	jmp	0x20b720 <dwarf.parseFormValue__anon_5650+0x1db0>
  20b69f: 48 8d 7c 24 10               	leaq	16(%rsp), %rdi
  20b6a4: 4c 89 ee                     	movq	%r13, %rsi
  20b6a7: e8 c4 8f ff ff               	callq	0x204670 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readInt__anon_5246>
  20b6ac: 0f b7 6c 24 14               	movzwl	20(%rsp), %ebp
  20b6b1: 66 85 ed                     	testw	%bp, %bp
  20b6b4: 0f 85 57 05 00 00            	jne	0x20bc11 <dwarf.parseFormValue__anon_5650+0x22a1>
  20b6ba: 8b 44 24 10                  	movl	16(%rsp), %eax
  20b6be: 48 89 03                     	movq	%rax, (%rbx)
  20b6c1: c6 43 10 0c                  	movb	$12, 16(%rbx)
  20b6c5: eb 59                        	jmp	0x20b720 <dwarf.parseFormValue__anon_5650+0x1db0>
  20b6c7: 0f b6 54 24 12               	movzbl	18(%rsp), %edx
  20b6cc: 48 c1 e1 10                  	shlq	$16, %rcx
  20b6d0: 49 c1 e0 08                  	shlq	$8, %r8
  20b6d4: 49 09 c8                     	orq	%rcx, %r8
  20b6d7: 49 09 d0                     	orq	%rdx, %r8
  20b6da: 49 c1 e0 08                  	shlq	$8, %r8
  20b6de: 49 09 c0                     	orq	%rax, %r8
  20b6e1: 4c 8b 6c 24 40               	movq	64(%rsp), %r13
  20b6e6: 48 8b 54 24 68               	movq	104(%rsp), %rdx
  20b6eb: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20b6f0: 4c 89 ee                     	movq	%r13, %rsi
  20b6f3: 4c 89 f9                     	movq	%r15, %rcx
  20b6f6: e8 a5 df 00 00               	callq	0x2196a0 <dwarf.readAllocBytes__anon_6399>
  20b6fb: 0f b7 6c 24 30               	movzwl	48(%rsp), %ebp
  20b700: 66 85 ed                     	testw	%bp, %bp
  20b703: 75 6d                        	jne	0x20b772 <dwarf.parseFormValue__anon_5650+0x1e02>
  20b705: 48 8b 4c 24 20               	movq	32(%rsp), %rcx
  20b70a: 48 8b 44 24 28               	movq	40(%rsp), %rax
  20b70f: 31 ed                        	xorl	%ebp, %ebp
  20b711: 48 89 0b                     	movq	%rcx, (%rbx)
  20b714: 48 89 43 08                  	movq	%rax, 8(%rbx)
  20b718: c6 43 10 02                  	movb	$2, 16(%rbx)
  20b71c: 66 89 6b 18                  	movw	%bp, 24(%rbx)
  20b720: 66 83 7b 18 00               	cmpw	$0, 24(%rbx)
  20b725: 75 15                        	jne	0x20b73c <dwarf.parseFormValue__anon_5650+0x1dcc>
  20b727: 48 81 c4 d8 00 00 00         	addq	$216, %rsp
  20b72e: 5b                           	popq	%rbx
  20b72f: 41 5c                        	popq	%r12
  20b731: 41 5d                        	popq	%r13
  20b733: 41 5e                        	popq	%r14
  20b735: 41 5f                        	popq	%r15
  20b737: 5d                           	popq	%rbp
  20b738: c5 f8 77                     	vzeroupper
  20b73b: c3                           	retq
  20b73c: 4c 89 ef                     	movq	%r13, %rdi
  20b73f: e8 0c 06 01 00               	callq	0x21bd50 <builtin.returnError>
  20b744: eb e1                        	jmp	0x20b727 <dwarf.parseFormValue__anon_5650+0x1db7>
  20b746: 4c 89 e7                     	movq	%r12, %rdi
  20b749: 4d 89 e6                     	movq	%r12, %r14
  20b74c: e8 ff 05 01 00               	callq	0x21bd50 <builtin.returnError>
  20b751: 66 c7 44 24 40 33 00         	movw	$51, 64(%rsp)
  20b758: 4c 89 f7                     	movq	%r14, %rdi
  20b75b: e8 f0 05 01 00               	callq	0x21bd50 <builtin.returnError>
  20b760: 4c 89 f7                     	movq	%r14, %rdi
  20b763: e8 e8 05 01 00               	callq	0x21bd50 <builtin.returnError>
  20b768: 0f b7 44 24 40               	movzwl	64(%rsp), %eax
  20b76d: e9 4f 03 00 00               	jmp	0x20bac1 <dwarf.parseFormValue__anon_5650+0x2151>
  20b772: 4c 89 ef                     	movq	%r13, %rdi
  20b775: e8 d6 05 01 00               	callq	0x21bd50 <builtin.returnError>
  20b77a: 4c 89 ef                     	movq	%r13, %rdi
  20b77d: e8 ce 05 01 00               	callq	0x21bd50 <builtin.returnError>
  20b782: eb 21                        	jmp	0x20b7a5 <dwarf.parseFormValue__anon_5650+0x1e35>
  20b784: 4c 8b 6c 24 40               	movq	64(%rsp), %r13
  20b789: 4c 89 ef                     	movq	%r13, %rdi
  20b78c: e8 bf 05 01 00               	callq	0x21bd50 <builtin.returnError>
  20b791: 4c 89 ef                     	movq	%r13, %rdi
  20b794: e8 b7 05 01 00               	callq	0x21bd50 <builtin.returnError>
  20b799: 4c 89 ef                     	movq	%r13, %rdi
  20b79c: e8 af 05 01 00               	callq	0x21bd50 <builtin.returnError>
  20b7a1: 66 bd 33 00                  	movw	$51, %bp
  20b7a5: e9 67 ff ff ff               	jmp	0x20b711 <dwarf.parseFormValue__anon_5650+0x1da1>
  20b7aa: 4c 89 ef                     	movq	%r13, %rdi
  20b7ad: e8 9e 05 01 00               	callq	0x21bd50 <builtin.returnError>
  20b7b2: 4c 89 ef                     	movq	%r13, %rdi
  20b7b5: e8 96 05 01 00               	callq	0x21bd50 <builtin.returnError>
  20b7ba: 4c 89 ef                     	movq	%r13, %rdi
  20b7bd: e8 8e 05 01 00               	callq	0x21bd50 <builtin.returnError>
  20b7c2: 4c 89 ef                     	movq	%r13, %rdi
  20b7c5: e8 86 05 01 00               	callq	0x21bd50 <builtin.returnError>
  20b7ca: 66 b9 33 00                  	movw	$51, %cx
  20b7ce: e9 f7 ea ff ff               	jmp	0x20a2ca <dwarf.parseFormValue__anon_5650+0x95a>
  20b7d3: 4c 89 ef                     	movq	%r13, %rdi
  20b7d6: e8 75 05 01 00               	callq	0x21bd50 <builtin.returnError>
  20b7db: 4c 89 ef                     	movq	%r13, %rdi
  20b7de: e8 6d 05 01 00               	callq	0x21bd50 <builtin.returnError>
  20b7e3: 4c 89 ef                     	movq	%r13, %rdi
  20b7e6: e8 65 05 01 00               	callq	0x21bd50 <builtin.returnError>
  20b7eb: 4c 89 ef                     	movq	%r13, %rdi
  20b7ee: e8 5d 05 01 00               	callq	0x21bd50 <builtin.returnError>
  20b7f3: 66 b8 33 00                  	movw	$51, %ax
  20b7f7: e9 00 ea ff ff               	jmp	0x20a1fc <dwarf.parseFormValue__anon_5650+0x88c>
  20b7fc: 4c 89 ef                     	movq	%r13, %rdi
  20b7ff: e8 4c 05 01 00               	callq	0x21bd50 <builtin.returnError>
  20b804: 0f b6 44 24 38               	movzbl	56(%rsp), %eax
  20b809: 88 43 08                     	movb	%al, 8(%rbx)
  20b80c: c6 43 10 03                  	movb	$3, 16(%rbx)
  20b810: 66 89 6b 18                  	movw	%bp, 24(%rbx)
  20b814: eb 0e                        	jmp	0x20b824 <dwarf.parseFormValue__anon_5650+0x1eb4>
  20b816: 4c 89 ef                     	movq	%r13, %rdi
  20b819: e8 32 05 01 00               	callq	0x21bd50 <builtin.returnError>
  20b81e: 66 c7 43 18 34 00            	movw	$52, 24(%rbx)
  20b824: 4c 89 ef                     	movq	%r13, %rdi
  20b827: 48 81 c4 d8 00 00 00         	addq	$216, %rsp
  20b82e: 5b                           	popq	%rbx
  20b82f: 41 5c                        	popq	%r12
  20b831: 41 5d                        	popq	%r13
  20b833: 41 5e                        	popq	%r14
  20b835: 41 5f                        	popq	%r15
  20b837: 5d                           	popq	%rbp
  20b838: e9 13 05 01 00               	jmp	0x21bd50 <builtin.returnError>
  20b83d: 4c 89 ef                     	movq	%r13, %rdi
  20b840: e8 0b 05 01 00               	callq	0x21bd50 <builtin.returnError>
  20b845: 4c 89 ef                     	movq	%r13, %rdi
  20b848: e8 03 05 01 00               	callq	0x21bd50 <builtin.returnError>
  20b84d: 4c 89 ef                     	movq	%r13, %rdi
  20b850: e8 fb 04 01 00               	callq	0x21bd50 <builtin.returnError>
  20b855: 4c 89 ef                     	movq	%r13, %rdi
  20b858: e8 f3 04 01 00               	callq	0x21bd50 <builtin.returnError>
  20b85d: 4c 89 ef                     	movq	%r13, %rdi
  20b860: e8 eb 04 01 00               	callq	0x21bd50 <builtin.returnError>
  20b865: 66 c7 43 18 33 00            	movw	$51, 24(%rbx)
  20b86b: e9 b7 fe ff ff               	jmp	0x20b727 <dwarf.parseFormValue__anon_5650+0x1db7>
  20b870: 4c 89 ef                     	movq	%r13, %rdi
  20b873: e8 d8 04 01 00               	callq	0x21bd50 <builtin.returnError>
  20b878: 4c 89 ef                     	movq	%r13, %rdi
  20b87b: e8 d0 04 01 00               	callq	0x21bd50 <builtin.returnError>
  20b880: 4c 89 ef                     	movq	%r13, %rdi
  20b883: e8 c8 04 01 00               	callq	0x21bd50 <builtin.returnError>
  20b888: 4c 89 ef                     	movq	%r13, %rdi
  20b88b: e8 c0 04 01 00               	callq	0x21bd50 <builtin.returnError>
  20b890: 66 b8 33 00                  	movw	$51, %ax
  20b894: e9 63 e3 ff ff               	jmp	0x209bfc <dwarf.parseFormValue__anon_5650+0x28c>
  20b899: 4c 89 ef                     	movq	%r13, %rdi
  20b89c: e8 af 04 01 00               	callq	0x21bd50 <builtin.returnError>
  20b8a1: 4c 89 ef                     	movq	%r13, %rdi
  20b8a4: e8 a7 04 01 00               	callq	0x21bd50 <builtin.returnError>
  20b8a9: 4c 89 ef                     	movq	%r13, %rdi
  20b8ac: e8 9f 04 01 00               	callq	0x21bd50 <builtin.returnError>
  20b8b1: 4c 89 ef                     	movq	%r13, %rdi
  20b8b4: e8 97 04 01 00               	callq	0x21bd50 <builtin.returnError>
  20b8b9: 66 b8 33 00                  	movw	$51, %ax
  20b8bd: e9 b4 e3 ff ff               	jmp	0x209c76 <dwarf.parseFormValue__anon_5650+0x306>
  20b8c2: 4c 89 ef                     	movq	%r13, %rdi
  20b8c5: e8 86 04 01 00               	callq	0x21bd50 <builtin.returnError>
  20b8ca: 4c 89 ef                     	movq	%r13, %rdi
  20b8cd: e8 7e 04 01 00               	callq	0x21bd50 <builtin.returnError>
  20b8d2: 4c 89 ef                     	movq	%r13, %rdi
  20b8d5: e8 76 04 01 00               	callq	0x21bd50 <builtin.returnError>
  20b8da: 4c 89 ef                     	movq	%r13, %rdi
  20b8dd: e8 6e 04 01 00               	callq	0x21bd50 <builtin.returnError>
  20b8e2: 66 b8 33 00                  	movw	$51, %ax
  20b8e6: e9 0f e4 ff ff               	jmp	0x209cfa <dwarf.parseFormValue__anon_5650+0x38a>
  20b8eb: 4c 89 ef                     	movq	%r13, %rdi
  20b8ee: e8 5d 04 01 00               	callq	0x21bd50 <builtin.returnError>
  20b8f3: c5 fc 10 05 65 49 ff ff      	vmovups	-46747(%rip), %ymm0     # 0x200260 <zig-graph+0x200260>
  20b8fb: c5 fc 11 03                  	vmovups	%ymm0, (%rbx)
  20b8ff: e9 23 fe ff ff               	jmp	0x20b727 <dwarf.parseFormValue__anon_5650+0x1db7>
  20b904: 4c 89 ef                     	movq	%r13, %rdi
  20b907: e8 44 04 01 00               	callq	0x21bd50 <builtin.returnError>
  20b90c: 4c 89 ef                     	movq	%r13, %rdi
  20b90f: e8 3c 04 01 00               	callq	0x21bd50 <builtin.returnError>
  20b914: 4c 89 ef                     	movq	%r13, %rdi
  20b917: e8 34 04 01 00               	callq	0x21bd50 <builtin.returnError>
  20b91c: 4c 89 ef                     	movq	%r13, %rdi
  20b91f: e8 2c 04 01 00               	callq	0x21bd50 <builtin.returnError>
  20b924: 66 b8 33 00                  	movw	$51, %ax
  20b928: e9 67 e7 ff ff               	jmp	0x20a094 <dwarf.parseFormValue__anon_5650+0x724>
  20b92d: 4c 89 ef                     	movq	%r13, %rdi
  20b930: e8 1b 04 01 00               	callq	0x21bd50 <builtin.returnError>
  20b935: e9 c3 e9 ff ff               	jmp	0x20a2fd <dwarf.parseFormValue__anon_5650+0x98d>
  20b93a: 4c 89 f7                     	movq	%r14, %rdi
  20b93d: e8 0e 04 01 00               	callq	0x21bd50 <builtin.returnError>
  20b942: c6 43 10 02                  	movb	$2, 16(%rbx)
  20b946: 66 89 6b 18                  	movw	%bp, 24(%rbx)
  20b94a: 4c 89 f7                     	movq	%r14, %rdi
  20b94d: c5 f8 77                     	vzeroupper
  20b950: e8 fb 03 01 00               	callq	0x21bd50 <builtin.returnError>
  20b955: e9 cd fd ff ff               	jmp	0x20b727 <dwarf.parseFormValue__anon_5650+0x1db7>
  20b95a: 4c 89 f7                     	movq	%r14, %rdi
  20b95d: e9 ba 02 00 00               	jmp	0x20bc1c <dwarf.parseFormValue__anon_5650+0x22ac>
  20b962: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20b967: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20b96c: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20b971: b9 01 00 00 00               	movl	$1, %ecx
  20b976: 49 8b 37                     	movq	(%r15), %rsi
  20b979: e8 02 d9 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20b97e: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20b984: 0f 84 7b 02 00 00            	je	0x20bc05 <dwarf.parseFormValue__anon_5650+0x2295>
  20b98a: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20b98f: 4d 89 ec                     	movq	%r13, %r12
  20b992: 89 c1                        	movl	%eax, %ecx
  20b994: 83 e1 7f                     	andl	$127, %ecx
  20b997: 48 c1 e1 2a                  	shlq	$42, %rcx
  20b99b: 49 09 ce                     	orq	%rcx, %r14
  20b99e: 84 c0                        	testb	%al, %al
  20b9a0: 0f 89 84 00 00 00            	jns	0x20ba2a <dwarf.parseFormValue__anon_5650+0x20ba>
  20b9a6: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20b9ab: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20b9b0: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20b9b5: b9 01 00 00 00               	movl	$1, %ecx
  20b9ba: 49 8b 37                     	movq	(%r15), %rsi
  20b9bd: e8 be d8 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20b9c2: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20b9c8: 4d 89 e5                     	movq	%r12, %r13
  20b9cb: 0f 84 34 02 00 00            	je	0x20bc05 <dwarf.parseFormValue__anon_5650+0x2295>
  20b9d1: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20b9d6: 89 c1                        	movl	%eax, %ecx
  20b9d8: 83 e1 7f                     	andl	$127, %ecx
  20b9db: 48 c1 e1 31                  	shlq	$49, %rcx
  20b9df: 49 09 ce                     	orq	%rcx, %r14
  20b9e2: 84 c0                        	testb	%al, %al
  20b9e4: 79 44                        	jns	0x20ba2a <dwarf.parseFormValue__anon_5650+0x20ba>
  20b9e6: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20b9eb: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20b9f0: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20b9f5: b9 01 00 00 00               	movl	$1, %ecx
  20b9fa: 49 8b 37                     	movq	(%r15), %rsi
  20b9fd: e8 7e d8 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20ba02: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20ba08: 4d 89 e5                     	movq	%r12, %r13
  20ba0b: 0f 84 f4 01 00 00            	je	0x20bc05 <dwarf.parseFormValue__anon_5650+0x2295>
  20ba11: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20ba16: 89 c1                        	movl	%eax, %ecx
  20ba18: 83 e1 7f                     	andl	$127, %ecx
  20ba1b: 48 c1 e1 38                  	shlq	$56, %rcx
  20ba1f: 49 09 ce                     	orq	%rcx, %r14
  20ba22: 84 c0                        	testb	%al, %al
  20ba24: 0f 88 91 01 00 00            	js	0x20bbbb <dwarf.parseFormValue__anon_5650+0x224b>
  20ba2a: 4d 89 e5                     	movq	%r12, %r13
  20ba2d: 4c 89 33                     	movq	%r14, (%rbx)
  20ba30: e9 a2 fb ff ff               	jmp	0x20b5d7 <dwarf.parseFormValue__anon_5650+0x1c67>
  20ba35: bf 59 1d 20 00               	movl	$2104665, %edi          # imm = 0x201D59
  20ba3a: be 10 00 00 00               	movl	$16, %esi
  20ba3f: 31 c9                        	xorl	%ecx, %ecx
  20ba41: e8 ca f8 00 00               	callq	0x21b310 <builtin.default_panic>
  20ba46: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20ba4b: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20ba50: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20ba55: b9 01 00 00 00               	movl	$1, %ecx
  20ba5a: 49 8b 37                     	movq	(%r15), %rsi
  20ba5d: e8 1e d8 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20ba62: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20ba68: 74 2e                        	je	0x20ba98 <dwarf.parseFormValue__anon_5650+0x2128>
  20ba6a: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20ba6f: a8 7e                        	testb	$126, %al
  20ba71: 0f 85 c7 01 00 00            	jne	0x20bc3e <dwarf.parseFormValue__anon_5650+0x22ce>
  20ba77: 4c 8b 64 24 40               	movq	64(%rsp), %r12
  20ba7c: 66 c7 44 24 66 29 00         	movw	$41, 102(%rsp)
  20ba83: 84 c0                        	testb	%al, %al
  20ba85: 78 25                        	js	0x20baac <dwarf.parseFormValue__anon_5650+0x213c>
  20ba87: 4c 8b 64 24 68               	movq	104(%rsp), %r12
  20ba8c: 48 c1 e0 3f                  	shlq	$63, %rax
  20ba90: 49 09 c5                     	orq	%rax, %r13
  20ba93: e9 c0 ea ff ff               	jmp	0x20a558 <dwarf.parseFormValue__anon_5650+0xbe8>
  20ba98: 4c 8b 64 24 40               	movq	64(%rsp), %r12
  20ba9d: 4c 89 e7                     	movq	%r12, %rdi
  20baa0: e8 ab 02 01 00               	callq	0x21bd50 <builtin.returnError>
  20baa5: 66 c7 44 24 66 33 00         	movw	$51, 102(%rsp)
  20baac: 4c 89 e7                     	movq	%r12, %rdi
  20baaf: e8 9c 02 01 00               	callq	0x21bd50 <builtin.returnError>
  20bab4: 4c 89 e7                     	movq	%r12, %rdi
  20bab7: e8 94 02 01 00               	callq	0x21bd50 <builtin.returnError>
  20babc: 0f b7 44 24 66               	movzwl	102(%rsp), %eax
  20bac1: 66 89 43 18                  	movw	%ax, 24(%rbx)
  20bac5: e9 5d fc ff ff               	jmp	0x20b727 <dwarf.parseFormValue__anon_5650+0x1db7>
  20baca: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20bacf: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20bad4: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20bad9: b9 01 00 00 00               	movl	$1, %ecx
  20bade: 49 8b 37                     	movq	(%r15), %rsi
  20bae1: e8 9a d7 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20bae6: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20baec: 4d 89 e5                     	movq	%r12, %r13
  20baef: 0f 84 10 01 00 00            	je	0x20bc05 <dwarf.parseFormValue__anon_5650+0x2295>
  20baf5: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20bafa: 66 bd 29 00                  	movw	$41, %bp
  20bafe: a8 7e                        	testb	$126, %al
  20bb00: 0f 85 24 01 00 00            	jne	0x20bc2a <dwarf.parseFormValue__anon_5650+0x22ba>
  20bb06: 4d 89 e5                     	movq	%r12, %r13
  20bb09: 84 c0                        	testb	%al, %al
  20bb0b: 0f 88 00 01 00 00            	js	0x20bc11 <dwarf.parseFormValue__anon_5650+0x22a1>
  20bb11: 48 c1 e0 3f                  	shlq	$63, %rax
  20bb15: 49 09 c6                     	orq	%rax, %r14
  20bb18: e9 0e f0 ff ff               	jmp	0x20ab2b <dwarf.parseFormValue__anon_5650+0x11bb>
  20bb1d: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20bb22: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20bb27: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20bb2c: b9 01 00 00 00               	movl	$1, %ecx
  20bb31: 49 8b 37                     	movq	(%r15), %rsi
  20bb34: e8 47 d7 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20bb39: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20bb3f: 4d 89 e5                     	movq	%r12, %r13
  20bb42: 0f 84 bd 00 00 00            	je	0x20bc05 <dwarf.parseFormValue__anon_5650+0x2295>
  20bb48: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20bb4d: 66 bd 29 00                  	movw	$41, %bp
  20bb51: a8 7e                        	testb	$126, %al
  20bb53: 0f 85 d1 00 00 00            	jne	0x20bc2a <dwarf.parseFormValue__anon_5650+0x22ba>
  20bb59: 4d 89 e5                     	movq	%r12, %r13
  20bb5c: 84 c0                        	testb	%al, %al
  20bb5e: 0f 88 ad 00 00 00            	js	0x20bc11 <dwarf.parseFormValue__anon_5650+0x22a1>
  20bb64: 48 c1 e0 3f                  	shlq	$63, %rax
  20bb68: 49 09 c6                     	orq	%rax, %r14
  20bb6b: e9 e8 f4 ff ff               	jmp	0x20b058 <dwarf.parseFormValue__anon_5650+0x16e8>
  20bb70: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20bb75: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20bb7a: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20bb7f: b9 01 00 00 00               	movl	$1, %ecx
  20bb84: 49 8b 37                     	movq	(%r15), %rsi
  20bb87: e8 f4 d6 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20bb8c: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20bb92: 4d 89 e5                     	movq	%r12, %r13
  20bb95: 74 6e                        	je	0x20bc05 <dwarf.parseFormValue__anon_5650+0x2295>
  20bb97: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20bb9c: 66 bd 29 00                  	movw	$41, %bp
  20bba0: a8 7e                        	testb	$126, %al
  20bba2: 0f 85 82 00 00 00            	jne	0x20bc2a <dwarf.parseFormValue__anon_5650+0x22ba>
  20bba8: 4d 89 e5                     	movq	%r12, %r13
  20bbab: 84 c0                        	testb	%al, %al
  20bbad: 78 62                        	js	0x20bc11 <dwarf.parseFormValue__anon_5650+0x22a1>
  20bbaf: 48 c1 e0 3f                  	shlq	$63, %rax
  20bbb3: 49 09 c6                     	orq	%rax, %r14
  20bbb6: e9 fb f6 ff ff               	jmp	0x20b2b6 <dwarf.parseFormValue__anon_5650+0x1946>
  20bbbb: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20bbc0: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  20bbc5: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20bbca: b9 01 00 00 00               	movl	$1, %ecx
  20bbcf: 49 8b 37                     	movq	(%r15), %rsi
  20bbd2: e8 a9 d6 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20bbd7: 48 83 7c 24 20 00            	cmpq	$0, 32(%rsp)
  20bbdd: 4d 89 e5                     	movq	%r12, %r13
  20bbe0: 74 23                        	je	0x20bc05 <dwarf.parseFormValue__anon_5650+0x2295>
  20bbe2: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20bbe7: 66 bd 29 00                  	movw	$41, %bp
  20bbeb: a8 7e                        	testb	$126, %al
  20bbed: 75 3b                        	jne	0x20bc2a <dwarf.parseFormValue__anon_5650+0x22ba>
  20bbef: 4d 89 e5                     	movq	%r12, %r13
  20bbf2: 84 c0                        	testb	%al, %al
  20bbf4: 78 1b                        	js	0x20bc11 <dwarf.parseFormValue__anon_5650+0x22a1>
  20bbf6: 48 c1 e0 3f                  	shlq	$63, %rax
  20bbfa: 49 09 c6                     	orq	%rax, %r14
  20bbfd: 4c 89 33                     	movq	%r14, (%rbx)
  20bc00: e9 d2 f9 ff ff               	jmp	0x20b5d7 <dwarf.parseFormValue__anon_5650+0x1c67>
  20bc05: 4c 89 ef                     	movq	%r13, %rdi
  20bc08: e8 43 01 01 00               	callq	0x21bd50 <builtin.returnError>
  20bc0d: 66 bd 33 00                  	movw	$51, %bp
  20bc11: 4c 89 ef                     	movq	%r13, %rdi
  20bc14: e8 37 01 01 00               	callq	0x21bd50 <builtin.returnError>
  20bc19: 4c 89 ef                     	movq	%r13, %rdi
  20bc1c: e8 2f 01 01 00               	callq	0x21bd50 <builtin.returnError>
  20bc21: 66 89 6b 18                  	movw	%bp, 24(%rbx)
  20bc25: e9 fd fa ff ff               	jmp	0x20b727 <dwarf.parseFormValue__anon_5650+0x1db7>
  20bc2a: 4d 89 e5                     	movq	%r12, %r13
  20bc2d: eb e2                        	jmp	0x20bc11 <dwarf.parseFormValue__anon_5650+0x22a1>
  20bc2f: 4d 89 e6                     	movq	%r12, %r14
  20bc32: 66 c7 44 24 40 29 00         	movw	$41, 64(%rsp)
  20bc39: e9 1a fb ff ff               	jmp	0x20b758 <dwarf.parseFormValue__anon_5650+0x1de8>
  20bc3e: 4c 8b 64 24 40               	movq	64(%rsp), %r12
  20bc43: 66 c7 44 24 66 29 00         	movw	$41, 102(%rsp)
  20bc4a: e9 5d fe ff ff               	jmp	0x20baac <dwarf.parseFormValue__anon_5650+0x213c>
  20bc4f: 90                           	nop

000000000020bc50 <debug.printLineInfo__anon_5656>:
  20bc50: 55                           	pushq	%rbp
  20bc51: 41 57                        	pushq	%r15
  20bc53: 41 56                        	pushq	%r14
  20bc55: 41 55                        	pushq	%r13
  20bc57: 41 54                        	pushq	%r12
  20bc59: 53                           	pushq	%rbx
  20bc5a: b8 68 30 00 00               	movl	$12392, %eax            # imm = 0x3068
  20bc5f: e8 3c 06 01 00               	callq	0x21c2a0 <__zig_probe_stack>
  20bc64: 48 29 c4                     	subq	%rax, %rsp
  20bc67: 49 89 cd                     	movq	%rcx, %r13
  20bc6a: 48 8b 07                     	movq	(%rdi), %rax
  20bc6d: 48 8b 8c 24 b0 30 00 00      	movq	12464(%rsp), %rcx
  20bc75: 48 89 fb                     	movq	%rdi, %rbx
  20bc78: 4c 89 4c 24 40               	movq	%r9, 64(%rsp)
  20bc7d: 4c 89 44 24 38               	movq	%r8, 56(%rsp)
  20bc82: 48 89 54 24 28               	movq	%rdx, 40(%rsp)
  20bc87: 48 89 34 24                  	movq	%rsi, (%rsp)
  20bc8b: 48 89 44 24 50               	movq	%rax, 80(%rsp)
  20bc90: 0f b6 01                     	movzbl	(%rcx), %eax
  20bc93: a8 03                        	testb	$3, %al
  20bc95: 74 71                        	je	0x20bd08 <debug.printLineInfo__anon_5656+0xb8>
  20bc97: 83 e0 03                     	andl	$3, %eax
  20bc9a: 83 f8 01                     	cmpl	$1, %eax
  20bc9d: 0f 85 cc 0d 00 00            	jne	0x20ca6f <debug.printLineInfo__anon_5656+0xe1f>
  20bca3: 48 8b 04 24                  	movq	(%rsp), %rax
  20bca7: 45 31 ff                     	xorl	%r15d, %r15d
  20bcaa: 4c 8d 74 24 60               	leaq	96(%rsp), %r14
  20bcaf: 8b 28                        	movl	(%rax), %ebp
  20bcb1: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
  20bcc0: 49 83 ff 05                  	cmpq	$5, %r15
  20bcc4: 0f 83 85 0c 00 00            	jae	0x20c94f <debug.printLineInfo__anon_5656+0xcff>
  20bcca: 41 b8 04 00 00 00            	movl	$4, %r8d
  20bcd0: 49 8d 8f 18 20 20 00         	leaq	2105368(%r15), %rcx
  20bcd7: 4c 89 f7                     	movq	%r14, %rdi
  20bcda: 48 89 de                     	movq	%rbx, %rsi
  20bcdd: 89 ea                        	movl	%ebp, %edx
  20bcdf: 4d 29 f8                     	subq	%r15, %r8
  20bce2: e8 a9 85 ff ff               	callq	0x204290 <fs.file.File.write>
  20bce7: 44 0f b7 64 24 68            	movzwl	104(%rsp), %r12d
  20bced: 66 45 85 e4                  	testw	%r12w, %r12w
  20bcf1: 0f 85 d7 09 00 00            	jne	0x20c6ce <debug.printLineInfo__anon_5656+0xa7e>
  20bcf7: 4c 03 7c 24 60               	addq	96(%rsp), %r15
  20bcfc: 0f 82 5c 0d 00 00            	jb	0x20ca5e <debug.printLineInfo__anon_5656+0xe0e>
  20bd02: 49 83 ff 04                  	cmpq	$4, %r15
  20bd06: 75 b8                        	jne	0x20bcc0 <debug.printLineInfo__anon_5656+0x70>
  20bd08: 48 8b 44 24 28               	movq	40(%rsp), %rax
  20bd0d: 80 78 20 00                  	cmpb	$0, 32(%rax)
  20bd11: 0f 84 16 01 00 00            	je	0x20be2d <debug.printLineInfo__anon_5656+0x1dd>
  20bd17: 48 8b 50 18                  	movq	24(%rax), %rdx
  20bd1b: 48 8b 70 10                  	movq	16(%rax), %rsi
  20bd1f: 4c 8b 38                     	movq	(%rax), %r15
  20bd22: 4c 8b 70 08                  	movq	8(%rax), %r14
  20bd26: 48 8b 04 24                  	movq	(%rsp), %rax
  20bd2a: 4c 8d 44 24 10               	leaq	16(%rsp), %r8
  20bd2f: b9 88 18 20 00               	movl	$2103432, %ecx          # imm = 0x201888
  20bd34: 48 89 df                     	movq	%rbx, %rdi
  20bd37: 8b 28                        	movl	(%rax), %ebp
  20bd39: 89 6c 24 10                  	movl	%ebp, 16(%rsp)
  20bd3d: e8 3e c9 00 00               	callq	0x218680 <fmt.formatBuf__anon_6100>
  20bd42: 66 85 c0                     	testw	%ax, %ax
  20bd45: 0f 85 14 06 00 00            	jne	0x20c35f <debug.printLineInfo__anon_5656+0x70f>
  20bd4b: 4c 89 74 24 20               	movq	%r14, 32(%rsp)
  20bd50: 31 c0                        	xorl	%eax, %eax
  20bd52: 4c 8d 74 24 60               	leaq	96(%rsp), %r14
  20bd57: 48 85 c0                     	testq	%rax, %rax
  20bd5a: 75 36                        	jne	0x20bd92 <debug.printLineInfo__anon_5656+0x142>
  20bd5c: 0f 1f 40 00                  	nopl	(%rax)
  20bd60: b9 f3 1c 20 00               	movl	$2104563, %ecx          # imm = 0x201CF3
  20bd65: 41 b8 01 00 00 00            	movl	$1, %r8d
  20bd6b: 4c 89 f7                     	movq	%r14, %rdi
  20bd6e: 48 89 de                     	movq	%rbx, %rsi
  20bd71: 89 ea                        	movl	%ebp, %edx
  20bd73: e8 18 85 ff ff               	callq	0x204290 <fs.file.File.write>
  20bd78: 44 0f b7 64 24 68            	movzwl	104(%rsp), %r12d
  20bd7e: 66 45 85 e4                  	testw	%r12w, %r12w
  20bd82: 0f 85 3e 09 00 00            	jne	0x20c6c6 <debug.printLineInfo__anon_5656+0xa76>
  20bd88: 48 8b 44 24 60               	movq	96(%rsp), %rax
  20bd8d: 48 85 c0                     	testq	%rax, %rax
  20bd90: 74 ce                        	je	0x20bd60 <debug.printLineInfo__anon_5656+0x110>
  20bd92: 48 83 f8 01                  	cmpq	$1, %rax
  20bd96: 0f 85 b3 0b 00 00            	jne	0x20c94f <debug.printLineInfo__anon_5656+0xcff>
  20bd9c: 48 8d 4c 24 10               	leaq	16(%rsp), %rcx
  20bda1: ba 88 18 20 00               	movl	$2103432, %edx          # imm = 0x201888
  20bda6: 48 89 df                     	movq	%rbx, %rdi
  20bda9: 4c 89 fe                     	movq	%r15, %rsi
  20bdac: e8 df ed 00 00               	callq	0x21ab90 <fmt.formatValue__anon_6746>
  20bdb1: 66 85 c0                     	testw	%ax, %ax
  20bdb4: 0f 85 a5 05 00 00            	jne	0x20c35f <debug.printLineInfo__anon_5656+0x70f>
  20bdba: 31 c0                        	xorl	%eax, %eax
  20bdbc: 4c 8d 74 24 60               	leaq	96(%rsp), %r14
  20bdc1: 48 85 c0                     	testq	%rax, %rax
  20bdc4: 75 3c                        	jne	0x20be02 <debug.printLineInfo__anon_5656+0x1b2>
  20bdc6: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
  20bdd0: b9 f7 1c 20 00               	movl	$2104567, %ecx          # imm = 0x201CF7
  20bdd5: 41 b8 01 00 00 00            	movl	$1, %r8d
  20bddb: 4c 89 f7                     	movq	%r14, %rdi
  20bdde: 48 89 de                     	movq	%rbx, %rsi
  20bde1: 89 ea                        	movl	%ebp, %edx
  20bde3: e8 a8 84 ff ff               	callq	0x204290 <fs.file.File.write>
  20bde8: 44 0f b7 64 24 68            	movzwl	104(%rsp), %r12d
  20bdee: 66 45 85 e4                  	testw	%r12w, %r12w
  20bdf2: 0f 85 ce 08 00 00            	jne	0x20c6c6 <debug.printLineInfo__anon_5656+0xa76>
  20bdf8: 48 8b 44 24 60               	movq	96(%rsp), %rax
  20bdfd: 48 85 c0                     	testq	%rax, %rax
  20be00: 74 ce                        	je	0x20bdd0 <debug.printLineInfo__anon_5656+0x180>
  20be02: 48 83 f8 01                  	cmpq	$1, %rax
  20be06: 0f 85 43 0b 00 00            	jne	0x20c94f <debug.printLineInfo__anon_5656+0xcff>
  20be0c: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  20be11: 48 8d 4c 24 10               	leaq	16(%rsp), %rcx
  20be16: ba 88 18 20 00               	movl	$2103432, %edx          # imm = 0x201888
  20be1b: 48 89 df                     	movq	%rbx, %rdi
  20be1e: e8 6d ed 00 00               	callq	0x21ab90 <fmt.formatValue__anon_6746>
  20be23: 66 85 c0                     	testw	%ax, %ax
  20be26: 74 60                        	je	0x20be88 <debug.printLineInfo__anon_5656+0x238>
  20be28: e9 32 05 00 00               	jmp	0x20c35f <debug.printLineInfo__anon_5656+0x70f>
  20be2d: 48 8b 04 24                  	movq	(%rsp), %rax
  20be31: 45 31 ff                     	xorl	%r15d, %r15d
  20be34: 4c 8d 74 24 60               	leaq	96(%rsp), %r14
  20be39: 8b 28                        	movl	(%rax), %ebp
  20be3b: 0f 1f 44 00 00               	nopl	(%rax,%rax)
  20be40: 49 83 ff 08                  	cmpq	$8, %r15
  20be44: 0f 83 05 0b 00 00            	jae	0x20c94f <debug.printLineInfo__anon_5656+0xcff>
  20be4a: 41 b8 07 00 00 00            	movl	$7, %r8d
  20be50: 49 8d 8f bc 23 20 00         	leaq	2106300(%r15), %rcx
  20be57: 4c 89 f7                     	movq	%r14, %rdi
  20be5a: 48 89 de                     	movq	%rbx, %rsi
  20be5d: 89 ea                        	movl	%ebp, %edx
  20be5f: 4d 29 f8                     	subq	%r15, %r8
  20be62: e8 29 84 ff ff               	callq	0x204290 <fs.file.File.write>
  20be67: 44 0f b7 64 24 68            	movzwl	104(%rsp), %r12d
  20be6d: 66 45 85 e4                  	testw	%r12w, %r12w
  20be71: 0f 85 5f 08 00 00            	jne	0x20c6d6 <debug.printLineInfo__anon_5656+0xa86>
  20be77: 4c 03 7c 24 60               	addq	96(%rsp), %r15
  20be7c: 0f 82 dc 0b 00 00            	jb	0x20ca5e <debug.printLineInfo__anon_5656+0xe0e>
  20be82: 49 83 ff 07                  	cmpq	$7, %r15
  20be86: 75 b8                        	jne	0x20be40 <debug.printLineInfo__anon_5656+0x1f0>
  20be88: 48 8b 84 24 b0 30 00 00      	movq	12464(%rsp), %rax
  20be90: 0f b6 00                     	movzbl	(%rax), %eax
  20be93: a8 03                        	testb	$3, %al
  20be95: 74 71                        	je	0x20bf08 <debug.printLineInfo__anon_5656+0x2b8>
  20be97: 83 e0 03                     	andl	$3, %eax
  20be9a: 83 f8 01                     	cmpl	$1, %eax
  20be9d: 0f 85 cc 0b 00 00            	jne	0x20ca6f <debug.printLineInfo__anon_5656+0xe1f>
  20bea3: 48 8b 04 24                  	movq	(%rsp), %rax
  20bea7: 45 31 ff                     	xorl	%r15d, %r15d
  20beaa: 4c 8d 74 24 60               	leaq	96(%rsp), %r14
  20beaf: 8b 28                        	movl	(%rax), %ebp
  20beb1: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
  20bec0: 49 83 ff 05                  	cmpq	$5, %r15
  20bec4: 0f 83 85 0a 00 00            	jae	0x20c94f <debug.printLineInfo__anon_5656+0xcff>
  20beca: 41 b8 04 00 00 00            	movl	$4, %r8d
  20bed0: 49 8d 8f 25 20 20 00         	leaq	2105381(%r15), %rcx
  20bed7: 4c 89 f7                     	movq	%r14, %rdi
  20beda: 48 89 de                     	movq	%rbx, %rsi
  20bedd: 89 ea                        	movl	%ebp, %edx
  20bedf: 4d 29 f8                     	subq	%r15, %r8
  20bee2: e8 a9 83 ff ff               	callq	0x204290 <fs.file.File.write>
  20bee7: 44 0f b7 64 24 68            	movzwl	104(%rsp), %r12d
  20beed: 66 45 85 e4                  	testw	%r12w, %r12w
  20bef1: 0f 85 d7 07 00 00            	jne	0x20c6ce <debug.printLineInfo__anon_5656+0xa7e>
  20bef7: 4c 03 7c 24 60               	addq	96(%rsp), %r15
  20befc: 0f 82 5c 0b 00 00            	jb	0x20ca5e <debug.printLineInfo__anon_5656+0xe0e>
  20bf02: 49 83 ff 04                  	cmpq	$4, %r15
  20bf06: 75 b8                        	jne	0x20bec0 <debug.printLineInfo__anon_5656+0x270>
  20bf08: 48 8b 04 24                  	movq	(%rsp), %rax
  20bf0c: 45 31 ff                     	xorl	%r15d, %r15d
  20bf0f: 4c 8d 74 24 60               	leaq	96(%rsp), %r14
  20bf14: 8b 28                        	movl	(%rax), %ebp
  20bf16: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
  20bf20: 49 83 ff 03                  	cmpq	$3, %r15
  20bf24: 0f 83 25 0a 00 00            	jae	0x20c94f <debug.printLineInfo__anon_5656+0xcff>
  20bf2a: 41 b8 02 00 00 00            	movl	$2, %r8d
  20bf30: 49 8d 8f fd 24 20 00         	leaq	2106621(%r15), %rcx
  20bf37: 4c 89 f7                     	movq	%r14, %rdi
  20bf3a: 48 89 de                     	movq	%rbx, %rsi
  20bf3d: 89 ea                        	movl	%ebp, %edx
  20bf3f: 4d 29 f8                     	subq	%r15, %r8
  20bf42: e8 49 83 ff ff               	callq	0x204290 <fs.file.File.write>
  20bf47: 44 0f b7 64 24 68            	movzwl	104(%rsp), %r12d
  20bf4d: 66 45 85 e4                  	testw	%r12w, %r12w
  20bf51: 0f 85 7f 07 00 00            	jne	0x20c6d6 <debug.printLineInfo__anon_5656+0xa86>
  20bf57: 4c 03 7c 24 60               	addq	96(%rsp), %r15
  20bf5c: 0f 82 fc 0a 00 00            	jb	0x20ca5e <debug.printLineInfo__anon_5656+0xe0e>
  20bf62: 49 83 ff 02                  	cmpq	$2, %r15
  20bf66: 75 b8                        	jne	0x20bf20 <debug.printLineInfo__anon_5656+0x2d0>
  20bf68: 48 8b 84 24 b0 30 00 00      	movq	12464(%rsp), %rax
  20bf70: 0f b6 00                     	movzbl	(%rax), %eax
  20bf73: a8 03                        	testb	$3, %al
  20bf75: 74 71                        	je	0x20bfe8 <debug.printLineInfo__anon_5656+0x398>
  20bf77: 83 e0 03                     	andl	$3, %eax
  20bf7a: 83 f8 01                     	cmpl	$1, %eax
  20bf7d: 0f 85 ec 0a 00 00            	jne	0x20ca6f <debug.printLineInfo__anon_5656+0xe1f>
  20bf83: 48 8b 04 24                  	movq	(%rsp), %rax
  20bf87: 45 31 ff                     	xorl	%r15d, %r15d
  20bf8a: 4c 8d 74 24 60               	leaq	96(%rsp), %r14
  20bf8f: 8b 28                        	movl	(%rax), %ebp
  20bf91: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
  20bfa0: 49 83 ff 05                  	cmpq	$5, %r15
  20bfa4: 0f 83 a5 09 00 00            	jae	0x20c94f <debug.printLineInfo__anon_5656+0xcff>
  20bfaa: 41 b8 04 00 00 00            	movl	$4, %r8d
  20bfb0: 49 8d 8f 13 20 20 00         	leaq	2105363(%r15), %rcx
  20bfb7: 4c 89 f7                     	movq	%r14, %rdi
  20bfba: 48 89 de                     	movq	%rbx, %rsi
  20bfbd: 89 ea                        	movl	%ebp, %edx
  20bfbf: 4d 29 f8                     	subq	%r15, %r8
  20bfc2: e8 c9 82 ff ff               	callq	0x204290 <fs.file.File.write>
  20bfc7: 44 0f b7 64 24 68            	movzwl	104(%rsp), %r12d
  20bfcd: 66 45 85 e4                  	testw	%r12w, %r12w
  20bfd1: 0f 85 f7 06 00 00            	jne	0x20c6ce <debug.printLineInfo__anon_5656+0xa7e>
  20bfd7: 4c 03 7c 24 60               	addq	96(%rsp), %r15
  20bfdc: 0f 82 7c 0a 00 00            	jb	0x20ca5e <debug.printLineInfo__anon_5656+0xe0e>
  20bfe2: 49 83 ff 04                  	cmpq	$4, %r15
  20bfe6: 75 b8                        	jne	0x20bfa0 <debug.printLineInfo__anon_5656+0x350>
  20bfe8: 48 8b 04 24                  	movq	(%rsp), %rax
  20bfec: 45 31 ff                     	xorl	%r15d, %r15d
  20bfef: 4c 8d 74 24 60               	leaq	96(%rsp), %r14
  20bff4: 8b 28                        	movl	(%rax), %ebp
  20bff6: 89 6c 24 18                  	movl	%ebp, 24(%rsp)
  20bffa: 66 0f 1f 44 00 00            	nopw	(%rax,%rax)
  20c000: 49 83 ff 03                  	cmpq	$3, %r15
  20c004: 0f 83 45 09 00 00            	jae	0x20c94f <debug.printLineInfo__anon_5656+0xcff>
  20c00a: 41 b8 02 00 00 00            	movl	$2, %r8d
  20c010: 49 8d 8f 99 24 20 00         	leaq	2106521(%r15), %rcx
  20c017: 4c 89 f7                     	movq	%r14, %rdi
  20c01a: 48 89 de                     	movq	%rbx, %rsi
  20c01d: 89 ea                        	movl	%ebp, %edx
  20c01f: 4d 29 f8                     	subq	%r15, %r8
  20c022: e8 69 82 ff ff               	callq	0x204290 <fs.file.File.write>
  20c027: 44 0f b7 64 24 68            	movzwl	104(%rsp), %r12d
  20c02d: 66 45 85 e4                  	testw	%r12w, %r12w
  20c031: 0f 85 8f 06 00 00            	jne	0x20c6c6 <debug.printLineInfo__anon_5656+0xa76>
  20c037: 4c 03 7c 24 60               	addq	96(%rsp), %r15
  20c03c: 0f 82 1c 0a 00 00            	jb	0x20ca5e <debug.printLineInfo__anon_5656+0xe0e>
  20c042: 49 83 ff 02                  	cmpq	$2, %r15
  20c046: 75 b8                        	jne	0x20c000 <debug.printLineInfo__anon_5656+0x3b0>
  20c048: c5 fc 28 05 f0 41 ff ff      	vmovaps	-48656(%rip), %ymm0     # 0x200240 <zig-graph+0x200240>
  20c050: 31 d2                        	xorl	%edx, %edx
  20c052: 4c 89 e8                     	movq	%r13, %rax
  20c055: c6 84 24 a0 00 00 00 aa      	movb	$-86, 160(%rsp)
  20c05d: c5 fc 11 84 24 80 00 00 00   	vmovups	%ymm0, 128(%rsp)
  20c066: c5 fc 11 44 24 60            	vmovups	%ymm0, 96(%rsp)
  20c06c: 0f 1f 40 00                  	nopl	(%rax)
  20c070: 44 89 e9                     	movl	%r13d, %ecx
  20c073: 80 e1 0f                     	andb	$15, %cl
  20c076: 8d 71 30                     	leal	48(%rcx), %esi
  20c079: 8d 79 57                     	leal	87(%rcx), %edi
  20c07c: 80 f9 0a                     	cmpb	$10, %cl
  20c07f: 40 0f b6 ce                  	movzbl	%sil, %ecx
  20c083: 40 0f b6 f7                  	movzbl	%dil, %esi
  20c087: 0f 42 f1                     	cmovbl	%ecx, %esi
  20c08a: 48 c1 e8 04                  	shrq	$4, %rax
  20c08e: 40 88 b4 14 a0 00 00 00      	movb	%sil, 160(%rsp,%rdx)
  20c096: 48 ff ca                     	decq	%rdx
  20c099: 49 83 fd 0f                  	cmpq	$15, %r13
  20c09d: 49 89 c5                     	movq	%rax, %r13
  20c0a0: 77 ce                        	ja	0x20c070 <debug.printLineInfo__anon_5656+0x420>
  20c0a2: 48 8d b4 14 a1 00 00 00      	leaq	161(%rsp,%rdx), %rsi
  20c0aa: 48 f7 da                     	negq	%rdx
  20c0ad: 4c 8d 44 24 18               	leaq	24(%rsp), %r8
  20c0b2: b9 88 18 20 00               	movl	$2103432, %ecx          # imm = 0x201888
  20c0b7: 48 89 df                     	movq	%rbx, %rdi
  20c0ba: c5 f8 77                     	vzeroupper
  20c0bd: e8 be c5 00 00               	callq	0x218680 <fmt.formatBuf__anon_6100>
  20c0c2: 66 85 c0                     	testw	%ax, %ax
  20c0c5: 0f 85 e8 05 00 00            	jne	0x20c6b3 <debug.printLineInfo__anon_5656+0xa63>
  20c0cb: 45 31 ff                     	xorl	%r15d, %r15d
  20c0ce: 4c 8d 74 24 60               	leaq	96(%rsp), %r14
  20c0d3: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
  20c0e0: 49 83 ff 05                  	cmpq	$5, %r15
  20c0e4: 0f 83 65 08 00 00            	jae	0x20c94f <debug.printLineInfo__anon_5656+0xcff>
  20c0ea: 41 b8 04 00 00 00            	movl	$4, %r8d
  20c0f0: 49 8d 8f 9e 24 20 00         	leaq	2106526(%r15), %rcx
  20c0f7: 4c 89 f7                     	movq	%r14, %rdi
  20c0fa: 48 89 de                     	movq	%rbx, %rsi
  20c0fd: 89 ea                        	movl	%ebp, %edx
  20c0ff: 4d 29 f8                     	subq	%r15, %r8
  20c102: e8 89 81 ff ff               	callq	0x204290 <fs.file.File.write>
  20c107: 44 0f b7 64 24 68            	movzwl	104(%rsp), %r12d
  20c10d: 66 45 85 e4                  	testw	%r12w, %r12w
  20c111: 0f 85 af 05 00 00            	jne	0x20c6c6 <debug.printLineInfo__anon_5656+0xa76>
  20c117: 4c 03 7c 24 60               	addq	96(%rsp), %r15
  20c11c: 0f 82 3c 09 00 00            	jb	0x20ca5e <debug.printLineInfo__anon_5656+0xe0e>
  20c122: 49 83 ff 04                  	cmpq	$4, %r15
  20c126: 75 b8                        	jne	0x20c0e0 <debug.printLineInfo__anon_5656+0x490>
  20c128: 48 8b 74 24 38               	movq	56(%rsp), %rsi
  20c12d: 48 8b 54 24 40               	movq	64(%rsp), %rdx
  20c132: 4c 8d 44 24 18               	leaq	24(%rsp), %r8
  20c137: b9 88 18 20 00               	movl	$2103432, %ecx          # imm = 0x201888
  20c13c: 48 89 df                     	movq	%rbx, %rdi
  20c13f: e8 3c c5 00 00               	callq	0x218680 <fmt.formatBuf__anon_6100>
  20c144: 66 85 c0                     	testw	%ax, %ax
  20c147: 0f 85 12 02 00 00            	jne	0x20c35f <debug.printLineInfo__anon_5656+0x70f>
  20c14d: 45 31 ff                     	xorl	%r15d, %r15d
  20c150: 4c 8d 74 24 60               	leaq	96(%rsp), %r14
  20c155: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
  20c160: 49 83 ff 03                  	cmpq	$3, %r15
  20c164: 0f 83 e5 07 00 00            	jae	0x20c94f <debug.printLineInfo__anon_5656+0xcff>
  20c16a: 41 b8 02 00 00 00            	movl	$2, %r8d
  20c170: 49 8d 8f a5 24 20 00         	leaq	2106533(%r15), %rcx
  20c177: 4c 89 f7                     	movq	%r14, %rdi
  20c17a: 48 89 de                     	movq	%rbx, %rsi
  20c17d: 89 ea                        	movl	%ebp, %edx
  20c17f: 4d 29 f8                     	subq	%r15, %r8
  20c182: e8 09 81 ff ff               	callq	0x204290 <fs.file.File.write>
  20c187: 44 0f b7 64 24 68            	movzwl	104(%rsp), %r12d
  20c18d: 66 45 85 e4                  	testw	%r12w, %r12w
  20c191: 0f 85 2f 05 00 00            	jne	0x20c6c6 <debug.printLineInfo__anon_5656+0xa76>
  20c197: 4c 03 7c 24 60               	addq	96(%rsp), %r15
  20c19c: 0f 82 bc 08 00 00            	jb	0x20ca5e <debug.printLineInfo__anon_5656+0xe0e>
  20c1a2: 49 83 ff 02                  	cmpq	$2, %r15
  20c1a6: 75 b8                        	jne	0x20c160 <debug.printLineInfo__anon_5656+0x510>
  20c1a8: 48 8b b4 24 a0 30 00 00      	movq	12448(%rsp), %rsi
  20c1b0: 48 8b 94 24 a8 30 00 00      	movq	12456(%rsp), %rdx
  20c1b8: 4c 8d 44 24 18               	leaq	24(%rsp), %r8
  20c1bd: b9 88 18 20 00               	movl	$2103432, %ecx          # imm = 0x201888
  20c1c2: 48 89 df                     	movq	%rbx, %rdi
  20c1c5: e8 b6 c4 00 00               	callq	0x218680 <fmt.formatBuf__anon_6100>
  20c1ca: 66 85 c0                     	testw	%ax, %ax
  20c1cd: 0f 85 8c 01 00 00            	jne	0x20c35f <debug.printLineInfo__anon_5656+0x70f>
  20c1d3: 31 c0                        	xorl	%eax, %eax
  20c1d5: 4c 8d 74 24 60               	leaq	96(%rsp), %r14
  20c1da: 48 85 c0                     	testq	%rax, %rax
  20c1dd: 75 33                        	jne	0x20c212 <debug.printLineInfo__anon_5656+0x5c2>
  20c1df: 90                           	nop
  20c1e0: b9 aa 24 20 00               	movl	$2106538, %ecx          # imm = 0x2024AA
  20c1e5: 41 b8 01 00 00 00            	movl	$1, %r8d
  20c1eb: 4c 89 f7                     	movq	%r14, %rdi
  20c1ee: 48 89 de                     	movq	%rbx, %rsi
  20c1f1: 89 ea                        	movl	%ebp, %edx
  20c1f3: e8 98 80 ff ff               	callq	0x204290 <fs.file.File.write>
  20c1f8: 44 0f b7 64 24 68            	movzwl	104(%rsp), %r12d
  20c1fe: 66 45 85 e4                  	testw	%r12w, %r12w
  20c202: 0f 85 be 04 00 00            	jne	0x20c6c6 <debug.printLineInfo__anon_5656+0xa76>
  20c208: 48 8b 44 24 60               	movq	96(%rsp), %rax
  20c20d: 48 85 c0                     	testq	%rax, %rax
  20c210: 74 ce                        	je	0x20c1e0 <debug.printLineInfo__anon_5656+0x590>
  20c212: 48 83 f8 01                  	cmpq	$1, %rax
  20c216: 0f 85 33 07 00 00            	jne	0x20c94f <debug.printLineInfo__anon_5656+0xcff>
  20c21c: 48 8b 84 24 b0 30 00 00      	movq	12464(%rsp), %rax
  20c224: 0f b6 00                     	movzbl	(%rax), %eax
  20c227: a8 03                        	testb	$3, %al
  20c229: 74 6d                        	je	0x20c298 <debug.printLineInfo__anon_5656+0x648>
  20c22b: 83 e0 03                     	andl	$3, %eax
  20c22e: 83 f8 01                     	cmpl	$1, %eax
  20c231: 0f 85 38 08 00 00            	jne	0x20ca6f <debug.printLineInfo__anon_5656+0xe1f>
  20c237: 48 8b 04 24                  	movq	(%rsp), %rax
  20c23b: 45 31 ff                     	xorl	%r15d, %r15d
  20c23e: 4c 8d 74 24 60               	leaq	96(%rsp), %r14
  20c243: 8b 28                        	movl	(%rax), %ebp
  20c245: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
  20c250: 49 83 ff 05                  	cmpq	$5, %r15
  20c254: 0f 83 f5 06 00 00            	jae	0x20c94f <debug.printLineInfo__anon_5656+0xcff>
  20c25a: 41 b8 04 00 00 00            	movl	$4, %r8d
  20c260: 49 8d 8f 25 20 20 00         	leaq	2105381(%r15), %rcx
  20c267: 4c 89 f7                     	movq	%r14, %rdi
  20c26a: 48 89 de                     	movq	%rbx, %rsi
  20c26d: 89 ea                        	movl	%ebp, %edx
  20c26f: 4d 29 f8                     	subq	%r15, %r8
  20c272: e8 19 80 ff ff               	callq	0x204290 <fs.file.File.write>
  20c277: 44 0f b7 64 24 68            	movzwl	104(%rsp), %r12d
  20c27d: 66 45 85 e4                  	testw	%r12w, %r12w
  20c281: 0f 85 47 04 00 00            	jne	0x20c6ce <debug.printLineInfo__anon_5656+0xa7e>
  20c287: 4c 03 7c 24 60               	addq	96(%rsp), %r15
  20c28c: 0f 82 cc 07 00 00            	jb	0x20ca5e <debug.printLineInfo__anon_5656+0xe0e>
  20c292: 49 83 ff 04                  	cmpq	$4, %r15
  20c296: 75 b8                        	jne	0x20c250 <debug.printLineInfo__anon_5656+0x600>
  20c298: 48 8b 04 24                  	movq	(%rsp), %rax
  20c29c: 4c 8d 74 24 60               	leaq	96(%rsp), %r14
  20c2a1: 8b 28                        	movl	(%rax), %ebp
  20c2a3: 31 c0                        	xorl	%eax, %eax
  20c2a5: 48 85 c0                     	testq	%rax, %rax
  20c2a8: 75 38                        	jne	0x20c2e2 <debug.printLineInfo__anon_5656+0x692>
  20c2aa: 66 0f 1f 44 00 00            	nopw	(%rax,%rax)
  20c2b0: b9 d6 25 20 00               	movl	$2106838, %ecx          # imm = 0x2025D6
  20c2b5: 41 b8 01 00 00 00            	movl	$1, %r8d
  20c2bb: 4c 89 f7                     	movq	%r14, %rdi
  20c2be: 48 89 de                     	movq	%rbx, %rsi
  20c2c1: 89 ea                        	movl	%ebp, %edx
  20c2c3: e8 c8 7f ff ff               	callq	0x204290 <fs.file.File.write>
  20c2c8: 44 0f b7 64 24 68            	movzwl	104(%rsp), %r12d
  20c2ce: 66 45 85 e4                  	testw	%r12w, %r12w
  20c2d2: 0f 85 fe 03 00 00            	jne	0x20c6d6 <debug.printLineInfo__anon_5656+0xa86>
  20c2d8: 48 8b 44 24 60               	movq	96(%rsp), %rax
  20c2dd: 48 85 c0                     	testq	%rax, %rax
  20c2e0: 74 ce                        	je	0x20c2b0 <debug.printLineInfo__anon_5656+0x660>
  20c2e2: 48 83 f8 01                  	cmpq	$1, %rax
  20c2e6: 0f 85 63 06 00 00            	jne	0x20c94f <debug.printLineInfo__anon_5656+0xcff>
  20c2ec: 48 8b 44 24 28               	movq	40(%rsp), %rax
  20c2f1: 80 78 20 00                  	cmpb	$0, 32(%rax)
  20c2f5: 0f 84 17 07 00 00            	je	0x20ca12 <debug.printLineInfo__anon_5656+0xdc2>
  20c2fb: 48 8b 08                     	movq	(%rax), %rcx
  20c2fe: 4c 8b 68 08                  	movq	8(%rax), %r13
  20c302: 4c 8b 60 10                  	movq	16(%rax), %r12
  20c306: 4c 8b 78 18                  	movq	24(%rax), %r15
  20c30a: 48 89 4c 24 40               	movq	%rcx, 64(%rsp)
  20c30f: 4d 85 ff                     	testq	%r15, %r15
  20c312: 74 53                        	je	0x20c367 <debug.printLineInfo__anon_5656+0x717>
  20c314: 31 c0                        	xorl	%eax, %eax
  20c316: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
  20c320: 41 80 3c 04 00               	cmpb	$0, (%r12,%rax)
  20c325: 0f 84 49 07 00 00            	je	0x20ca74 <debug.printLineInfo__anon_5656+0xe24>
  20c32b: 48 ff c0                     	incq	%rax
  20c32e: 49 39 c7                     	cmpq	%rax, %r15
  20c331: 75 ed                        	jne	0x20c320 <debug.printLineInfo__anon_5656+0x6d0>
  20c333: 48 8d 7c 24 60               	leaq	96(%rsp), %rdi
  20c338: ba 00 10 00 00               	movl	$4096, %edx             # imm = 0x1000
  20c33d: be aa 00 00 00               	movl	$170, %esi
  20c342: e8 99 00 01 00               	callq	0x21c3e0 <memset>
  20c347: 49 81 ff ff 0f 00 00         	cmpq	$4095, %r15             # imm = 0xFFF
  20c34e: 0f 87 d9 06 00 00            	ja	0x20ca2d <debug.printLineInfo__anon_5656+0xddd>
  20c354: 4b 8d 04 3c                  	leaq	(%r12,%r15), %rax
  20c358: 49 39 c6                     	cmpq	%rax, %r14
  20c35b: 72 27                        	jb	0x20c384 <debug.printLineInfo__anon_5656+0x734>
  20c35d: eb 33                        	jmp	0x20c392 <debug.printLineInfo__anon_5656+0x742>
  20c35f: 41 89 c4                     	movl	%eax, %r12d
  20c362: e9 67 03 00 00               	jmp	0x20c6ce <debug.printLineInfo__anon_5656+0xa7e>
  20c367: 48 8d 7c 24 60               	leaq	96(%rsp), %rdi
  20c36c: ba 00 10 00 00               	movl	$4096, %edx             # imm = 0x1000
  20c371: be aa 00 00 00               	movl	$170, %esi
  20c376: e8 65 00 01 00               	callq	0x21c3e0 <memset>
  20c37b: 4b 8d 04 3c                  	leaq	(%r12,%r15), %rax
  20c37f: 49 39 c6                     	cmpq	%rax, %r14
  20c382: 73 0e                        	jae	0x20c392 <debug.printLineInfo__anon_5656+0x742>
  20c384: 4a 8d 44 3c 60               	leaq	96(%rsp,%r15), %rax
  20c389: 4c 39 e0                     	cmpq	%r12, %rax
  20c38c: 0f 87 0a 07 00 00            	ja	0x20ca9c <debug.printLineInfo__anon_5656+0xe4c>
  20c392: 4c 8d 74 24 60               	leaq	96(%rsp), %r14
  20c397: 4c 89 e6                     	movq	%r12, %rsi
  20c39a: 4c 89 fa                     	movq	%r15, %rdx
  20c39d: 4c 89 f7                     	movq	%r14, %rdi
  20c3a0: e8 3b ff 00 00               	callq	0x21c2e0 <memcpy>
  20c3a5: 42 c6 44 3c 60 00            	movb	$0, 96(%rsp,%r15)
  20c3ab: 4c 8d bc 24 68 10 00 00      	leaq	4200(%rsp), %r15
  20c3b3: ba 00 10 00 00               	movl	$4096, %edx             # imm = 0x1000
  20c3b8: 4c 89 f6                     	movq	%r14, %rsi
  20c3bb: 4c 89 ff                     	movq	%r15, %rdi
  20c3be: e8 1d ff 00 00               	callq	0x21c2e0 <memcpy>
  20c3c3: 48 8d 7c 24 58               	leaq	88(%rsp), %rdi
  20c3c8: 41 b8 dc 25 20 00            	movl	$2106844, %r8d          # imm = 0x2025DC
  20c3ce: 48 89 de                     	movq	%rbx, %rsi
  20c3d1: ba 9c ff ff ff               	movl	$4294967196, %edx       # imm = 0xFFFFFF9C
  20c3d6: 4c 89 f9                     	movq	%r15, %rcx
  20c3d9: e8 42 cc 00 00               	callq	0x219020 <fs.Dir.openFileZ>
  20c3de: 4c 8b 74 24 58               	movq	88(%rsp), %r14
  20c3e3: 4d 89 f4                     	movq	%r14, %r12
  20c3e6: 49 c1 ec 20                  	shrq	$32, %r12
  20c3ea: 66 45 85 e4                  	testw	%r12w, %r12w
  20c3ee: 0f 85 6f 05 00 00            	jne	0x20c963 <debug.printLineInfo__anon_5656+0xd13>
  20c3f4: 4c 8d a4 24 68 20 00 00      	leaq	8296(%rsp), %r12
  20c3fc: ba 00 10 00 00               	movl	$4096, %edx             # imm = 0x1000
  20c401: be aa 00 00 00               	movl	$170, %esi
  20c406: 4c 89 e7                     	movq	%r12, %rdi
  20c409: e8 d2 ff 00 00               	callq	0x21c3e0 <memset>
  20c40e: b8 01 00 00 00               	movl	$1, %eax
  20c413: 4c 89 74 24 48               	movq	%r14, 72(%rsp)
  20c418: 4d 63 fe                     	movslq	%r14d, %r15
  20c41b: 4d 89 e6                     	movq	%r12, %r14
  20c41e: 48 89 44 24 28               	movq	%rax, 40(%rsp)
  20c423: 49 89 c1                     	movq	%rax, %r9
  20c426: 45 31 c0                     	xorl	%r8d, %r8d
  20c429: 0f 1f 80 00 00 00 00         	nopl	(%rax)
  20c430: ba 00 10 00 00               	movl	$4096, %edx             # imm = 0x1000
  20c435: 31 c0                        	xorl	%eax, %eax
  20c437: 4c 89 ff                     	movq	%r15, %rdi
  20c43a: 4c 89 e6                     	movq	%r12, %rsi
  20c43d: 0f 05                        	syscall
  20c43f: 48 89 c5                     	movq	%rax, %rbp
  20c442: f7 d8                        	negl	%eax
  20c444: 48 81 fd 01 f0 ff ff         	cmpq	$-4095, %rbp            # imm = 0xF001
  20c44b: 41 0f 42 c0                  	cmovbl	%r8d, %eax
  20c44f: 66 83 f8 04                  	cmpw	$4, %ax
  20c453: 74 db                        	je	0x20c430 <debug.printLineInfo__anon_5656+0x7e0>
  20c455: 0f b7 c0                     	movzwl	%ax, %eax
  20c458: 83 f8 67                     	cmpl	$103, %eax
  20c45b: 0f 8f 31 02 00 00            	jg	0x20c692 <debug.printLineInfo__anon_5656+0xa42>
  20c461: 83 f8 16                     	cmpl	$22, %eax
  20c464: 0f 87 38 05 00 00            	ja	0x20c9a2 <debug.printLineInfo__anon_5656+0xd52>
  20c46a: 89 c0                        	movl	%eax, %eax
  20c46c: ff 24 c5 28 0c 20 00         	jmpq	*2100264(,%rax,8)
  20c473: 48 81 fd 00 10 00 00         	cmpq	$4096, %rbp             # imm = 0x1000
  20c47a: 0f 87 2d 06 00 00            	ja	0x20caad <debug.printLineInfo__anon_5656+0xe5d>
  20c480: 48 85 ed                     	testq	%rbp, %rbp
  20c483: 0f 84 88 01 00 00            	je	0x20c611 <debug.printLineInfo__anon_5656+0x9c1>
  20c489: 4c 89 6c 24 30               	movq	%r13, 48(%rsp)
  20c48e: 4c 89 c8                     	movq	%r9, %rax
  20c491: 45 31 ed                     	xorl	%r13d, %r13d
  20c494: 4c 89 7c 24 20               	movq	%r15, 32(%rsp)
  20c499: eb 1c                        	jmp	0x20c4b7 <debug.printLineInfo__anon_5656+0x867>
  20c49b: 0f 1f 44 00 00               	nopl	(%rax,%rax)
  20c4a0: 48 ff 44 24 28               	incq	40(%rsp)
  20c4a5: 0f 84 b3 05 00 00            	je	0x20ca5e <debug.printLineInfo__anon_5656+0xe0e>
  20c4ab: 49 ff c5                     	incq	%r13
  20c4ae: 49 39 ed                     	cmpq	%rbp, %r13
  20c4b1: 0f 84 48 01 00 00            	je	0x20c5ff <debug.printLineInfo__anon_5656+0x9af>
  20c4b7: 42 0f b6 8c 2c 68 20 00 00   	movzbl	8296(%rsp,%r13), %ecx
  20c4c0: 48 3b 44 24 40               	cmpq	64(%rsp), %rax
  20c4c5: 0f 85 85 00 00 00            	jne	0x20c550 <debug.printLineInfo__anon_5656+0x900>
  20c4cb: 48 8b 14 24                  	movq	(%rsp), %rdx
  20c4cf: 48 89 44 24 38               	movq	%rax, 56(%rsp)
  20c4d4: 44 8b 3a                     	movl	(%rdx), %r15d
  20c4d7: 80 f9 09                     	cmpb	$9, %cl
  20c4da: 0f 85 a0 00 00 00            	jne	0x20c580 <debug.printLineInfo__anon_5656+0x930>
  20c4e0: 31 c0                        	xorl	%eax, %eax
  20c4e2: c6 84 24 68 10 00 00 20      	movb	$32, 4200(%rsp)
  20c4ea: 48 85 c0                     	testq	%rax, %rax
  20c4ed: 75 3c                        	jne	0x20c52b <debug.printLineInfo__anon_5656+0x8db>
  20c4ef: 90                           	nop
  20c4f0: 41 b8 01 00 00 00            	movl	$1, %r8d
  20c4f6: 48 8d 7c 24 60               	leaq	96(%rsp), %rdi
  20c4fb: 48 89 de                     	movq	%rbx, %rsi
  20c4fe: 44 89 fa                     	movl	%r15d, %edx
  20c501: 48 8d 8c 24 68 10 00 00      	leaq	4200(%rsp), %rcx
  20c509: e8 82 7d ff ff               	callq	0x204290 <fs.file.File.write>
  20c50e: 44 0f b7 64 24 68            	movzwl	104(%rsp), %r12d
  20c514: 66 45 85 e4                  	testw	%r12w, %r12w
  20c518: 0f 85 0a 01 00 00            	jne	0x20c628 <debug.printLineInfo__anon_5656+0x9d8>
  20c51e: 48 8b 44 24 60               	movq	96(%rsp), %rax
  20c523: 4d 89 f4                     	movq	%r14, %r12
  20c526: 48 85 c0                     	testq	%rax, %rax
  20c529: 74 c5                        	je	0x20c4f0 <debug.printLineInfo__anon_5656+0x8a0>
  20c52b: 48 83 f8 01                  	cmpq	$1, %rax
  20c52f: 0f 85 1a 04 00 00            	jne	0x20c94f <debug.printLineInfo__anon_5656+0xcff>
  20c535: 4c 8b 7c 24 20               	movq	32(%rsp), %r15
  20c53a: 48 8b 44 24 38               	movq	56(%rsp), %rax
  20c53f: e9 5c ff ff ff               	jmp	0x20c4a0 <debug.printLineInfo__anon_5656+0x850>
  20c544: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
  20c550: 80 f9 0a                     	cmpb	$10, %cl
  20c553: 0f 85 47 ff ff ff            	jne	0x20c4a0 <debug.printLineInfo__anon_5656+0x850>
  20c559: 48 ff c0                     	incq	%rax
  20c55c: 0f 84 fc 04 00 00            	je	0x20ca5e <debug.printLineInfo__anon_5656+0xe0e>
  20c562: b9 01 00 00 00               	movl	$1, %ecx
  20c567: 48 89 4c 24 28               	movq	%rcx, 40(%rsp)
  20c56c: 49 ff c5                     	incq	%r13
  20c56f: 49 39 ed                     	cmpq	%rbp, %r13
  20c572: 0f 85 3f ff ff ff            	jne	0x20c4b7 <debug.printLineInfo__anon_5656+0x867>
  20c578: e9 82 00 00 00               	jmp	0x20c5ff <debug.printLineInfo__anon_5656+0x9af>
  20c57d: 0f 1f 00                     	nopl	(%rax)
  20c580: 31 c0                        	xorl	%eax, %eax
  20c582: 88 4c 24 0f                  	movb	%cl, 15(%rsp)
  20c586: 88 8c 24 68 10 00 00         	movb	%cl, 4200(%rsp)
  20c58d: 48 85 c0                     	testq	%rax, %rax
  20c590: 75 49                        	jne	0x20c5db <debug.printLineInfo__anon_5656+0x98b>
  20c592: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)
  20c5a0: 41 b8 01 00 00 00            	movl	$1, %r8d
  20c5a6: 48 8d 7c 24 60               	leaq	96(%rsp), %rdi
  20c5ab: 48 89 de                     	movq	%rbx, %rsi
  20c5ae: 44 89 fa                     	movl	%r15d, %edx
  20c5b1: 48 8d 8c 24 68 10 00 00      	leaq	4200(%rsp), %rcx
  20c5b9: e8 d2 7c ff ff               	callq	0x204290 <fs.file.File.write>
  20c5be: 44 0f b7 64 24 68            	movzwl	104(%rsp), %r12d
  20c5c4: 66 45 85 e4                  	testw	%r12w, %r12w
  20c5c8: 0f 85 8f 00 00 00            	jne	0x20c65d <debug.printLineInfo__anon_5656+0xa0d>
  20c5ce: 48 8b 44 24 60               	movq	96(%rsp), %rax
  20c5d3: 4d 89 f4                     	movq	%r14, %r12
  20c5d6: 48 85 c0                     	testq	%rax, %rax
  20c5d9: 74 c5                        	je	0x20c5a0 <debug.printLineInfo__anon_5656+0x950>
  20c5db: 48 83 f8 01                  	cmpq	$1, %rax
  20c5df: 0f 85 6a 03 00 00            	jne	0x20c94f <debug.printLineInfo__anon_5656+0xcff>
  20c5e5: 80 7c 24 0f 0a               	cmpb	$10, 15(%rsp)
  20c5ea: 4c 8b 7c 24 20               	movq	32(%rsp), %r15
  20c5ef: 48 8b 44 24 38               	movq	56(%rsp), %rax
  20c5f4: 0f 85 a6 fe ff ff            	jne	0x20c4a0 <debug.printLineInfo__anon_5656+0x850>
  20c5fa: e9 fe 00 00 00               	jmp	0x20c6fd <debug.printLineInfo__anon_5656+0xaad>
  20c5ff: 4c 8b 6c 24 30               	movq	48(%rsp), %r13
  20c604: 48 81 fd ff 0f 00 00         	cmpq	$4095, %rbp             # imm = 0xFFF
  20c60b: 0f 87 12 fe ff ff            	ja	0x20c423 <debug.printLineInfo__anon_5656+0x7d3>
  20c611: 48 8b 7c 24 48               	movq	72(%rsp), %rdi
  20c616: e8 35 cc 00 00               	callq	0x219250 <os.close>
  20c61b: 48 89 df                     	movq	%rbx, %rdi
  20c61e: e8 2d f7 00 00               	callq	0x21bd50 <builtin.returnError>
  20c623: e9 e2 03 00 00               	jmp	0x20ca0a <debug.printLineInfo__anon_5656+0xdba>
  20c628: 48 89 df                     	movq	%rbx, %rdi
  20c62b: e8 20 f7 00 00               	callq	0x21bd50 <builtin.returnError>
  20c630: 48 89 df                     	movq	%rbx, %rdi
  20c633: e8 18 f7 00 00               	callq	0x21bd50 <builtin.returnError>
  20c638: 48 89 df                     	movq	%rbx, %rdi
  20c63b: e8 10 f7 00 00               	callq	0x21bd50 <builtin.returnError>
  20c640: b8 03 00 00 00               	movl	$3, %eax
  20c645: 48 8b 7c 24 20               	movq	32(%rsp), %rdi
  20c64a: 0f 05                        	syscall
  20c64c: 48 3d 01 f0 ff ff            	cmpq	$-4095, %rax            # imm = 0xF001
  20c652: 0f 83 79 03 00 00            	jae	0x20c9d1 <debug.printLineInfo__anon_5656+0xd81>
  20c658: e9 82 03 00 00               	jmp	0x20c9df <debug.printLineInfo__anon_5656+0xd8f>
  20c65d: 48 89 df                     	movq	%rbx, %rdi
  20c660: e8 eb f6 00 00               	callq	0x21bd50 <builtin.returnError>
  20c665: 48 89 df                     	movq	%rbx, %rdi
  20c668: e8 e3 f6 00 00               	callq	0x21bd50 <builtin.returnError>
  20c66d: 48 89 df                     	movq	%rbx, %rdi
  20c670: e8 db f6 00 00               	callq	0x21bd50 <builtin.returnError>
  20c675: b8 03 00 00 00               	movl	$3, %eax
  20c67a: 48 8b 7c 24 20               	movq	32(%rsp), %rdi
  20c67f: 0f 05                        	syscall
  20c681: 48 3d 01 f0 ff ff            	cmpq	$-4095, %rax            # imm = 0xF001
  20c687: 0f 83 44 03 00 00            	jae	0x20c9d1 <debug.printLineInfo__anon_5656+0xd81>
  20c68d: e9 4d 03 00 00               	jmp	0x20c9df <debug.printLineInfo__anon_5656+0xd8f>
  20c692: 83 f8 68                     	cmpl	$104, %eax
  20c695: 0f 84 00 03 00 00            	je	0x20c99b <debug.printLineInfo__anon_5656+0xd4b>
  20c69b: 83 f8 69                     	cmpl	$105, %eax
  20c69e: 74 53                        	je	0x20c6f3 <debug.printLineInfo__anon_5656+0xaa3>
  20c6a0: 83 f8 6e                     	cmpl	$110, %eax
  20c6a3: 0f 85 f9 02 00 00            	jne	0x20c9a2 <debug.printLineInfo__anon_5656+0xd52>
  20c6a9: 66 41 bc 35 00               	movw	$53, %r12w
  20c6ae: e9 fc 02 00 00               	jmp	0x20c9af <debug.printLineInfo__anon_5656+0xd5f>
  20c6b3: 48 89 df                     	movq	%rbx, %rdi
  20c6b6: 41 89 c4                     	movl	%eax, %r12d
  20c6b9: e8 92 f6 00 00               	callq	0x21bd50 <builtin.returnError>
  20c6be: 48 89 df                     	movq	%rbx, %rdi
  20c6c1: e8 8a f6 00 00               	callq	0x21bd50 <builtin.returnError>
  20c6c6: 48 89 df                     	movq	%rbx, %rdi
  20c6c9: e8 82 f6 00 00               	callq	0x21bd50 <builtin.returnError>
  20c6ce: 48 89 df                     	movq	%rbx, %rdi
  20c6d1: e8 7a f6 00 00               	callq	0x21bd50 <builtin.returnError>
  20c6d6: 48 89 df                     	movq	%rbx, %rdi
  20c6d9: e8 72 f6 00 00               	callq	0x21bd50 <builtin.returnError>
  20c6de: 48 89 df                     	movq	%rbx, %rdi
  20c6e1: e8 6a f6 00 00               	callq	0x21bd50 <builtin.returnError>
  20c6e6: 48 89 df                     	movq	%rbx, %rdi
  20c6e9: e8 62 f6 00 00               	callq	0x21bd50 <builtin.returnError>
  20c6ee: e9 22 03 00 00               	jmp	0x20ca15 <debug.printLineInfo__anon_5656+0xdc5>
  20c6f3: 66 41 bc 09 00               	movw	$9, %r12w
  20c6f8: e9 b2 02 00 00               	jmp	0x20c9af <debug.printLineInfo__anon_5656+0xd5f>
  20c6fd: b8 03 00 00 00               	movl	$3, %eax
  20c702: 4c 89 ff                     	movq	%r15, %rdi
  20c705: 0f 05                        	syscall
  20c707: 48 3d 01 f0 ff ff            	cmpq	$-4095, %rax            # imm = 0xF001
  20c70d: 72 0e                        	jb	0x20c71d <debug.printLineInfo__anon_5656+0xacd>
  20c70f: 0f b7 c0                     	movzwl	%ax, %eax
  20c712: 3d f7 ff 00 00               	cmpl	$65527, %eax            # imm = 0xFFF7
  20c717: 0f 84 57 03 00 00            	je	0x20ca74 <debug.printLineInfo__anon_5656+0xe24>
  20c71d: 48 8b 4c 24 30               	movq	48(%rsp), %rcx
  20c722: 48 85 c9                     	testq	%rcx, %rcx
  20c725: 0f 84 cc 01 00 00            	je	0x20c8f7 <debug.printLineInfo__anon_5656+0xca7>
  20c72b: 48 8b 04 24                  	movq	(%rsp), %rax
  20c72f: c5 fc 28 05 c9 3a ff ff      	vmovaps	-50487(%rip), %ymm0     # 0x200200 <zig-graph+0x200200>
  20c737: 48 ff c9                     	decq	%rcx
  20c73a: 8b 28                        	movl	(%rax), %ebp
  20c73c: c5 fc 11 84 24 40 01 00 00   	vmovups	%ymm0, 320(%rsp)
  20c745: c5 fc 11 84 24 20 01 00 00   	vmovups	%ymm0, 288(%rsp)
  20c74e: c5 fc 11 84 24 00 01 00 00   	vmovups	%ymm0, 256(%rsp)
  20c757: c5 fc 11 84 24 e0 00 00 00   	vmovups	%ymm0, 224(%rsp)
  20c760: c5 fc 11 84 24 c0 00 00 00   	vmovups	%ymm0, 192(%rsp)
  20c769: c5 fc 11 84 24 a0 00 00 00   	vmovups	%ymm0, 160(%rsp)
  20c772: c5 fc 11 84 24 80 00 00 00   	vmovups	%ymm0, 128(%rsp)
  20c77b: c5 fc 11 44 24 60            	vmovups	%ymm0, 96(%rsp)
  20c781: 0f 84 80 00 00 00            	je	0x20c807 <debug.printLineInfo__anon_5656+0xbb7>
  20c787: 4c 8d b4 24 68 10 00 00      	leaq	4200(%rsp), %r14
  20c78f: 48 81 f9 00 01 00 00         	cmpq	$256, %rcx              # imm = 0x100
  20c796: 41 bf 00 01 00 00            	movl	$256, %r15d             # imm = 0x100
  20c79c: 48 89 4c 24 30               	movq	%rcx, 48(%rsp)
  20c7a1: 4c 0f 42 f9                  	cmovbq	%rcx, %r15
  20c7a5: 45 31 ed                     	xorl	%r13d, %r13d
  20c7a8: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
  20c7b0: 4d 89 f8                     	movq	%r15, %r8
  20c7b3: 4d 29 e8                     	subq	%r13, %r8
  20c7b6: 0f 82 93 01 00 00            	jb	0x20c94f <debug.printLineInfo__anon_5656+0xcff>
  20c7bc: 4a 8d 4c 2c 60               	leaq	96(%rsp,%r13), %rcx
  20c7c1: 4c 89 f7                     	movq	%r14, %rdi
  20c7c4: 48 89 de                     	movq	%rbx, %rsi
  20c7c7: 89 ea                        	movl	%ebp, %edx
  20c7c9: c5 f8 77                     	vzeroupper
  20c7cc: e8 bf 7a ff ff               	callq	0x204290 <fs.file.File.write>
  20c7d1: 44 0f b7 a4 24 70 10 00 00   	movzwl	4208(%rsp), %r12d
  20c7da: 66 45 85 e4                  	testw	%r12w, %r12w
  20c7de: 0f 85 ea fe ff ff            	jne	0x20c6ce <debug.printLineInfo__anon_5656+0xa7e>
  20c7e4: 4c 03 ac 24 68 10 00 00      	addq	4200(%rsp), %r13
  20c7ec: 0f 82 6c 02 00 00            	jb	0x20ca5e <debug.printLineInfo__anon_5656+0xe0e>
  20c7f2: 4d 39 fd                     	cmpq	%r15, %r13
  20c7f5: 75 b9                        	jne	0x20c7b0 <debug.printLineInfo__anon_5656+0xb60>
  20c7f7: 48 8b 4c 24 30               	movq	48(%rsp), %rcx
  20c7fc: 4c 29 f9                     	subq	%r15, %rcx
  20c7ff: 0f 82 59 02 00 00            	jb	0x20ca5e <debug.printLineInfo__anon_5656+0xe0e>
  20c805: 75 88                        	jne	0x20c78f <debug.printLineInfo__anon_5656+0xb3f>
  20c807: 48 8b 84 24 b0 30 00 00      	movq	12464(%rsp), %rax
  20c80f: 0f b6 00                     	movzbl	(%rax), %eax
  20c812: a8 03                        	testb	$3, %al
  20c814: 74 39                        	je	0x20c84f <debug.printLineInfo__anon_5656+0xbff>
  20c816: 83 e0 03                     	andl	$3, %eax
  20c819: 83 f8 01                     	cmpl	$1, %eax
  20c81c: 0f 85 4d 02 00 00            	jne	0x20ca6f <debug.printLineInfo__anon_5656+0xe1f>
  20c822: 48 8b 04 24                  	movq	(%rsp), %rax
  20c826: 48 8d 74 24 60               	leaq	96(%rsp), %rsi
  20c82b: ba 1d 20 20 00               	movl	$2105373, %edx          # imm = 0x20201D
  20c830: b9 07 00 00 00               	movl	$7, %ecx
  20c835: 48 89 df                     	movq	%rbx, %rdi
  20c838: 8b 00                        	movl	(%rax), %eax
  20c83a: 89 44 24 60                  	movl	%eax, 96(%rsp)
  20c83e: c5 f8 77                     	vzeroupper
  20c841: e8 7a 7c ff ff               	callq	0x2044c0 <io.writer.Writer(fs.file.File,error{AccessDenied,BrokenPipe,ConnectionResetByPeer,DeviceBusy,DiskQuota,FileTooBig,InputOutput,InvalidArgument,LockViolation,NoSpaceLeft,NotOpenForWriting,OperationAborted,SystemResources,Unexpected,WouldBlock},(function 'write')).writeAll>
  20c846: 66 85 c0                     	testw	%ax, %ax
  20c849: 0f 85 07 02 00 00            	jne	0x20ca56 <debug.printLineInfo__anon_5656+0xe06>
  20c84f: 48 8b 04 24                  	movq	(%rsp), %rax
  20c853: 4c 8d 74 24 60               	leaq	96(%rsp), %r14
  20c858: 8b 28                        	movl	(%rax), %ebp
  20c85a: 31 c0                        	xorl	%eax, %eax
  20c85c: 48 85 c0                     	testq	%rax, %rax
  20c85f: 75 44                        	jne	0x20c8a5 <debug.printLineInfo__anon_5656+0xc55>
  20c861: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
  20c870: b9 80 23 20 00               	movl	$2106240, %ecx          # imm = 0x202380
  20c875: 41 b8 01 00 00 00            	movl	$1, %r8d
  20c87b: 4c 89 f7                     	movq	%r14, %rdi
  20c87e: 48 89 de                     	movq	%rbx, %rsi
  20c881: 89 ea                        	movl	%ebp, %edx
  20c883: c5 f8 77                     	vzeroupper
  20c886: e8 05 7a ff ff               	callq	0x204290 <fs.file.File.write>
  20c88b: 44 0f b7 64 24 68            	movzwl	104(%rsp), %r12d
  20c891: 66 45 85 e4                  	testw	%r12w, %r12w
  20c895: 0f 85 3b fe ff ff            	jne	0x20c6d6 <debug.printLineInfo__anon_5656+0xa86>
  20c89b: 48 8b 44 24 60               	movq	96(%rsp), %rax
  20c8a0: 48 85 c0                     	testq	%rax, %rax
  20c8a3: 74 cb                        	je	0x20c870 <debug.printLineInfo__anon_5656+0xc20>
  20c8a5: 48 83 f8 01                  	cmpq	$1, %rax
  20c8a9: 0f 85 a0 00 00 00            	jne	0x20c94f <debug.printLineInfo__anon_5656+0xcff>
  20c8af: 48 8b 84 24 b0 30 00 00      	movq	12464(%rsp), %rax
  20c8b7: 0f b6 00                     	movzbl	(%rax), %eax
  20c8ba: a8 03                        	testb	$3, %al
  20c8bc: 74 39                        	je	0x20c8f7 <debug.printLineInfo__anon_5656+0xca7>
  20c8be: 83 e0 03                     	andl	$3, %eax
  20c8c1: 83 f8 01                     	cmpl	$1, %eax
  20c8c4: 0f 85 a5 01 00 00            	jne	0x20ca6f <debug.printLineInfo__anon_5656+0xe1f>
  20c8ca: 48 8b 04 24                  	movq	(%rsp), %rax
  20c8ce: 48 8d 74 24 60               	leaq	96(%rsp), %rsi
  20c8d3: ba 25 20 20 00               	movl	$2105381, %edx          # imm = 0x202025
  20c8d8: b9 04 00 00 00               	movl	$4, %ecx
  20c8dd: 48 89 df                     	movq	%rbx, %rdi
  20c8e0: 8b 00                        	movl	(%rax), %eax
  20c8e2: 89 44 24 60                  	movl	%eax, 96(%rsp)
  20c8e6: c5 f8 77                     	vzeroupper
  20c8e9: e8 d2 7b ff ff               	callq	0x2044c0 <io.writer.Writer(fs.file.File,error{AccessDenied,BrokenPipe,ConnectionResetByPeer,DeviceBusy,DiskQuota,FileTooBig,InputOutput,InvalidArgument,LockViolation,NoSpaceLeft,NotOpenForWriting,OperationAborted,SystemResources,Unexpected,WouldBlock},(function 'write')).writeAll>
  20c8ee: 66 85 c0                     	testw	%ax, %ax
  20c8f1: 0f 85 5f 01 00 00            	jne	0x20ca56 <debug.printLineInfo__anon_5656+0xe06>
  20c8f7: 48 8b 04 24                  	movq	(%rsp), %rax
  20c8fb: 4c 8d 74 24 60               	leaq	96(%rsp), %r14
  20c900: 8b 28                        	movl	(%rax), %ebp
  20c902: 31 c0                        	xorl	%eax, %eax
  20c904: 48 85 c0                     	testq	%rax, %rax
  20c907: 75 3c                        	jne	0x20c945 <debug.printLineInfo__anon_5656+0xcf5>
  20c909: 0f 1f 80 00 00 00 00         	nopl	(%rax)
  20c910: b9 d6 25 20 00               	movl	$2106838, %ecx          # imm = 0x2025D6
  20c915: 41 b8 01 00 00 00            	movl	$1, %r8d
  20c91b: 4c 89 f7                     	movq	%r14, %rdi
  20c91e: 48 89 de                     	movq	%rbx, %rsi
  20c921: 89 ea                        	movl	%ebp, %edx
  20c923: c5 f8 77                     	vzeroupper
  20c926: e8 65 79 ff ff               	callq	0x204290 <fs.file.File.write>
  20c92b: 44 0f b7 64 24 68            	movzwl	104(%rsp), %r12d
  20c931: 66 45 85 e4                  	testw	%r12w, %r12w
  20c935: 0f 85 9b fd ff ff            	jne	0x20c6d6 <debug.printLineInfo__anon_5656+0xa86>
  20c93b: 48 8b 44 24 60               	movq	96(%rsp), %rax
  20c940: 48 85 c0                     	testq	%rax, %rax
  20c943: 74 cb                        	je	0x20c910 <debug.printLineInfo__anon_5656+0xcc0>
  20c945: 48 83 f8 01                  	cmpq	$1, %rax
  20c949: 0f 84 c3 00 00 00            	je	0x20ca12 <debug.printLineInfo__anon_5656+0xdc2>
  20c94f: bf 34 1d 20 00               	movl	$2104628, %edi          # imm = 0x201D34
  20c954: be 24 00 00 00               	movl	$36, %esi
  20c959: 31 c9                        	xorl	%ecx, %ecx
  20c95b: c5 f8 77                     	vzeroupper
  20c95e: e8 ad e9 00 00               	callq	0x21b310 <builtin.default_panic>
  20c963: 48 89 df                     	movq	%rbx, %rdi
  20c966: e8 e5 f3 00 00               	callq	0x21bd50 <builtin.returnError>
  20c96b: 48 89 df                     	movq	%rbx, %rdi
  20c96e: e8 dd f3 00 00               	callq	0x21bd50 <builtin.returnError>
  20c973: 66 41 83 fc 38               	cmpw	$56, %r12w
  20c978: 76 78                        	jbe	0x20c9f2 <debug.printLineInfo__anon_5656+0xda2>
  20c97a: e9 67 fd ff ff               	jmp	0x20c6e6 <debug.printLineInfo__anon_5656+0xa96>
  20c97f: 66 41 bc 03 00               	movw	$3, %r12w
  20c984: eb 29                        	jmp	0x20c9af <debug.printLineInfo__anon_5656+0xd5f>
  20c986: 66 41 bc 36 00               	movw	$54, %r12w
  20c98b: eb 22                        	jmp	0x20c9af <debug.printLineInfo__anon_5656+0xd5f>
  20c98d: 66 41 bc 0d 00               	movw	$13, %r12w
  20c992: eb 1b                        	jmp	0x20c9af <debug.printLineInfo__anon_5656+0xd5f>
  20c994: 66 41 bc 25 00               	movw	$37, %r12w
  20c999: eb 14                        	jmp	0x20c9af <debug.printLineInfo__anon_5656+0xd5f>
  20c99b: 66 41 bc 0e 00               	movw	$14, %r12w
  20c9a0: eb 0d                        	jmp	0x20c9af <debug.printLineInfo__anon_5656+0xd5f>
  20c9a2: 48 89 df                     	movq	%rbx, %rdi
  20c9a5: e8 a6 f3 00 00               	callq	0x21bd50 <builtin.returnError>
  20c9aa: 66 41 bc 0f 00               	movw	$15, %r12w
  20c9af: 48 89 df                     	movq	%rbx, %rdi
  20c9b2: e8 99 f3 00 00               	callq	0x21bd50 <builtin.returnError>
  20c9b7: 48 89 df                     	movq	%rbx, %rdi
  20c9ba: e8 91 f3 00 00               	callq	0x21bd50 <builtin.returnError>
  20c9bf: b8 03 00 00 00               	movl	$3, %eax
  20c9c4: 4c 89 ff                     	movq	%r15, %rdi
  20c9c7: 0f 05                        	syscall
  20c9c9: 48 3d 01 f0 ff ff            	cmpq	$-4095, %rax            # imm = 0xF001
  20c9cf: 72 0e                        	jb	0x20c9df <debug.printLineInfo__anon_5656+0xd8f>
  20c9d1: 0f b7 c0                     	movzwl	%ax, %eax
  20c9d4: 3d f7 ff 00 00               	cmpl	$65527, %eax            # imm = 0xFFF7
  20c9d9: 0f 84 95 00 00 00            	je	0x20ca74 <debug.printLineInfo__anon_5656+0xe24>
  20c9df: 48 89 df                     	movq	%rbx, %rdi
  20c9e2: e8 69 f3 00 00               	callq	0x21bd50 <builtin.returnError>
  20c9e7: 66 41 83 fc 38               	cmpw	$56, %r12w
  20c9ec: 0f 87 f4 fc ff ff            	ja	0x20c6e6 <debug.printLineInfo__anon_5656+0xa96>
  20c9f2: 41 0f b7 c4                  	movzwl	%r12w, %eax
  20c9f6: 48 b9 80 00 00 20 02 00 00 01	movabsq	$72057603164733568, %rcx # imm = 0x100000220000080
  20ca00: 48 0f a3 c1                  	btq	%rax, %rcx
  20ca04: 0f 83 dc fc ff ff            	jae	0x20c6e6 <debug.printLineInfo__anon_5656+0xa96>
  20ca0a: 48 8b 44 24 50               	movq	80(%rsp), %rax
  20ca0f: 48 89 03                     	movq	%rax, (%rbx)
  20ca12: 45 31 e4                     	xorl	%r12d, %r12d
  20ca15: 44 89 e0                     	movl	%r12d, %eax
  20ca18: 48 81 c4 68 30 00 00         	addq	$12392, %rsp            # imm = 0x3068
  20ca1f: 5b                           	popq	%rbx
  20ca20: 41 5c                        	popq	%r12
  20ca22: 41 5d                        	popq	%r13
  20ca24: 41 5e                        	popq	%r14
  20ca26: 41 5f                        	popq	%r15
  20ca28: 5d                           	popq	%rbp
  20ca29: c5 f8 77                     	vzeroupper
  20ca2c: c3                           	retq
  20ca2d: 48 89 df                     	movq	%rbx, %rdi
  20ca30: e8 1b f3 00 00               	callq	0x21bd50 <builtin.returnError>
  20ca35: 48 89 df                     	movq	%rbx, %rdi
  20ca38: e8 13 f3 00 00               	callq	0x21bd50 <builtin.returnError>
  20ca3d: 66 41 bc 1f 00               	movw	$31, %r12w
  20ca42: 48 89 df                     	movq	%rbx, %rdi
  20ca45: e8 06 f3 00 00               	callq	0x21bd50 <builtin.returnError>
  20ca4a: 66 41 83 fc 38               	cmpw	$56, %r12w
  20ca4f: 76 a1                        	jbe	0x20c9f2 <debug.printLineInfo__anon_5656+0xda2>
  20ca51: e9 90 fc ff ff               	jmp	0x20c6e6 <debug.printLineInfo__anon_5656+0xa96>
  20ca56: 41 89 c4                     	movl	%eax, %r12d
  20ca59: e9 80 fc ff ff               	jmp	0x20c6de <debug.printLineInfo__anon_5656+0xa8e>
  20ca5e: bf 59 1d 20 00               	movl	$2104665, %edi          # imm = 0x201D59
  20ca63: be 10 00 00 00               	movl	$16, %esi
  20ca68: 31 c9                        	xorl	%ecx, %ecx
  20ca6a: e8 a1 e8 00 00               	callq	0x21b310 <builtin.default_panic>
  20ca6f: 83 f8 02                     	cmpl	$2, %eax
  20ca72: 75 14                        	jne	0x20ca88 <debug.printLineInfo__anon_5656+0xe38>
  20ca74: bf 32 22 20 00               	movl	$2105906, %edi          # imm = 0x202232
  20ca79: be 18 00 00 00               	movl	$24, %esi
  20ca7e: 31 c9                        	xorl	%ecx, %ecx
  20ca80: c5 f8 77                     	vzeroupper
  20ca83: e8 88 e8 00 00               	callq	0x21b310 <builtin.default_panic>
  20ca88: bf 5a 21 20 00               	movl	$2105690, %edi          # imm = 0x20215A
  20ca8d: be 17 00 00 00               	movl	$23, %esi
  20ca92: 31 c9                        	xorl	%ecx, %ecx
  20ca94: c5 f8 77                     	vzeroupper
  20ca97: e8 74 e8 00 00               	callq	0x21b310 <builtin.default_panic>
  20ca9c: bf b0 1e 20 00               	movl	$2105008, %edi          # imm = 0x201EB0
  20caa1: be 17 00 00 00               	movl	$23, %esi
  20caa6: 31 c9                        	xorl	%ecx, %ecx
  20caa8: e8 63 e8 00 00               	callq	0x21b310 <builtin.default_panic>
  20caad: bf 9c 1e 20 00               	movl	$2104988, %edi          # imm = 0x201E9C
  20cab2: be 13 00 00 00               	movl	$19, %esi
  20cab7: 31 c9                        	xorl	%ecx, %ecx
  20cab9: e8 52 e8 00 00               	callq	0x21b310 <builtin.default_panic>
  20cabe: 66 90                        	nop

000000000020cac0 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readUntilDelimiterAlloc>:
  20cac0: 55                           	pushq	%rbp
  20cac1: 41 57                        	pushq	%r15
  20cac3: 41 56                        	pushq	%r14
  20cac5: 41 55                        	pushq	%r13
  20cac7: 41 54                        	pushq	%r12
  20cac9: 53                           	pushq	%rbx
  20caca: 48 83 ec 58                  	subq	$88, %rsp
  20cace: 48 89 54 24 50               	movq	%rdx, 80(%rsp)
  20cad3: 48 8b 01                     	movq	(%rcx), %rax
  20cad6: 48 8b 51 08                  	movq	8(%rcx), %rdx
  20cada: 48 b9 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rcx # imm = 0xAAAAAAAAAAAAAAAA
  20cae4: 31 ed                        	xorl	%ebp, %ebp
  20cae6: 4c 8d 64 24 38               	leaq	56(%rsp), %r12
  20caeb: 49 c7 c6 ff ff ff ff         	movq	$-1, %r14
  20caf2: 45 31 ed                     	xorl	%r13d, %r13d
  20caf5: 48 89 74 24 20               	movq	%rsi, 32(%rsp)
  20cafa: 48 89 7c 24 30               	movq	%rdi, 48(%rsp)
  20caff: 48 89 4c 24 18               	movq	%rcx, 24(%rsp)
  20cb04: 48 89 c9                     	movq	%rcx, %rcx
  20cb07: 48 89 44 24 08               	movq	%rax, 8(%rsp)
  20cb0c: 48 89 54 24 10               	movq	%rdx, 16(%rsp)
  20cb11: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
  20cb20: 48 8b 74 24 50               	movq	80(%rsp), %rsi
  20cb25: 48 89 cb                     	movq	%rcx, %rbx
  20cb28: b9 01 00 00 00               	movl	$1, %ecx
  20cb2d: 4c 89 e7                     	movq	%r12, %rdi
  20cb30: 48 8d 54 24 07               	leaq	7(%rsp), %rdx
  20cb35: c6 44 24 07 aa               	movb	$-86, 7(%rsp)
  20cb3a: e8 41 c7 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20cb3f: 48 83 7c 24 38 00            	cmpq	$0, 56(%rsp)
  20cb45: 0f 84 10 03 00 00            	je	0x20ce5b <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readUntilDelimiterAlloc+0x39b>
  20cb4b: 44 0f b6 7c 24 07            	movzbl	7(%rsp), %r15d
  20cb51: 45 84 ff                     	testb	%r15b, %r15b
  20cb54: 0f 84 70 01 00 00            	je	0x20ccca <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readUntilDelimiterAlloc+0x20a>
  20cb5a: 49 39 ed                     	cmpq	%rbp, %r13
  20cb5d: 76 11                        	jbe	0x20cb70 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readUntilDelimiterAlloc+0xb0>
  20cb5f: 48 89 d9                     	movq	%rbx, %rcx
  20cb62: e9 3b 01 00 00               	jmp	0x20cca2 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readUntilDelimiterAlloc+0x1e2>
  20cb67: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
  20cb70: 4d 89 ec                     	movq	%r13, %r12
  20cb73: 48 89 d9                     	movq	%rbx, %rcx
  20cb76: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
  20cb80: 4c 89 e0                     	movq	%r12, %rax
  20cb83: 48 d1 e8                     	shrq	%rax
  20cb86: 48 83 c0 08                  	addq	$8, %rax
  20cb8a: 49 01 c4                     	addq	%rax, %r12
  20cb8d: 4d 0f 42 e6                  	cmovbq	%r14, %r12
  20cb91: 49 39 ec                     	cmpq	%rbp, %r12
  20cb94: 76 ea                        	jbe	0x20cb80 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readUntilDelimiterAlloc+0xc0>
  20cb96: 4d 39 e5                     	cmpq	%r12, %r13
  20cb99: 0f 83 fe 00 00 00            	jae	0x20cc9d <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readUntilDelimiterAlloc+0x1dd>
  20cb9f: 4c 8b 8c 24 88 00 00 00      	movq	136(%rsp), %r9
  20cba7: 4c 89 6c 24 28               	movq	%r13, 40(%rsp)
  20cbac: 4d 85 ed                     	testq	%r13, %r13
  20cbaf: 74 2a                        	je	0x20cbdb <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readUntilDelimiterAlloc+0x11b>
  20cbb1: 48 8b 7c 24 08               	movq	8(%rsp), %rdi
  20cbb6: 48 8b 44 24 10               	movq	16(%rsp), %rax
  20cbbb: 4c 89 ea                     	movq	%r13, %rdx
  20cbbe: 48 89 de                     	movq	%rbx, %rsi
  20cbc1: 31 c9                        	xorl	%ecx, %ecx
  20cbc3: 4d 89 e0                     	movq	%r12, %r8
  20cbc6: 4d 89 cd                     	movq	%r9, %r13
  20cbc9: ff 50 08                     	callq	*8(%rax)
  20cbcc: 4d 89 e9                     	movq	%r13, %r9
  20cbcf: a8 01                        	testb	$1, %al
  20cbd1: 74 08                        	je	0x20cbdb <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readUntilDelimiterAlloc+0x11b>
  20cbd3: 48 89 d9                     	movq	%rbx, %rcx
  20cbd6: e9 bf 00 00 00               	jmp	0x20cc9a <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readUntilDelimiterAlloc+0x1da>
  20cbdb: 48 8b 7c 24 08               	movq	8(%rsp), %rdi
  20cbe0: 48 8b 44 24 10               	movq	16(%rsp), %rax
  20cbe5: 4c 89 e6                     	movq	%r12, %rsi
  20cbe8: 31 d2                        	xorl	%edx, %edx
  20cbea: 4c 89 c9                     	movq	%r9, %rcx
  20cbed: 4c 89 4c 24 48               	movq	%r9, 72(%rsp)
  20cbf2: ff 10                        	callq	*(%rax)
  20cbf4: 48 85 c0                     	testq	%rax, %rax
  20cbf7: 0f 84 23 03 00 00            	je	0x20cf20 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readUntilDelimiterAlloc+0x460>
  20cbfd: 48 89 c7                     	movq	%rax, %rdi
  20cc00: be aa 00 00 00               	movl	$170, %esi
  20cc05: 4c 89 e2                     	movq	%r12, %rdx
  20cc08: 49 89 c5                     	movq	%rax, %r13
  20cc0b: e8 d0 f7 00 00               	callq	0x21c3e0 <memset>
  20cc10: 4c 39 e5                     	cmpq	%r12, %rbp
  20cc13: 0f 87 5b 03 00 00            	ja	0x20cf74 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readUntilDelimiterAlloc+0x4b4>
  20cc19: 48 8d 04 2b                  	leaq	(%rbx,%rbp), %rax
  20cc1d: 49 39 c5                     	cmpq	%rax, %r13
  20cc20: 73 12                        	jae	0x20cc34 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readUntilDelimiterAlloc+0x174>
  20cc22: 4c 89 e8                     	movq	%r13, %rax
  20cc25: 48 89 d9                     	movq	%rbx, %rcx
  20cc28: 48 01 e8                     	addq	%rbp, %rax
  20cc2b: 48 39 c3                     	cmpq	%rax, %rbx
  20cc2e: 0f 82 51 03 00 00            	jb	0x20cf85 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readUntilDelimiterAlloc+0x4c5>
  20cc34: 4c 89 ef                     	movq	%r13, %rdi
  20cc37: 48 89 de                     	movq	%rbx, %rsi
  20cc3a: 48 89 ea                     	movq	%rbp, %rdx
  20cc3d: e8 9e f6 00 00               	callq	0x21c2e0 <memcpy>
  20cc42: 48 89 df                     	movq	%rbx, %rdi
  20cc45: 48 8b 5c 24 28               	movq	40(%rsp), %rbx
  20cc4a: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  20cc54: 48 85 db                     	testq	%rbx, %rbx
  20cc57: 48 0f 44 f8                  	cmoveq	%rax, %rdi
  20cc5b: 48 0f 44 db                  	cmoveq	%rbx, %rbx
  20cc5f: 48 85 db                     	testq	%rbx, %rbx
  20cc62: 74 2e                        	je	0x20cc92 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readUntilDelimiterAlloc+0x1d2>
  20cc64: be aa 00 00 00               	movl	$170, %esi
  20cc69: 48 89 da                     	movq	%rbx, %rdx
  20cc6c: 48 89 7c 24 28               	movq	%rdi, 40(%rsp)
  20cc71: e8 6a f7 00 00               	callq	0x21c3e0 <memset>
  20cc76: 48 8b 7c 24 08               	movq	8(%rsp), %rdi
  20cc7b: 48 8b 74 24 28               	movq	40(%rsp), %rsi
  20cc80: 4c 8b 44 24 48               	movq	72(%rsp), %r8
  20cc85: 48 8b 44 24 10               	movq	16(%rsp), %rax
  20cc8a: 48 89 da                     	movq	%rbx, %rdx
  20cc8d: 31 c9                        	xorl	%ecx, %ecx
  20cc8f: ff 50 10                     	callq	*16(%rax)
  20cc92: 4c 89 e9                     	movq	%r13, %rcx
  20cc95: 4c 89 6c 24 18               	movq	%r13, 24(%rsp)
  20cc9a: 4d 89 e5                     	movq	%r12, %r13
  20cc9d: 4c 8d 64 24 38               	leaq	56(%rsp), %r12
  20cca2: 4c 39 ed                     	cmpq	%r13, %rbp
  20cca5: 0f 83 b8 02 00 00            	jae	0x20cf63 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readUntilDelimiterAlloc+0x4a3>
  20ccab: 44 88 3c 29                  	movb	%r15b, (%rcx,%rbp)
  20ccaf: 48 ff c5                     	incq	%rbp
  20ccb2: 48 83 fd ff                  	cmpq	$-1, %rbp
  20ccb6: 0f 85 64 fe ff ff            	jne	0x20cb20 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readUntilDelimiterAlloc+0x60>
  20ccbc: 4c 8b 74 24 20               	movq	32(%rsp), %r14
  20ccc1: 66 bd 39 00                  	movw	$57, %bp
  20ccc5: e9 a2 01 00 00               	jmp	0x20ce6c <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readUntilDelimiterAlloc+0x3ac>
  20ccca: 48 85 ed                     	testq	%rbp, %rbp
  20cccd: 0f 84 d5 00 00 00            	je	0x20cda8 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readUntilDelimiterAlloc+0x2e8>
  20ccd3: 48 8b 9c 24 88 00 00 00      	movq	136(%rsp), %rbx
  20ccdb: 4c 8b 74 24 18               	movq	24(%rsp), %r14
  20cce0: 4d 85 ed                     	testq	%r13, %r13
  20cce3: 74 23                        	je	0x20cd08 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readUntilDelimiterAlloc+0x248>
  20cce5: 48 8b 7c 24 08               	movq	8(%rsp), %rdi
  20ccea: 48 8b 44 24 10               	movq	16(%rsp), %rax
  20ccef: 4c 89 f6                     	movq	%r14, %rsi
  20ccf2: 4c 89 ea                     	movq	%r13, %rdx
  20ccf5: 31 c9                        	xorl	%ecx, %ecx
  20ccf7: 49 89 e8                     	movq	%rbp, %r8
  20ccfa: 49 89 d9                     	movq	%rbx, %r9
  20ccfd: ff 50 08                     	callq	*8(%rax)
  20cd00: a8 01                        	testb	$1, %al
  20cd02: 0f 85 e5 00 00 00            	jne	0x20cded <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readUntilDelimiterAlloc+0x32d>
  20cd08: 48 8b 7c 24 08               	movq	8(%rsp), %rdi
  20cd0d: 48 8b 44 24 10               	movq	16(%rsp), %rax
  20cd12: 48 89 ee                     	movq	%rbp, %rsi
  20cd15: 31 d2                        	xorl	%edx, %edx
  20cd17: 48 89 d9                     	movq	%rbx, %rcx
  20cd1a: ff 10                        	callq	*(%rax)
  20cd1c: 48 85 c0                     	testq	%rax, %rax
  20cd1f: 0f 84 b5 01 00 00            	je	0x20ceda <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readUntilDelimiterAlloc+0x41a>
  20cd25: 48 89 c7                     	movq	%rax, %rdi
  20cd28: be aa 00 00 00               	movl	$170, %esi
  20cd2d: 48 89 ea                     	movq	%rbp, %rdx
  20cd30: 49 89 c6                     	movq	%rax, %r14
  20cd33: e8 a8 f6 00 00               	callq	0x21c3e0 <memset>
  20cd38: 4c 8b 7c 24 18               	movq	24(%rsp), %r15
  20cd3d: 49 8d 04 2f                  	leaq	(%r15,%rbp), %rax
  20cd41: 49 39 c6                     	cmpq	%rax, %r14
  20cd44: 73 0f                        	jae	0x20cd55 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readUntilDelimiterAlloc+0x295>
  20cd46: 4c 89 f0                     	movq	%r14, %rax
  20cd49: 48 01 e8                     	addq	%rbp, %rax
  20cd4c: 49 39 c7                     	cmpq	%rax, %r15
  20cd4f: 0f 82 30 02 00 00            	jb	0x20cf85 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readUntilDelimiterAlloc+0x4c5>
  20cd55: 4c 89 f7                     	movq	%r14, %rdi
  20cd58: 4c 89 fe                     	movq	%r15, %rsi
  20cd5b: 48 89 ea                     	movq	%rbp, %rdx
  20cd5e: e8 7d f5 00 00               	callq	0x21c2e0 <memcpy>
  20cd63: 4c 89 ff                     	movq	%r15, %rdi
  20cd66: be aa 00 00 00               	movl	$170, %esi
  20cd6b: 48 89 ea                     	movq	%rbp, %rdx
  20cd6e: e8 6d f6 00 00               	callq	0x21c3e0 <memset>
  20cd73: 49 bc aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %r12 # imm = 0xAAAAAAAAAAAAAAAA
  20cd7d: 4d 85 ed                     	testq	%r13, %r13
  20cd80: 4d 0f 45 e7                  	cmovneq	%r15, %r12
  20cd84: 74 67                        	je	0x20cded <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readUntilDelimiterAlloc+0x32d>
  20cd86: 4c 89 e7                     	movq	%r12, %rdi
  20cd89: be aa 00 00 00               	movl	$170, %esi
  20cd8e: 4c 89 ea                     	movq	%r13, %rdx
  20cd91: e8 4a f6 00 00               	callq	0x21c3e0 <memset>
  20cd96: 48 8b 7c 24 08               	movq	8(%rsp), %rdi
  20cd9b: 4c 89 e6                     	movq	%r12, %rsi
  20cd9e: 4c 89 ea                     	movq	%r13, %rdx
  20cda1: 31 c9                        	xorl	%ecx, %ecx
  20cda3: 49 89 d8                     	movq	%rbx, %r8
  20cda6: eb 3d                        	jmp	0x20cde5 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readUntilDelimiterAlloc+0x325>
  20cda8: 4c 8b 74 24 18               	movq	24(%rsp), %r14
  20cdad: 48 bb aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rbx # imm = 0xAAAAAAAAAAAAAAAA
  20cdb7: 4d 85 ed                     	testq	%r13, %r13
  20cdba: 49 0f 45 de                  	cmovneq	%r14, %rbx
  20cdbe: 74 2d                        	je	0x20cded <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readUntilDelimiterAlloc+0x32d>
  20cdc0: 48 89 df                     	movq	%rbx, %rdi
  20cdc3: be aa 00 00 00               	movl	$170, %esi
  20cdc8: 4c 89 ea                     	movq	%r13, %rdx
  20cdcb: e8 10 f6 00 00               	callq	0x21c3e0 <memset>
  20cdd0: 4c 8b 84 24 88 00 00 00      	movq	136(%rsp), %r8
  20cdd8: 48 8b 7c 24 08               	movq	8(%rsp), %rdi
  20cddd: 48 89 de                     	movq	%rbx, %rsi
  20cde0: 4c 89 ea                     	movq	%r13, %rdx
  20cde3: 31 c9                        	xorl	%ecx, %ecx
  20cde5: 48 8b 44 24 10               	movq	16(%rsp), %rax
  20cdea: ff 50 10                     	callq	*16(%rax)
  20cded: 48 8b 5c 24 30               	movq	48(%rsp), %rbx
  20cdf2: 31 c0                        	xorl	%eax, %eax
  20cdf4: 4c 89 33                     	movq	%r14, (%rbx)
  20cdf7: 48 89 6b 08                  	movq	%rbp, 8(%rbx)
  20cdfb: 66 c7 43 10 00 00            	movw	$0, 16(%rbx)
  20ce01: 48 83 c3 10                  	addq	$16, %rbx
  20ce05: 49 be aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %r14 # imm = 0xAAAAAAAAAAAAAAAA
  20ce0f: 45 31 ed                     	xorl	%r13d, %r13d
  20ce12: 4d 85 ed                     	testq	%r13, %r13
  20ce15: 74 30                        	je	0x20ce47 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readUntilDelimiterAlloc+0x387>
  20ce17: 4c 89 f7                     	movq	%r14, %rdi
  20ce1a: be aa 00 00 00               	movl	$170, %esi
  20ce1f: 4c 89 ea                     	movq	%r13, %rdx
  20ce22: e8 b9 f5 00 00               	callq	0x21c3e0 <memset>
  20ce27: 4c 8b 84 24 88 00 00 00      	movq	136(%rsp), %r8
  20ce2f: 48 8b 7c 24 08               	movq	8(%rsp), %rdi
  20ce34: 48 8b 44 24 10               	movq	16(%rsp), %rax
  20ce39: 4c 89 f6                     	movq	%r14, %rsi
  20ce3c: 4c 89 ea                     	movq	%r13, %rdx
  20ce3f: 31 c9                        	xorl	%ecx, %ecx
  20ce41: ff 50 10                     	callq	*16(%rax)
  20ce44: 0f b7 03                     	movzwl	(%rbx), %eax
  20ce47: 66 85 c0                     	testw	%ax, %ax
  20ce4a: 75 7f                        	jne	0x20cecb <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readUntilDelimiterAlloc+0x40b>
  20ce4c: 48 83 c4 58                  	addq	$88, %rsp
  20ce50: 5b                           	popq	%rbx
  20ce51: 41 5c                        	popq	%r12
  20ce53: 41 5d                        	popq	%r13
  20ce55: 41 5e                        	popq	%r14
  20ce57: 41 5f                        	popq	%r15
  20ce59: 5d                           	popq	%rbp
  20ce5a: c3                           	retq
  20ce5b: 4c 8b 74 24 20               	movq	32(%rsp), %r14
  20ce60: 4c 89 f7                     	movq	%r14, %rdi
  20ce63: e8 e8 ee 00 00               	callq	0x21bd50 <builtin.returnError>
  20ce68: 66 bd 33 00                  	movw	$51, %bp
  20ce6c: 4c 89 f7                     	movq	%r14, %rdi
  20ce6f: e8 dc ee 00 00               	callq	0x21bd50 <builtin.returnError>
  20ce74: 4d 85 ed                     	testq	%r13, %r13
  20ce77: 48 bb aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rbx # imm = 0xAAAAAAAAAAAAAAAA
  20ce81: 48 0f 45 5c 24 18            	cmovneq	24(%rsp), %rbx
  20ce87: 74 2d                        	je	0x20ceb6 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readUntilDelimiterAlloc+0x3f6>
  20ce89: 48 89 df                     	movq	%rbx, %rdi
  20ce8c: be aa 00 00 00               	movl	$170, %esi
  20ce91: 4c 89 ea                     	movq	%r13, %rdx
  20ce94: e8 47 f5 00 00               	callq	0x21c3e0 <memset>
  20ce99: 4c 8b 84 24 88 00 00 00      	movq	136(%rsp), %r8
  20cea1: 48 8b 7c 24 08               	movq	8(%rsp), %rdi
  20cea6: 48 8b 44 24 10               	movq	16(%rsp), %rax
  20ceab: 48 89 de                     	movq	%rbx, %rsi
  20ceae: 4c 89 ea                     	movq	%r13, %rdx
  20ceb1: 31 c9                        	xorl	%ecx, %ecx
  20ceb3: ff 50 10                     	callq	*16(%rax)
  20ceb6: 48 8b 7c 24 20               	movq	32(%rsp), %rdi
  20cebb: e8 90 ee 00 00               	callq	0x21bd50 <builtin.returnError>
  20cec0: 48 8b 44 24 30               	movq	48(%rsp), %rax
  20cec5: 66 89 68 10                  	movw	%bp, 16(%rax)
  20cec9: eb 81                        	jmp	0x20ce4c <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readUntilDelimiterAlloc+0x38c>
  20cecb: 48 8b 7c 24 20               	movq	32(%rsp), %rdi
  20ced0: e8 7b ee 00 00               	callq	0x21bd50 <builtin.returnError>
  20ced5: e9 72 ff ff ff               	jmp	0x20ce4c <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readUntilDelimiterAlloc+0x38c>
  20ceda: 48 8b 5c 24 20               	movq	32(%rsp), %rbx
  20cedf: 48 89 df                     	movq	%rbx, %rdi
  20cee2: e8 69 ee 00 00               	callq	0x21bd50 <builtin.returnError>
  20cee7: 48 89 df                     	movq	%rbx, %rdi
  20ceea: e8 61 ee 00 00               	callq	0x21bd50 <builtin.returnError>
  20ceef: 48 89 df                     	movq	%rbx, %rdi
  20cef2: e8 59 ee 00 00               	callq	0x21bd50 <builtin.returnError>
  20cef7: 48 8b 44 24 30               	movq	48(%rsp), %rax
  20cefc: 4c 8b 74 24 18               	movq	24(%rsp), %r14
  20cf01: 4c 89 30                     	movq	%r14, (%rax)
  20cf04: 48 8d 58 10                  	leaq	16(%rax), %rbx
  20cf08: 66 c7 40 10 15 00            	movw	$21, 16(%rax)
  20cf0e: 66 b8 15 00                  	movw	$21, %ax
  20cf12: 4d 85 ed                     	testq	%r13, %r13
  20cf15: 0f 85 f7 fe ff ff            	jne	0x20ce12 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readUntilDelimiterAlloc+0x352>
  20cf1b: e9 e5 fe ff ff               	jmp	0x20ce05 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readUntilDelimiterAlloc+0x345>
  20cf20: 4c 8b 74 24 20               	movq	32(%rsp), %r14
  20cf25: 4c 89 f7                     	movq	%r14, %rdi
  20cf28: e8 23 ee 00 00               	callq	0x21bd50 <builtin.returnError>
  20cf2d: 4c 89 f7                     	movq	%r14, %rdi
  20cf30: e8 1b ee 00 00               	callq	0x21bd50 <builtin.returnError>
  20cf35: 4c 89 f7                     	movq	%r14, %rdi
  20cf38: e8 13 ee 00 00               	callq	0x21bd50 <builtin.returnError>
  20cf3d: 4c 89 f7                     	movq	%r14, %rdi
  20cf40: e8 0b ee 00 00               	callq	0x21bd50 <builtin.returnError>
  20cf45: 4c 89 f7                     	movq	%r14, %rdi
  20cf48: e8 03 ee 00 00               	callq	0x21bd50 <builtin.returnError>
  20cf4d: 4c 89 f7                     	movq	%r14, %rdi
  20cf50: e8 fb ed 00 00               	callq	0x21bd50 <builtin.returnError>
  20cf55: 4c 8b 6c 24 28               	movq	40(%rsp), %r13
  20cf5a: 66 bd 15 00                  	movw	$21, %bp
  20cf5e: e9 09 ff ff ff               	jmp	0x20ce6c <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readUntilDelimiterAlloc+0x3ac>
  20cf63: bf 32 22 20 00               	movl	$2105906, %edi          # imm = 0x202232
  20cf68: be 18 00 00 00               	movl	$24, %esi
  20cf6d: 31 c9                        	xorl	%ecx, %ecx
  20cf6f: e8 9c e3 00 00               	callq	0x21b310 <builtin.default_panic>
  20cf74: bf 9c 1e 20 00               	movl	$2104988, %edi          # imm = 0x201E9C
  20cf79: be 13 00 00 00               	movl	$19, %esi
  20cf7e: 31 c9                        	xorl	%ecx, %ecx
  20cf80: e8 8b e3 00 00               	callq	0x21b310 <builtin.default_panic>
  20cf85: bf b0 1e 20 00               	movl	$2105008, %edi          # imm = 0x201EB0
  20cf8a: be 17 00 00 00               	movl	$23, %esi
  20cf8f: 31 c9                        	xorl	%ecx, %ecx
  20cf91: e8 7a e3 00 00               	callq	0x21b310 <builtin.default_panic>
  20cf96: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)

000000000020cfa0 <dwarf.FormValue.getString>:
  20cfa0: 55                           	pushq	%rbp
  20cfa1: 41 56                        	pushq	%r14
  20cfa3: 53                           	pushq	%rbx
  20cfa4: 48 83 ec 50                  	subq	$80, %rsp
  20cfa8: 0f b6 42 10                  	movzbl	16(%rdx), %eax
  20cfac: 48 89 fb                     	movq	%rdi, %rbx
  20cfaf: 83 f8 09                     	cmpl	$9, %eax
  20cfb2: 74 73                        	je	0x20d027 <dwarf.FormValue.getString+0x87>
  20cfb4: 49 89 f6                     	movq	%rsi, %r14
  20cfb7: 83 f8 0a                     	cmpl	$10, %eax
  20cfba: 74 7b                        	je	0x20d037 <dwarf.FormValue.getString+0x97>
  20cfbc: 83 f8 0c                     	cmpl	$12, %eax
  20cfbf: 0f 85 db 00 00 00            	jne	0x20d0a0 <dwarf.FormValue.getString+0x100>
  20cfc5: 4c 8b 02                     	movq	(%rdx), %r8
  20cfc8: 48 8b 51 50                  	movq	80(%rcx), %rdx
  20cfcc: 48 8b 49 58                  	movq	88(%rcx), %rcx
  20cfd0: 48 8d 7c 24 18               	leaq	24(%rsp), %rdi
  20cfd5: 4c 89 f6                     	movq	%r14, %rsi
  20cfd8: e8 33 01 00 00               	callq	0x20d110 <dwarf.getStringGeneric>
  20cfdd: c5 f8 10 44 24 18            	vmovups	24(%rsp), %xmm0
  20cfe3: 0f b7 4c 24 2e               	movzwl	46(%rsp), %ecx
  20cfe8: 0f b7 6c 24 28               	movzwl	40(%rsp), %ebp
  20cfed: 8b 44 24 2a                  	movl	42(%rsp), %eax
  20cff1: 89 44 24 10                  	movl	%eax, 16(%rsp)
  20cff5: 66 89 4c 24 14               	movw	%cx, 20(%rsp)
  20cffa: c5 f8 29 44 24 40            	vmovaps	%xmm0, 64(%rsp)
  20d000: 66 85 ed                     	testw	%bp, %bp
  20d003: 0f 85 a7 00 00 00            	jne	0x20d0b0 <dwarf.FormValue.getString+0x110>
  20d009: c5 f8 28 44 24 40            	vmovaps	64(%rsp), %xmm0
  20d00f: 8b 44 24 10                  	movl	16(%rsp), %eax
  20d013: c5 f8 11 03                  	vmovups	%xmm0, (%rbx)
  20d017: 66 c7 43 10 00 00            	movw	$0, 16(%rbx)
  20d01d: 89 43 12                     	movl	%eax, 18(%rbx)
  20d020: 0f b7 44 24 14               	movzwl	20(%rsp), %eax
  20d025: eb 6c                        	jmp	0x20d093 <dwarf.FormValue.getString+0xf3>
  20d027: c5 f8 10 02                  	vmovups	(%rdx), %xmm0
  20d02b: c5 f8 11 03                  	vmovups	%xmm0, (%rbx)
  20d02f: 66 c7 43 10 00 00            	movw	$0, 16(%rbx)
  20d035: eb 60                        	jmp	0x20d097 <dwarf.FormValue.getString+0xf7>
  20d037: 4c 8b 02                     	movq	(%rdx), %r8
  20d03a: 48 8b 51 20                  	movq	32(%rcx), %rdx
  20d03e: 48 8b 49 28                  	movq	40(%rcx), %rcx
  20d042: 48 8d 7c 24 18               	leaq	24(%rsp), %rdi
  20d047: 4c 89 f6                     	movq	%r14, %rsi
  20d04a: e8 c1 00 00 00               	callq	0x20d110 <dwarf.getStringGeneric>
  20d04f: c5 f8 10 44 24 18            	vmovups	24(%rsp), %xmm0
  20d055: 0f b7 4c 24 2e               	movzwl	46(%rsp), %ecx
  20d05a: 0f b7 6c 24 28               	movzwl	40(%rsp), %ebp
  20d05f: 8b 44 24 2a                  	movl	42(%rsp), %eax
  20d063: 89 44 24 08                  	movl	%eax, 8(%rsp)
  20d067: 66 89 4c 24 0c               	movw	%cx, 12(%rsp)
  20d06c: c5 f8 29 44 24 30            	vmovaps	%xmm0, 48(%rsp)
  20d072: 66 85 ed                     	testw	%bp, %bp
  20d075: 75 5d                        	jne	0x20d0d4 <dwarf.FormValue.getString+0x134>
  20d077: c5 f8 28 44 24 30            	vmovaps	48(%rsp), %xmm0
  20d07d: 8b 44 24 08                  	movl	8(%rsp), %eax
  20d081: c5 f8 11 03                  	vmovups	%xmm0, (%rbx)
  20d085: 66 c7 43 10 00 00            	movw	$0, 16(%rbx)
  20d08b: 89 43 12                     	movl	%eax, 18(%rbx)
  20d08e: 0f b7 44 24 0c               	movzwl	12(%rsp), %eax
  20d093: 66 89 43 16                  	movw	%ax, 22(%rbx)
  20d097: 48 83 c4 50                  	addq	$80, %rsp
  20d09b: 5b                           	popq	%rbx
  20d09c: 41 5e                        	popq	%r14
  20d09e: 5d                           	popq	%rbp
  20d09f: c3                           	retq
  20d0a0: 4c 89 f7                     	movq	%r14, %rdi
  20d0a3: e8 a8 ec 00 00               	callq	0x21bd50 <builtin.returnError>
  20d0a8: 66 c7 43 10 34 00            	movw	$52, 16(%rbx)
  20d0ae: eb 4a                        	jmp	0x20d0fa <dwarf.FormValue.getString+0x15a>
  20d0b0: 4c 89 f7                     	movq	%r14, %rdi
  20d0b3: e8 98 ec 00 00               	callq	0x21bd50 <builtin.returnError>
  20d0b8: c5 f8 28 44 24 40            	vmovaps	64(%rsp), %xmm0
  20d0be: 8b 44 24 10                  	movl	16(%rsp), %eax
  20d0c2: c5 f8 11 03                  	vmovups	%xmm0, (%rbx)
  20d0c6: 66 89 6b 10                  	movw	%bp, 16(%rbx)
  20d0ca: 89 43 12                     	movl	%eax, 18(%rbx)
  20d0cd: 0f b7 44 24 14               	movzwl	20(%rsp), %eax
  20d0d2: eb 22                        	jmp	0x20d0f6 <dwarf.FormValue.getString+0x156>
  20d0d4: 4c 89 f7                     	movq	%r14, %rdi
  20d0d7: e8 74 ec 00 00               	callq	0x21bd50 <builtin.returnError>
  20d0dc: c5 f8 28 44 24 30            	vmovaps	48(%rsp), %xmm0
  20d0e2: 8b 44 24 08                  	movl	8(%rsp), %eax
  20d0e6: c5 f8 11 03                  	vmovups	%xmm0, (%rbx)
  20d0ea: 66 89 6b 10                  	movw	%bp, 16(%rbx)
  20d0ee: 89 43 12                     	movl	%eax, 18(%rbx)
  20d0f1: 0f b7 44 24 0c               	movzwl	12(%rsp), %eax
  20d0f6: 66 89 43 16                  	movw	%ax, 22(%rbx)
  20d0fa: 4c 89 f7                     	movq	%r14, %rdi
  20d0fd: 48 83 c4 50                  	addq	$80, %rsp
  20d101: 5b                           	popq	%rbx
  20d102: 41 5e                        	popq	%r14
  20d104: 5d                           	popq	%rbp
  20d105: e9 46 ec 00 00               	jmp	0x21bd50 <builtin.returnError>
  20d10a: 66 0f 1f 44 00 00            	nopw	(%rax,%rax)

000000000020d110 <dwarf.getStringGeneric>:
  20d110: 41 56                        	pushq	%r14
  20d112: 53                           	pushq	%rbx
  20d113: 50                           	pushq	%rax
  20d114: 49 89 f6                     	movq	%rsi, %r14
  20d117: 48 89 fb                     	movq	%rdi, %rbx
  20d11a: 48 85 d2                     	testq	%rdx, %rdx
  20d11d: 74 23                        	je	0x20d142 <dwarf.getStringGeneric+0x32>
  20d11f: 4c 89 c6                     	movq	%r8, %rsi
  20d122: 48 29 ce                     	subq	%rcx, %rsi
  20d125: 77 1b                        	ja	0x20d142 <dwarf.getStringGeneric+0x32>
  20d127: 73 19                        	jae	0x20d142 <dwarf.getStringGeneric+0x32>
  20d129: 31 c0                        	xorl	%eax, %eax
  20d12b: 48 89 d7                     	movq	%rdx, %rdi
  20d12e: 66 90                        	nop
  20d130: 42 80 3c 07 00               	cmpb	$0, (%rdi,%r8)
  20d135: 74 28                        	je	0x20d15f <dwarf.getStringGeneric+0x4f>
  20d137: 48 ff c8                     	decq	%rax
  20d13a: 48 ff c7                     	incq	%rdi
  20d13d: 48 39 c6                     	cmpq	%rax, %rsi
  20d140: 75 ee                        	jne	0x20d130 <dwarf.getStringGeneric+0x20>
  20d142: 4c 89 f7                     	movq	%r14, %rdi
  20d145: e8 06 ec 00 00               	callq	0x21bd50 <builtin.returnError>
  20d14a: 66 c7 43 10 34 00            	movw	$52, 16(%rbx)
  20d150: 4c 89 f7                     	movq	%r14, %rdi
  20d153: 48 83 c4 08                  	addq	$8, %rsp
  20d157: 5b                           	popq	%rbx
  20d158: 41 5e                        	popq	%r14
  20d15a: e9 f1 eb 00 00               	jmp	0x21bd50 <builtin.returnError>
  20d15f: 4c 89 c6                     	movq	%r8, %rsi
  20d162: 48 29 c6                     	subq	%rax, %rsi
  20d165: 4c 39 c6                     	cmpq	%r8, %rsi
  20d168: 72 20                        	jb	0x20d18a <dwarf.getStringGeneric+0x7a>
  20d16a: 48 39 ce                     	cmpq	%rcx, %rsi
  20d16d: 73 2c                        	jae	0x20d19b <dwarf.getStringGeneric+0x8b>
  20d16f: 4c 01 c2                     	addq	%r8, %rdx
  20d172: 48 f7 d8                     	negq	%rax
  20d175: 48 89 13                     	movq	%rdx, (%rbx)
  20d178: 48 89 43 08                  	movq	%rax, 8(%rbx)
  20d17c: 66 c7 43 10 00 00            	movw	$0, 16(%rbx)
  20d182: 48 83 c4 08                  	addq	$8, %rsp
  20d186: 5b                           	popq	%rbx
  20d187: 41 5e                        	popq	%r14
  20d189: c3                           	retq
  20d18a: bf 34 1d 20 00               	movl	$2104628, %edi          # imm = 0x201D34
  20d18f: be 24 00 00 00               	movl	$36, %esi
  20d194: 31 c9                        	xorl	%ecx, %ecx
  20d196: e8 75 e1 00 00               	callq	0x21b310 <builtin.default_panic>
  20d19b: bf 9c 1e 20 00               	movl	$2104988, %edi          # imm = 0x201E9C
  20d1a0: be 13 00 00 00               	movl	$19, %esi
  20d1a5: 31 c9                        	xorl	%ecx, %ecx
  20d1a7: e8 64 e1 00 00               	callq	0x21b310 <builtin.default_panic>
  20d1ac: 0f 1f 40 00                  	nopl	(%rax)

000000000020d1b0 <dwarf.FormValue.getUInt__anon_5815>:
  20d1b0: 41 56                        	pushq	%r14
  20d1b2: 53                           	pushq	%rbx
  20d1b3: 50                           	pushq	%rax
  20d1b4: 0f b6 42 10                  	movzbl	16(%rdx), %eax
  20d1b8: 49 89 f6                     	movq	%rsi, %r14
  20d1bb: 48 89 fb                     	movq	%rdi, %rbx
  20d1be: 83 f8 06                     	cmpl	$6, %eax
  20d1c1: 74 0b                        	je	0x20d1ce <dwarf.FormValue.getUInt__anon_5815+0x1e>
  20d1c3: 83 f8 03                     	cmpl	$3, %eax
  20d1c6: 75 22                        	jne	0x20d1ea <dwarf.FormValue.getUInt__anon_5815+0x3a>
  20d1c8: 80 7a 08 00                  	cmpb	$0, 8(%rdx)
  20d1cc: 75 39                        	jne	0x20d207 <dwarf.FormValue.getUInt__anon_5815+0x57>
  20d1ce: 48 8b 02                     	movq	(%rdx), %rax
  20d1d1: 48 89 c1                     	movq	%rax, %rcx
  20d1d4: 48 c1 e9 20                  	shrq	$32, %rcx
  20d1d8: 75 10                        	jne	0x20d1ea <dwarf.FormValue.getUInt__anon_5815+0x3a>
  20d1da: 89 03                        	movl	%eax, (%rbx)
  20d1dc: 66 c7 43 04 00 00            	movw	$0, 4(%rbx)
  20d1e2: 48 83 c4 08                  	addq	$8, %rsp
  20d1e6: 5b                           	popq	%rbx
  20d1e7: 41 5e                        	popq	%r14
  20d1e9: c3                           	retq
  20d1ea: 4c 89 f7                     	movq	%r14, %rdi
  20d1ed: e8 5e eb 00 00               	callq	0x21bd50 <builtin.returnError>
  20d1f2: 66 c7 43 04 34 00            	movw	$52, 4(%rbx)
  20d1f8: 4c 89 f7                     	movq	%r14, %rdi
  20d1fb: 48 83 c4 08                  	addq	$8, %rsp
  20d1ff: 5b                           	popq	%rbx
  20d200: 41 5e                        	popq	%r14
  20d202: e9 49 eb 00 00               	jmp	0x21bd50 <builtin.returnError>
  20d207: 4c 89 f7                     	movq	%r14, %rdi
  20d20a: e8 41 eb 00 00               	callq	0x21bd50 <builtin.returnError>
  20d20f: 4c 89 f7                     	movq	%r14, %rdi
  20d212: e8 39 eb 00 00               	callq	0x21bd50 <builtin.returnError>
  20d217: 4c 89 f7                     	movq	%r14, %rdi
  20d21a: e8 31 eb 00 00               	callq	0x21bd50 <builtin.returnError>
  20d21f: 66 c7 43 04 34 00            	movw	$52, 4(%rbx)
  20d225: 48 83 c4 08                  	addq	$8, %rsp
  20d229: 5b                           	popq	%rbx
  20d22a: 41 5e                        	popq	%r14
  20d22c: c3                           	retq
  20d22d: 0f 1f 00                     	nopl	(%rax)

000000000020d230 <dwarf.LineNumberProgram.checkLineMatch>:
  20d230: 55                           	pushq	%rbp
  20d231: 41 57                        	pushq	%r15
  20d233: 41 56                        	pushq	%r14
  20d235: 41 55                        	pushq	%r13
  20d237: 41 54                        	pushq	%r12
  20d239: 53                           	pushq	%rbx
  20d23a: 48 83 ec 38                  	subq	$56, %rsp
  20d23e: 80 7a 5e 01                  	cmpb	$1, 94(%rdx)
  20d242: 49 89 d6                     	movq	%rdx, %r14
  20d245: 48 89 fb                     	movq	%rdi, %rbx
  20d248: 0f 85 f6 00 00 00            	jne	0x20d344 <dwarf.LineNumberProgram.checkLineMatch+0x114>
  20d24e: 49 8b 46 20                  	movq	32(%r14), %rax
  20d252: 49 3b 46 38                  	cmpq	56(%r14), %rax
  20d256: 0f 82 e8 00 00 00            	jb	0x20d344 <dwarf.LineNumberProgram.checkLineMatch+0x114>
  20d25c: 49 3b 06                     	cmpq	(%r14), %rax
  20d25f: 0f 83 df 00 00 00            	jae	0x20d344 <dwarf.LineNumberProgram.checkLineMatch+0x114>
  20d265: 66 41 83 7e 58 04            	cmpw	$4, 88(%r14)
  20d26b: 49 8b 46 40                  	movq	64(%r14), %rax
  20d26f: 48 89 f5                     	movq	%rsi, %rbp
  20d272: 77 0c                        	ja	0x20d280 <dwarf.LineNumberProgram.checkLineMatch+0x50>
  20d274: 48 85 c0                     	testq	%rax, %rax
  20d277: 0f 84 e8 02 00 00            	je	0x20d565 <dwarf.LineNumberProgram.checkLineMatch+0x335>
  20d27d: 48 ff c8                     	decq	%rax
  20d280: 4c 39 c8                     	cmpq	%r9, %rax
  20d283: 0f 83 99 02 00 00            	jae	0x20d522 <dwarf.LineNumberProgram.checkLineMatch+0x2f2>
  20d289: 48 6b c0 38                  	imulq	$56, %rax, %rax
  20d28d: 41 8b 54 00 20               	movl	32(%r8,%rax), %edx
  20d292: 49 39 56 30                  	cmpq	%rdx, 48(%r14)
  20d296: 0f 86 86 02 00 00            	jbe	0x20d522 <dwarf.LineNumberProgram.checkLineMatch+0x2f2>
  20d29c: 48 6b d2 38                  	imulq	$56, %rdx, %rdx
  20d2a0: 49 8b 76 28                  	movq	40(%r14), %rsi
  20d2a4: 4d 8b 0c 00                  	movq	(%r8,%rax), %r9
  20d2a8: 4d 8b 64 00 08               	movq	8(%r8,%rax), %r12
  20d2ad: 48 8b 3c 16                  	movq	(%rsi,%rdx), %rdi
  20d2b1: 4c 8b 54 16 08               	movq	8(%rsi,%rdx), %r10
  20d2b6: 4c 89 64 24 28               	movq	%r12, 40(%rsp)
  20d2bb: 48 89 3c 24                  	movq	%rdi, (%rsp)
  20d2bf: 4c 89 54 24 30               	movq	%r10, 48(%rsp)
  20d2c4: 4d 85 d2                     	testq	%r10, %r10
  20d2c7: 0f 84 c1 00 00 00            	je	0x20d38e <dwarf.LineNumberProgram.checkLineMatch+0x15e>
  20d2cd: 4c 8d 44 24 30               	leaq	48(%rsp), %r8
  20d2d2: 4c 89 64 24 18               	movq	%r12, 24(%rsp)
  20d2d7: 4c 89 4c 24 10               	movq	%r9, 16(%rsp)
  20d2dc: 4c 89 54 24 08               	movq	%r10, 8(%rsp)
  20d2e1: 4c 89 44 24 20               	movq	%r8, 32(%rsp)
  20d2e6: 4d 85 e4                     	testq	%r12, %r12
  20d2e9: 0f 84 ca 00 00 00            	je	0x20d3b9 <dwarf.LineNumberProgram.checkLineMatch+0x189>
  20d2ef: 48 8b 04 24                  	movq	(%rsp), %rax
  20d2f3: 41 0f b6 11                  	movzbl	(%r9), %edx
  20d2f7: 41 0f b6 44 02 ff            	movzbl	-1(%r10,%rax), %eax
  20d2fd: 3c 2f                        	cmpb	$47, %al
  20d2ff: 40 0f 95 c6                  	setne	%sil
  20d303: 80 fa 2f                     	cmpb	$47, %dl
  20d306: 40 0f 95 c7                  	setne	%dil
  20d30a: 40 20 f7                     	andb	%sil, %dil
  20d30d: 44 0f b6 ff                  	movzbl	%dil, %r15d
  20d311: 4d 01 d7                     	addq	%r10, %r15
  20d314: 0f 82 b8 01 00 00            	jb	0x20d4d2 <dwarf.LineNumberProgram.checkLineMatch+0x2a2>
  20d31a: 80 f2 2f                     	xorb	$47, %dl
  20d31d: 34 2f                        	xorb	$47, %al
  20d31f: 31 f6                        	xorl	%esi, %esi
  20d321: 08 d0                        	orb	%dl, %al
  20d323: 4c 89 e0                     	movq	%r12, %rax
  20d326: 40 0f 94 c6                  	sete	%sil
  20d32a: 48 29 f0                     	subq	%rsi, %rax
  20d32d: 49 01 c7                     	addq	%rax, %r15
  20d330: 0f 82 9c 01 00 00            	jb	0x20d4d2 <dwarf.LineNumberProgram.checkLineMatch+0x2a2>
  20d336: 4d 89 d4                     	movq	%r10, %r12
  20d339: 0f 85 80 00 00 00            	jne	0x20d3bf <dwarf.LineNumberProgram.checkLineMatch+0x18f>
  20d33f: e9 45 02 00 00               	jmp	0x20d589 <dwarf.LineNumberProgram.checkLineMatch+0x359>
  20d344: 41 c6 46 5e 01               	movb	$1, 94(%r14)
  20d349: c4 c1 7c 10 06               	vmovups	(%r14), %ymm0
  20d34e: c4 c1 7c 11 46 38            	vmovups	%ymm0, 56(%r14)
  20d354: c5 f8 57 c0                  	vxorps	%xmm0, %xmm0, %xmm0
  20d358: 41 0f b6 46 5a               	movzbl	90(%r14), %eax
  20d35d: 41 88 46 5f                  	movb	%al, 95(%r14)
  20d361: 41 0f b6 46 5b               	movzbl	91(%r14), %eax
  20d366: 41 88 46 60                  	movb	%al, 96(%r14)
  20d36a: 41 0f b6 46 5c               	movzbl	92(%r14), %eax
  20d36f: 41 88 46 61                  	movb	%al, 97(%r14)
  20d373: c5 fc 11 43 10               	vmovups	%ymm0, 16(%rbx)
  20d378: c5 fc 11 03                  	vmovups	%ymm0, (%rbx)
  20d37c: 48 83 c4 38                  	addq	$56, %rsp
  20d380: 5b                           	popq	%rbx
  20d381: 41 5c                        	popq	%r12
  20d383: 41 5d                        	popq	%r13
  20d385: 41 5e                        	popq	%r14
  20d387: 41 5f                        	popq	%r15
  20d389: 5d                           	popq	%rbp
  20d38a: c5 f8 77                     	vzeroupper
  20d38d: c3                           	retq
  20d38e: 4d 85 e4                     	testq	%r12, %r12
  20d391: 0f 84 4c 01 00 00            	je	0x20d4e3 <dwarf.LineNumberProgram.checkLineMatch+0x2b3>
  20d397: 48 8d 44 24 28               	leaq	40(%rsp), %rax
  20d39c: 4c 89 54 24 08               	movq	%r10, 8(%rsp)
  20d3a1: 4d 89 e7                     	movq	%r12, %r15
  20d3a4: 48 89 44 24 20               	movq	%rax, 32(%rsp)
  20d3a9: 4c 89 4c 24 10               	movq	%r9, 16(%rsp)
  20d3ae: 4c 89 0c 24                  	movq	%r9, (%rsp)
  20d3b2: 4c 89 64 24 18               	movq	%r12, 24(%rsp)
  20d3b7: eb 06                        	jmp	0x20d3bf <dwarf.LineNumberProgram.checkLineMatch+0x18f>
  20d3b9: 4d 89 d7                     	movq	%r10, %r15
  20d3bc: 4d 89 d4                     	movq	%r10, %r12
  20d3bf: 48 8b 44 24 68               	movq	104(%rsp), %rax
  20d3c4: 48 8b 39                     	movq	(%rcx), %rdi
  20d3c7: 4c 8b 41 08                  	movq	8(%rcx), %r8
  20d3cb: 4c 89 fe                     	movq	%r15, %rsi
  20d3ce: 31 d2                        	xorl	%edx, %edx
  20d3d0: 48 89 c1                     	movq	%rax, %rcx
  20d3d3: 41 ff 10                     	callq	*(%r8)
  20d3d6: 48 85 c0                     	testq	%rax, %rax
  20d3d9: 0f 84 53 01 00 00            	je	0x20d532 <dwarf.LineNumberProgram.checkLineMatch+0x302>
  20d3df: 48 89 c7                     	movq	%rax, %rdi
  20d3e2: be aa 00 00 00               	movl	$170, %esi
  20d3e7: 4c 89 fa                     	movq	%r15, %rdx
  20d3ea: 49 89 c5                     	movq	%rax, %r13
  20d3ed: e8 ee ef 00 00               	callq	0x21c3e0 <memset>
  20d3f2: 4d 39 fc                     	cmpq	%r15, %r12
  20d3f5: 0f 87 8e 01 00 00            	ja	0x20d589 <dwarf.LineNumberProgram.checkLineMatch+0x359>
  20d3fb: 48 8b 2c 24                  	movq	(%rsp), %rbp
  20d3ff: 4a 8d 44 25 00               	leaq	(%rbp,%r12), %rax
  20d404: 49 39 c5                     	cmpq	%rax, %r13
  20d407: 73 0e                        	jae	0x20d417 <dwarf.LineNumberProgram.checkLineMatch+0x1e7>
  20d409: 4b 8d 44 25 00               	leaq	(%r13,%r12), %rax
  20d40e: 48 39 c5                     	cmpq	%rax, %rbp
  20d411: 0f 82 83 01 00 00            	jb	0x20d59a <dwarf.LineNumberProgram.checkLineMatch+0x36a>
  20d417: 4c 89 ef                     	movq	%r13, %rdi
  20d41a: 48 89 ee                     	movq	%rbp, %rsi
  20d41d: 4c 89 e2                     	movq	%r12, %rdx
  20d420: e8 bb ee 00 00               	callq	0x21c2e0 <memcpy>
  20d425: 48 8b 44 24 20               	movq	32(%rsp), %rax
  20d42a: 4c 8b 20                     	movq	(%rax), %r12
  20d42d: 4d 85 e4                     	testq	%r12, %r12
  20d430: 0f 84 75 01 00 00            	je	0x20d5ab <dwarf.LineNumberProgram.checkLineMatch+0x37b>
  20d436: 48 83 7c 24 08 00            	cmpq	$0, 8(%rsp)
  20d43c: 48 8b 54 24 18               	movq	24(%rsp), %rdx
  20d441: 48 8b 74 24 10               	movq	16(%rsp), %rsi
  20d446: 4d 89 f8                     	movq	%r15, %r8
  20d449: 0f 84 a1 00 00 00            	je	0x20d4f0 <dwarf.LineNumberProgram.checkLineMatch+0x2c0>
  20d44f: 48 85 d2                     	testq	%rdx, %rdx
  20d452: 0f 84 98 00 00 00            	je	0x20d4f0 <dwarf.LineNumberProgram.checkLineMatch+0x2c0>
  20d458: 41 0f b6 44 2c ff            	movzbl	-1(%r12,%rbp), %eax
  20d45e: 0f b6 0e                     	movzbl	(%rsi), %ecx
  20d461: 3c 2f                        	cmpb	$47, %al
  20d463: 74 17                        	je	0x20d47c <dwarf.LineNumberProgram.checkLineMatch+0x24c>
  20d465: 80 f9 2f                     	cmpb	$47, %cl
  20d468: 74 12                        	je	0x20d47c <dwarf.LineNumberProgram.checkLineMatch+0x24c>
  20d46a: 4d 39 c4                     	cmpq	%r8, %r12
  20d46d: 0f 83 16 01 00 00            	jae	0x20d589 <dwarf.LineNumberProgram.checkLineMatch+0x359>
  20d473: 43 c6 44 25 00 2f            	movb	$47, (%r13,%r12)
  20d479: 49 ff c4                     	incq	%r12
  20d47c: 80 f1 2f                     	xorb	$47, %cl
  20d47f: 34 2f                        	xorb	$47, %al
  20d481: 31 ff                        	xorl	%edi, %edi
  20d483: 08 c8                        	orb	%cl, %al
  20d485: 4c 89 c0                     	movq	%r8, %rax
  20d488: 0f 94 c1                     	sete	%cl
  20d48b: 4c 29 e0                     	subq	%r12, %rax
  20d48e: 0f 82 28 01 00 00            	jb	0x20d5bc <dwarf.LineNumberProgram.checkLineMatch+0x38c>
  20d494: 40 88 cf                     	movb	%cl, %dil
  20d497: 48 29 fa                     	subq	%rdi, %rdx
  20d49a: 48 39 c2                     	cmpq	%rax, %rdx
  20d49d: 0f 87 e6 00 00 00            	ja	0x20d589 <dwarf.LineNumberProgram.checkLineMatch+0x359>
  20d4a3: 48 01 fe                     	addq	%rdi, %rsi
  20d4a6: 4c 89 ef                     	movq	%r13, %rdi
  20d4a9: 4c 01 e7                     	addq	%r12, %rdi
  20d4ac: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  20d4b0: 48 39 c7                     	cmpq	%rax, %rdi
  20d4b3: 73 0d                        	jae	0x20d4c2 <dwarf.LineNumberProgram.checkLineMatch+0x292>
  20d4b5: 48 8d 04 17                  	leaq	(%rdi,%rdx), %rax
  20d4b9: 48 39 c6                     	cmpq	%rax, %rsi
  20d4bc: 0f 82 d8 00 00 00            	jb	0x20d59a <dwarf.LineNumberProgram.checkLineMatch+0x36a>
  20d4c2: 48 89 d5                     	movq	%rdx, %rbp
  20d4c5: e8 16 ee 00 00               	callq	0x21c2e0 <memcpy>
  20d4ca: 49 01 ec                     	addq	%rbp, %r12
  20d4cd: 4d 89 f8                     	movq	%r15, %r8
  20d4d0: 73 1e                        	jae	0x20d4f0 <dwarf.LineNumberProgram.checkLineMatch+0x2c0>
  20d4d2: bf 59 1d 20 00               	movl	$2104665, %edi          # imm = 0x201D59
  20d4d7: be 10 00 00 00               	movl	$16, %esi
  20d4dc: 31 c9                        	xorl	%ecx, %ecx
  20d4de: e8 2d de 00 00               	callq	0x21b310 <builtin.default_panic>
  20d4e3: 49 bd aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %r13 # imm = 0xAAAAAAAAAAAAAAAA
  20d4ed: 45 31 c0                     	xorl	%r8d, %r8d
  20d4f0: 66 c7 43 28 00 00            	movw	$0, 40(%rbx)
  20d4f6: c6 43 20 01                  	movb	$1, 32(%rbx)
  20d4fa: 49 8b 46 48                  	movq	72(%r14), %rax
  20d4fe: 48 89 c1                     	movq	%rax, %rcx
  20d501: 48 c1 f9 3f                  	sarq	$63, %rcx
  20d505: c4 e2 f0 f2 c0               	andnq	%rax, %rcx, %rax
  20d50a: 48 89 03                     	movq	%rax, (%rbx)
  20d50d: 49 8b 46 50                  	movq	80(%r14), %rax
  20d511: 48 89 43 08                  	movq	%rax, 8(%rbx)
  20d515: 4c 89 6b 10                  	movq	%r13, 16(%rbx)
  20d519: 4c 89 43 18                  	movq	%r8, 24(%rbx)
  20d51d: e9 5a fe ff ff               	jmp	0x20d37c <dwarf.LineNumberProgram.checkLineMatch+0x14c>
  20d522: 48 89 ef                     	movq	%rbp, %rdi
  20d525: e8 26 e8 00 00               	callq	0x21bd50 <builtin.returnError>
  20d52a: 66 c7 43 28 34 00            	movw	$52, 40(%rbx)
  20d530: eb 41                        	jmp	0x20d573 <dwarf.LineNumberProgram.checkLineMatch+0x343>
  20d532: 48 89 ef                     	movq	%rbp, %rdi
  20d535: e8 16 e8 00 00               	callq	0x21bd50 <builtin.returnError>
  20d53a: 48 89 ef                     	movq	%rbp, %rdi
  20d53d: e8 0e e8 00 00               	callq	0x21bd50 <builtin.returnError>
  20d542: 48 89 ef                     	movq	%rbp, %rdi
  20d545: e8 06 e8 00 00               	callq	0x21bd50 <builtin.returnError>
  20d54a: 48 89 ef                     	movq	%rbp, %rdi
  20d54d: e8 fe e7 00 00               	callq	0x21bd50 <builtin.returnError>
  20d552: 48 89 ef                     	movq	%rbp, %rdi
  20d555: e8 f6 e7 00 00               	callq	0x21bd50 <builtin.returnError>
  20d55a: 66 c7 43 28 15 00            	movw	$21, 40(%rbx)
  20d560: e9 17 fe ff ff               	jmp	0x20d37c <dwarf.LineNumberProgram.checkLineMatch+0x14c>
  20d565: 48 89 ef                     	movq	%rbp, %rdi
  20d568: e8 e3 e7 00 00               	callq	0x21bd50 <builtin.returnError>
  20d56d: 66 c7 43 28 18 00            	movw	$24, 40(%rbx)
  20d573: 48 89 ef                     	movq	%rbp, %rdi
  20d576: 48 83 c4 38                  	addq	$56, %rsp
  20d57a: 5b                           	popq	%rbx
  20d57b: 41 5c                        	popq	%r12
  20d57d: 41 5d                        	popq	%r13
  20d57f: 41 5e                        	popq	%r14
  20d581: 41 5f                        	popq	%r15
  20d583: 5d                           	popq	%rbp
  20d584: e9 c7 e7 00 00               	jmp	0x21bd50 <builtin.returnError>
  20d589: bf 9c 1e 20 00               	movl	$2104988, %edi          # imm = 0x201E9C
  20d58e: be 13 00 00 00               	movl	$19, %esi
  20d593: 31 c9                        	xorl	%ecx, %ecx
  20d595: e8 76 dd 00 00               	callq	0x21b310 <builtin.default_panic>
  20d59a: bf b0 1e 20 00               	movl	$2105008, %edi          # imm = 0x201EB0
  20d59f: be 17 00 00 00               	movl	$23, %esi
  20d5a4: 31 c9                        	xorl	%ecx, %ecx
  20d5a6: e8 65 dd 00 00               	callq	0x21b310 <builtin.default_panic>
  20d5ab: bf 32 22 20 00               	movl	$2105906, %edi          # imm = 0x202232
  20d5b0: be 18 00 00 00               	movl	$24, %esi
  20d5b5: 31 c9                        	xorl	%ecx, %ecx
  20d5b7: e8 54 dd 00 00               	callq	0x21b310 <builtin.default_panic>
  20d5bc: bf 34 1d 20 00               	movl	$2104628, %edi          # imm = 0x201D34
  20d5c1: be 24 00 00 00               	movl	$36, %esi
  20d5c6: 31 c9                        	xorl	%ecx, %ecx
  20d5c8: e8 43 dd 00 00               	callq	0x21b310 <builtin.default_panic>
  20d5cd: 0f 1f 00                     	nopl	(%rax)

000000000020d5d0 <dwarf.DwarfInfo.getLineNumberInfo>:
  20d5d0: 55                           	pushq	%rbp
  20d5d1: 41 57                        	pushq	%r15
  20d5d3: 41 56                        	pushq	%r14
  20d5d5: 41 55                        	pushq	%r13
  20d5d7: 41 54                        	pushq	%r12
  20d5d9: 53                           	pushq	%rbx
  20d5da: 48 81 ec e8 04 00 00         	subq	$1256, %rsp             # imm = 0x4E8
  20d5e1: c5 f8 10 42 40               	vmovups	64(%rdx), %xmm0
  20d5e6: 48 8d 84 24 08 01 00 00      	leaq	264(%rsp), %rax
  20d5ee: 48 89 4c 24 68               	movq	%rcx, 104(%rsp)
  20d5f3: 48 89 d1                     	movq	%rdx, %rcx
  20d5f6: 4d 89 cf                     	movq	%r9, %r15
  20d5f9: 48 89 7c 24 28               	movq	%rdi, 40(%rsp)
  20d5fe: 4c 89 c3                     	movq	%r8, %rbx
  20d601: 48 8d bc 24 f0 02 00 00      	leaq	752(%rsp), %rdi
  20d609: 49 89 f6                     	movq	%rsi, %r14
  20d60c: 48 89 44 24 20               	movq	%rax, 32(%rsp)
  20d611: 48 89 4c 24 78               	movq	%rcx, 120(%rsp)
  20d616: c5 f8 11 84 24 08 01 00 00   	vmovups	%xmm0, 264(%rsp)
  20d61f: 48 c7 84 24 18 01 00 00 00 00 00 00  	movq	$0, 280(%rsp)
  20d62b: 49 8b 10                     	movq	(%r8), %rdx
  20d62e: 4c 8b 49 50                  	movq	80(%rcx), %r9
  20d632: 48 8b 41 58                  	movq	88(%rcx), %rax
  20d636: 4c 89 44 24 08               	movq	%r8, 8(%rsp)
  20d63b: 41 b8 1b 00 00 00            	movl	$27, %r8d
  20d641: 48 89 04 24                  	movq	%rax, (%rsp)
  20d645: e8 06 bc ff ff               	callq	0x209250 <dwarf.Die.getAttrString>
  20d64a: 0f b7 ac 24 00 03 00 00      	movzwl	768(%rsp), %ebp
  20d652: 66 85 ed                     	testw	%bp, %bp
  20d655: 0f 85 cf 1a 00 00            	jne	0x20f12a <dwarf.DwarfInfo.getLineNumberInfo+0x1b5a>
  20d65b: 48 8b 03                     	movq	(%rbx), %rax
  20d65e: 66 bb 18 00                  	movw	$24, %bx
  20d662: 48 8b 48 30                  	movq	48(%rax), %rcx
  20d666: 48 85 c9                     	testq	%rcx, %rcx
  20d669: 0f 84 5c 1b 00 00            	je	0x20f1cb <dwarf.DwarfInfo.getLineNumberInfo+0x1bfb>
  20d66f: 48 8b 40 28                  	movq	40(%rax), %rax
  20d673: 4c 8b ac 24 f0 02 00 00      	movq	752(%rsp), %r13
  20d67b: 48 8b ac 24 f8 02 00 00      	movq	760(%rsp), %rbp
  20d683: 48 83 c0 18                  	addq	$24, %rax
  20d687: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
  20d690: 48 83 78 e8 10               	cmpq	$16, -24(%rax)
  20d695: 74 0e                        	je	0x20d6a5 <dwarf.DwarfInfo.getLineNumberInfo+0xd5>
  20d697: 48 83 c0 20                  	addq	$32, %rax
  20d69b: 48 ff c9                     	decq	%rcx
  20d69e: 75 f0                        	jne	0x20d690 <dwarf.DwarfInfo.getLineNumberInfo+0xc0>
  20d6a0: e9 26 1b 00 00               	jmp	0x20f1cb <dwarf.DwarfInfo.getLineNumberInfo+0x1bfb>
  20d6a5: 0f b6 08                     	movzbl	(%rax), %ecx
  20d6a8: 83 f9 06                     	cmpl	$6, %ecx
  20d6ab: 74 13                        	je	0x20d6c0 <dwarf.DwarfInfo.getLineNumberInfo+0xf0>
  20d6ad: 83 f9 03                     	cmpl	$3, %ecx
  20d6b0: 0f 85 01 1b 00 00            	jne	0x20f1b7 <dwarf.DwarfInfo.getLineNumberInfo+0x1be7>
  20d6b6: 80 78 f8 01                  	cmpb	$1, -8(%rax)
  20d6ba: 0f 84 ef 1a 00 00            	je	0x20f1af <dwarf.DwarfInfo.getLineNumberInfo+0x1bdf>
  20d6c0: 48 8b 48 f0                  	movq	-16(%rax), %rcx
  20d6c4: 48 8b b4 24 10 01 00 00      	movq	272(%rsp), %rsi
  20d6cc: 48 8b 54 24 78               	movq	120(%rsp), %rdx
  20d6d1: c6 84 24 b7 00 00 00 aa      	movb	$-86, 183(%rsp)
  20d6d9: 48 8d bc 24 d0 02 00 00      	leaq	720(%rsp), %rdi
  20d6e1: 4c 8d 84 24 b7 00 00 00      	leaq	183(%rsp), %r8
  20d6e9: 48 39 ce                     	cmpq	%rcx, %rsi
  20d6ec: 48 89 8c 24 d8 00 00 00      	movq	%rcx, 216(%rsp)
  20d6f4: 48 0f 43 f1                  	cmovaeq	%rcx, %rsi
  20d6f8: 48 89 b4 24 18 01 00 00      	movq	%rsi, 280(%rsp)
  20d700: 4c 89 f6                     	movq	%r14, %rsi
  20d703: 8b 8a 08 01 00 00            	movl	264(%rdx), %ecx
  20d709: 48 8d 54 24 20               	leaq	32(%rsp), %rdx
  20d70e: e8 8d c0 ff ff               	callq	0x2097a0 <dwarf.readUnitLength__anon_5647>
  20d713: 0f b7 9c 24 d8 02 00 00      	movzwl	728(%rsp), %ebx
  20d71b: 66 85 db                     	testw	%bx, %bx
  20d71e: 0f 85 af 1a 00 00            	jne	0x20f1d3 <dwarf.DwarfInfo.getLineNumberInfo+0x1c03>
  20d724: 48 8b 8c 24 d0 02 00 00      	movq	720(%rsp), %rcx
  20d72c: 48 85 c9                     	testq	%rcx, %rcx
  20d72f: 0f 84 1d 1a 00 00            	je	0x20f152 <dwarf.DwarfInfo.getLineNumberInfo+0x1b82>
  20d735: 0f b6 84 24 b7 00 00 00      	movzbl	183(%rsp), %eax
  20d73d: 4c 89 bc 24 70 02 00 00      	movq	%r15, 624(%rsp)
  20d745: 4c 89 74 24 18               	movq	%r14, 24(%rsp)
  20d74a: 48 89 84 24 b8 00 00 00      	movq	%rax, 184(%rsp)
  20d752: 48 8d 04 c5 04 00 00 00      	leaq	4(,%rax,8), %rax
  20d75a: 48 01 c1                     	addq	%rax, %rcx
  20d75d: 48 89 8c 24 68 02 00 00      	movq	%rcx, 616(%rsp)
  20d765: 0f 82 64 5a 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20d76b: 48 8b 44 24 78               	movq	120(%rsp), %rax
  20d770: 48 8b 5c 24 20               	movq	32(%rsp), %rbx
  20d775: 45 31 e4                     	xorl	%r12d, %r12d
  20d778: 4c 8d 7c 24 30               	leaq	48(%rsp), %r15
  20d77d: 44 0f b6 b0 08 01 00 00      	movzbl	264(%rax), %r14d
  20d785: 66 c7 44 24 10 aa aa         	movw	$43690, 16(%rsp)        # imm = 0xAAAA
  20d78c: 0f 1f 40 00                  	nopl	(%rax)
  20d790: b9 02 00 00 00               	movl	$2, %ecx
  20d795: 4a 8d 54 24 10               	leaq	16(%rsp,%r12), %rdx
  20d79a: 4c 89 ff                     	movq	%r15, %rdi
  20d79d: 48 89 de                     	movq	%rbx, %rsi
  20d7a0: 4c 29 e1                     	subq	%r12, %rcx
  20d7a3: e8 d8 ba 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20d7a8: 48 8b 44 24 30               	movq	48(%rsp), %rax
  20d7ad: 48 85 c0                     	testq	%rax, %rax
  20d7b0: 0f 84 4f 19 00 00            	je	0x20f105 <dwarf.DwarfInfo.getLineNumberInfo+0x1b35>
  20d7b6: 49 01 c4                     	addq	%rax, %r12
  20d7b9: 0f 82 10 5a 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20d7bf: 49 83 fc 02                  	cmpq	$2, %r12
  20d7c3: 72 cb                        	jb	0x20d790 <dwarf.DwarfInfo.getLineNumberInfo+0x1c0>
  20d7c5: 0f b7 44 24 10               	movzwl	16(%rsp), %eax
  20d7ca: 41 89 c7                     	movl	%eax, %r15d
  20d7cd: 66 41 c1 c7 08               	rolw	$8, %r15w
  20d7d2: 41 f6 c6 01                  	testb	$1, %r14b
  20d7d6: 44 0f 45 f8                  	cmovnel	%eax, %r15d
  20d7da: 66 41 83 ff 01               	cmpw	$1, %r15w
  20d7df: 0f 86 8d 19 00 00            	jbe	0x20f172 <dwarf.DwarfInfo.getLineNumberInfo+0x1ba2>
  20d7e5: 48 8b 5c 24 18               	movq	24(%rsp), %rbx
  20d7ea: 66 41 83 ff 05               	cmpw	$5, %r15w
  20d7ef: 72 54                        	jb	0x20d845 <dwarf.DwarfInfo.getLineNumberInfo+0x275>
  20d7f1: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  20d7f6: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20d7fb: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20d800: b9 01 00 00 00               	movl	$1, %ecx
  20d805: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20d80a: e8 71 ba 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20d80f: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  20d815: 0f 84 ff 18 00 00            	je	0x20f11a <dwarf.DwarfInfo.getLineNumberInfo+0x1b4a>
  20d81b: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  20d820: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20d825: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20d82a: b9 01 00 00 00               	movl	$1, %ecx
  20d82f: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20d834: e8 47 ba 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20d839: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  20d83f: 0f 84 d5 18 00 00            	je	0x20f11a <dwarf.DwarfInfo.getLineNumberInfo+0x1b4a>
  20d845: 48 8b 4c 24 78               	movq	120(%rsp), %rcx
  20d84a: 80 bc 24 b8 00 00 00 00      	cmpb	$0, 184(%rsp)
  20d852: 48 8b 5c 24 20               	movq	32(%rsp), %rbx
  20d857: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  20d861: 44 89 bc 24 fc 00 00 00      	movl	%r15d, 252(%rsp)
  20d869: 44 0f b6 b1 08 01 00 00      	movzbl	264(%rcx), %r14d
  20d871: 74 57                        	je	0x20d8ca <dwarf.DwarfInfo.getLineNumberInfo+0x2fa>
  20d873: 45 31 e4                     	xorl	%r12d, %r12d
  20d876: 4c 8d 7c 24 30               	leaq	48(%rsp), %r15
  20d87b: 48 89 44 24 10               	movq	%rax, 16(%rsp)
  20d880: b9 08 00 00 00               	movl	$8, %ecx
  20d885: 4a 8d 54 24 10               	leaq	16(%rsp,%r12), %rdx
  20d88a: 4c 89 ff                     	movq	%r15, %rdi
  20d88d: 48 89 de                     	movq	%rbx, %rsi
  20d890: 4c 29 e1                     	subq	%r12, %rcx
  20d893: e8 e8 b9 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20d898: 48 8b 44 24 30               	movq	48(%rsp), %rax
  20d89d: 48 85 c0                     	testq	%rax, %rax
  20d8a0: 0f 84 5f 18 00 00            	je	0x20f105 <dwarf.DwarfInfo.getLineNumberInfo+0x1b35>
  20d8a6: 49 01 c4                     	addq	%rax, %r12
  20d8a9: 0f 82 20 59 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20d8af: 49 83 fc 08                  	cmpq	$8, %r12
  20d8b3: 72 cb                        	jb	0x20d880 <dwarf.DwarfInfo.getLineNumberInfo+0x2b0>
  20d8b5: 48 8b 44 24 10               	movq	16(%rsp), %rax
  20d8ba: 41 f6 c6 01                  	testb	$1, %r14b
  20d8be: 49 89 c7                     	movq	%rax, %r15
  20d8c1: 49 0f cf                     	bswapq	%r15
  20d8c4: 4c 0f 45 f8                  	cmovneq	%rax, %r15
  20d8c8: eb 5d                        	jmp	0x20d927 <dwarf.DwarfInfo.getLineNumberInfo+0x357>
  20d8ca: 45 31 e4                     	xorl	%r12d, %r12d
  20d8cd: 4c 8d 7c 24 30               	leaq	48(%rsp), %r15
  20d8d2: c7 44 24 10 aa aa aa aa      	movl	$2863311530, 16(%rsp)   # imm = 0xAAAAAAAA
  20d8da: 66 0f 1f 44 00 00            	nopw	(%rax,%rax)
  20d8e0: b9 04 00 00 00               	movl	$4, %ecx
  20d8e5: 4a 8d 54 24 10               	leaq	16(%rsp,%r12), %rdx
  20d8ea: 4c 89 ff                     	movq	%r15, %rdi
  20d8ed: 48 89 de                     	movq	%rbx, %rsi
  20d8f0: 4c 29 e1                     	subq	%r12, %rcx
  20d8f3: e8 88 b9 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20d8f8: 48 8b 44 24 30               	movq	48(%rsp), %rax
  20d8fd: 48 85 c0                     	testq	%rax, %rax
  20d900: 0f 84 ff 17 00 00            	je	0x20f105 <dwarf.DwarfInfo.getLineNumberInfo+0x1b35>
  20d906: 49 01 c4                     	addq	%rax, %r12
  20d909: 0f 82 c0 58 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20d90f: 49 83 fc 04                  	cmpq	$4, %r12
  20d913: 72 cb                        	jb	0x20d8e0 <dwarf.DwarfInfo.getLineNumberInfo+0x310>
  20d915: 8b 44 24 10                  	movl	16(%rsp), %eax
  20d919: 41 f6 c6 01                  	testb	$1, %r14b
  20d91d: 41 89 c7                     	movl	%eax, %r15d
  20d920: 41 0f cf                     	bswapl	%r15d
  20d923: 44 0f 45 f8                  	cmovnel	%eax, %r15d
  20d927: 4c 03 bc 24 18 01 00 00      	addq	280(%rsp), %r15
  20d92f: 4c 8b 64 24 18               	movq	24(%rsp), %r12
  20d934: 8b 9c 24 fc 00 00 00         	movl	252(%rsp), %ebx
  20d93b: 0f 82 8e 58 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20d941: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  20d946: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20d94b: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20d950: b9 01 00 00 00               	movl	$1, %ecx
  20d955: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20d95a: e8 21 b9 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20d95f: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  20d965: 0f 84 34 18 00 00            	je	0x20f19f <dwarf.DwarfInfo.getLineNumberInfo+0x1bcf>
  20d96b: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20d970: 48 89 84 24 90 01 00 00      	movq	%rax, 400(%rsp)
  20d978: 48 85 c0                     	testq	%rax, %rax
  20d97b: 0f 84 b1 17 00 00            	je	0x20f132 <dwarf.DwarfInfo.getLineNumberInfo+0x1b62>
  20d981: 66 83 fb 04                  	cmpw	$4, %bx
  20d985: 72 2a                        	jb	0x20d9b1 <dwarf.DwarfInfo.getLineNumberInfo+0x3e1>
  20d987: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  20d98c: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20d991: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20d996: b9 01 00 00 00               	movl	$1, %ecx
  20d99b: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20d9a0: e8 db b8 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20d9a5: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  20d9ab: 0f 84 ee 17 00 00            	je	0x20f19f <dwarf.DwarfInfo.getLineNumberInfo+0x1bcf>
  20d9b1: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  20d9b6: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20d9bb: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20d9c0: b9 01 00 00 00               	movl	$1, %ecx
  20d9c5: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20d9ca: e8 b1 b8 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20d9cf: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  20d9d5: 0f 84 c4 17 00 00            	je	0x20f19f <dwarf.DwarfInfo.getLineNumberInfo+0x1bcf>
  20d9db: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20d9e0: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  20d9e5: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20d9ea: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20d9ef: b9 01 00 00 00               	movl	$1, %ecx
  20d9f4: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20d9f9: 88 84 24 d7 00 00 00         	movb	%al, 215(%rsp)
  20da00: e8 7b b8 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20da05: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  20da0b: 0f 84 86 17 00 00            	je	0x20f197 <dwarf.DwarfInfo.getLineNumberInfo+0x1bc7>
  20da11: 48 0f be 44 24 10            	movsbq	16(%rsp), %rax
  20da17: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  20da1c: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20da21: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20da26: b9 01 00 00 00               	movl	$1, %ecx
  20da2b: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20da30: 48 89 84 24 78 02 00 00      	movq	%rax, 632(%rsp)
  20da38: e8 43 b8 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20da3d: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  20da43: 0f 84 56 17 00 00            	je	0x20f19f <dwarf.DwarfInfo.getLineNumberInfo+0x1bcf>
  20da49: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20da4e: 88 84 24 b5 00 00 00         	movb	%al, 181(%rsp)
  20da55: 84 c0                        	testb	%al, %al
  20da57: 0f 84 d5 16 00 00            	je	0x20f132 <dwarf.DwarfInfo.getLineNumberInfo+0x1b62>
  20da5d: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  20da62: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20da67: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20da6c: b9 01 00 00 00               	movl	$1, %ecx
  20da71: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20da76: e8 05 b8 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20da7b: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  20da81: 0f 84 18 17 00 00            	je	0x20f19f <dwarf.DwarfInfo.getLineNumberInfo+0x1bcf>
  20da87: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20da8c: 4c 89 bc 24 60 02 00 00      	movq	%r15, 608(%rsp)
  20da94: 88 84 24 b6 00 00 00         	movb	%al, 182(%rsp)
  20da9b: 2c 01                        	subb	$1, %al
  20da9d: 0f 82 2c 57 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20daa3: 48 8b 8c 24 18 05 00 00      	movq	1304(%rsp), %rcx
  20daab: 44 0f b6 f8                  	movzbl	%al, %r15d
  20daaf: 48 89 4c 24 60               	movq	%rcx, 96(%rsp)
  20dab4: 45 84 ff                     	testb	%r15b, %r15b
  20dab7: 0f 84 86 00 00 00            	je	0x20db43 <dwarf.DwarfInfo.getLineNumberInfo+0x573>
  20dabd: 48 8b 44 24 68               	movq	104(%rsp), %rax
  20dac2: 4c 89 fe                     	movq	%r15, %rsi
  20dac5: 31 d2                        	xorl	%edx, %edx
  20dac7: 48 8b 38                     	movq	(%rax), %rdi
  20daca: 48 8b 40 08                  	movq	8(%rax), %rax
  20dace: ff 10                        	callq	*(%rax)
  20dad0: 48 85 c0                     	testq	%rax, %rax
  20dad3: 0f 84 10 17 00 00            	je	0x20f1e9 <dwarf.DwarfInfo.getLineNumberInfo+0x1c19>
  20dad9: 48 89 c7                     	movq	%rax, %rdi
  20dadc: be aa 00 00 00               	movl	$170, %esi
  20dae1: 4c 89 fa                     	movq	%r15, %rdx
  20dae4: 48 89 44 24 70               	movq	%rax, 112(%rsp)
  20dae9: e8 f2 e8 00 00               	callq	0x21c3e0 <memset>
  20daee: 45 31 f6                     	xorl	%r14d, %r14d
  20daf1: 48 8d 5c 24 30               	leaq	48(%rsp), %rbx
  20daf6: 4c 8d 64 24 10               	leaq	16(%rsp), %r12
  20dafb: 0f 1f 44 00 00               	nopl	(%rax,%rax)
  20db00: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  20db05: b9 01 00 00 00               	movl	$1, %ecx
  20db0a: 48 89 df                     	movq	%rbx, %rdi
  20db0d: 4c 89 e2                     	movq	%r12, %rdx
  20db10: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20db15: e8 66 b7 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20db1a: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  20db20: 0f 84 71 17 00 00            	je	0x20f297 <dwarf.DwarfInfo.getLineNumberInfo+0x1cc7>
  20db26: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20db2b: 48 8b 4c 24 70               	movq	112(%rsp), %rcx
  20db30: 42 88 04 31                  	movb	%al, (%rcx,%r14)
  20db34: 49 ff c6                     	incq	%r14
  20db37: 4d 39 f7                     	cmpq	%r14, %r15
  20db3a: 75 c4                        	jne	0x20db00 <dwarf.DwarfInfo.getLineNumberInfo+0x530>
  20db3c: 4c 8b 64 24 18               	movq	24(%rsp), %r12
  20db41: eb 09                        	jmp	0x20db4c <dwarf.DwarfInfo.getLineNumberInfo+0x57c>
  20db43: 48 c7 44 24 70 ff ff ff ff   	movq	$-1, 112(%rsp)
  20db4c: 48 8b 44 24 68               	movq	104(%rsp), %rax
  20db51: 66 83 bc 24 fc 00 00 00 04   	cmpw	$4, 252(%rsp)
  20db5a: 4c 89 7c 24 58               	movq	%r15, 88(%rsp)
  20db5f: c5 f8 10 00                  	vmovups	(%rax), %xmm0
  20db63: 48 8d 84 24 80 00 00 00      	leaq	128(%rsp), %rax
  20db6b: 48 89 84 24 20 01 00 00      	movq	%rax, 288(%rsp)
  20db73: 48 c7 84 24 28 01 00 00 10 18 20 00  	movq	$2103312, 296(%rsp) # imm = 0x201810
  20db7f: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  20db89: c5 f8 10 94 24 20 01 00 00   	vmovups	288(%rsp), %xmm2
  20db92: c5 f8 29 44 24 30            	vmovaps	%xmm0, 48(%rsp)
  20db98: c5 f8 57 c0                  	vxorps	%xmm0, %xmm0, %xmm0
  20db9c: c5 f8 29 44 24 40            	vmovaps	%xmm0, 64(%rsp)
  20dba2: c5 f8 11 84 24 40 02 00 00   	vmovups	%xmm0, 576(%rsp)
  20dbab: c5 f8 11 84 24 08 02 00 00   	vmovups	%xmm0, 520(%rsp)
  20dbb4: c5 f8 10 4c 24 30            	vmovups	48(%rsp), %xmm1
  20dbba: c5 f8 10 5c 24 40            	vmovups	64(%rsp), %xmm3
  20dbc0: c5 f8 11 94 24 50 02 00 00   	vmovups	%xmm2, 592(%rsp)
  20dbc9: c5 f8 11 94 24 18 02 00 00   	vmovups	%xmm2, 536(%rsp)
  20dbd2: 48 89 84 24 38 02 00 00      	movq	%rax, 568(%rsp)
  20dbda: 48 89 84 24 00 02 00 00      	movq	%rax, 512(%rsp)
  20dbe2: c5 f8 11 8c 24 80 00 00 00   	vmovups	%xmm1, 128(%rsp)
  20dbeb: c5 f8 11 9c 24 90 00 00 00   	vmovups	%xmm3, 144(%rsp)
  20dbf4: 0f 87 55 01 00 00            	ja	0x20dd4f <dwarf.DwarfInfo.getLineNumberInfo+0x77f>
  20dbfa: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20dbff: 48 8d 94 24 38 02 00 00      	leaq	568(%rsp), %rdx
  20dc07: 4c 89 e6                     	movq	%r12, %rsi
  20dc0a: e8 91 bb 00 00               	callq	0x2197a0 <array_list.ArrayListAligned(dwarf.FileEntry,null).addOne>
  20dc0f: 44 0f b7 74 24 38            	movzwl	56(%rsp), %r14d
  20dc15: 66 45 85 f6                  	testw	%r14w, %r14w
  20dc19: 0f 85 be 16 00 00            	jne	0x20f2dd <dwarf.DwarfInfo.getLineNumberInfo+0x1d0d>
  20dc1f: 48 8b 44 24 30               	movq	48(%rsp), %rax
  20dc24: c5 f8 57 c0                  	vxorps	%xmm0, %xmm0, %xmm0
  20dc28: 48 8d bc 24 80 02 00 00      	leaq	640(%rsp), %rdi
  20dc30: 48 8d 8c 24 20 01 00 00      	leaq	288(%rsp), %rcx
  20dc38: 4c 89 e6                     	movq	%r12, %rsi
  20dc3b: 4c 89 28                     	movq	%r13, (%rax)
  20dc3e: 48 89 68 08                  	movq	%rbp, 8(%rax)
  20dc42: c5 fc 11 40 10               	vmovups	%ymm0, 16(%rax)
  20dc47: c7 40 30 00 00 00 00         	movl	$0, 48(%rax)
  20dc4e: 48 8b 54 24 20               	movq	32(%rsp), %rdx
  20dc53: c5 f8 77                     	vzeroupper
  20dc56: e8 65 ee ff ff               	callq	0x20cac0 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readUntilDelimiterAlloc>
  20dc5b: 44 0f b7 b4 24 90 02 00 00   	movzwl	656(%rsp), %r14d
  20dc64: 66 45 85 f6                  	testw	%r14w, %r14w
  20dc68: 0f 85 9b 00 00 00            	jne	0x20dd09 <dwarf.DwarfInfo.getLineNumberInfo+0x739>
  20dc6e: 4c 8d ac 24 80 02 00 00      	leaq	640(%rsp), %r13
  20dc76: 48 8d ac 24 20 01 00 00      	leaq	288(%rsp), %rbp
  20dc7e: 66 90                        	nop
  20dc80: 4c 8b bc 24 88 02 00 00      	movq	648(%rsp), %r15
  20dc88: 4d 85 ff                     	testq	%r15, %r15
  20dc8b: 0f 84 52 04 00 00            	je	0x20e0e3 <dwarf.DwarfInfo.getLineNumberInfo+0xb13>
  20dc91: 4c 89 e3                     	movq	%r12, %rbx
  20dc94: 4c 8b a4 24 80 02 00 00      	movq	640(%rsp), %r12
  20dc9c: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20dca1: 48 8d 94 24 38 02 00 00      	leaq	568(%rsp), %rdx
  20dca9: 48 89 de                     	movq	%rbx, %rsi
  20dcac: e8 ef ba 00 00               	callq	0x2197a0 <array_list.ArrayListAligned(dwarf.FileEntry,null).addOne>
  20dcb1: 44 0f b7 74 24 38            	movzwl	56(%rsp), %r14d
  20dcb7: 66 45 85 f6                  	testw	%r14w, %r14w
  20dcbb: 0f 85 15 1a 00 00            	jne	0x20f6d6 <dwarf.DwarfInfo.getLineNumberInfo+0x2106>
  20dcc1: 48 8b 44 24 30               	movq	48(%rsp), %rax
  20dcc6: c5 f8 57 c0                  	vxorps	%xmm0, %xmm0, %xmm0
  20dcca: 4c 89 ef                     	movq	%r13, %rdi
  20dccd: 48 89 de                     	movq	%rbx, %rsi
  20dcd0: 48 89 e9                     	movq	%rbp, %rcx
  20dcd3: 4c 89 20                     	movq	%r12, (%rax)
  20dcd6: 4c 89 78 08                  	movq	%r15, 8(%rax)
  20dcda: c5 fc 11 40 10               	vmovups	%ymm0, 16(%rax)
  20dcdf: c7 40 30 00 00 00 00         	movl	$0, 48(%rax)
  20dce6: 48 8b 54 24 20               	movq	32(%rsp), %rdx
  20dceb: c5 f8 77                     	vzeroupper
  20dcee: e8 cd ed ff ff               	callq	0x20cac0 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readUntilDelimiterAlloc>
  20dcf3: 44 0f b7 b4 24 90 02 00 00   	movzwl	656(%rsp), %r14d
  20dcfc: 49 89 dc                     	movq	%rbx, %r12
  20dcff: 66 45 85 f6                  	testw	%r14w, %r14w
  20dd03: 0f 84 77 ff ff ff            	je	0x20dc80 <dwarf.DwarfInfo.getLineNumberInfo+0x6b0>
  20dd09: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  20dd11: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  20dd16: 48 85 f6                     	testq	%rsi, %rsi
  20dd19: 0f 84 0b 1a 00 00            	je	0x20f72a <dwarf.DwarfInfo.getLineNumberInfo+0x215a>
  20dd1f: 90                           	nop
  20dd20: 48 8b 56 08                  	movq	8(%rsi), %rdx
  20dd24: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  20dd2c: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  20dd34: 48 8b 1e                     	movq	(%rsi), %rbx
  20dd37: b9 03 00 00 00               	movl	$3, %ecx
  20dd3c: 4d 89 e8                     	movq	%r13, %r8
  20dd3f: ff 50 10                     	callq	*16(%rax)
  20dd42: 48 89 de                     	movq	%rbx, %rsi
  20dd45: 48 85 db                     	testq	%rbx, %rbx
  20dd48: 75 d6                        	jne	0x20dd20 <dwarf.DwarfInfo.getLineNumberInfo+0x750>
  20dd4a: e9 db 19 00 00               	jmp	0x20f72a <dwarf.DwarfInfo.getLineNumberInfo+0x215a>
  20dd4f: c5 fc 28 05 e9 24 ff ff      	vmovaps	-56087(%rip), %ymm0     # 0x200240 <zig-graph+0x200240>
  20dd57: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  20dd5c: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20dd61: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20dd66: b9 01 00 00 00               	movl	$1, %ecx
  20dd6b: 48 89 84 24 b0 03 00 00      	movq	%rax, 944(%rsp)
  20dd73: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20dd78: c5 fc 11 84 24 90 03 00 00   	vmovups	%ymm0, 912(%rsp)
  20dd81: c5 f8 77                     	vzeroupper
  20dd84: e8 f7 b4 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20dd89: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  20dd8f: 0f 84 c9 15 00 00            	je	0x20f35e <dwarf.DwarfInfo.getLineNumberInfo+0x1d8e>
  20dd95: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20dd9a: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  20dd9f: 48 83 f8 0b                  	cmpq	$11, %rax
  20dda3: 0f 83 55 16 00 00            	jae	0x20f3fe <dwarf.DwarfInfo.getLineNumberInfo+0x1e2e>
  20dda9: 48 8b 4c 24 20               	movq	32(%rsp), %rcx
  20ddae: 48 89 84 24 c8 00 00 00      	movq	%rax, 200(%rsp)
  20ddb6: 48 89 8c 24 a8 00 00 00      	movq	%rcx, 168(%rsp)
  20ddbe: 48 85 c0                     	testq	%rax, %rax
  20ddc1: 0f 84 d1 10 00 00            	je	0x20ee98 <dwarf.DwarfInfo.getLineNumberInfo+0x18c8>
  20ddc7: 48 8b 84 24 a8 00 00 00      	movq	168(%rsp), %rax
  20ddcf: 45 31 f6                     	xorl	%r14d, %r14d
  20ddd2: 48 8b 08                     	movq	(%rax), %rcx
  20ddd5: 4c 8b 78 10                  	movq	16(%rax), %r15
  20ddd9: 48 8b 68 08                  	movq	8(%rax), %rbp
  20dddd: 48 89 8c 24 c0 00 00 00      	movq	%rcx, 192(%rsp)
  20dde5: eb 26                        	jmp	0x20de0d <dwarf.DwarfInfo.getLineNumberInfo+0x83d>
  20dde7: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
  20ddf0: 49 89 df                     	movq	%rbx, %r15
  20ddf3: 66 46 89 a4 b4 90 03 00 00   	movw	%r12w, 912(%rsp,%r14,4)
  20ddfc: 49 ff c6                     	incq	%r14
  20ddff: 4c 39 b4 24 c8 00 00 00      	cmpq	%r14, 200(%rsp)
  20de07: 0f 84 8b 10 00 00            	je	0x20ee98 <dwarf.DwarfInfo.getLineNumberInfo+0x18c8>
  20de0d: c6 44 24 30 aa               	movb	$-86, 48(%rsp)
  20de12: 4c 39 fd                     	cmpq	%r15, %rbp
  20de15: 0f 82 b4 53 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20de1b: 0f 95 c0                     	setne	%al
  20de1e: 4c 89 fb                     	movq	%r15, %rbx
  20de21: 0f b6 d0                     	movzbl	%al, %edx
  20de24: 48 01 d3                     	addq	%rdx, %rbx
  20de27: 0f 82 a2 53 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20de2d: 48 39 eb                     	cmpq	%rbp, %rbx
  20de30: 0f 87 d9 1a 00 00            	ja	0x20f90f <dwarf.DwarfInfo.getLineNumberInfo+0x233f>
  20de36: 48 8b 84 24 c0 00 00 00      	movq	192(%rsp), %rax
  20de3e: 48 8d 4c 24 30               	leaq	48(%rsp), %rcx
  20de43: 4a 8d 34 38                  	leaq	(%rax,%r15), %rsi
  20de47: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  20de4b: 48 39 c8                     	cmpq	%rcx, %rax
  20de4e: 76 0e                        	jbe	0x20de5e <dwarf.DwarfInfo.getLineNumberInfo+0x88e>
  20de50: 48 8d 44 14 30               	leaq	48(%rsp,%rdx), %rax
  20de55: 48 39 c6                     	cmpq	%rax, %rsi
  20de58: 0f 82 c2 1a 00 00            	jb	0x20f920 <dwarf.DwarfInfo.getLineNumberInfo+0x2350>
  20de5e: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20de63: e8 78 e4 00 00               	callq	0x21c2e0 <memcpy>
  20de68: 48 8b 84 24 a8 00 00 00      	movq	168(%rsp), %rax
  20de70: 48 89 58 10                  	movq	%rbx, 16(%rax)
  20de74: 4c 39 fd                     	cmpq	%r15, %rbp
  20de77: 0f 84 83 19 00 00            	je	0x20f800 <dwarf.DwarfInfo.getLineNumberInfo+0x2230>
  20de7d: 0f b6 44 24 30               	movzbl	48(%rsp), %eax
  20de82: 41 89 c5                     	movl	%eax, %r13d
  20de85: 41 80 e5 7f                  	andb	$127, %r13b
  20de89: 84 c0                        	testb	%al, %al
  20de8b: 78 23                        	js	0x20deb0 <dwarf.DwarfInfo.getLineNumberInfo+0x8e0>
  20de8d: 49 89 dc                     	movq	%rbx, %r12
  20de90: 46 88 ac b4 92 03 00 00      	movb	%r13b, 914(%rsp,%r14,4)
  20de98: c6 44 24 30 aa               	movb	$-86, 48(%rsp)
  20de9d: 4c 39 e5                     	cmpq	%r12, %rbp
  20dea0: 0f 83 a9 00 00 00            	jae	0x20df4f <dwarf.DwarfInfo.getLineNumberInfo+0x97f>
  20dea6: e9 24 53 00 00               	jmp	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20deab: 0f 1f 44 00 00               	nopl	(%rax,%rax)
  20deb0: 31 d2                        	xorl	%edx, %edx
  20deb2: 48 39 dd                     	cmpq	%rbx, %rbp
  20deb5: 49 89 dc                     	movq	%rbx, %r12
  20deb8: c6 44 24 30 aa               	movb	$-86, 48(%rsp)
  20debd: 0f 95 c2                     	setne	%dl
  20dec0: 49 01 d4                     	addq	%rdx, %r12
  20dec3: 0f 82 06 53 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20dec9: 49 39 ec                     	cmpq	%rbp, %r12
  20decc: 0f 87 3d 1a 00 00            	ja	0x20f90f <dwarf.DwarfInfo.getLineNumberInfo+0x233f>
  20ded2: 48 8b 84 24 c0 00 00 00      	movq	192(%rsp), %rax
  20deda: 48 8d 4c 24 30               	leaq	48(%rsp), %rcx
  20dedf: 48 8d 34 18                  	leaq	(%rax,%rbx), %rsi
  20dee3: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  20dee7: 48 39 c8                     	cmpq	%rcx, %rax
  20deea: 76 0e                        	jbe	0x20defa <dwarf.DwarfInfo.getLineNumberInfo+0x92a>
  20deec: 48 8d 44 14 30               	leaq	48(%rsp,%rdx), %rax
  20def1: 48 39 c6                     	cmpq	%rax, %rsi
  20def4: 0f 82 26 1a 00 00            	jb	0x20f920 <dwarf.DwarfInfo.getLineNumberInfo+0x2350>
  20defa: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20deff: e8 dc e3 00 00               	callq	0x21c2e0 <memcpy>
  20df04: 48 8b 84 24 a8 00 00 00      	movq	168(%rsp), %rax
  20df0c: 4c 89 60 10                  	movq	%r12, 16(%rax)
  20df10: 48 39 dd                     	cmpq	%rbx, %rbp
  20df13: 0f 84 e7 18 00 00            	je	0x20f800 <dwarf.DwarfInfo.getLineNumberInfo+0x2230>
  20df19: 0f b6 44 24 30               	movzbl	48(%rsp), %eax
  20df1e: 66 41 bf 29 00               	movw	$41, %r15w
  20df23: a8 7e                        	testb	$126, %al
  20df25: 0f 85 e4 18 00 00            	jne	0x20f80f <dwarf.DwarfInfo.getLineNumberInfo+0x223f>
  20df2b: 84 c0                        	testb	%al, %al
  20df2d: 0f 88 dc 18 00 00            	js	0x20f80f <dwarf.DwarfInfo.getLineNumberInfo+0x223f>
  20df33: c0 e0 07                     	shlb	$7, %al
  20df36: 41 08 c5                     	orb	%al, %r13b
  20df39: 46 88 ac b4 92 03 00 00      	movb	%r13b, 914(%rsp,%r14,4)
  20df41: c6 44 24 30 aa               	movb	$-86, 48(%rsp)
  20df46: 4c 39 e5                     	cmpq	%r12, %rbp
  20df49: 0f 82 80 52 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20df4f: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  20df54: 0f 95 c0                     	setne	%al
  20df57: 4d 89 e7                     	movq	%r12, %r15
  20df5a: 0f b6 d0                     	movzbl	%al, %edx
  20df5d: 49 01 d7                     	addq	%rdx, %r15
  20df60: 0f 82 69 52 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20df66: 49 39 ef                     	cmpq	%rbp, %r15
  20df69: 0f 87 a0 19 00 00            	ja	0x20f90f <dwarf.DwarfInfo.getLineNumberInfo+0x233f>
  20df6f: 48 8b 84 24 c0 00 00 00      	movq	192(%rsp), %rax
  20df77: 48 8d 4c 24 30               	leaq	48(%rsp), %rcx
  20df7c: 4a 8d 34 20                  	leaq	(%rax,%r12), %rsi
  20df80: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  20df84: 48 39 c8                     	cmpq	%rcx, %rax
  20df87: 76 0e                        	jbe	0x20df97 <dwarf.DwarfInfo.getLineNumberInfo+0x9c7>
  20df89: 48 8d 44 14 30               	leaq	48(%rsp,%rdx), %rax
  20df8e: 48 39 c6                     	cmpq	%rax, %rsi
  20df91: 0f 82 89 19 00 00            	jb	0x20f920 <dwarf.DwarfInfo.getLineNumberInfo+0x2350>
  20df97: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20df9c: e8 3f e3 00 00               	callq	0x21c2e0 <memcpy>
  20dfa1: 48 8b 84 24 a8 00 00 00      	movq	168(%rsp), %rax
  20dfa9: 4c 89 78 10                  	movq	%r15, 16(%rax)
  20dfad: 4c 39 e5                     	cmpq	%r12, %rbp
  20dfb0: 0f 84 c6 17 00 00            	je	0x20f77c <dwarf.DwarfInfo.getLineNumberInfo+0x21ac>
  20dfb6: 0f b6 44 24 30               	movzbl	48(%rsp), %eax
  20dfbb: 41 89 c4                     	movl	%eax, %r12d
  20dfbe: 41 83 e4 7f                  	andl	$127, %r12d
  20dfc2: 84 c0                        	testb	%al, %al
  20dfc4: 0f 89 29 fe ff ff            	jns	0x20ddf3 <dwarf.DwarfInfo.getLineNumberInfo+0x823>
  20dfca: 31 d2                        	xorl	%edx, %edx
  20dfcc: 4c 39 fd                     	cmpq	%r15, %rbp
  20dfcf: 4c 89 fb                     	movq	%r15, %rbx
  20dfd2: c6 44 24 30 aa               	movb	$-86, 48(%rsp)
  20dfd7: 0f 95 c2                     	setne	%dl
  20dfda: 48 01 d3                     	addq	%rdx, %rbx
  20dfdd: 0f 82 ec 51 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20dfe3: 48 39 eb                     	cmpq	%rbp, %rbx
  20dfe6: 0f 87 23 19 00 00            	ja	0x20f90f <dwarf.DwarfInfo.getLineNumberInfo+0x233f>
  20dfec: 48 8b 84 24 c0 00 00 00      	movq	192(%rsp), %rax
  20dff4: 48 8d 4c 24 30               	leaq	48(%rsp), %rcx
  20dff9: 4a 8d 34 38                  	leaq	(%rax,%r15), %rsi
  20dffd: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  20e001: 48 39 c8                     	cmpq	%rcx, %rax
  20e004: 76 0e                        	jbe	0x20e014 <dwarf.DwarfInfo.getLineNumberInfo+0xa44>
  20e006: 48 8d 44 14 30               	leaq	48(%rsp,%rdx), %rax
  20e00b: 48 39 c6                     	cmpq	%rax, %rsi
  20e00e: 0f 82 0c 19 00 00            	jb	0x20f920 <dwarf.DwarfInfo.getLineNumberInfo+0x2350>
  20e014: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20e019: e8 c2 e2 00 00               	callq	0x21c2e0 <memcpy>
  20e01e: 48 8b 84 24 a8 00 00 00      	movq	168(%rsp), %rax
  20e026: 48 89 58 10                  	movq	%rbx, 16(%rax)
  20e02a: 4c 39 fd                     	cmpq	%r15, %rbp
  20e02d: 0f 84 49 17 00 00            	je	0x20f77c <dwarf.DwarfInfo.getLineNumberInfo+0x21ac>
  20e033: 0f b6 44 24 30               	movzbl	48(%rsp), %eax
  20e038: 45 0f b7 e4                  	movzwl	%r12w, %r12d
  20e03c: 89 c1                        	movl	%eax, %ecx
  20e03e: 83 e1 7f                     	andl	$127, %ecx
  20e041: c1 e1 07                     	shll	$7, %ecx
  20e044: 41 09 cc                     	orl	%ecx, %r12d
  20e047: 84 c0                        	testb	%al, %al
  20e049: 0f 89 a1 fd ff ff            	jns	0x20ddf0 <dwarf.DwarfInfo.getLineNumberInfo+0x820>
  20e04f: 31 d2                        	xorl	%edx, %edx
  20e051: 48 39 dd                     	cmpq	%rbx, %rbp
  20e054: 49 89 df                     	movq	%rbx, %r15
  20e057: c6 44 24 30 aa               	movb	$-86, 48(%rsp)
  20e05c: 0f 95 c2                     	setne	%dl
  20e05f: 49 01 d7                     	addq	%rdx, %r15
  20e062: 0f 82 67 51 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20e068: 49 39 ef                     	cmpq	%rbp, %r15
  20e06b: 0f 87 9e 18 00 00            	ja	0x20f90f <dwarf.DwarfInfo.getLineNumberInfo+0x233f>
  20e071: 48 8b 84 24 c0 00 00 00      	movq	192(%rsp), %rax
  20e079: 48 8d 4c 24 30               	leaq	48(%rsp), %rcx
  20e07e: 48 8d 34 18                  	leaq	(%rax,%rbx), %rsi
  20e082: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  20e086: 48 39 c8                     	cmpq	%rcx, %rax
  20e089: 76 0e                        	jbe	0x20e099 <dwarf.DwarfInfo.getLineNumberInfo+0xac9>
  20e08b: 48 8d 44 14 30               	leaq	48(%rsp,%rdx), %rax
  20e090: 48 39 c6                     	cmpq	%rax, %rsi
  20e093: 0f 82 87 18 00 00            	jb	0x20f920 <dwarf.DwarfInfo.getLineNumberInfo+0x2350>
  20e099: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20e09e: e8 3d e2 00 00               	callq	0x21c2e0 <memcpy>
  20e0a3: 48 8b 84 24 a8 00 00 00      	movq	168(%rsp), %rax
  20e0ab: 4c 89 78 10                  	movq	%r15, 16(%rax)
  20e0af: 48 39 dd                     	cmpq	%rbx, %rbp
  20e0b2: 0f 84 c4 16 00 00            	je	0x20f77c <dwarf.DwarfInfo.getLineNumberInfo+0x21ac>
  20e0b8: 0f b6 44 24 30               	movzbl	48(%rsp), %eax
  20e0bd: 66 bb 29 00                  	movw	$41, %bx
  20e0c1: a8 7c                        	testb	$124, %al
  20e0c3: 0f 85 c1 16 00 00            	jne	0x20f78a <dwarf.DwarfInfo.getLineNumberInfo+0x21ba>
  20e0c9: 84 c0                        	testb	%al, %al
  20e0cb: 0f 88 b9 16 00 00            	js	0x20f78a <dwarf.DwarfInfo.getLineNumberInfo+0x21ba>
  20e0d1: 0f b7 c0                     	movzwl	%ax, %eax
  20e0d4: 45 0f b7 e4                  	movzwl	%r12w, %r12d
  20e0d8: c1 e0 0e                     	shll	$14, %eax
  20e0db: 41 09 c4                     	orl	%eax, %r12d
  20e0de: e9 10 fd ff ff               	jmp	0x20ddf3 <dwarf.DwarfInfo.getLineNumberInfo+0x823>
  20e0e3: 48 8b 54 24 20               	movq	32(%rsp), %rdx
  20e0e8: 48 8d bc 24 98 02 00 00      	leaq	664(%rsp), %rdi
  20e0f0: 48 8d 8c 24 20 01 00 00      	leaq	288(%rsp), %rcx
  20e0f8: 4c 89 e6                     	movq	%r12, %rsi
  20e0fb: e8 c0 e9 ff ff               	callq	0x20cac0 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readUntilDelimiterAlloc>
  20e100: 0f b7 ac 24 a8 02 00 00      	movzwl	680(%rsp), %ebp
  20e108: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  20e10d: 66 85 ed                     	testw	%bp, %bp
  20e110: 0f 85 fb 10 00 00            	jne	0x20f211 <dwarf.DwarfInfo.getLineNumberInfo+0x1c41>
  20e116: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
  20e120: 48 8b 84 24 a0 02 00 00      	movq	672(%rsp), %rax
  20e128: 48 85 c0                     	testq	%rax, %rax
  20e12b: 0f 84 5e 24 00 00            	je	0x21058f <dwarf.DwarfInfo.getLineNumberInfo+0x2fbf>
  20e131: 48 89 84 24 c8 00 00 00      	movq	%rax, 200(%rsp)
  20e139: 48 8b 44 24 20               	movq	32(%rsp), %rax
  20e13e: 48 8b 8c 24 98 02 00 00      	movq	664(%rsp), %rcx
  20e146: 4c 8b 70 10                  	movq	16(%rax), %r14
  20e14a: c6 44 24 30 aa               	movb	$-86, 48(%rsp)
  20e14f: 4c 8d 78 10                  	leaq	16(%rax), %r15
  20e153: 48 89 8c 24 c0 00 00 00      	movq	%rcx, 192(%rsp)
  20e15b: 4c 8b 68 08                  	movq	8(%rax), %r13
  20e15f: 4d 39 f5                     	cmpq	%r14, %r13
  20e162: 0f 82 67 50 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20e168: 0f 95 c1                     	setne	%cl
  20e16b: 4c 89 f3                     	movq	%r14, %rbx
  20e16e: 0f b6 d1                     	movzbl	%cl, %edx
  20e171: 48 01 d3                     	addq	%rdx, %rbx
  20e174: 0f 82 55 50 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20e17a: 4c 39 eb                     	cmpq	%r13, %rbx
  20e17d: 0f 87 8c 17 00 00            	ja	0x20f90f <dwarf.DwarfInfo.getLineNumberInfo+0x233f>
  20e183: 48 8b 00                     	movq	(%rax), %rax
  20e186: 48 8d 4c 24 30               	leaq	48(%rsp), %rcx
  20e18b: 4a 8d 34 30                  	leaq	(%rax,%r14), %rsi
  20e18f: 48 89 84 24 a8 00 00 00      	movq	%rax, 168(%rsp)
  20e197: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  20e19b: 48 39 c8                     	cmpq	%rcx, %rax
  20e19e: 76 0e                        	jbe	0x20e1ae <dwarf.DwarfInfo.getLineNumberInfo+0xbde>
  20e1a0: 48 8d 44 14 30               	leaq	48(%rsp,%rdx), %rax
  20e1a5: 48 39 c6                     	cmpq	%rax, %rsi
  20e1a8: 0f 82 72 17 00 00            	jb	0x20f920 <dwarf.DwarfInfo.getLineNumberInfo+0x2350>
  20e1ae: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20e1b3: e8 28 e1 00 00               	callq	0x21c2e0 <memcpy>
  20e1b8: 49 89 1f                     	movq	%rbx, (%r15)
  20e1bb: 4d 39 f5                     	cmpq	%r14, %r13
  20e1be: 0f 84 5c 14 00 00            	je	0x20f620 <dwarf.DwarfInfo.getLineNumberInfo+0x2050>
  20e1c4: 0f b6 44 24 30               	movzbl	48(%rsp), %eax
  20e1c9: 89 c5                        	movl	%eax, %ebp
  20e1cb: 83 e5 7f                     	andl	$127, %ebp
  20e1ce: 84 c0                        	testb	%al, %al
  20e1d0: 0f 88 9a 00 00 00            	js	0x20e270 <dwarf.DwarfInfo.getLineNumberInfo+0xca0>
  20e1d6: c6 44 24 30 aa               	movb	$-86, 48(%rsp)
  20e1db: 49 39 dd                     	cmpq	%rbx, %r13
  20e1de: 0f 82 eb 4f 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20e1e4: 0f 95 c0                     	setne	%al
  20e1e7: 49 89 dc                     	movq	%rbx, %r12
  20e1ea: 0f b6 d0                     	movzbl	%al, %edx
  20e1ed: 49 01 d4                     	addq	%rdx, %r12
  20e1f0: 0f 82 d9 4f 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20e1f6: 4d 39 ec                     	cmpq	%r13, %r12
  20e1f9: 0f 87 10 17 00 00            	ja	0x20f90f <dwarf.DwarfInfo.getLineNumberInfo+0x233f>
  20e1ff: 48 8b 84 24 a8 00 00 00      	movq	168(%rsp), %rax
  20e207: 48 8d 4c 24 30               	leaq	48(%rsp), %rcx
  20e20c: 48 8d 34 18                  	leaq	(%rax,%rbx), %rsi
  20e210: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  20e214: 48 39 c8                     	cmpq	%rcx, %rax
  20e217: 76 0e                        	jbe	0x20e227 <dwarf.DwarfInfo.getLineNumberInfo+0xc57>
  20e219: 48 8d 44 14 30               	leaq	48(%rsp,%rdx), %rax
  20e21e: 48 39 c6                     	cmpq	%rax, %rsi
  20e221: 0f 82 f9 16 00 00            	jb	0x20f920 <dwarf.DwarfInfo.getLineNumberInfo+0x2350>
  20e227: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20e22c: e8 af e0 00 00               	callq	0x21c2e0 <memcpy>
  20e231: 4d 89 27                     	movq	%r12, (%r15)
  20e234: 49 39 dd                     	cmpq	%rbx, %r13
  20e237: 0f 84 66 12 00 00            	je	0x20f4a3 <dwarf.DwarfInfo.getLineNumberInfo+0x1ed3>
  20e23d: 0f b6 44 24 30               	movzbl	48(%rsp), %eax
  20e242: 89 c3                        	movl	%eax, %ebx
  20e244: 83 e3 7f                     	andl	$127, %ebx
  20e247: 84 c0                        	testb	%al, %al
  20e249: 0f 88 b1 00 00 00            	js	0x20e300 <dwarf.DwarfInfo.getLineNumberInfo+0xd30>
  20e24f: 48 89 9c 24 b8 00 00 00      	movq	%rbx, 184(%rsp)
  20e257: c6 44 24 30 aa               	movb	$-86, 48(%rsp)
  20e25c: 4d 39 e5                     	cmpq	%r12, %r13
  20e25f: 0f 83 2d 01 00 00            	jae	0x20e392 <dwarf.DwarfInfo.getLineNumberInfo+0xdc2>
  20e265: e9 65 4f 00 00               	jmp	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20e26a: 66 0f 1f 44 00 00            	nopw	(%rax,%rax)
  20e270: 31 d2                        	xorl	%edx, %edx
  20e272: 49 39 dd                     	cmpq	%rbx, %r13
  20e275: 49 89 de                     	movq	%rbx, %r14
  20e278: c6 44 24 30 aa               	movb	$-86, 48(%rsp)
  20e27d: 0f 95 c2                     	setne	%dl
  20e280: 49 01 d6                     	addq	%rdx, %r14
  20e283: 0f 82 46 4f 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20e289: 4d 39 ee                     	cmpq	%r13, %r14
  20e28c: 0f 87 7d 16 00 00            	ja	0x20f90f <dwarf.DwarfInfo.getLineNumberInfo+0x233f>
  20e292: 48 8b 84 24 a8 00 00 00      	movq	168(%rsp), %rax
  20e29a: 48 8d 4c 24 30               	leaq	48(%rsp), %rcx
  20e29f: 48 8d 34 18                  	leaq	(%rax,%rbx), %rsi
  20e2a3: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  20e2a7: 48 39 c8                     	cmpq	%rcx, %rax
  20e2aa: 76 0e                        	jbe	0x20e2ba <dwarf.DwarfInfo.getLineNumberInfo+0xcea>
  20e2ac: 48 8d 44 14 30               	leaq	48(%rsp,%rdx), %rax
  20e2b1: 48 39 c6                     	cmpq	%rax, %rsi
  20e2b4: 0f 82 66 16 00 00            	jb	0x20f920 <dwarf.DwarfInfo.getLineNumberInfo+0x2350>
  20e2ba: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20e2bf: e8 1c e0 00 00               	callq	0x21c2e0 <memcpy>
  20e2c4: 4d 89 37                     	movq	%r14, (%r15)
  20e2c7: 49 39 dd                     	cmpq	%rbx, %r13
  20e2ca: 0f 84 50 13 00 00            	je	0x20f620 <dwarf.DwarfInfo.getLineNumberInfo+0x2050>
  20e2d0: 0f b6 44 24 30               	movzbl	48(%rsp), %eax
  20e2d5: 89 c1                        	movl	%eax, %ecx
  20e2d7: 83 e1 7f                     	andl	$127, %ecx
  20e2da: c1 e1 07                     	shll	$7, %ecx
  20e2dd: 09 cd                        	orl	%ecx, %ebp
  20e2df: 84 c0                        	testb	%al, %al
  20e2e1: 0f 88 86 05 00 00            	js	0x20e86d <dwarf.DwarfInfo.getLineNumberInfo+0x129d>
  20e2e7: 4c 89 f3                     	movq	%r14, %rbx
  20e2ea: c6 44 24 30 aa               	movb	$-86, 48(%rsp)
  20e2ef: 49 39 dd                     	cmpq	%rbx, %r13
  20e2f2: 0f 83 ec fe ff ff            	jae	0x20e1e4 <dwarf.DwarfInfo.getLineNumberInfo+0xc14>
  20e2f8: e9 d2 4e 00 00               	jmp	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20e2fd: 0f 1f 00                     	nopl	(%rax)
  20e300: 31 d2                        	xorl	%edx, %edx
  20e302: 4d 39 e5                     	cmpq	%r12, %r13
  20e305: 4d 89 e6                     	movq	%r12, %r14
  20e308: c6 44 24 30 aa               	movb	$-86, 48(%rsp)
  20e30d: 0f 95 c2                     	setne	%dl
  20e310: 49 01 d6                     	addq	%rdx, %r14
  20e313: 0f 82 b6 4e 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20e319: 4d 39 ee                     	cmpq	%r13, %r14
  20e31c: 0f 87 ed 15 00 00            	ja	0x20f90f <dwarf.DwarfInfo.getLineNumberInfo+0x233f>
  20e322: 48 8b 84 24 a8 00 00 00      	movq	168(%rsp), %rax
  20e32a: 48 8d 4c 24 30               	leaq	48(%rsp), %rcx
  20e32f: 4a 8d 34 20                  	leaq	(%rax,%r12), %rsi
  20e333: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  20e337: 48 39 c8                     	cmpq	%rcx, %rax
  20e33a: 76 0e                        	jbe	0x20e34a <dwarf.DwarfInfo.getLineNumberInfo+0xd7a>
  20e33c: 48 8d 44 14 30               	leaq	48(%rsp,%rdx), %rax
  20e341: 48 39 c6                     	cmpq	%rax, %rsi
  20e344: 0f 82 d6 15 00 00            	jb	0x20f920 <dwarf.DwarfInfo.getLineNumberInfo+0x2350>
  20e34a: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20e34f: e8 8c df 00 00               	callq	0x21c2e0 <memcpy>
  20e354: 4d 89 37                     	movq	%r14, (%r15)
  20e357: 4d 39 e5                     	cmpq	%r12, %r13
  20e35a: 0f 84 43 11 00 00            	je	0x20f4a3 <dwarf.DwarfInfo.getLineNumberInfo+0x1ed3>
  20e360: 0f b6 44 24 30               	movzbl	48(%rsp), %eax
  20e365: 89 c1                        	movl	%eax, %ecx
  20e367: 83 e1 7f                     	andl	$127, %ecx
  20e36a: 48 c1 e1 07                  	shlq	$7, %rcx
  20e36e: 48 09 cb                     	orq	%rcx, %rbx
  20e371: 84 c0                        	testb	%al, %al
  20e373: 0f 88 ea 05 00 00            	js	0x20e963 <dwarf.DwarfInfo.getLineNumberInfo+0x1393>
  20e379: 48 89 9c 24 b8 00 00 00      	movq	%rbx, 184(%rsp)
  20e381: 4d 89 f4                     	movq	%r14, %r12
  20e384: c6 44 24 30 aa               	movb	$-86, 48(%rsp)
  20e389: 4d 39 e5                     	cmpq	%r12, %r13
  20e38c: 0f 82 3d 4e 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20e392: 0f 95 c0                     	setne	%al
  20e395: 89 eb                        	movl	%ebp, %ebx
  20e397: 4c 89 e5                     	movq	%r12, %rbp
  20e39a: 0f b6 d0                     	movzbl	%al, %edx
  20e39d: 48 01 d5                     	addq	%rdx, %rbp
  20e3a0: 0f 82 29 4e 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20e3a6: 4c 39 ed                     	cmpq	%r13, %rbp
  20e3a9: 0f 87 60 15 00 00            	ja	0x20f90f <dwarf.DwarfInfo.getLineNumberInfo+0x233f>
  20e3af: 48 8b 84 24 a8 00 00 00      	movq	168(%rsp), %rax
  20e3b7: 48 8d 4c 24 30               	leaq	48(%rsp), %rcx
  20e3bc: 4a 8d 34 20                  	leaq	(%rax,%r12), %rsi
  20e3c0: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  20e3c4: 48 39 c8                     	cmpq	%rcx, %rax
  20e3c7: 76 0e                        	jbe	0x20e3d7 <dwarf.DwarfInfo.getLineNumberInfo+0xe07>
  20e3c9: 48 8d 44 14 30               	leaq	48(%rsp,%rdx), %rax
  20e3ce: 48 39 c6                     	cmpq	%rax, %rsi
  20e3d1: 0f 82 49 15 00 00            	jb	0x20f920 <dwarf.DwarfInfo.getLineNumberInfo+0x2350>
  20e3d7: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20e3dc: e8 ff de 00 00               	callq	0x21c2e0 <memcpy>
  20e3e1: 49 89 2f                     	movq	%rbp, (%r15)
  20e3e4: 4d 39 e5                     	cmpq	%r12, %r13
  20e3e7: 0f 84 83 11 00 00            	je	0x20f570 <dwarf.DwarfInfo.getLineNumberInfo+0x1fa0>
  20e3ed: 0f b6 44 24 30               	movzbl	48(%rsp), %eax
  20e3f2: 41 89 c6                     	movl	%eax, %r14d
  20e3f5: 41 83 e6 7f                  	andl	$127, %r14d
  20e3f9: 84 c0                        	testb	%al, %al
  20e3fb: 0f 89 cf 03 00 00            	jns	0x20e7d0 <dwarf.DwarfInfo.getLineNumberInfo+0x1200>
  20e401: 31 d2                        	xorl	%edx, %edx
  20e403: 49 39 ed                     	cmpq	%rbp, %r13
  20e406: 49 89 ec                     	movq	%rbp, %r12
  20e409: c6 44 24 30 aa               	movb	$-86, 48(%rsp)
  20e40e: 0f 95 c2                     	setne	%dl
  20e411: 49 01 d4                     	addq	%rdx, %r12
  20e414: 0f 82 b5 4d 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20e41a: 4d 39 ec                     	cmpq	%r13, %r12
  20e41d: 0f 87 ec 14 00 00            	ja	0x20f90f <dwarf.DwarfInfo.getLineNumberInfo+0x233f>
  20e423: 48 8b 84 24 a8 00 00 00      	movq	168(%rsp), %rax
  20e42b: 48 8d 4c 24 30               	leaq	48(%rsp), %rcx
  20e430: 48 8d 34 28                  	leaq	(%rax,%rbp), %rsi
  20e434: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  20e438: 48 39 c8                     	cmpq	%rcx, %rax
  20e43b: 76 0e                        	jbe	0x20e44b <dwarf.DwarfInfo.getLineNumberInfo+0xe7b>
  20e43d: 48 8d 44 14 30               	leaq	48(%rsp,%rdx), %rax
  20e442: 48 39 c6                     	cmpq	%rax, %rsi
  20e445: 0f 82 d5 14 00 00            	jb	0x20f920 <dwarf.DwarfInfo.getLineNumberInfo+0x2350>
  20e44b: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20e450: e8 8b de 00 00               	callq	0x21c2e0 <memcpy>
  20e455: 4d 89 27                     	movq	%r12, (%r15)
  20e458: 49 39 ed                     	cmpq	%rbp, %r13
  20e45b: 0f 84 0f 11 00 00            	je	0x20f570 <dwarf.DwarfInfo.getLineNumberInfo+0x1fa0>
  20e461: 0f b6 44 24 30               	movzbl	48(%rsp), %eax
  20e466: 89 c1                        	movl	%eax, %ecx
  20e468: 83 e1 7f                     	andl	$127, %ecx
  20e46b: 48 c1 e1 07                  	shlq	$7, %rcx
  20e46f: 49 09 ce                     	orq	%rcx, %r14
  20e472: 84 c0                        	testb	%al, %al
  20e474: 0f 89 56 03 00 00            	jns	0x20e7d0 <dwarf.DwarfInfo.getLineNumberInfo+0x1200>
  20e47a: 31 d2                        	xorl	%edx, %edx
  20e47c: 4d 39 e5                     	cmpq	%r12, %r13
  20e47f: 4c 89 e5                     	movq	%r12, %rbp
  20e482: c6 44 24 30 aa               	movb	$-86, 48(%rsp)
  20e487: 0f 95 c2                     	setne	%dl
  20e48a: 48 01 d5                     	addq	%rdx, %rbp
  20e48d: 0f 82 3c 4d 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20e493: 4c 39 ed                     	cmpq	%r13, %rbp
  20e496: 0f 87 73 14 00 00            	ja	0x20f90f <dwarf.DwarfInfo.getLineNumberInfo+0x233f>
  20e49c: 48 8b 84 24 a8 00 00 00      	movq	168(%rsp), %rax
  20e4a4: 48 8d 4c 24 30               	leaq	48(%rsp), %rcx
  20e4a9: 4a 8d 34 20                  	leaq	(%rax,%r12), %rsi
  20e4ad: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  20e4b1: 48 39 c8                     	cmpq	%rcx, %rax
  20e4b4: 76 0e                        	jbe	0x20e4c4 <dwarf.DwarfInfo.getLineNumberInfo+0xef4>
  20e4b6: 48 8d 44 14 30               	leaq	48(%rsp,%rdx), %rax
  20e4bb: 48 39 c6                     	cmpq	%rax, %rsi
  20e4be: 0f 82 5c 14 00 00            	jb	0x20f920 <dwarf.DwarfInfo.getLineNumberInfo+0x2350>
  20e4c4: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20e4c9: e8 12 de 00 00               	callq	0x21c2e0 <memcpy>
  20e4ce: 49 89 2f                     	movq	%rbp, (%r15)
  20e4d1: 4d 39 e5                     	cmpq	%r12, %r13
  20e4d4: 0f 84 96 10 00 00            	je	0x20f570 <dwarf.DwarfInfo.getLineNumberInfo+0x1fa0>
  20e4da: 0f b6 44 24 30               	movzbl	48(%rsp), %eax
  20e4df: 89 c1                        	movl	%eax, %ecx
  20e4e1: 83 e1 7f                     	andl	$127, %ecx
  20e4e4: 48 c1 e1 0e                  	shlq	$14, %rcx
  20e4e8: 49 09 ce                     	orq	%rcx, %r14
  20e4eb: 84 c0                        	testb	%al, %al
  20e4ed: 0f 89 dd 02 00 00            	jns	0x20e7d0 <dwarf.DwarfInfo.getLineNumberInfo+0x1200>
  20e4f3: 31 d2                        	xorl	%edx, %edx
  20e4f5: 49 39 ed                     	cmpq	%rbp, %r13
  20e4f8: 49 89 ec                     	movq	%rbp, %r12
  20e4fb: c6 44 24 30 aa               	movb	$-86, 48(%rsp)
  20e500: 0f 95 c2                     	setne	%dl
  20e503: 49 01 d4                     	addq	%rdx, %r12
  20e506: 0f 82 c3 4c 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20e50c: 4d 39 ec                     	cmpq	%r13, %r12
  20e50f: 0f 87 fa 13 00 00            	ja	0x20f90f <dwarf.DwarfInfo.getLineNumberInfo+0x233f>
  20e515: 48 8b 84 24 a8 00 00 00      	movq	168(%rsp), %rax
  20e51d: 48 8d 4c 24 30               	leaq	48(%rsp), %rcx
  20e522: 48 8d 34 28                  	leaq	(%rax,%rbp), %rsi
  20e526: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  20e52a: 48 39 c8                     	cmpq	%rcx, %rax
  20e52d: 76 0e                        	jbe	0x20e53d <dwarf.DwarfInfo.getLineNumberInfo+0xf6d>
  20e52f: 48 8d 44 14 30               	leaq	48(%rsp,%rdx), %rax
  20e534: 48 39 c6                     	cmpq	%rax, %rsi
  20e537: 0f 82 e3 13 00 00            	jb	0x20f920 <dwarf.DwarfInfo.getLineNumberInfo+0x2350>
  20e53d: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20e542: e8 99 dd 00 00               	callq	0x21c2e0 <memcpy>
  20e547: 4d 89 27                     	movq	%r12, (%r15)
  20e54a: 49 39 ed                     	cmpq	%rbp, %r13
  20e54d: 0f 84 1d 10 00 00            	je	0x20f570 <dwarf.DwarfInfo.getLineNumberInfo+0x1fa0>
  20e553: 0f b6 44 24 30               	movzbl	48(%rsp), %eax
  20e558: 89 c1                        	movl	%eax, %ecx
  20e55a: 83 e1 7f                     	andl	$127, %ecx
  20e55d: 48 c1 e1 15                  	shlq	$21, %rcx
  20e561: 49 09 ce                     	orq	%rcx, %r14
  20e564: 84 c0                        	testb	%al, %al
  20e566: 0f 89 64 02 00 00            	jns	0x20e7d0 <dwarf.DwarfInfo.getLineNumberInfo+0x1200>
  20e56c: 31 d2                        	xorl	%edx, %edx
  20e56e: 4d 39 e5                     	cmpq	%r12, %r13
  20e571: 4c 89 e5                     	movq	%r12, %rbp
  20e574: c6 44 24 30 aa               	movb	$-86, 48(%rsp)
  20e579: 0f 95 c2                     	setne	%dl
  20e57c: 48 01 d5                     	addq	%rdx, %rbp
  20e57f: 0f 82 4a 4c 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20e585: 4c 39 ed                     	cmpq	%r13, %rbp
  20e588: 0f 87 81 13 00 00            	ja	0x20f90f <dwarf.DwarfInfo.getLineNumberInfo+0x233f>
  20e58e: 48 8b 84 24 a8 00 00 00      	movq	168(%rsp), %rax
  20e596: 48 8d 4c 24 30               	leaq	48(%rsp), %rcx
  20e59b: 4a 8d 34 20                  	leaq	(%rax,%r12), %rsi
  20e59f: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  20e5a3: 48 39 c8                     	cmpq	%rcx, %rax
  20e5a6: 76 0e                        	jbe	0x20e5b6 <dwarf.DwarfInfo.getLineNumberInfo+0xfe6>
  20e5a8: 48 8d 44 14 30               	leaq	48(%rsp,%rdx), %rax
  20e5ad: 48 39 c6                     	cmpq	%rax, %rsi
  20e5b0: 0f 82 6a 13 00 00            	jb	0x20f920 <dwarf.DwarfInfo.getLineNumberInfo+0x2350>
  20e5b6: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20e5bb: e8 20 dd 00 00               	callq	0x21c2e0 <memcpy>
  20e5c0: 49 89 2f                     	movq	%rbp, (%r15)
  20e5c3: 4d 39 e5                     	cmpq	%r12, %r13
  20e5c6: 0f 84 a4 0f 00 00            	je	0x20f570 <dwarf.DwarfInfo.getLineNumberInfo+0x1fa0>
  20e5cc: 0f b6 44 24 30               	movzbl	48(%rsp), %eax
  20e5d1: 89 c1                        	movl	%eax, %ecx
  20e5d3: 83 e1 7f                     	andl	$127, %ecx
  20e5d6: 48 c1 e1 1c                  	shlq	$28, %rcx
  20e5da: 49 09 ce                     	orq	%rcx, %r14
  20e5dd: 84 c0                        	testb	%al, %al
  20e5df: 0f 89 eb 01 00 00            	jns	0x20e7d0 <dwarf.DwarfInfo.getLineNumberInfo+0x1200>
  20e5e5: 31 d2                        	xorl	%edx, %edx
  20e5e7: 49 39 ed                     	cmpq	%rbp, %r13
  20e5ea: 49 89 ec                     	movq	%rbp, %r12
  20e5ed: c6 44 24 30 aa               	movb	$-86, 48(%rsp)
  20e5f2: 0f 95 c2                     	setne	%dl
  20e5f5: 49 01 d4                     	addq	%rdx, %r12
  20e5f8: 0f 82 d1 4b 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20e5fe: 4d 39 ec                     	cmpq	%r13, %r12
  20e601: 0f 87 08 13 00 00            	ja	0x20f90f <dwarf.DwarfInfo.getLineNumberInfo+0x233f>
  20e607: 48 8b 84 24 a8 00 00 00      	movq	168(%rsp), %rax
  20e60f: 48 8d 4c 24 30               	leaq	48(%rsp), %rcx
  20e614: 48 8d 34 28                  	leaq	(%rax,%rbp), %rsi
  20e618: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  20e61c: 48 39 c8                     	cmpq	%rcx, %rax
  20e61f: 76 0e                        	jbe	0x20e62f <dwarf.DwarfInfo.getLineNumberInfo+0x105f>
  20e621: 48 8d 44 14 30               	leaq	48(%rsp,%rdx), %rax
  20e626: 48 39 c6                     	cmpq	%rax, %rsi
  20e629: 0f 82 f1 12 00 00            	jb	0x20f920 <dwarf.DwarfInfo.getLineNumberInfo+0x2350>
  20e62f: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20e634: e8 a7 dc 00 00               	callq	0x21c2e0 <memcpy>
  20e639: 4d 89 27                     	movq	%r12, (%r15)
  20e63c: 49 39 ed                     	cmpq	%rbp, %r13
  20e63f: 0f 84 2b 0f 00 00            	je	0x20f570 <dwarf.DwarfInfo.getLineNumberInfo+0x1fa0>
  20e645: 0f b6 44 24 30               	movzbl	48(%rsp), %eax
  20e64a: 89 c1                        	movl	%eax, %ecx
  20e64c: 83 e1 7f                     	andl	$127, %ecx
  20e64f: 48 c1 e1 23                  	shlq	$35, %rcx
  20e653: 49 09 ce                     	orq	%rcx, %r14
  20e656: 84 c0                        	testb	%al, %al
  20e658: 0f 89 72 01 00 00            	jns	0x20e7d0 <dwarf.DwarfInfo.getLineNumberInfo+0x1200>
  20e65e: 31 d2                        	xorl	%edx, %edx
  20e660: 4d 39 e5                     	cmpq	%r12, %r13
  20e663: 4c 89 e5                     	movq	%r12, %rbp
  20e666: c6 44 24 30 aa               	movb	$-86, 48(%rsp)
  20e66b: 0f 95 c2                     	setne	%dl
  20e66e: 48 01 d5                     	addq	%rdx, %rbp
  20e671: 0f 82 58 4b 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20e677: 4c 39 ed                     	cmpq	%r13, %rbp
  20e67a: 0f 87 8f 12 00 00            	ja	0x20f90f <dwarf.DwarfInfo.getLineNumberInfo+0x233f>
  20e680: 48 8b 84 24 a8 00 00 00      	movq	168(%rsp), %rax
  20e688: 48 8d 4c 24 30               	leaq	48(%rsp), %rcx
  20e68d: 4a 8d 34 20                  	leaq	(%rax,%r12), %rsi
  20e691: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  20e695: 48 39 c8                     	cmpq	%rcx, %rax
  20e698: 76 0e                        	jbe	0x20e6a8 <dwarf.DwarfInfo.getLineNumberInfo+0x10d8>
  20e69a: 48 8d 44 14 30               	leaq	48(%rsp,%rdx), %rax
  20e69f: 48 39 c6                     	cmpq	%rax, %rsi
  20e6a2: 0f 82 78 12 00 00            	jb	0x20f920 <dwarf.DwarfInfo.getLineNumberInfo+0x2350>
  20e6a8: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20e6ad: e8 2e dc 00 00               	callq	0x21c2e0 <memcpy>
  20e6b2: 49 89 2f                     	movq	%rbp, (%r15)
  20e6b5: 4d 39 e5                     	cmpq	%r12, %r13
  20e6b8: 0f 84 b2 0e 00 00            	je	0x20f570 <dwarf.DwarfInfo.getLineNumberInfo+0x1fa0>
  20e6be: 0f b6 44 24 30               	movzbl	48(%rsp), %eax
  20e6c3: 89 c1                        	movl	%eax, %ecx
  20e6c5: 83 e1 7f                     	andl	$127, %ecx
  20e6c8: 48 c1 e1 2a                  	shlq	$42, %rcx
  20e6cc: 49 09 ce                     	orq	%rcx, %r14
  20e6cf: 84 c0                        	testb	%al, %al
  20e6d1: 0f 89 f9 00 00 00            	jns	0x20e7d0 <dwarf.DwarfInfo.getLineNumberInfo+0x1200>
  20e6d7: 31 d2                        	xorl	%edx, %edx
  20e6d9: 49 39 ed                     	cmpq	%rbp, %r13
  20e6dc: 49 89 ec                     	movq	%rbp, %r12
  20e6df: c6 44 24 30 aa               	movb	$-86, 48(%rsp)
  20e6e4: 0f 95 c2                     	setne	%dl
  20e6e7: 49 01 d4                     	addq	%rdx, %r12
  20e6ea: 0f 82 df 4a 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20e6f0: 4d 39 ec                     	cmpq	%r13, %r12
  20e6f3: 0f 87 16 12 00 00            	ja	0x20f90f <dwarf.DwarfInfo.getLineNumberInfo+0x233f>
  20e6f9: 48 8b 84 24 a8 00 00 00      	movq	168(%rsp), %rax
  20e701: 48 8d 4c 24 30               	leaq	48(%rsp), %rcx
  20e706: 48 8d 34 28                  	leaq	(%rax,%rbp), %rsi
  20e70a: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  20e70e: 48 39 c8                     	cmpq	%rcx, %rax
  20e711: 76 0e                        	jbe	0x20e721 <dwarf.DwarfInfo.getLineNumberInfo+0x1151>
  20e713: 48 8d 44 14 30               	leaq	48(%rsp,%rdx), %rax
  20e718: 48 39 c6                     	cmpq	%rax, %rsi
  20e71b: 0f 82 ff 11 00 00            	jb	0x20f920 <dwarf.DwarfInfo.getLineNumberInfo+0x2350>
  20e721: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20e726: e8 b5 db 00 00               	callq	0x21c2e0 <memcpy>
  20e72b: 4d 89 27                     	movq	%r12, (%r15)
  20e72e: 49 39 ed                     	cmpq	%rbp, %r13
  20e731: 0f 84 39 0e 00 00            	je	0x20f570 <dwarf.DwarfInfo.getLineNumberInfo+0x1fa0>
  20e737: 0f b6 44 24 30               	movzbl	48(%rsp), %eax
  20e73c: 89 c1                        	movl	%eax, %ecx
  20e73e: 83 e1 7f                     	andl	$127, %ecx
  20e741: 48 c1 e1 31                  	shlq	$49, %rcx
  20e745: 49 09 ce                     	orq	%rcx, %r14
  20e748: 84 c0                        	testb	%al, %al
  20e74a: 0f 89 80 00 00 00            	jns	0x20e7d0 <dwarf.DwarfInfo.getLineNumberInfo+0x1200>
  20e750: 31 d2                        	xorl	%edx, %edx
  20e752: 4d 39 e5                     	cmpq	%r12, %r13
  20e755: 4c 89 e5                     	movq	%r12, %rbp
  20e758: c6 44 24 30 aa               	movb	$-86, 48(%rsp)
  20e75d: 0f 95 c2                     	setne	%dl
  20e760: 48 01 d5                     	addq	%rdx, %rbp
  20e763: 0f 82 66 4a 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20e769: 4c 39 ed                     	cmpq	%r13, %rbp
  20e76c: 0f 87 9d 11 00 00            	ja	0x20f90f <dwarf.DwarfInfo.getLineNumberInfo+0x233f>
  20e772: 48 8b 84 24 a8 00 00 00      	movq	168(%rsp), %rax
  20e77a: 48 8d 4c 24 30               	leaq	48(%rsp), %rcx
  20e77f: 4a 8d 34 20                  	leaq	(%rax,%r12), %rsi
  20e783: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  20e787: 48 39 c8                     	cmpq	%rcx, %rax
  20e78a: 76 0e                        	jbe	0x20e79a <dwarf.DwarfInfo.getLineNumberInfo+0x11ca>
  20e78c: 48 8d 44 14 30               	leaq	48(%rsp,%rdx), %rax
  20e791: 48 39 c6                     	cmpq	%rax, %rsi
  20e794: 0f 82 86 11 00 00            	jb	0x20f920 <dwarf.DwarfInfo.getLineNumberInfo+0x2350>
  20e79a: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20e79f: e8 3c db 00 00               	callq	0x21c2e0 <memcpy>
  20e7a4: 49 89 2f                     	movq	%rbp, (%r15)
  20e7a7: 4d 39 e5                     	cmpq	%r12, %r13
  20e7aa: 0f 84 c0 0d 00 00            	je	0x20f570 <dwarf.DwarfInfo.getLineNumberInfo+0x1fa0>
  20e7b0: 0f b6 44 24 30               	movzbl	48(%rsp), %eax
  20e7b5: 89 c1                        	movl	%eax, %ecx
  20e7b7: 83 e1 7f                     	andl	$127, %ecx
  20e7ba: 48 c1 e1 38                  	shlq	$56, %rcx
  20e7be: 49 09 ce                     	orq	%rcx, %r14
  20e7c1: 84 c0                        	testb	%al, %al
  20e7c3: 0f 88 3a 06 00 00            	js	0x20ee03 <dwarf.DwarfInfo.getLineNumberInfo+0x1833>
  20e7c9: 0f 1f 80 00 00 00 00         	nopl	(%rax)
  20e7d0: 4c 8b 64 24 18               	movq	24(%rsp), %r12
  20e7d5: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  20e7da: 4c 8b 7c 24 58               	movq	88(%rsp), %r15
  20e7df: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20e7e4: 4c 89 e6                     	movq	%r12, %rsi
  20e7e7: 48 8d 94 24 00 02 00 00      	leaq	512(%rsp), %rdx
  20e7ef: e8 ac af 00 00               	callq	0x2197a0 <array_list.ArrayListAligned(dwarf.FileEntry,null).addOne>
  20e7f4: 0f b7 6c 24 38               	movzwl	56(%rsp), %ebp
  20e7f9: 66 85 ed                     	testw	%bp, %bp
  20e7fc: 0f 85 c3 10 00 00            	jne	0x20f8c5 <dwarf.DwarfInfo.getLineNumberInfo+0x22f5>
  20e802: 48 8b 44 24 30               	movq	48(%rsp), %rax
  20e807: 48 8b 8c 24 c0 00 00 00      	movq	192(%rsp), %rcx
  20e80f: 48 8b b4 24 c8 00 00 00      	movq	200(%rsp), %rsi
  20e817: 48 8b 94 24 b8 00 00 00      	movq	184(%rsp), %rdx
  20e81f: c5 f8 57 c0                  	vxorps	%xmm0, %xmm0, %xmm0
  20e823: 48 8d bc 24 98 02 00 00      	leaq	664(%rsp), %rdi
  20e82b: 48 89 08                     	movq	%rcx, (%rax)
  20e82e: 48 89 70 08                  	movq	%rsi, 8(%rax)
  20e832: 48 89 50 10                  	movq	%rdx, 16(%rax)
  20e836: 4c 89 70 18                  	movq	%r14, 24(%rax)
  20e83a: 89 58 20                     	movl	%ebx, 32(%rax)
  20e83d: c5 f8 11 40 24               	vmovups	%xmm0, 36(%rax)
  20e842: 4c 89 e6                     	movq	%r12, %rsi
  20e845: 48 8d 8c 24 20 01 00 00      	leaq	288(%rsp), %rcx
  20e84d: 48 8b 54 24 20               	movq	32(%rsp), %rdx
  20e852: e8 69 e2 ff ff               	callq	0x20cac0 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readUntilDelimiterAlloc>
  20e857: 0f b7 ac 24 a8 02 00 00      	movzwl	680(%rsp), %ebp
  20e85f: 66 85 ed                     	testw	%bp, %bp
  20e862: 0f 84 b8 f8 ff ff            	je	0x20e120 <dwarf.DwarfInfo.getLineNumberInfo+0xb50>
  20e868: e9 a4 09 00 00               	jmp	0x20f211 <dwarf.DwarfInfo.getLineNumberInfo+0x1c41>
  20e86d: 31 d2                        	xorl	%edx, %edx
  20e86f: 4d 39 f5                     	cmpq	%r14, %r13
  20e872: 4c 89 f3                     	movq	%r14, %rbx
  20e875: c6 44 24 30 aa               	movb	$-86, 48(%rsp)
  20e87a: 0f 95 c2                     	setne	%dl
  20e87d: 48 01 d3                     	addq	%rdx, %rbx
  20e880: 0f 82 49 49 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20e886: 4c 39 eb                     	cmpq	%r13, %rbx
  20e889: 0f 87 80 10 00 00            	ja	0x20f90f <dwarf.DwarfInfo.getLineNumberInfo+0x233f>
  20e88f: 48 8b 84 24 a8 00 00 00      	movq	168(%rsp), %rax
  20e897: 48 8d 4c 24 30               	leaq	48(%rsp), %rcx
  20e89c: 4a 8d 34 30                  	leaq	(%rax,%r14), %rsi
  20e8a0: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  20e8a4: 48 39 c8                     	cmpq	%rcx, %rax
  20e8a7: 76 0e                        	jbe	0x20e8b7 <dwarf.DwarfInfo.getLineNumberInfo+0x12e7>
  20e8a9: 48 8d 44 14 30               	leaq	48(%rsp,%rdx), %rax
  20e8ae: 48 39 c6                     	cmpq	%rax, %rsi
  20e8b1: 0f 82 69 10 00 00            	jb	0x20f920 <dwarf.DwarfInfo.getLineNumberInfo+0x2350>
  20e8b7: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20e8bc: e8 1f da 00 00               	callq	0x21c2e0 <memcpy>
  20e8c1: 49 89 1f                     	movq	%rbx, (%r15)
  20e8c4: 4d 39 f5                     	cmpq	%r14, %r13
  20e8c7: 0f 84 53 0d 00 00            	je	0x20f620 <dwarf.DwarfInfo.getLineNumberInfo+0x2050>
  20e8cd: 0f b6 44 24 30               	movzbl	48(%rsp), %eax
  20e8d2: 89 c1                        	movl	%eax, %ecx
  20e8d4: 83 e1 7f                     	andl	$127, %ecx
  20e8d7: c1 e1 0e                     	shll	$14, %ecx
  20e8da: 09 cd                        	orl	%ecx, %ebp
  20e8dc: 84 c0                        	testb	%al, %al
  20e8de: 0f 89 f2 f8 ff ff            	jns	0x20e1d6 <dwarf.DwarfInfo.getLineNumberInfo+0xc06>
  20e8e4: 31 d2                        	xorl	%edx, %edx
  20e8e6: 49 39 dd                     	cmpq	%rbx, %r13
  20e8e9: 49 89 de                     	movq	%rbx, %r14
  20e8ec: c6 44 24 30 aa               	movb	$-86, 48(%rsp)
  20e8f1: 0f 95 c2                     	setne	%dl
  20e8f4: 49 01 d6                     	addq	%rdx, %r14
  20e8f7: 0f 82 d2 48 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20e8fd: 4d 39 ee                     	cmpq	%r13, %r14
  20e900: 0f 87 09 10 00 00            	ja	0x20f90f <dwarf.DwarfInfo.getLineNumberInfo+0x233f>
  20e906: 48 8b 84 24 a8 00 00 00      	movq	168(%rsp), %rax
  20e90e: 48 8d 4c 24 30               	leaq	48(%rsp), %rcx
  20e913: 48 8d 34 18                  	leaq	(%rax,%rbx), %rsi
  20e917: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  20e91b: 48 39 c8                     	cmpq	%rcx, %rax
  20e91e: 76 0e                        	jbe	0x20e92e <dwarf.DwarfInfo.getLineNumberInfo+0x135e>
  20e920: 48 8d 44 14 30               	leaq	48(%rsp,%rdx), %rax
  20e925: 48 39 c6                     	cmpq	%rax, %rsi
  20e928: 0f 82 f2 0f 00 00            	jb	0x20f920 <dwarf.DwarfInfo.getLineNumberInfo+0x2350>
  20e92e: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20e933: e8 a8 d9 00 00               	callq	0x21c2e0 <memcpy>
  20e938: 4d 89 37                     	movq	%r14, (%r15)
  20e93b: 49 39 dd                     	cmpq	%rbx, %r13
  20e93e: 0f 84 dc 0c 00 00            	je	0x20f620 <dwarf.DwarfInfo.getLineNumberInfo+0x2050>
  20e944: 0f b6 44 24 30               	movzbl	48(%rsp), %eax
  20e949: 89 c1                        	movl	%eax, %ecx
  20e94b: 83 e1 7f                     	andl	$127, %ecx
  20e94e: c1 e1 15                     	shll	$21, %ecx
  20e951: 09 cd                        	orl	%ecx, %ebp
  20e953: 84 c0                        	testb	%al, %al
  20e955: 0f 88 85 03 00 00            	js	0x20ece0 <dwarf.DwarfInfo.getLineNumberInfo+0x1710>
  20e95b: 4c 89 f3                     	movq	%r14, %rbx
  20e95e: e9 73 f8 ff ff               	jmp	0x20e1d6 <dwarf.DwarfInfo.getLineNumberInfo+0xc06>
  20e963: 31 d2                        	xorl	%edx, %edx
  20e965: 4d 39 f5                     	cmpq	%r14, %r13
  20e968: 4d 89 f4                     	movq	%r14, %r12
  20e96b: c6 44 24 30 aa               	movb	$-86, 48(%rsp)
  20e970: 0f 95 c2                     	setne	%dl
  20e973: 49 01 d4                     	addq	%rdx, %r12
  20e976: 0f 82 53 48 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20e97c: 4d 39 ec                     	cmpq	%r13, %r12
  20e97f: 0f 87 8a 0f 00 00            	ja	0x20f90f <dwarf.DwarfInfo.getLineNumberInfo+0x233f>
  20e985: 48 8b 84 24 a8 00 00 00      	movq	168(%rsp), %rax
  20e98d: 48 8d 4c 24 30               	leaq	48(%rsp), %rcx
  20e992: 4a 8d 34 30                  	leaq	(%rax,%r14), %rsi
  20e996: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  20e99a: 48 39 c8                     	cmpq	%rcx, %rax
  20e99d: 76 0e                        	jbe	0x20e9ad <dwarf.DwarfInfo.getLineNumberInfo+0x13dd>
  20e99f: 48 8d 44 14 30               	leaq	48(%rsp,%rdx), %rax
  20e9a4: 48 39 c6                     	cmpq	%rax, %rsi
  20e9a7: 0f 82 73 0f 00 00            	jb	0x20f920 <dwarf.DwarfInfo.getLineNumberInfo+0x2350>
  20e9ad: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20e9b2: e8 29 d9 00 00               	callq	0x21c2e0 <memcpy>
  20e9b7: 4d 89 27                     	movq	%r12, (%r15)
  20e9ba: 4d 39 f5                     	cmpq	%r14, %r13
  20e9bd: 0f 84 e0 0a 00 00            	je	0x20f4a3 <dwarf.DwarfInfo.getLineNumberInfo+0x1ed3>
  20e9c3: 0f b6 44 24 30               	movzbl	48(%rsp), %eax
  20e9c8: 89 c1                        	movl	%eax, %ecx
  20e9ca: 83 e1 7f                     	andl	$127, %ecx
  20e9cd: 48 c1 e1 0e                  	shlq	$14, %rcx
  20e9d1: 48 09 cb                     	orq	%rcx, %rbx
  20e9d4: 84 c0                        	testb	%al, %al
  20e9d6: 0f 89 73 f8 ff ff            	jns	0x20e24f <dwarf.DwarfInfo.getLineNumberInfo+0xc7f>
  20e9dc: 31 d2                        	xorl	%edx, %edx
  20e9de: 4d 39 e5                     	cmpq	%r12, %r13
  20e9e1: 4d 89 e6                     	movq	%r12, %r14
  20e9e4: c6 44 24 30 aa               	movb	$-86, 48(%rsp)
  20e9e9: 0f 95 c2                     	setne	%dl
  20e9ec: 49 01 d6                     	addq	%rdx, %r14
  20e9ef: 0f 82 da 47 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20e9f5: 4d 39 ee                     	cmpq	%r13, %r14
  20e9f8: 0f 87 11 0f 00 00            	ja	0x20f90f <dwarf.DwarfInfo.getLineNumberInfo+0x233f>
  20e9fe: 48 8b 84 24 a8 00 00 00      	movq	168(%rsp), %rax
  20ea06: 48 8d 4c 24 30               	leaq	48(%rsp), %rcx
  20ea0b: 4a 8d 34 20                  	leaq	(%rax,%r12), %rsi
  20ea0f: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  20ea13: 48 39 c8                     	cmpq	%rcx, %rax
  20ea16: 76 0e                        	jbe	0x20ea26 <dwarf.DwarfInfo.getLineNumberInfo+0x1456>
  20ea18: 48 8d 44 14 30               	leaq	48(%rsp,%rdx), %rax
  20ea1d: 48 39 c6                     	cmpq	%rax, %rsi
  20ea20: 0f 82 fa 0e 00 00            	jb	0x20f920 <dwarf.DwarfInfo.getLineNumberInfo+0x2350>
  20ea26: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20ea2b: e8 b0 d8 00 00               	callq	0x21c2e0 <memcpy>
  20ea30: 4d 89 37                     	movq	%r14, (%r15)
  20ea33: 4d 39 e5                     	cmpq	%r12, %r13
  20ea36: 0f 84 67 0a 00 00            	je	0x20f4a3 <dwarf.DwarfInfo.getLineNumberInfo+0x1ed3>
  20ea3c: 0f b6 44 24 30               	movzbl	48(%rsp), %eax
  20ea41: 89 c1                        	movl	%eax, %ecx
  20ea43: 83 e1 7f                     	andl	$127, %ecx
  20ea46: 48 c1 e1 15                  	shlq	$21, %rcx
  20ea4a: 48 09 cb                     	orq	%rcx, %rbx
  20ea4d: 84 c0                        	testb	%al, %al
  20ea4f: 0f 89 24 f9 ff ff            	jns	0x20e379 <dwarf.DwarfInfo.getLineNumberInfo+0xda9>
  20ea55: 31 d2                        	xorl	%edx, %edx
  20ea57: 4d 39 f5                     	cmpq	%r14, %r13
  20ea5a: 4d 89 f4                     	movq	%r14, %r12
  20ea5d: c6 44 24 30 aa               	movb	$-86, 48(%rsp)
  20ea62: 0f 95 c2                     	setne	%dl
  20ea65: 49 01 d4                     	addq	%rdx, %r12
  20ea68: 0f 82 61 47 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20ea6e: 4d 39 ec                     	cmpq	%r13, %r12
  20ea71: 0f 87 98 0e 00 00            	ja	0x20f90f <dwarf.DwarfInfo.getLineNumberInfo+0x233f>
  20ea77: 48 8b 84 24 a8 00 00 00      	movq	168(%rsp), %rax
  20ea7f: 48 8d 4c 24 30               	leaq	48(%rsp), %rcx
  20ea84: 4a 8d 34 30                  	leaq	(%rax,%r14), %rsi
  20ea88: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  20ea8c: 48 39 c8                     	cmpq	%rcx, %rax
  20ea8f: 76 0e                        	jbe	0x20ea9f <dwarf.DwarfInfo.getLineNumberInfo+0x14cf>
  20ea91: 48 8d 44 14 30               	leaq	48(%rsp,%rdx), %rax
  20ea96: 48 39 c6                     	cmpq	%rax, %rsi
  20ea99: 0f 82 81 0e 00 00            	jb	0x20f920 <dwarf.DwarfInfo.getLineNumberInfo+0x2350>
  20ea9f: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20eaa4: e8 37 d8 00 00               	callq	0x21c2e0 <memcpy>
  20eaa9: 4d 89 27                     	movq	%r12, (%r15)
  20eaac: 4d 39 f5                     	cmpq	%r14, %r13
  20eaaf: 0f 84 ee 09 00 00            	je	0x20f4a3 <dwarf.DwarfInfo.getLineNumberInfo+0x1ed3>
  20eab5: 0f b6 44 24 30               	movzbl	48(%rsp), %eax
  20eaba: 89 c1                        	movl	%eax, %ecx
  20eabc: 83 e1 7f                     	andl	$127, %ecx
  20eabf: 48 c1 e1 1c                  	shlq	$28, %rcx
  20eac3: 48 09 cb                     	orq	%rcx, %rbx
  20eac6: 84 c0                        	testb	%al, %al
  20eac8: 0f 89 81 f7 ff ff            	jns	0x20e24f <dwarf.DwarfInfo.getLineNumberInfo+0xc7f>
  20eace: 31 d2                        	xorl	%edx, %edx
  20ead0: 4d 39 e5                     	cmpq	%r12, %r13
  20ead3: 4d 89 e6                     	movq	%r12, %r14
  20ead6: c6 44 24 30 aa               	movb	$-86, 48(%rsp)
  20eadb: 0f 95 c2                     	setne	%dl
  20eade: 49 01 d6                     	addq	%rdx, %r14
  20eae1: 0f 82 e8 46 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20eae7: 4d 39 ee                     	cmpq	%r13, %r14
  20eaea: 0f 87 1f 0e 00 00            	ja	0x20f90f <dwarf.DwarfInfo.getLineNumberInfo+0x233f>
  20eaf0: 48 8b 84 24 a8 00 00 00      	movq	168(%rsp), %rax
  20eaf8: 48 8d 4c 24 30               	leaq	48(%rsp), %rcx
  20eafd: 4a 8d 34 20                  	leaq	(%rax,%r12), %rsi
  20eb01: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  20eb05: 48 39 c8                     	cmpq	%rcx, %rax
  20eb08: 76 0e                        	jbe	0x20eb18 <dwarf.DwarfInfo.getLineNumberInfo+0x1548>
  20eb0a: 48 8d 44 14 30               	leaq	48(%rsp,%rdx), %rax
  20eb0f: 48 39 c6                     	cmpq	%rax, %rsi
  20eb12: 0f 82 08 0e 00 00            	jb	0x20f920 <dwarf.DwarfInfo.getLineNumberInfo+0x2350>
  20eb18: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20eb1d: e8 be d7 00 00               	callq	0x21c2e0 <memcpy>
  20eb22: 4d 89 37                     	movq	%r14, (%r15)
  20eb25: 4d 39 e5                     	cmpq	%r12, %r13
  20eb28: 0f 84 75 09 00 00            	je	0x20f4a3 <dwarf.DwarfInfo.getLineNumberInfo+0x1ed3>
  20eb2e: 0f b6 44 24 30               	movzbl	48(%rsp), %eax
  20eb33: 89 c1                        	movl	%eax, %ecx
  20eb35: 83 e1 7f                     	andl	$127, %ecx
  20eb38: 48 c1 e1 23                  	shlq	$35, %rcx
  20eb3c: 48 09 cb                     	orq	%rcx, %rbx
  20eb3f: 84 c0                        	testb	%al, %al
  20eb41: 0f 89 32 f8 ff ff            	jns	0x20e379 <dwarf.DwarfInfo.getLineNumberInfo+0xda9>
  20eb47: 31 d2                        	xorl	%edx, %edx
  20eb49: 4d 39 f5                     	cmpq	%r14, %r13
  20eb4c: 4d 89 f4                     	movq	%r14, %r12
  20eb4f: c6 44 24 30 aa               	movb	$-86, 48(%rsp)
  20eb54: 0f 95 c2                     	setne	%dl
  20eb57: 49 01 d4                     	addq	%rdx, %r12
  20eb5a: 0f 82 6f 46 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20eb60: 4d 39 ec                     	cmpq	%r13, %r12
  20eb63: 0f 87 a6 0d 00 00            	ja	0x20f90f <dwarf.DwarfInfo.getLineNumberInfo+0x233f>
  20eb69: 48 8b 84 24 a8 00 00 00      	movq	168(%rsp), %rax
  20eb71: 48 8d 4c 24 30               	leaq	48(%rsp), %rcx
  20eb76: 4a 8d 34 30                  	leaq	(%rax,%r14), %rsi
  20eb7a: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  20eb7e: 48 39 c8                     	cmpq	%rcx, %rax
  20eb81: 76 0e                        	jbe	0x20eb91 <dwarf.DwarfInfo.getLineNumberInfo+0x15c1>
  20eb83: 48 8d 44 14 30               	leaq	48(%rsp,%rdx), %rax
  20eb88: 48 39 c6                     	cmpq	%rax, %rsi
  20eb8b: 0f 82 8f 0d 00 00            	jb	0x20f920 <dwarf.DwarfInfo.getLineNumberInfo+0x2350>
  20eb91: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20eb96: e8 45 d7 00 00               	callq	0x21c2e0 <memcpy>
  20eb9b: 4d 89 27                     	movq	%r12, (%r15)
  20eb9e: 4d 39 f5                     	cmpq	%r14, %r13
  20eba1: 0f 84 fc 08 00 00            	je	0x20f4a3 <dwarf.DwarfInfo.getLineNumberInfo+0x1ed3>
  20eba7: 0f b6 44 24 30               	movzbl	48(%rsp), %eax
  20ebac: 89 c1                        	movl	%eax, %ecx
  20ebae: 83 e1 7f                     	andl	$127, %ecx
  20ebb1: 48 c1 e1 2a                  	shlq	$42, %rcx
  20ebb5: 48 09 cb                     	orq	%rcx, %rbx
  20ebb8: 84 c0                        	testb	%al, %al
  20ebba: 0f 89 8f f6 ff ff            	jns	0x20e24f <dwarf.DwarfInfo.getLineNumberInfo+0xc7f>
  20ebc0: 31 d2                        	xorl	%edx, %edx
  20ebc2: 4d 39 e5                     	cmpq	%r12, %r13
  20ebc5: 4d 89 e6                     	movq	%r12, %r14
  20ebc8: c6 44 24 30 aa               	movb	$-86, 48(%rsp)
  20ebcd: 0f 95 c2                     	setne	%dl
  20ebd0: 49 01 d6                     	addq	%rdx, %r14
  20ebd3: 0f 82 f6 45 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20ebd9: 4d 39 ee                     	cmpq	%r13, %r14
  20ebdc: 0f 87 2d 0d 00 00            	ja	0x20f90f <dwarf.DwarfInfo.getLineNumberInfo+0x233f>
  20ebe2: 48 8b 84 24 a8 00 00 00      	movq	168(%rsp), %rax
  20ebea: 48 8d 4c 24 30               	leaq	48(%rsp), %rcx
  20ebef: 4a 8d 34 20                  	leaq	(%rax,%r12), %rsi
  20ebf3: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  20ebf7: 48 39 c8                     	cmpq	%rcx, %rax
  20ebfa: 76 0e                        	jbe	0x20ec0a <dwarf.DwarfInfo.getLineNumberInfo+0x163a>
  20ebfc: 48 8d 44 14 30               	leaq	48(%rsp,%rdx), %rax
  20ec01: 48 39 c6                     	cmpq	%rax, %rsi
  20ec04: 0f 82 16 0d 00 00            	jb	0x20f920 <dwarf.DwarfInfo.getLineNumberInfo+0x2350>
  20ec0a: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20ec0f: e8 cc d6 00 00               	callq	0x21c2e0 <memcpy>
  20ec14: 4d 89 37                     	movq	%r14, (%r15)
  20ec17: 4d 39 e5                     	cmpq	%r12, %r13
  20ec1a: 0f 84 83 08 00 00            	je	0x20f4a3 <dwarf.DwarfInfo.getLineNumberInfo+0x1ed3>
  20ec20: 0f b6 44 24 30               	movzbl	48(%rsp), %eax
  20ec25: 89 c1                        	movl	%eax, %ecx
  20ec27: 83 e1 7f                     	andl	$127, %ecx
  20ec2a: 48 c1 e1 31                  	shlq	$49, %rcx
  20ec2e: 48 09 cb                     	orq	%rcx, %rbx
  20ec31: 84 c0                        	testb	%al, %al
  20ec33: 0f 89 40 f7 ff ff            	jns	0x20e379 <dwarf.DwarfInfo.getLineNumberInfo+0xda9>
  20ec39: 31 d2                        	xorl	%edx, %edx
  20ec3b: 4d 39 f5                     	cmpq	%r14, %r13
  20ec3e: 4c 89 f0                     	movq	%r14, %rax
  20ec41: c6 44 24 30 aa               	movb	$-86, 48(%rsp)
  20ec46: 0f 95 c2                     	setne	%dl
  20ec49: 48 01 d0                     	addq	%rdx, %rax
  20ec4c: 0f 82 7d 45 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20ec52: 4c 39 e8                     	cmpq	%r13, %rax
  20ec55: 0f 87 b4 0c 00 00            	ja	0x20f90f <dwarf.DwarfInfo.getLineNumberInfo+0x233f>
  20ec5b: 48 8b 8c 24 a8 00 00 00      	movq	168(%rsp), %rcx
  20ec63: 48 89 84 24 e0 00 00 00      	movq	%rax, 224(%rsp)
  20ec6b: 4a 8d 34 31                  	leaq	(%rcx,%r14), %rsi
  20ec6f: 48 8d 4c 24 30               	leaq	48(%rsp), %rcx
  20ec74: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  20ec78: 48 39 c8                     	cmpq	%rcx, %rax
  20ec7b: 76 0e                        	jbe	0x20ec8b <dwarf.DwarfInfo.getLineNumberInfo+0x16bb>
  20ec7d: 48 8d 44 14 30               	leaq	48(%rsp,%rdx), %rax
  20ec82: 48 39 c6                     	cmpq	%rax, %rsi
  20ec85: 0f 82 95 0c 00 00            	jb	0x20f920 <dwarf.DwarfInfo.getLineNumberInfo+0x2350>
  20ec8b: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20ec90: e8 4b d6 00 00               	callq	0x21c2e0 <memcpy>
  20ec95: 48 8b b4 24 e0 00 00 00      	movq	224(%rsp), %rsi
  20ec9d: 49 89 37                     	movq	%rsi, (%r15)
  20eca0: 4d 39 f5                     	cmpq	%r14, %r13
  20eca3: 0f 84 fa 07 00 00            	je	0x20f4a3 <dwarf.DwarfInfo.getLineNumberInfo+0x1ed3>
  20eca9: 0f b6 44 24 30               	movzbl	48(%rsp), %eax
  20ecae: 89 c1                        	movl	%eax, %ecx
  20ecb0: 83 e1 7f                     	andl	$127, %ecx
  20ecb3: 48 c1 e1 38                  	shlq	$56, %rcx
  20ecb7: 48 09 cb                     	orq	%rcx, %rbx
  20ecba: 84 c0                        	testb	%al, %al
  20ecbc: 0f 88 b3 00 00 00            	js	0x20ed75 <dwarf.DwarfInfo.getLineNumberInfo+0x17a5>
  20ecc2: 48 89 9c 24 b8 00 00 00      	movq	%rbx, 184(%rsp)
  20ecca: 49 89 f4                     	movq	%rsi, %r12
  20eccd: c6 44 24 30 aa               	movb	$-86, 48(%rsp)
  20ecd2: 4d 39 e5                     	cmpq	%r12, %r13
  20ecd5: 0f 83 b7 f6 ff ff            	jae	0x20e392 <dwarf.DwarfInfo.getLineNumberInfo+0xdc2>
  20ecdb: e9 ef 44 00 00               	jmp	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20ece0: 31 d2                        	xorl	%edx, %edx
  20ece2: 4d 39 f5                     	cmpq	%r14, %r13
  20ece5: 4c 89 f3                     	movq	%r14, %rbx
  20ece8: c6 44 24 30 aa               	movb	$-86, 48(%rsp)
  20eced: 0f 95 c2                     	setne	%dl
  20ecf0: 48 01 d3                     	addq	%rdx, %rbx
  20ecf3: 0f 82 d6 44 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20ecf9: 4c 39 eb                     	cmpq	%r13, %rbx
  20ecfc: 0f 87 0d 0c 00 00            	ja	0x20f90f <dwarf.DwarfInfo.getLineNumberInfo+0x233f>
  20ed02: 48 8b 84 24 a8 00 00 00      	movq	168(%rsp), %rax
  20ed0a: 48 8d 4c 24 30               	leaq	48(%rsp), %rcx
  20ed0f: 4a 8d 34 30                  	leaq	(%rax,%r14), %rsi
  20ed13: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  20ed17: 48 39 c8                     	cmpq	%rcx, %rax
  20ed1a: 76 0e                        	jbe	0x20ed2a <dwarf.DwarfInfo.getLineNumberInfo+0x175a>
  20ed1c: 48 8d 44 14 30               	leaq	48(%rsp,%rdx), %rax
  20ed21: 48 39 c6                     	cmpq	%rax, %rsi
  20ed24: 0f 82 f6 0b 00 00            	jb	0x20f920 <dwarf.DwarfInfo.getLineNumberInfo+0x2350>
  20ed2a: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20ed2f: e8 ac d5 00 00               	callq	0x21c2e0 <memcpy>
  20ed34: 49 89 1f                     	movq	%rbx, (%r15)
  20ed37: 4d 39 f5                     	cmpq	%r14, %r13
  20ed3a: 0f 84 e0 08 00 00            	je	0x20f620 <dwarf.DwarfInfo.getLineNumberInfo+0x2050>
  20ed40: 0f b6 44 24 30               	movzbl	48(%rsp), %eax
  20ed45: 89 e9                        	movl	%ebp, %ecx
  20ed47: 66 bd 29 00                  	movw	$41, %bp
  20ed4b: a8 70                        	testb	$112, %al
  20ed4d: 0f 85 d9 08 00 00            	jne	0x20f62c <dwarf.DwarfInfo.getLineNumberInfo+0x205c>
  20ed53: 84 c0                        	testb	%al, %al
  20ed55: 0f 88 d1 08 00 00            	js	0x20f62c <dwarf.DwarfInfo.getLineNumberInfo+0x205c>
  20ed5b: c1 e0 1c                     	shll	$28, %eax
  20ed5e: 89 cd                        	movl	%ecx, %ebp
  20ed60: 09 c5                        	orl	%eax, %ebp
  20ed62: c6 44 24 30 aa               	movb	$-86, 48(%rsp)
  20ed67: 49 39 dd                     	cmpq	%rbx, %r13
  20ed6a: 0f 83 74 f4 ff ff            	jae	0x20e1e4 <dwarf.DwarfInfo.getLineNumberInfo+0xc14>
  20ed70: e9 5a 44 00 00               	jmp	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20ed75: 31 d2                        	xorl	%edx, %edx
  20ed77: 49 39 f5                     	cmpq	%rsi, %r13
  20ed7a: 49 89 f4                     	movq	%rsi, %r12
  20ed7d: c6 44 24 30 aa               	movb	$-86, 48(%rsp)
  20ed82: 0f 95 c2                     	setne	%dl
  20ed85: 49 01 d4                     	addq	%rdx, %r12
  20ed88: 0f 82 41 44 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20ed8e: 4d 39 ec                     	cmpq	%r13, %r12
  20ed91: 0f 87 78 0b 00 00            	ja	0x20f90f <dwarf.DwarfInfo.getLineNumberInfo+0x233f>
  20ed97: 48 8b 84 24 a8 00 00 00      	movq	168(%rsp), %rax
  20ed9f: 48 8d 4c 24 30               	leaq	48(%rsp), %rcx
  20eda4: 48 01 c6                     	addq	%rax, %rsi
  20eda7: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  20edab: 48 39 c8                     	cmpq	%rcx, %rax
  20edae: 76 0e                        	jbe	0x20edbe <dwarf.DwarfInfo.getLineNumberInfo+0x17ee>
  20edb0: 48 8d 44 14 30               	leaq	48(%rsp,%rdx), %rax
  20edb5: 48 39 c6                     	cmpq	%rax, %rsi
  20edb8: 0f 82 62 0b 00 00            	jb	0x20f920 <dwarf.DwarfInfo.getLineNumberInfo+0x2350>
  20edbe: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20edc3: e8 18 d5 00 00               	callq	0x21c2e0 <memcpy>
  20edc8: 4d 89 27                     	movq	%r12, (%r15)
  20edcb: 4c 3b ac 24 e0 00 00 00      	cmpq	224(%rsp), %r13
  20edd3: 0f 84 ca 06 00 00            	je	0x20f4a3 <dwarf.DwarfInfo.getLineNumberInfo+0x1ed3>
  20edd9: 0f b6 44 24 30               	movzbl	48(%rsp), %eax
  20edde: 66 b9 29 00                  	movw	$41, %cx
  20ede2: a8 7e                        	testb	$126, %al
  20ede4: 0f 85 41 45 00 00            	jne	0x21332b <dwarf.DwarfInfo.getLineNumberInfo+0x5d5b>
  20edea: 4c 8b 74 24 18               	movq	24(%rsp), %r14
  20edef: 84 c0                        	testb	%al, %al
  20edf1: 0f 88 bd 06 00 00            	js	0x20f4b4 <dwarf.DwarfInfo.getLineNumberInfo+0x1ee4>
  20edf7: 48 c1 e0 3f                  	shlq	$63, %rax
  20edfb: 48 09 c3                     	orq	%rax, %rbx
  20edfe: e9 4c f4 ff ff               	jmp	0x20e24f <dwarf.DwarfInfo.getLineNumberInfo+0xc7f>
  20ee03: 31 d2                        	xorl	%edx, %edx
  20ee05: 49 39 ed                     	cmpq	%rbp, %r13
  20ee08: 49 89 ec                     	movq	%rbp, %r12
  20ee0b: c6 44 24 30 aa               	movb	$-86, 48(%rsp)
  20ee10: 0f 95 c2                     	setne	%dl
  20ee13: 49 01 d4                     	addq	%rdx, %r12
  20ee16: 0f 82 b3 43 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  20ee1c: 4d 39 ec                     	cmpq	%r13, %r12
  20ee1f: 0f 87 ea 0a 00 00            	ja	0x20f90f <dwarf.DwarfInfo.getLineNumberInfo+0x233f>
  20ee25: 48 8b 84 24 a8 00 00 00      	movq	168(%rsp), %rax
  20ee2d: 48 8d 4c 24 30               	leaq	48(%rsp), %rcx
  20ee32: 48 01 e8                     	addq	%rbp, %rax
  20ee35: 48 89 c6                     	movq	%rax, %rsi
  20ee38: 48 01 d0                     	addq	%rdx, %rax
  20ee3b: 48 39 c8                     	cmpq	%rcx, %rax
  20ee3e: 76 0e                        	jbe	0x20ee4e <dwarf.DwarfInfo.getLineNumberInfo+0x187e>
  20ee40: 48 8d 44 14 30               	leaq	48(%rsp,%rdx), %rax
  20ee45: 48 39 c6                     	cmpq	%rax, %rsi
  20ee48: 0f 82 d2 0a 00 00            	jb	0x20f920 <dwarf.DwarfInfo.getLineNumberInfo+0x2350>
  20ee4e: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20ee53: e8 88 d4 00 00               	callq	0x21c2e0 <memcpy>
  20ee58: 4d 89 27                     	movq	%r12, (%r15)
  20ee5b: 49 39 ed                     	cmpq	%rbp, %r13
  20ee5e: 0f 84 0c 07 00 00            	je	0x20f570 <dwarf.DwarfInfo.getLineNumberInfo+0x1fa0>
  20ee64: 0f b6 44 24 30               	movzbl	48(%rsp), %eax
  20ee69: 66 bd 29 00                  	movw	$41, %bp
  20ee6d: a8 7e                        	testb	$126, %al
  20ee6f: 0f 85 c0 44 00 00            	jne	0x213335 <dwarf.DwarfInfo.getLineNumberInfo+0x5d65>
  20ee75: 4c 8b 64 24 18               	movq	24(%rsp), %r12
  20ee7a: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  20ee7f: 4c 8b 7c 24 58               	movq	88(%rsp), %r15
  20ee84: 84 c0                        	testb	%al, %al
  20ee86: 0f 88 ff 06 00 00            	js	0x20f58b <dwarf.DwarfInfo.getLineNumberInfo+0x1fbb>
  20ee8c: 48 c1 e0 3f                  	shlq	$63, %rax
  20ee90: 49 09 c6                     	orq	%rax, %r14
  20ee93: e9 47 f9 ff ff               	jmp	0x20e7df <dwarf.DwarfInfo.getLineNumberInfo+0x120f>
  20ee98: 48 8b b4 24 a8 00 00 00      	movq	168(%rsp), %rsi
  20eea0: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20eea5: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20eeaa: b9 01 00 00 00               	movl	$1, %ecx
  20eeaf: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20eeb4: e8 c7 a3 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20eeb9: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  20eebf: 4c 8b 7c 24 18               	movq	24(%rsp), %r15
  20eec4: 0f 84 d5 30 00 00            	je	0x211f9f <dwarf.DwarfInfo.getLineNumberInfo+0x49cf>
  20eeca: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20eecf: 41 89 c6                     	movl	%eax, %r14d
  20eed2: 41 83 e6 7f                  	andl	$127, %r14d
  20eed6: 84 c0                        	testb	%al, %al
  20eed8: 0f 89 b1 0a 00 00            	jns	0x20f98f <dwarf.DwarfInfo.getLineNumberInfo+0x23bf>
  20eede: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  20eee3: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20eee8: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20eeed: b9 01 00 00 00               	movl	$1, %ecx
  20eef2: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20eef7: e8 84 a3 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20eefc: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  20ef02: 0f 84 97 30 00 00            	je	0x211f9f <dwarf.DwarfInfo.getLineNumberInfo+0x49cf>
  20ef08: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20ef0d: 89 c1                        	movl	%eax, %ecx
  20ef0f: 83 e1 7f                     	andl	$127, %ecx
  20ef12: 48 c1 e1 07                  	shlq	$7, %rcx
  20ef16: 49 09 ce                     	orq	%rcx, %r14
  20ef19: 84 c0                        	testb	%al, %al
  20ef1b: 0f 89 6e 0a 00 00            	jns	0x20f98f <dwarf.DwarfInfo.getLineNumberInfo+0x23bf>
  20ef21: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  20ef26: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20ef2b: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20ef30: b9 01 00 00 00               	movl	$1, %ecx
  20ef35: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20ef3a: e8 41 a3 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20ef3f: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  20ef45: 0f 84 54 30 00 00            	je	0x211f9f <dwarf.DwarfInfo.getLineNumberInfo+0x49cf>
  20ef4b: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20ef50: 89 c1                        	movl	%eax, %ecx
  20ef52: 83 e1 7f                     	andl	$127, %ecx
  20ef55: 48 c1 e1 0e                  	shlq	$14, %rcx
  20ef59: 49 09 ce                     	orq	%rcx, %r14
  20ef5c: 84 c0                        	testb	%al, %al
  20ef5e: 0f 89 2b 0a 00 00            	jns	0x20f98f <dwarf.DwarfInfo.getLineNumberInfo+0x23bf>
  20ef64: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  20ef69: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20ef6e: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20ef73: b9 01 00 00 00               	movl	$1, %ecx
  20ef78: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20ef7d: e8 fe a2 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20ef82: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  20ef88: 0f 84 11 30 00 00            	je	0x211f9f <dwarf.DwarfInfo.getLineNumberInfo+0x49cf>
  20ef8e: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20ef93: 89 c1                        	movl	%eax, %ecx
  20ef95: 83 e1 7f                     	andl	$127, %ecx
  20ef98: 48 c1 e1 15                  	shlq	$21, %rcx
  20ef9c: 49 09 ce                     	orq	%rcx, %r14
  20ef9f: 84 c0                        	testb	%al, %al
  20efa1: 0f 89 e8 09 00 00            	jns	0x20f98f <dwarf.DwarfInfo.getLineNumberInfo+0x23bf>
  20efa7: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  20efac: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20efb1: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20efb6: b9 01 00 00 00               	movl	$1, %ecx
  20efbb: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20efc0: e8 bb a2 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20efc5: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  20efcb: 0f 84 ce 2f 00 00            	je	0x211f9f <dwarf.DwarfInfo.getLineNumberInfo+0x49cf>
  20efd1: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20efd6: 89 c1                        	movl	%eax, %ecx
  20efd8: 83 e1 7f                     	andl	$127, %ecx
  20efdb: 48 c1 e1 1c                  	shlq	$28, %rcx
  20efdf: 49 09 ce                     	orq	%rcx, %r14
  20efe2: 84 c0                        	testb	%al, %al
  20efe4: 0f 89 a5 09 00 00            	jns	0x20f98f <dwarf.DwarfInfo.getLineNumberInfo+0x23bf>
  20efea: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  20efef: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20eff4: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20eff9: b9 01 00 00 00               	movl	$1, %ecx
  20effe: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20f003: e8 78 a2 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20f008: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  20f00e: 0f 84 8b 2f 00 00            	je	0x211f9f <dwarf.DwarfInfo.getLineNumberInfo+0x49cf>
  20f014: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20f019: 89 c1                        	movl	%eax, %ecx
  20f01b: 83 e1 7f                     	andl	$127, %ecx
  20f01e: 48 c1 e1 23                  	shlq	$35, %rcx
  20f022: 49 09 ce                     	orq	%rcx, %r14
  20f025: 84 c0                        	testb	%al, %al
  20f027: 0f 89 62 09 00 00            	jns	0x20f98f <dwarf.DwarfInfo.getLineNumberInfo+0x23bf>
  20f02d: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  20f032: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20f037: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20f03c: b9 01 00 00 00               	movl	$1, %ecx
  20f041: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20f046: e8 35 a2 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20f04b: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  20f051: 0f 84 48 2f 00 00            	je	0x211f9f <dwarf.DwarfInfo.getLineNumberInfo+0x49cf>
  20f057: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20f05c: 89 c1                        	movl	%eax, %ecx
  20f05e: 83 e1 7f                     	andl	$127, %ecx
  20f061: 48 c1 e1 2a                  	shlq	$42, %rcx
  20f065: 49 09 ce                     	orq	%rcx, %r14
  20f068: 84 c0                        	testb	%al, %al
  20f06a: 0f 89 1f 09 00 00            	jns	0x20f98f <dwarf.DwarfInfo.getLineNumberInfo+0x23bf>
  20f070: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  20f075: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20f07a: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20f07f: b9 01 00 00 00               	movl	$1, %ecx
  20f084: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20f089: e8 f2 a1 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20f08e: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  20f094: 0f 84 05 2f 00 00            	je	0x211f9f <dwarf.DwarfInfo.getLineNumberInfo+0x49cf>
  20f09a: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20f09f: 89 c1                        	movl	%eax, %ecx
  20f0a1: 83 e1 7f                     	andl	$127, %ecx
  20f0a4: 48 c1 e1 31                  	shlq	$49, %rcx
  20f0a8: 49 09 ce                     	orq	%rcx, %r14
  20f0ab: 84 c0                        	testb	%al, %al
  20f0ad: 0f 89 dc 08 00 00            	jns	0x20f98f <dwarf.DwarfInfo.getLineNumberInfo+0x23bf>
  20f0b3: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  20f0b8: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20f0bd: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20f0c2: b9 01 00 00 00               	movl	$1, %ecx
  20f0c7: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20f0cc: e8 af a1 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20f0d1: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  20f0d7: 0f 84 c2 2e 00 00            	je	0x211f9f <dwarf.DwarfInfo.getLineNumberInfo+0x49cf>
  20f0dd: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20f0e2: 89 c1                        	movl	%eax, %ecx
  20f0e4: 83 e1 7f                     	andl	$127, %ecx
  20f0e7: 48 c1 e1 38                  	shlq	$56, %rcx
  20f0eb: 49 09 ce                     	orq	%rcx, %r14
  20f0ee: 84 c0                        	testb	%al, %al
  20f0f0: 0f 88 3b 08 00 00            	js	0x20f931 <dwarf.DwarfInfo.getLineNumberInfo+0x2361>
  20f0f6: 4c 8b 7c 24 18               	movq	24(%rsp), %r15
  20f0fb: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  20f100: e9 8a 08 00 00               	jmp	0x20f98f <dwarf.DwarfInfo.getLineNumberInfo+0x23bf>
  20f105: 48 8b 5c 24 18               	movq	24(%rsp), %rbx
  20f10a: 48 89 df                     	movq	%rbx, %rdi
  20f10d: e8 3e cc 00 00               	callq	0x21bd50 <builtin.returnError>
  20f112: 48 89 df                     	movq	%rbx, %rdi
  20f115: e8 36 cc 00 00               	callq	0x21bd50 <builtin.returnError>
  20f11a: 48 89 df                     	movq	%rbx, %rdi
  20f11d: e8 2e cc 00 00               	callq	0x21bd50 <builtin.returnError>
  20f122: 48 89 df                     	movq	%rbx, %rdi
  20f125: e9 ee 35 00 00               	jmp	0x212718 <dwarf.DwarfInfo.getLineNumberInfo+0x5148>
  20f12a: 4c 89 f7                     	movq	%r14, %rdi
  20f12d: e9 c5 41 00 00               	jmp	0x2132f7 <dwarf.DwarfInfo.getLineNumberInfo+0x5d27>
  20f132: 4c 89 e7                     	movq	%r12, %rdi
  20f135: e8 16 cc 00 00               	callq	0x21bd50 <builtin.returnError>
  20f13a: 48 8b 44 24 28               	movq	40(%rsp), %rax
  20f13f: 66 c7 40 20 34 00            	movw	$52, 32(%rax)
  20f145: 4c 89 e7                     	movq	%r12, %rdi
  20f148: e8 03 cc 00 00               	callq	0x21bd50 <builtin.returnError>
  20f14d: e9 b3 41 00 00               	jmp	0x213305 <dwarf.DwarfInfo.getLineNumberInfo+0x5d35>
  20f152: 4c 89 f7                     	movq	%r14, %rdi
  20f155: e8 f6 cb 00 00               	callq	0x21bd50 <builtin.returnError>
  20f15a: 48 8b 44 24 28               	movq	40(%rsp), %rax
  20f15f: 4c 89 f7                     	movq	%r14, %rdi
  20f162: 66 c7 40 20 18 00            	movw	$24, 32(%rax)
  20f168: e8 e3 cb 00 00               	callq	0x21bd50 <builtin.returnError>
  20f16d: e9 93 41 00 00               	jmp	0x213305 <dwarf.DwarfInfo.getLineNumberInfo+0x5d35>
  20f172: 48 8b 5c 24 18               	movq	24(%rsp), %rbx
  20f177: 48 89 df                     	movq	%rbx, %rdi
  20f17a: e8 d1 cb 00 00               	callq	0x21bd50 <builtin.returnError>
  20f17f: 48 8b 44 24 28               	movq	40(%rsp), %rax
  20f184: 48 89 df                     	movq	%rbx, %rdi
  20f187: 66 c7 40 20 34 00            	movw	$52, 32(%rax)
  20f18d: e8 be cb 00 00               	callq	0x21bd50 <builtin.returnError>
  20f192: e9 6e 41 00 00               	jmp	0x213305 <dwarf.DwarfInfo.getLineNumberInfo+0x5d35>
  20f197: 4c 89 e7                     	movq	%r12, %rdi
  20f19a: e8 b1 cb 00 00               	callq	0x21bd50 <builtin.returnError>
  20f19f: 4c 89 e7                     	movq	%r12, %rdi
  20f1a2: e8 a9 cb 00 00               	callq	0x21bd50 <builtin.returnError>
  20f1a7: 4c 89 e7                     	movq	%r12, %rdi
  20f1aa: e9 69 35 00 00               	jmp	0x212718 <dwarf.DwarfInfo.getLineNumberInfo+0x5148>
  20f1af: 4c 89 f7                     	movq	%r14, %rdi
  20f1b2: e8 99 cb 00 00               	callq	0x21bd50 <builtin.returnError>
  20f1b7: 4c 89 f7                     	movq	%r14, %rdi
  20f1ba: e8 91 cb 00 00               	callq	0x21bd50 <builtin.returnError>
  20f1bf: 4c 89 f7                     	movq	%r14, %rdi
  20f1c2: e8 89 cb 00 00               	callq	0x21bd50 <builtin.returnError>
  20f1c7: 66 bb 34 00                  	movw	$52, %bx
  20f1cb: 4c 89 f7                     	movq	%r14, %rdi
  20f1ce: e8 7d cb 00 00               	callq	0x21bd50 <builtin.returnError>
  20f1d3: 4c 89 f7                     	movq	%r14, %rdi
  20f1d6: e8 75 cb 00 00               	callq	0x21bd50 <builtin.returnError>
  20f1db: 48 8b 44 24 28               	movq	40(%rsp), %rax
  20f1e0: 66 89 58 20                  	movw	%bx, 32(%rax)
  20f1e4: e9 1c 41 00 00               	jmp	0x213305 <dwarf.DwarfInfo.getLineNumberInfo+0x5d35>
  20f1e9: 4c 89 e7                     	movq	%r12, %rdi
  20f1ec: e8 5f cb 00 00               	callq	0x21bd50 <builtin.returnError>
  20f1f1: 4c 89 e7                     	movq	%r12, %rdi
  20f1f4: e8 57 cb 00 00               	callq	0x21bd50 <builtin.returnError>
  20f1f9: 4c 89 e7                     	movq	%r12, %rdi
  20f1fc: e8 4f cb 00 00               	callq	0x21bd50 <builtin.returnError>
  20f201: 48 8b 44 24 28               	movq	40(%rsp), %rax
  20f206: 66 c7 40 20 15 00            	movw	$21, 32(%rax)
  20f20c: e9 f4 40 00 00               	jmp	0x213305 <dwarf.DwarfInfo.getLineNumberInfo+0x5d35>
  20f211: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  20f219: 48 85 f6                     	testq	%rsi, %rsi
  20f21c: 74 2c                        	je	0x20f24a <dwarf.DwarfInfo.getLineNumberInfo+0x1c7a>
  20f21e: 66 90                        	nop
  20f220: 48 8b 56 08                  	movq	8(%rsi), %rdx
  20f224: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  20f22c: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  20f234: 48 8b 1e                     	movq	(%rsi), %rbx
  20f237: b9 03 00 00 00               	movl	$3, %ecx
  20f23c: 4d 89 e8                     	movq	%r13, %r8
  20f23f: ff 50 10                     	callq	*16(%rax)
  20f242: 48 89 de                     	movq	%rbx, %rsi
  20f245: 48 85 db                     	testq	%rbx, %rbx
  20f248: 75 d6                        	jne	0x20f220 <dwarf.DwarfInfo.getLineNumberInfo+0x1c50>
  20f24a: 4c 8b 7c 24 58               	movq	88(%rsp), %r15
  20f24f: 4c 8b 74 24 70               	movq	112(%rsp), %r14
  20f254: 4d 85 ff                     	testq	%r15, %r15
  20f257: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  20f261: 4c 0f 44 f0                  	cmoveq	%rax, %r14
  20f265: 0f 84 63 04 00 00            	je	0x20f6ce <dwarf.DwarfInfo.getLineNumberInfo+0x20fe>
  20f26b: 48 8b 44 24 68               	movq	104(%rsp), %rax
  20f270: 4c 89 f7                     	movq	%r14, %rdi
  20f273: be aa 00 00 00               	movl	$170, %esi
  20f278: 4c 89 fa                     	movq	%r15, %rdx
  20f27b: 48 8b 18                     	movq	(%rax), %rbx
  20f27e: 48 8b 40 08                  	movq	8(%rax), %rax
  20f282: 48 89 44 24 18               	movq	%rax, 24(%rsp)
  20f287: e8 54 d1 00 00               	callq	0x21c3e0 <memset>
  20f28c: 48 89 df                     	movq	%rbx, %rdi
  20f28f: 4c 89 f6                     	movq	%r14, %rsi
  20f292: e9 7c 03 00 00               	jmp	0x20f613 <dwarf.DwarfInfo.getLineNumberInfo+0x2043>
  20f297: 4d 89 fc                     	movq	%r15, %r12
  20f29a: 4c 8b 7c 24 18               	movq	24(%rsp), %r15
  20f29f: 4c 89 ff                     	movq	%r15, %rdi
  20f2a2: e8 a9 ca 00 00               	callq	0x21bd50 <builtin.returnError>
  20f2a7: 48 8b 44 24 68               	movq	104(%rsp), %rax
  20f2ac: 4c 8b 6c 24 70               	movq	112(%rsp), %r13
  20f2b1: be aa 00 00 00               	movl	$170, %esi
  20f2b6: 4c 89 e2                     	movq	%r12, %rdx
  20f2b9: 48 8b 18                     	movq	(%rax), %rbx
  20f2bc: 4c 8b 70 08                  	movq	8(%rax), %r14
  20f2c0: 4c 89 ef                     	movq	%r13, %rdi
  20f2c3: e8 18 d1 00 00               	callq	0x21c3e0 <memset>
  20f2c8: 4c 8b 44 24 60               	movq	96(%rsp), %r8
  20f2cd: 48 89 df                     	movq	%rbx, %rdi
  20f2d0: 4c 89 ee                     	movq	%r13, %rsi
  20f2d3: 4c 89 e2                     	movq	%r12, %rdx
  20f2d6: 31 c9                        	xorl	%ecx, %ecx
  20f2d8: e9 34 34 00 00               	jmp	0x212711 <dwarf.DwarfInfo.getLineNumberInfo+0x5141>
  20f2dd: 4c 89 e7                     	movq	%r12, %rdi
  20f2e0: e8 6b ca 00 00               	callq	0x21bd50 <builtin.returnError>
  20f2e5: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  20f2ed: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  20f2f2: 48 85 f6                     	testq	%rsi, %rsi
  20f2f5: 74 33                        	je	0x20f32a <dwarf.DwarfInfo.getLineNumberInfo+0x1d5a>
  20f2f7: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
  20f300: 48 8b 56 08                  	movq	8(%rsi), %rdx
  20f304: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  20f30c: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  20f314: 48 8b 1e                     	movq	(%rsi), %rbx
  20f317: b9 03 00 00 00               	movl	$3, %ecx
  20f31c: 4d 89 e8                     	movq	%r13, %r8
  20f31f: ff 50 10                     	callq	*16(%rax)
  20f322: 48 89 de                     	movq	%rbx, %rsi
  20f325: 48 85 db                     	testq	%rbx, %rbx
  20f328: 75 d6                        	jne	0x20f300 <dwarf.DwarfInfo.getLineNumberInfo+0x1d30>
  20f32a: 48 8b 7c 24 70               	movq	112(%rsp), %rdi
  20f32f: 4d 85 ff                     	testq	%r15, %r15
  20f332: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  20f33c: 48 0f 44 f8                  	cmoveq	%rax, %rdi
  20f340: 0f 84 7d 2b 00 00            	je	0x211ec3 <dwarf.DwarfInfo.getLineNumberInfo+0x48f3>
  20f346: 48 8b 44 24 68               	movq	104(%rsp), %rax
  20f34b: 4c 89 fd                     	movq	%r15, %rbp
  20f34e: 4c 89 fa                     	movq	%r15, %rdx
  20f351: be aa 00 00 00               	movl	$170, %esi
  20f356: 49 89 ff                     	movq	%rdi, %r15
  20f359: e9 fd 03 00 00               	jmp	0x20f75b <dwarf.DwarfInfo.getLineNumberInfo+0x218b>
  20f35e: 4c 89 e7                     	movq	%r12, %rdi
  20f361: e8 ea c9 00 00               	callq	0x21bd50 <builtin.returnError>
  20f366: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  20f36e: 4c 8b 7c 24 60               	movq	96(%rsp), %r15
  20f373: 48 85 f6                     	testq	%rsi, %rsi
  20f376: 74 32                        	je	0x20f3aa <dwarf.DwarfInfo.getLineNumberInfo+0x1dda>
  20f378: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
  20f380: 48 8b 56 08                  	movq	8(%rsi), %rdx
  20f384: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  20f38c: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  20f394: 48 8b 1e                     	movq	(%rsi), %rbx
  20f397: b9 03 00 00 00               	movl	$3, %ecx
  20f39c: 4d 89 f8                     	movq	%r15, %r8
  20f39f: ff 50 10                     	callq	*16(%rax)
  20f3a2: 48 89 de                     	movq	%rbx, %rsi
  20f3a5: 48 85 db                     	testq	%rbx, %rbx
  20f3a8: 75 d6                        	jne	0x20f380 <dwarf.DwarfInfo.getLineNumberInfo+0x1db0>
  20f3aa: 4c 8b 6c 24 58               	movq	88(%rsp), %r13
  20f3af: 48 8b 6c 24 70               	movq	112(%rsp), %rbp
  20f3b4: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  20f3be: 4d 85 ed                     	testq	%r13, %r13
  20f3c1: 48 0f 44 e8                  	cmoveq	%rax, %rbp
  20f3c5: 0f 84 dc fd ff ff            	je	0x20f1a7 <dwarf.DwarfInfo.getLineNumberInfo+0x1bd7>
  20f3cb: 48 8b 44 24 68               	movq	104(%rsp), %rax
  20f3d0: 48 89 ef                     	movq	%rbp, %rdi
  20f3d3: be aa 00 00 00               	movl	$170, %esi
  20f3d8: 4c 89 ea                     	movq	%r13, %rdx
  20f3db: 48 8b 18                     	movq	(%rax), %rbx
  20f3de: 4c 8b 70 08                  	movq	8(%rax), %r14
  20f3e2: e8 f9 cf 00 00               	callq	0x21c3e0 <memset>
  20f3e7: 48 89 df                     	movq	%rbx, %rdi
  20f3ea: 48 89 ee                     	movq	%rbp, %rsi
  20f3ed: 4c 89 ea                     	movq	%r13, %rdx
  20f3f0: 31 c9                        	xorl	%ecx, %ecx
  20f3f2: 4d 89 f8                     	movq	%r15, %r8
  20f3f5: 41 ff 56 10                  	callq	*16(%r14)
  20f3f9: e9 a9 fd ff ff               	jmp	0x20f1a7 <dwarf.DwarfInfo.getLineNumberInfo+0x1bd7>
  20f3fe: 4c 89 e7                     	movq	%r12, %rdi
  20f401: e8 4a c9 00 00               	callq	0x21bd50 <builtin.returnError>
  20f406: 48 8b 44 24 28               	movq	40(%rsp), %rax
  20f40b: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  20f413: 66 c7 40 20 34 00            	movw	$52, 32(%rax)
  20f419: 48 85 f6                     	testq	%rsi, %rsi
  20f41c: 74 2a                        	je	0x20f448 <dwarf.DwarfInfo.getLineNumberInfo+0x1e78>
  20f41e: 48 8b 56 08                  	movq	8(%rsi), %rdx
  20f422: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  20f42a: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  20f432: 48 8b 1e                     	movq	(%rsi), %rbx
  20f435: b9 03 00 00 00               	movl	$3, %ecx
  20f43a: 4d 89 e8                     	movq	%r13, %r8
  20f43d: ff 50 10                     	callq	*16(%rax)
  20f440: 48 89 de                     	movq	%rbx, %rsi
  20f443: 48 85 db                     	testq	%rbx, %rbx
  20f446: 75 d6                        	jne	0x20f41e <dwarf.DwarfInfo.getLineNumberInfo+0x1e4e>
  20f448: 48 8b 6c 24 70               	movq	112(%rsp), %rbp
  20f44d: 4d 85 ff                     	testq	%r15, %r15
  20f450: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  20f45a: 48 0f 44 e8                  	cmoveq	%rax, %rbp
  20f45e: 74 2e                        	je	0x20f48e <dwarf.DwarfInfo.getLineNumberInfo+0x1ebe>
  20f460: 48 8b 44 24 68               	movq	104(%rsp), %rax
  20f465: 48 89 ef                     	movq	%rbp, %rdi
  20f468: be aa 00 00 00               	movl	$170, %esi
  20f46d: 4c 89 fa                     	movq	%r15, %rdx
  20f470: 48 8b 18                     	movq	(%rax), %rbx
  20f473: 4c 8b 70 08                  	movq	8(%rax), %r14
  20f477: e8 64 cf 00 00               	callq	0x21c3e0 <memset>
  20f47c: 48 89 df                     	movq	%rbx, %rdi
  20f47f: 48 89 ee                     	movq	%rbp, %rsi
  20f482: 4c 89 fa                     	movq	%r15, %rdx
  20f485: 31 c9                        	xorl	%ecx, %ecx
  20f487: 4d 89 e8                     	movq	%r13, %r8
  20f48a: 41 ff 56 10                  	callq	*16(%r14)
  20f48e: 48 8b 44 24 28               	movq	40(%rsp), %rax
  20f493: 66 83 78 20 00               	cmpw	$0, 32(%rax)
  20f498: 0f 84 67 3e 00 00            	je	0x213305 <dwarf.DwarfInfo.getLineNumberInfo+0x5d35>
  20f49e: e9 a2 fc ff ff               	jmp	0x20f145 <dwarf.DwarfInfo.getLineNumberInfo+0x1b75>
  20f4a3: 4c 8b 74 24 18               	movq	24(%rsp), %r14
  20f4a8: 4c 89 f7                     	movq	%r14, %rdi
  20f4ab: e8 a0 c8 00 00               	callq	0x21bd50 <builtin.returnError>
  20f4b0: 66 b9 33 00                  	movw	$51, %cx
  20f4b4: 4c 89 f7                     	movq	%r14, %rdi
  20f4b7: 66 89 4c 24 18               	movw	%cx, 24(%rsp)
  20f4bc: e8 8f c8 00 00               	callq	0x21bd50 <builtin.returnError>
  20f4c1: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  20f4c9: 4c 8b 64 24 60               	movq	96(%rsp), %r12
  20f4ce: 4d 89 f7                     	movq	%r14, %r15
  20f4d1: 48 85 f6                     	testq	%rsi, %rsi
  20f4d4: 74 34                        	je	0x20f50a <dwarf.DwarfInfo.getLineNumberInfo+0x1f3a>
  20f4d6: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
  20f4e0: 48 8b 56 08                  	movq	8(%rsi), %rdx
  20f4e4: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  20f4ec: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  20f4f4: 48 8b 1e                     	movq	(%rsi), %rbx
  20f4f7: b9 03 00 00 00               	movl	$3, %ecx
  20f4fc: 4d 89 e0                     	movq	%r12, %r8
  20f4ff: ff 50 10                     	callq	*16(%rax)
  20f502: 48 89 de                     	movq	%rbx, %rsi
  20f505: 48 85 db                     	testq	%rbx, %rbx
  20f508: 75 d6                        	jne	0x20f4e0 <dwarf.DwarfInfo.getLineNumberInfo+0x1f10>
  20f50a: 4c 8b 6c 24 58               	movq	88(%rsp), %r13
  20f50f: 48 8b 6c 24 70               	movq	112(%rsp), %rbp
  20f514: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  20f51e: 4d 85 ed                     	testq	%r13, %r13
  20f521: 48 0f 44 e8                  	cmoveq	%rax, %rbp
  20f525: 74 2e                        	je	0x20f555 <dwarf.DwarfInfo.getLineNumberInfo+0x1f85>
  20f527: 48 8b 44 24 68               	movq	104(%rsp), %rax
  20f52c: 48 89 ef                     	movq	%rbp, %rdi
  20f52f: be aa 00 00 00               	movl	$170, %esi
  20f534: 4c 89 ea                     	movq	%r13, %rdx
  20f537: 48 8b 18                     	movq	(%rax), %rbx
  20f53a: 4c 8b 70 08                  	movq	8(%rax), %r14
  20f53e: e8 9d ce 00 00               	callq	0x21c3e0 <memset>
  20f543: 48 89 df                     	movq	%rbx, %rdi
  20f546: 48 89 ee                     	movq	%rbp, %rsi
  20f549: 4c 89 ea                     	movq	%r13, %rdx
  20f54c: 31 c9                        	xorl	%ecx, %ecx
  20f54e: 4d 89 e0                     	movq	%r12, %r8
  20f551: 41 ff 56 10                  	callq	*16(%r14)
  20f555: 4c 89 ff                     	movq	%r15, %rdi
  20f558: e8 f3 c7 00 00               	callq	0x21bd50 <builtin.returnError>
  20f55d: 0f b7 4c 24 18               	movzwl	24(%rsp), %ecx
  20f562: 48 8b 44 24 28               	movq	40(%rsp), %rax
  20f567: 66 89 48 20                  	movw	%cx, 32(%rax)
  20f56b: e9 95 3d 00 00               	jmp	0x213305 <dwarf.DwarfInfo.getLineNumberInfo+0x5d35>
  20f570: 4c 8b 64 24 18               	movq	24(%rsp), %r12
  20f575: 4c 89 e7                     	movq	%r12, %rdi
  20f578: e8 d3 c7 00 00               	callq	0x21bd50 <builtin.returnError>
  20f57d: 66 bd 33 00                  	movw	$51, %bp
  20f581: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  20f586: 4c 8b 7c 24 58               	movq	88(%rsp), %r15
  20f58b: 4c 89 e7                     	movq	%r12, %rdi
  20f58e: e8 bd c7 00 00               	callq	0x21bd50 <builtin.returnError>
  20f593: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  20f59b: 48 85 f6                     	testq	%rsi, %rsi
  20f59e: 74 2a                        	je	0x20f5ca <dwarf.DwarfInfo.getLineNumberInfo+0x1ffa>
  20f5a0: 48 8b 56 08                  	movq	8(%rsi), %rdx
  20f5a4: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  20f5ac: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  20f5b4: 48 8b 1e                     	movq	(%rsi), %rbx
  20f5b7: b9 03 00 00 00               	movl	$3, %ecx
  20f5bc: 4d 89 e8                     	movq	%r13, %r8
  20f5bf: ff 50 10                     	callq	*16(%rax)
  20f5c2: 48 89 de                     	movq	%rbx, %rsi
  20f5c5: 48 85 db                     	testq	%rbx, %rbx
  20f5c8: 75 d6                        	jne	0x20f5a0 <dwarf.DwarfInfo.getLineNumberInfo+0x1fd0>
  20f5ca: 48 8b 7c 24 70               	movq	112(%rsp), %rdi
  20f5cf: 4d 85 ff                     	testq	%r15, %r15
  20f5d2: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  20f5dc: 48 0f 44 f8                  	cmoveq	%rax, %rdi
  20f5e0: 0f 84 e8 00 00 00            	je	0x20f6ce <dwarf.DwarfInfo.getLineNumberInfo+0x20fe>
  20f5e6: 48 8b 44 24 68               	movq	104(%rsp), %rax
  20f5eb: be aa 00 00 00               	movl	$170, %esi
  20f5f0: 4c 89 fa                     	movq	%r15, %rdx
  20f5f3: 41 89 ee                     	movl	%ebp, %r14d
  20f5f6: 48 89 fd                     	movq	%rdi, %rbp
  20f5f9: 48 8b 18                     	movq	(%rax), %rbx
  20f5fc: 48 8b 40 08                  	movq	8(%rax), %rax
  20f600: 48 89 44 24 18               	movq	%rax, 24(%rsp)
  20f605: e8 d6 cd 00 00               	callq	0x21c3e0 <memset>
  20f60a: 48 89 ee                     	movq	%rbp, %rsi
  20f60d: 48 89 df                     	movq	%rbx, %rdi
  20f610: 44 89 f5                     	movl	%r14d, %ebp
  20f613: 4c 89 fa                     	movq	%r15, %rdx
  20f616: 31 c9                        	xorl	%ecx, %ecx
  20f618: 4d 89 e8                     	movq	%r13, %r8
  20f61b: e9 a6 00 00 00               	jmp	0x20f6c6 <dwarf.DwarfInfo.getLineNumberInfo+0x20f6>
  20f620: 4c 89 e7                     	movq	%r12, %rdi
  20f623: e8 28 c7 00 00               	callq	0x21bd50 <builtin.returnError>
  20f628: 66 bd 33 00                  	movw	$51, %bp
  20f62c: 4c 89 e7                     	movq	%r12, %rdi
  20f62f: e8 1c c7 00 00               	callq	0x21bd50 <builtin.returnError>
  20f634: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  20f63c: 4c 8b 7c 24 60               	movq	96(%rsp), %r15
  20f641: 48 85 f6                     	testq	%rsi, %rsi
  20f644: 74 34                        	je	0x20f67a <dwarf.DwarfInfo.getLineNumberInfo+0x20aa>
  20f646: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
  20f650: 48 8b 56 08                  	movq	8(%rsi), %rdx
  20f654: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  20f65c: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  20f664: 48 8b 1e                     	movq	(%rsi), %rbx
  20f667: b9 03 00 00 00               	movl	$3, %ecx
  20f66c: 4d 89 f8                     	movq	%r15, %r8
  20f66f: ff 50 10                     	callq	*16(%rax)
  20f672: 48 89 de                     	movq	%rbx, %rsi
  20f675: 48 85 db                     	testq	%rbx, %rbx
  20f678: 75 d6                        	jne	0x20f650 <dwarf.DwarfInfo.getLineNumberInfo+0x2080>
  20f67a: 4c 8b 6c 24 58               	movq	88(%rsp), %r13
  20f67f: 4c 8b 74 24 70               	movq	112(%rsp), %r14
  20f684: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  20f68e: 4d 85 ed                     	testq	%r13, %r13
  20f691: 4c 0f 44 f0                  	cmoveq	%rax, %r14
  20f695: 74 37                        	je	0x20f6ce <dwarf.DwarfInfo.getLineNumberInfo+0x20fe>
  20f697: 48 8b 44 24 68               	movq	104(%rsp), %rax
  20f69c: 4c 89 f7                     	movq	%r14, %rdi
  20f69f: be aa 00 00 00               	movl	$170, %esi
  20f6a4: 4c 89 ea                     	movq	%r13, %rdx
  20f6a7: 48 8b 18                     	movq	(%rax), %rbx
  20f6aa: 48 8b 40 08                  	movq	8(%rax), %rax
  20f6ae: 48 89 44 24 18               	movq	%rax, 24(%rsp)
  20f6b3: e8 28 cd 00 00               	callq	0x21c3e0 <memset>
  20f6b8: 48 89 df                     	movq	%rbx, %rdi
  20f6bb: 4c 89 f6                     	movq	%r14, %rsi
  20f6be: 4c 89 ea                     	movq	%r13, %rdx
  20f6c1: 31 c9                        	xorl	%ecx, %ecx
  20f6c3: 4d 89 f8                     	movq	%r15, %r8
  20f6c6: 48 8b 44 24 18               	movq	24(%rsp), %rax
  20f6cb: ff 50 10                     	callq	*16(%rax)
  20f6ce: 4c 89 e7                     	movq	%r12, %rdi
  20f6d1: e9 21 3c 00 00               	jmp	0x2132f7 <dwarf.DwarfInfo.getLineNumberInfo+0x5d27>
  20f6d6: 48 89 df                     	movq	%rbx, %rdi
  20f6d9: e8 72 c6 00 00               	callq	0x21bd50 <builtin.returnError>
  20f6de: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  20f6e6: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  20f6eb: 49 89 dc                     	movq	%rbx, %r12
  20f6ee: 48 85 f6                     	testq	%rsi, %rsi
  20f6f1: 74 37                        	je	0x20f72a <dwarf.DwarfInfo.getLineNumberInfo+0x215a>
  20f6f3: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
  20f700: 48 8b 56 08                  	movq	8(%rsi), %rdx
  20f704: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  20f70c: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  20f714: 48 8b 1e                     	movq	(%rsi), %rbx
  20f717: b9 03 00 00 00               	movl	$3, %ecx
  20f71c: 4d 89 e8                     	movq	%r13, %r8
  20f71f: ff 50 10                     	callq	*16(%rax)
  20f722: 48 89 de                     	movq	%rbx, %rsi
  20f725: 48 85 db                     	testq	%rbx, %rbx
  20f728: 75 d6                        	jne	0x20f700 <dwarf.DwarfInfo.getLineNumberInfo+0x2130>
  20f72a: 48 8b 6c 24 58               	movq	88(%rsp), %rbp
  20f72f: 4c 8b 7c 24 70               	movq	112(%rsp), %r15
  20f734: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  20f73e: 48 85 ed                     	testq	%rbp, %rbp
  20f741: 4c 0f 44 f8                  	cmoveq	%rax, %r15
  20f745: 0f 84 78 27 00 00            	je	0x211ec3 <dwarf.DwarfInfo.getLineNumberInfo+0x48f3>
  20f74b: 48 8b 44 24 68               	movq	104(%rsp), %rax
  20f750: 4c 89 ff                     	movq	%r15, %rdi
  20f753: be aa 00 00 00               	movl	$170, %esi
  20f758: 48 89 ea                     	movq	%rbp, %rdx
  20f75b: 48 8b 18                     	movq	(%rax), %rbx
  20f75e: 48 8b 40 08                  	movq	8(%rax), %rax
  20f762: 48 89 44 24 18               	movq	%rax, 24(%rsp)
  20f767: e8 74 cc 00 00               	callq	0x21c3e0 <memset>
  20f76c: 48 89 df                     	movq	%rbx, %rdi
  20f76f: 4c 89 fe                     	movq	%r15, %rsi
  20f772: 48 8b 44 24 18               	movq	24(%rsp), %rax
  20f777: e9 3c 27 00 00               	jmp	0x211eb8 <dwarf.DwarfInfo.getLineNumberInfo+0x48e8>
  20f77c: 48 8b 7c 24 18               	movq	24(%rsp), %rdi
  20f781: e8 ca c5 00 00               	callq	0x21bd50 <builtin.returnError>
  20f786: 66 bb 33 00                  	movw	$51, %bx
  20f78a: 4c 8b 64 24 18               	movq	24(%rsp), %r12
  20f78f: 4c 89 e7                     	movq	%r12, %rdi
  20f792: e8 b9 c5 00 00               	callq	0x21bd50 <builtin.returnError>
  20f797: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  20f79f: 48 85 f6                     	testq	%rsi, %rsi
  20f7a2: 74 36                        	je	0x20f7da <dwarf.DwarfInfo.getLineNumberInfo+0x220a>
  20f7a4: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
  20f7b0: 48 8b 56 08                  	movq	8(%rsi), %rdx
  20f7b4: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  20f7bc: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  20f7c4: 4c 8b 36                     	movq	(%rsi), %r14
  20f7c7: b9 03 00 00 00               	movl	$3, %ecx
  20f7cc: 4d 89 e8                     	movq	%r13, %r8
  20f7cf: ff 50 10                     	callq	*16(%rax)
  20f7d2: 4c 89 f6                     	movq	%r14, %rsi
  20f7d5: 4d 85 f6                     	testq	%r14, %r14
  20f7d8: 75 d6                        	jne	0x20f7b0 <dwarf.DwarfInfo.getLineNumberInfo+0x21e0>
  20f7da: 48 8b 6c 24 58               	movq	88(%rsp), %rbp
  20f7df: 4c 8b 7c 24 70               	movq	112(%rsp), %r15
  20f7e4: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  20f7ee: 48 85 ed                     	testq	%rbp, %rbp
  20f7f1: 4c 0f 44 f8                  	cmoveq	%rax, %r15
  20f7f5: 0f 85 71 28 00 00            	jne	0x21206c <dwarf.DwarfInfo.getLineNumberInfo+0x4a9c>
  20f7fb: e9 a3 28 00 00               	jmp	0x2120a3 <dwarf.DwarfInfo.getLineNumberInfo+0x4ad3>
  20f800: 48 8b 7c 24 18               	movq	24(%rsp), %rdi
  20f805: e8 46 c5 00 00               	callq	0x21bd50 <builtin.returnError>
  20f80a: 66 41 bf 33 00               	movw	$51, %r15w
  20f80f: 4c 8b 64 24 18               	movq	24(%rsp), %r12
  20f814: 4c 89 e7                     	movq	%r12, %rdi
  20f817: e8 34 c5 00 00               	callq	0x21bd50 <builtin.returnError>
  20f81c: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  20f824: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  20f829: 48 85 f6                     	testq	%rsi, %rsi
  20f82c: 74 2c                        	je	0x20f85a <dwarf.DwarfInfo.getLineNumberInfo+0x228a>
  20f82e: 66 90                        	nop
  20f830: 48 8b 56 08                  	movq	8(%rsi), %rdx
  20f834: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  20f83c: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  20f844: 48 8b 1e                     	movq	(%rsi), %rbx
  20f847: b9 03 00 00 00               	movl	$3, %ecx
  20f84c: 4d 89 e8                     	movq	%r13, %r8
  20f84f: ff 50 10                     	callq	*16(%rax)
  20f852: 48 89 de                     	movq	%rbx, %rsi
  20f855: 48 85 db                     	testq	%rbx, %rbx
  20f858: 75 d6                        	jne	0x20f830 <dwarf.DwarfInfo.getLineNumberInfo+0x2260>
  20f85a: 48 8b 6c 24 58               	movq	88(%rsp), %rbp
  20f85f: 4c 8b 74 24 70               	movq	112(%rsp), %r14
  20f864: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  20f86e: 48 85 ed                     	testq	%rbp, %rbp
  20f871: 4c 0f 44 f0                  	cmoveq	%rax, %r14
  20f875: 74 37                        	je	0x20f8ae <dwarf.DwarfInfo.getLineNumberInfo+0x22de>
  20f877: 48 8b 44 24 68               	movq	104(%rsp), %rax
  20f87c: 4c 89 f7                     	movq	%r14, %rdi
  20f87f: be aa 00 00 00               	movl	$170, %esi
  20f884: 48 89 ea                     	movq	%rbp, %rdx
  20f887: 48 8b 18                     	movq	(%rax), %rbx
  20f88a: 48 8b 40 08                  	movq	8(%rax), %rax
  20f88e: 48 89 44 24 78               	movq	%rax, 120(%rsp)
  20f893: e8 48 cb 00 00               	callq	0x21c3e0 <memset>
  20f898: 48 8b 44 24 78               	movq	120(%rsp), %rax
  20f89d: 48 89 df                     	movq	%rbx, %rdi
  20f8a0: 4c 89 f6                     	movq	%r14, %rsi
  20f8a3: 48 89 ea                     	movq	%rbp, %rdx
  20f8a6: 31 c9                        	xorl	%ecx, %ecx
  20f8a8: 4d 89 e8                     	movq	%r13, %r8
  20f8ab: ff 50 10                     	callq	*16(%rax)
  20f8ae: 4c 89 e7                     	movq	%r12, %rdi
  20f8b1: e8 9a c4 00 00               	callq	0x21bd50 <builtin.returnError>
  20f8b6: 48 8b 44 24 28               	movq	40(%rsp), %rax
  20f8bb: 66 44 89 78 20               	movw	%r15w, 32(%rax)
  20f8c0: e9 40 3a 00 00               	jmp	0x213305 <dwarf.DwarfInfo.getLineNumberInfo+0x5d35>
  20f8c5: 4c 89 e7                     	movq	%r12, %rdi
  20f8c8: e8 83 c4 00 00               	callq	0x21bd50 <builtin.returnError>
  20f8cd: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  20f8d5: 48 85 f6                     	testq	%rsi, %rsi
  20f8d8: 0f 84 71 f9 ff ff            	je	0x20f24f <dwarf.DwarfInfo.getLineNumberInfo+0x1c7f>
  20f8de: 66 90                        	nop
  20f8e0: 48 8b 56 08                  	movq	8(%rsi), %rdx
  20f8e4: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  20f8ec: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  20f8f4: 48 8b 1e                     	movq	(%rsi), %rbx
  20f8f7: b9 03 00 00 00               	movl	$3, %ecx
  20f8fc: 4d 89 e8                     	movq	%r13, %r8
  20f8ff: ff 50 10                     	callq	*16(%rax)
  20f902: 48 89 de                     	movq	%rbx, %rsi
  20f905: 48 85 db                     	testq	%rbx, %rbx
  20f908: 75 d6                        	jne	0x20f8e0 <dwarf.DwarfInfo.getLineNumberInfo+0x2310>
  20f90a: e9 40 f9 ff ff               	jmp	0x20f24f <dwarf.DwarfInfo.getLineNumberInfo+0x1c7f>
  20f90f: bf 9c 1e 20 00               	movl	$2104988, %edi          # imm = 0x201E9C
  20f914: be 13 00 00 00               	movl	$19, %esi
  20f919: 31 c9                        	xorl	%ecx, %ecx
  20f91b: e8 f0 b9 00 00               	callq	0x21b310 <builtin.default_panic>
  20f920: bf b0 1e 20 00               	movl	$2105008, %edi          # imm = 0x201EB0
  20f925: be 17 00 00 00               	movl	$23, %esi
  20f92a: 31 c9                        	xorl	%ecx, %ecx
  20f92c: e8 df b9 00 00               	callq	0x21b310 <builtin.default_panic>
  20f931: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  20f936: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20f93b: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20f940: b9 01 00 00 00               	movl	$1, %ecx
  20f945: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20f94a: e8 31 99 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20f94f: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  20f955: 4c 8b 7c 24 18               	movq	24(%rsp), %r15
  20f95a: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  20f95f: 0f 84 3a 26 00 00            	je	0x211f9f <dwarf.DwarfInfo.getLineNumberInfo+0x49cf>
  20f965: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20f96a: a8 7e                        	testb	$126, %al
  20f96c: 0f 85 cd 39 00 00            	jne	0x21333f <dwarf.DwarfInfo.getLineNumberInfo+0x5d6f>
  20f972: 4c 8b 7c 24 18               	movq	24(%rsp), %r15
  20f977: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  20f97c: 66 bd 29 00                  	movw	$41, %bp
  20f980: 84 c0                        	testb	%al, %al
  20f982: 0f 88 23 26 00 00            	js	0x211fab <dwarf.DwarfInfo.getLineNumberInfo+0x49db>
  20f988: 48 c1 e0 3f                  	shlq	$63, %rax
  20f98c: 49 09 c6                     	orq	%rax, %r14
  20f98f: 0f b6 84 24 b8 00 00 00      	movzbl	184(%rsp), %eax
  20f997: 89 84 24 a8 00 00 00         	movl	%eax, 168(%rsp)
  20f99e: 4d 85 f6                     	testq	%r14, %r14
  20f9a1: 0f 84 be 03 00 00            	je	0x20fd65 <dwarf.DwarfInfo.getLineNumberInfo+0x2795>
  20f9a7: 31 d2                        	xorl	%edx, %edx
  20f9a9: 48 c7 c0 ff ff ff ff         	movq	$-1, %rax
  20f9b0: 48 89 d1                     	movq	%rdx, %rcx
  20f9b3: 48 d1 e9                     	shrq	%rcx
  20f9b6: 48 83 c1 08                  	addq	$8, %rcx
  20f9ba: 48 01 ca                     	addq	%rcx, %rdx
  20f9bd: 48 0f 42 d0                  	cmovbq	%rax, %rdx
  20f9c1: 4c 39 f2                     	cmpq	%r14, %rdx
  20f9c4: 72 ea                        	jb	0x20f9b0 <dwarf.DwarfInfo.getLineNumberInfo+0x23e0>
  20f9c6: 48 8d b4 24 38 02 00 00      	leaq	568(%rsp), %rsi
  20f9ce: 4c 89 ff                     	movq	%r15, %rdi
  20f9d1: e8 0a b3 00 00               	callq	0x21ace0 <array_list.ArrayListAligned(dwarf.FileEntry,null).ensureTotalCapacityPrecise>
  20f9d6: 66 85 c0                     	testw	%ax, %ax
  20f9d9: 0f 85 20 29 00 00            	jne	0x2122ff <dwarf.DwarfInfo.getLineNumberInfo+0x4d2f>
  20f9df: 48 8b 84 24 38 02 00 00      	movq	568(%rsp), %rax
  20f9e7: 48 8b 94 24 40 02 00 00      	movq	576(%rsp), %rdx
  20f9ef: 48 8b 8c 24 c8 00 00 00      	movq	200(%rsp), %rcx
  20f9f7: 4c 8d a4 24 50 03 00 00      	leaq	848(%rsp), %r12
  20f9ff: 4c 8d ac 24 20 01 00 00      	leaq	288(%rsp), %r13
  20fa07: 48 8d 6c 24 20               	leaq	32(%rsp), %rbp
  20fa0c: 4c 89 b4 24 78 01 00 00      	movq	%r14, 376(%rsp)
  20fa14: 48 89 84 24 70 01 00 00      	movq	%rax, 368(%rsp)
  20fa1c: 48 8b 84 24 48 02 00 00      	movq	584(%rsp), %rax
  20fa24: 48 89 84 24 80 01 00 00      	movq	%rax, 384(%rsp)
  20fa2c: 31 c0                        	xorl	%eax, %eax
  20fa2e: 66 90                        	nop
  20fa30: c5 f8 57 c0                  	vxorps	%xmm0, %xmm0, %xmm0
  20fa34: 48 89 84 24 88 01 00 00      	movq	%rax, 392(%rsp)
  20fa3c: 48 89 94 24 00 01 00 00      	movq	%rdx, 256(%rsp)
  20fa44: c5 f8 29 84 24 b0 02 00 00   	vmovaps	%xmm0, 688(%rsp)
  20fa4d: 84 c9                        	testb	%cl, %cl
  20fa4f: 0f 84 3b 02 00 00            	je	0x20fc90 <dwarf.DwarfInfo.getLineNumberInfo+0x26c0>
  20fa55: b8 01 00 00 00               	movl	$1, %eax
  20fa5a: 45 31 ff                     	xorl	%r15d, %r15d
  20fa5d: c7 84 24 b8 00 00 00 00 00 00 00     	movl	$0, 184(%rsp)
  20fa68: 48 89 84 24 c0 00 00 00      	movq	%rax, 192(%rsp)
  20fa70: 31 c0                        	xorl	%eax, %eax
  20fa72: 48 89 84 24 f0 00 00 00      	movq	%rax, 240(%rsp)
  20fa7a: 31 c0                        	xorl	%eax, %eax
  20fa7c: 48 89 84 24 e8 00 00 00      	movq	%rax, 232(%rsp)
  20fa84: 31 c0                        	xorl	%eax, %eax
  20fa86: 48 89 84 24 e0 00 00 00      	movq	%rax, 224(%rsp)
  20fa8e: eb 1c                        	jmp	0x20faac <dwarf.DwarfInfo.getLineNumberInfo+0x24dc>
  20fa90: 48 8b 8c 24 c8 00 00 00      	movq	200(%rsp), %rcx
  20fa98: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
  20faa0: 49 ff c7                     	incq	%r15
  20faa3: 4c 39 f9                     	cmpq	%r15, %rcx
  20faa6: 0f 84 1a 02 00 00            	je	0x20fcc6 <dwarf.DwarfInfo.getLineNumberInfo+0x26f6>
  20faac: 48 8b 44 24 78               	movq	120(%rsp), %rax
  20fab1: 8b 8c 24 a8 00 00 00         	movl	168(%rsp), %ecx
  20fab8: 46 0f b7 84 bc 90 03 00 00   	movzwl	912(%rsp,%r15,4), %r8d
  20fac1: 48 8b 74 24 18               	movq	24(%rsp), %rsi
  20fac6: 42 0f b6 9c bc 92 03 00 00   	movzbl	914(%rsp,%r15,4), %ebx
  20facf: 4c 89 e7                     	movq	%r12, %rdi
  20fad2: 4c 89 ea                     	movq	%r13, %rdx
  20fad5: 44 8b 88 08 01 00 00         	movl	264(%rax), %r9d
  20fadc: 89 0c 24                     	movl	%ecx, (%rsp)
  20fadf: 48 89 e9                     	movq	%rbp, %rcx
  20fae2: e8 89 9e ff ff               	callq	0x209970 <dwarf.parseFormValue__anon_5650>
  20fae7: 44 0f b7 b4 24 68 03 00 00   	movzwl	872(%rsp), %r14d
  20faf0: 66 45 85 f6                  	testw	%r14w, %r14w
  20faf4: 0f 85 2a 23 00 00            	jne	0x211e24 <dwarf.DwarfInfo.getLineNumberInfo+0x4854>
  20fafa: c5 f8 10 84 24 50 03 00 00   	vmovups	848(%rsp), %xmm0
  20fb03: 48 8b 84 24 60 03 00 00      	movq	864(%rsp), %rax
  20fb0b: ff cb                        	decl	%ebx
  20fb0d: 48 89 84 24 40 01 00 00      	movq	%rax, 320(%rsp)
  20fb15: c5 f8 29 84 24 30 01 00 00   	vmovaps	%xmm0, 304(%rsp)
  20fb1e: 83 fb 04                     	cmpl	$4, %ebx
  20fb21: 0f 87 69 ff ff ff            	ja	0x20fa90 <dwarf.DwarfInfo.getLineNumberInfo+0x24c0>
  20fb27: ff 24 dd e0 0c 20 00         	jmpq	*2100448(,%rbx,8)
  20fb2e: 48 8b 74 24 18               	movq	24(%rsp), %rsi
  20fb33: 48 8b 4c 24 78               	movq	120(%rsp), %rcx
  20fb38: 48 8d bc 24 08 03 00 00      	leaq	776(%rsp), %rdi
  20fb40: 48 8d 94 24 30 01 00 00      	leaq	304(%rsp), %rdx
  20fb48: e8 53 d4 ff ff               	callq	0x20cfa0 <dwarf.FormValue.getString>
  20fb4d: 44 0f b7 b4 24 18 03 00 00   	movzwl	792(%rsp), %r14d
  20fb56: 48 8b 8c 24 c8 00 00 00      	movq	200(%rsp), %rcx
  20fb5e: 66 45 85 f6                  	testw	%r14w, %r14w
  20fb62: 0f 85 97 26 00 00            	jne	0x2121ff <dwarf.DwarfInfo.getLineNumberInfo+0x4c2f>
  20fb68: 48 8b 84 24 08 03 00 00      	movq	776(%rsp), %rax
  20fb70: 48 8b 94 24 10 03 00 00      	movq	784(%rsp), %rdx
  20fb78: 48 89 84 24 c0 00 00 00      	movq	%rax, 192(%rsp)
  20fb80: 48 89 94 24 f0 00 00 00      	movq	%rdx, 240(%rsp)
  20fb88: e9 13 ff ff ff               	jmp	0x20faa0 <dwarf.DwarfInfo.getLineNumberInfo+0x24d0>
  20fb8d: 80 bc 24 40 01 00 00 0f      	cmpb	$15, 320(%rsp)
  20fb95: 48 8b 8c 24 c8 00 00 00      	movq	200(%rsp), %rcx
  20fb9d: 0f 85 ac 26 00 00            	jne	0x21224f <dwarf.DwarfInfo.getLineNumberInfo+0x4c7f>
  20fba3: c5 f8 10 84 24 50 03 00 00   	vmovups	848(%rsp), %xmm0
  20fbac: c5 f8 29 84 24 b0 02 00 00   	vmovaps	%xmm0, 688(%rsp)
  20fbb5: e9 e6 fe ff ff               	jmp	0x20faa0 <dwarf.DwarfInfo.getLineNumberInfo+0x24d0>
  20fbba: 48 8b 74 24 18               	movq	24(%rsp), %rsi
  20fbbf: 48 8d bc 24 28 02 00 00      	leaq	552(%rsp), %rdi
  20fbc7: 48 8d 94 24 30 01 00 00      	leaq	304(%rsp), %rdx
  20fbcf: e8 dc d5 ff ff               	callq	0x20d1b0 <dwarf.FormValue.getUInt__anon_5815>
  20fbd4: 44 0f b7 b4 24 2c 02 00 00   	movzwl	556(%rsp), %r14d
  20fbdd: 48 8b 8c 24 c8 00 00 00      	movq	200(%rsp), %rcx
  20fbe5: 66 45 85 f6                  	testw	%r14w, %r14w
  20fbe9: 0f 85 c0 26 00 00            	jne	0x2122af <dwarf.DwarfInfo.getLineNumberInfo+0x4cdf>
  20fbef: 8b 84 24 28 02 00 00         	movl	552(%rsp), %eax
  20fbf6: 89 84 24 b8 00 00 00         	movl	%eax, 184(%rsp)
  20fbfd: e9 9e fe ff ff               	jmp	0x20faa0 <dwarf.DwarfInfo.getLineNumberInfo+0x24d0>
  20fc02: 0f b6 84 24 40 01 00 00      	movzbl	320(%rsp), %eax
  20fc0a: 48 8b 8c 24 c8 00 00 00      	movq	200(%rsp), %rcx
  20fc12: 83 f8 06                     	cmpl	$6, %eax
  20fc15: 74 17                        	je	0x20fc2e <dwarf.DwarfInfo.getLineNumberInfo+0x265e>
  20fc17: 83 f8 03                     	cmpl	$3, %eax
  20fc1a: 0f 85 19 2c 00 00            	jne	0x212839 <dwarf.DwarfInfo.getLineNumberInfo+0x5269>
  20fc20: 80 bc 24 38 01 00 00 01      	cmpb	$1, 312(%rsp)
  20fc28: 0f 84 01 2c 00 00            	je	0x21282f <dwarf.DwarfInfo.getLineNumberInfo+0x525f>
  20fc2e: 48 8b 84 24 30 01 00 00      	movq	304(%rsp), %rax
  20fc36: 48 89 84 24 e8 00 00 00      	movq	%rax, 232(%rsp)
  20fc3e: e9 5d fe ff ff               	jmp	0x20faa0 <dwarf.DwarfInfo.getLineNumberInfo+0x24d0>
  20fc43: 0f b6 84 24 40 01 00 00      	movzbl	320(%rsp), %eax
  20fc4b: 48 8b 8c 24 c8 00 00 00      	movq	200(%rsp), %rcx
  20fc53: 83 f8 06                     	cmpl	$6, %eax
  20fc56: 74 17                        	je	0x20fc6f <dwarf.DwarfInfo.getLineNumberInfo+0x269f>
  20fc58: 83 f8 03                     	cmpl	$3, %eax
  20fc5b: 0f 85 48 2c 00 00            	jne	0x2128a9 <dwarf.DwarfInfo.getLineNumberInfo+0x52d9>
  20fc61: 80 bc 24 38 01 00 00 01      	cmpb	$1, 312(%rsp)
  20fc69: 0f 84 30 2c 00 00            	je	0x21289f <dwarf.DwarfInfo.getLineNumberInfo+0x52cf>
  20fc6f: 48 8b 84 24 30 01 00 00      	movq	304(%rsp), %rax
  20fc77: 48 89 84 24 e0 00 00 00      	movq	%rax, 224(%rsp)
  20fc7f: e9 1c fe ff ff               	jmp	0x20faa0 <dwarf.DwarfInfo.getLineNumberInfo+0x24d0>
  20fc84: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
  20fc90: b8 01 00 00 00               	movl	$1, %eax
  20fc95: c7 84 24 b8 00 00 00 00 00 00 00     	movl	$0, 184(%rsp)
  20fca0: 48 89 84 24 c0 00 00 00      	movq	%rax, 192(%rsp)
  20fca8: 31 c0                        	xorl	%eax, %eax
  20fcaa: 48 89 84 24 e0 00 00 00      	movq	%rax, 224(%rsp)
  20fcb2: 31 c0                        	xorl	%eax, %eax
  20fcb4: 48 89 84 24 e8 00 00 00      	movq	%rax, 232(%rsp)
  20fcbc: 31 c0                        	xorl	%eax, %eax
  20fcbe: 48 89 84 24 f0 00 00 00      	movq	%rax, 240(%rsp)
  20fcc6: 48 8b 94 24 00 01 00 00      	movq	256(%rsp), %rdx
  20fcce: 48 3b 94 24 80 01 00 00      	cmpq	384(%rsp), %rdx
  20fcd6: 0f 83 3e 36 00 00            	jae	0x21331a <dwarf.DwarfInfo.getLineNumberInfo+0x5d4a>
  20fcdc: 48 6b c2 38                  	imulq	$56, %rdx, %rax
  20fce0: 48 8b b4 24 70 01 00 00      	movq	368(%rsp), %rsi
  20fce8: 48 8b bc 24 c0 00 00 00      	movq	192(%rsp), %rdi
  20fcf0: 4c 8b 8c 24 f0 00 00 00      	movq	240(%rsp), %r9
  20fcf8: 4c 8b 94 24 e8 00 00 00      	movq	232(%rsp), %r10
  20fd00: 44 8b 84 24 b8 00 00 00      	movl	184(%rsp), %r8d
  20fd08: 48 ff c2                     	incq	%rdx
  20fd0b: 48 89 3c 06                  	movq	%rdi, (%rsi,%rax)
  20fd0f: 4c 89 4c 06 08               	movq	%r9, 8(%rsi,%rax)
  20fd14: 4c 8b 8c 24 e0 00 00 00      	movq	224(%rsp), %r9
  20fd1c: 4c 89 54 06 10               	movq	%r10, 16(%rsi,%rax)
  20fd21: 4c 89 4c 06 18               	movq	%r9, 24(%rsi,%rax)
  20fd26: 44 89 44 06 20               	movl	%r8d, 32(%rsi,%rax)
  20fd2b: c5 f8 28 84 24 b0 02 00 00   	vmovaps	688(%rsp), %xmm0
  20fd34: c5 f8 11 44 06 24            	vmovups	%xmm0, 36(%rsi,%rax)
  20fd3a: 48 8b 84 24 88 01 00 00      	movq	392(%rsp), %rax
  20fd42: 48 ff c0                     	incq	%rax
  20fd45: 48 3b 84 24 78 01 00 00      	cmpq	376(%rsp), %rax
  20fd4d: 0f 85 dd fc ff ff            	jne	0x20fa30 <dwarf.DwarfInfo.getLineNumberInfo+0x2460>
  20fd53: 4c 8b 7c 24 18               	movq	24(%rsp), %r15
  20fd58: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  20fd5d: 48 89 94 24 40 02 00 00      	movq	%rdx, 576(%rsp)
  20fd65: c5 fc 28 05 d3 04 ff ff      	vmovaps	-64301(%rip), %ymm0     # 0x200240 <zig-graph+0x200240>
  20fd6d: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  20fd72: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  20fd7c: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20fd81: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20fd86: b9 01 00 00 00               	movl	$1, %ecx
  20fd8b: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20fd90: 48 89 84 24 e0 03 00 00      	movq	%rax, 992(%rsp)
  20fd98: c5 fc 11 84 24 c0 03 00 00   	vmovups	%ymm0, 960(%rsp)
  20fda1: c5 f8 77                     	vzeroupper
  20fda4: e8 d7 94 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20fda9: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  20fdaf: 0f 84 58 26 00 00            	je	0x21240d <dwarf.DwarfInfo.getLineNumberInfo+0x4e3d>
  20fdb5: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20fdba: 48 83 f8 0b                  	cmpq	$11, %rax
  20fdbe: 0f 83 9b 26 00 00            	jae	0x21245f <dwarf.DwarfInfo.getLineNumberInfo+0x4e8f>
  20fdc4: 49 89 c7                     	movq	%rax, %r15
  20fdc7: 48 85 c0                     	testq	%rax, %rax
  20fdca: 0f 84 78 01 00 00            	je	0x20ff48 <dwarf.DwarfInfo.getLineNumberInfo+0x2978>
  20fdd0: 45 31 f6                     	xorl	%r14d, %r14d
  20fdd3: 48 8d 5c 24 30               	leaq	48(%rsp), %rbx
  20fdd8: 4c 8d 64 24 10               	leaq	16(%rsp), %r12
  20fddd: eb 26                        	jmp	0x20fe05 <dwarf.DwarfInfo.getLineNumberInfo+0x2835>
  20fddf: 0f b7 c0                     	movzwl	%ax, %eax
  20fde2: 45 0f b7 ed                  	movzwl	%r13w, %r13d
  20fde6: c1 e0 0e                     	shll	$14, %eax
  20fde9: 41 09 c5                     	orl	%eax, %r13d
  20fdec: 0f 1f 40 00                  	nopl	(%rax)
  20fdf0: 66 46 89 ac b4 c0 03 00 00   	movw	%r13w, 960(%rsp,%r14,4)
  20fdf9: 49 ff c6                     	incq	%r14
  20fdfc: 4d 39 f7                     	cmpq	%r14, %r15
  20fdff: 0f 84 43 01 00 00            	je	0x20ff48 <dwarf.DwarfInfo.getLineNumberInfo+0x2978>
  20fe05: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  20fe0a: b9 01 00 00 00               	movl	$1, %ecx
  20fe0f: 48 89 df                     	movq	%rbx, %rdi
  20fe12: 4c 89 e2                     	movq	%r12, %rdx
  20fe15: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20fe1a: e8 61 94 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20fe1f: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  20fe25: 0f 84 02 29 00 00            	je	0x21272d <dwarf.DwarfInfo.getLineNumberInfo+0x515d>
  20fe2b: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20fe30: 41 89 c5                     	movl	%eax, %r13d
  20fe33: 41 80 e5 7f                  	andb	$127, %r13b
  20fe37: 84 c0                        	testb	%al, %al
  20fe39: 79 45                        	jns	0x20fe80 <dwarf.DwarfInfo.getLineNumberInfo+0x28b0>
  20fe3b: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  20fe40: b9 01 00 00 00               	movl	$1, %ecx
  20fe45: 48 89 df                     	movq	%rbx, %rdi
  20fe48: 4c 89 e2                     	movq	%r12, %rdx
  20fe4b: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20fe50: e8 2b 94 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20fe55: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  20fe5b: 0f 84 cc 28 00 00            	je	0x21272d <dwarf.DwarfInfo.getLineNumberInfo+0x515d>
  20fe61: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20fe66: 66 bd 29 00                  	movw	$41, %bp
  20fe6a: a8 7e                        	testb	$126, %al
  20fe6c: 0f 85 c9 28 00 00            	jne	0x21273b <dwarf.DwarfInfo.getLineNumberInfo+0x516b>
  20fe72: 84 c0                        	testb	%al, %al
  20fe74: 0f 88 c1 28 00 00            	js	0x21273b <dwarf.DwarfInfo.getLineNumberInfo+0x516b>
  20fe7a: c0 e0 07                     	shlb	$7, %al
  20fe7d: 41 08 c5                     	orb	%al, %r13b
  20fe80: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  20fe85: b9 01 00 00 00               	movl	$1, %ecx
  20fe8a: 48 89 df                     	movq	%rbx, %rdi
  20fe8d: 4c 89 e2                     	movq	%r12, %rdx
  20fe90: 46 88 ac b4 c2 03 00 00      	movb	%r13b, 962(%rsp,%r14,4)
  20fe98: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20fe9d: e8 de 93 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20fea2: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  20fea8: 0f 84 b6 26 00 00            	je	0x212564 <dwarf.DwarfInfo.getLineNumberInfo+0x4f94>
  20feae: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20feb3: 41 89 c5                     	movl	%eax, %r13d
  20feb6: 41 83 e5 7f                  	andl	$127, %r13d
  20feba: 84 c0                        	testb	%al, %al
  20febc: 0f 89 2e ff ff ff            	jns	0x20fdf0 <dwarf.DwarfInfo.getLineNumberInfo+0x2820>
  20fec2: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  20fec7: b9 01 00 00 00               	movl	$1, %ecx
  20fecc: 48 89 df                     	movq	%rbx, %rdi
  20fecf: 4c 89 e2                     	movq	%r12, %rdx
  20fed2: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20fed7: e8 a4 93 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20fedc: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  20fee2: 0f 84 7c 26 00 00            	je	0x212564 <dwarf.DwarfInfo.getLineNumberInfo+0x4f94>
  20fee8: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20feed: 45 0f b7 ed                  	movzwl	%r13w, %r13d
  20fef1: 89 c1                        	movl	%eax, %ecx
  20fef3: 83 e1 7f                     	andl	$127, %ecx
  20fef6: c1 e1 07                     	shll	$7, %ecx
  20fef9: 41 09 cd                     	orl	%ecx, %r13d
  20fefc: 84 c0                        	testb	%al, %al
  20fefe: 0f 89 ec fe ff ff            	jns	0x20fdf0 <dwarf.DwarfInfo.getLineNumberInfo+0x2820>
  20ff04: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  20ff09: b9 01 00 00 00               	movl	$1, %ecx
  20ff0e: 48 89 df                     	movq	%rbx, %rdi
  20ff11: 4c 89 e2                     	movq	%r12, %rdx
  20ff14: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20ff19: e8 62 93 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20ff1e: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  20ff24: 0f 84 3a 26 00 00            	je	0x212564 <dwarf.DwarfInfo.getLineNumberInfo+0x4f94>
  20ff2a: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20ff2f: 66 bd 29 00                  	movw	$41, %bp
  20ff33: a8 7c                        	testb	$124, %al
  20ff35: 0f 85 37 26 00 00            	jne	0x212572 <dwarf.DwarfInfo.getLineNumberInfo+0x4fa2>
  20ff3b: 84 c0                        	testb	%al, %al
  20ff3d: 0f 89 9c fe ff ff            	jns	0x20fddf <dwarf.DwarfInfo.getLineNumberInfo+0x280f>
  20ff43: e9 2a 26 00 00               	jmp	0x212572 <dwarf.DwarfInfo.getLineNumberInfo+0x4fa2>
  20ff48: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  20ff4d: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20ff52: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20ff57: b9 01 00 00 00               	movl	$1, %ecx
  20ff5c: 4c 89 bc 24 c8 00 00 00      	movq	%r15, 200(%rsp)
  20ff64: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20ff69: e8 12 93 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20ff6e: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  20ff74: 4c 8b 7c 24 18               	movq	24(%rsp), %r15
  20ff79: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  20ff7e: 0f 84 c3 32 00 00            	je	0x213247 <dwarf.DwarfInfo.getLineNumberInfo+0x5c77>
  20ff84: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20ff89: 41 89 c6                     	movl	%eax, %r14d
  20ff8c: 41 83 e6 7f                  	andl	$127, %r14d
  20ff90: 84 c0                        	testb	%al, %al
  20ff92: 0f 89 28 02 00 00            	jns	0x2101c0 <dwarf.DwarfInfo.getLineNumberInfo+0x2bf0>
  20ff98: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  20ff9d: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20ffa2: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20ffa7: b9 01 00 00 00               	movl	$1, %ecx
  20ffac: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20ffb1: e8 ca 92 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20ffb6: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  20ffbc: 0f 84 85 32 00 00            	je	0x213247 <dwarf.DwarfInfo.getLineNumberInfo+0x5c77>
  20ffc2: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  20ffc7: 89 c1                        	movl	%eax, %ecx
  20ffc9: 83 e1 7f                     	andl	$127, %ecx
  20ffcc: 48 c1 e1 07                  	shlq	$7, %rcx
  20ffd0: 49 09 ce                     	orq	%rcx, %r14
  20ffd3: 84 c0                        	testb	%al, %al
  20ffd5: 0f 89 e5 01 00 00            	jns	0x2101c0 <dwarf.DwarfInfo.getLineNumberInfo+0x2bf0>
  20ffdb: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  20ffe0: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  20ffe5: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  20ffea: b9 01 00 00 00               	movl	$1, %ecx
  20ffef: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  20fff4: e8 87 92 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  20fff9: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  20ffff: 0f 84 42 32 00 00            	je	0x213247 <dwarf.DwarfInfo.getLineNumberInfo+0x5c77>
  210005: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  21000a: 89 c1                        	movl	%eax, %ecx
  21000c: 83 e1 7f                     	andl	$127, %ecx
  21000f: 48 c1 e1 0e                  	shlq	$14, %rcx
  210013: 49 09 ce                     	orq	%rcx, %r14
  210016: 84 c0                        	testb	%al, %al
  210018: 0f 89 a2 01 00 00            	jns	0x2101c0 <dwarf.DwarfInfo.getLineNumberInfo+0x2bf0>
  21001e: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  210023: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  210028: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  21002d: b9 01 00 00 00               	movl	$1, %ecx
  210032: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  210037: e8 44 92 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  21003c: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  210042: 0f 84 ff 31 00 00            	je	0x213247 <dwarf.DwarfInfo.getLineNumberInfo+0x5c77>
  210048: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  21004d: 89 c1                        	movl	%eax, %ecx
  21004f: 83 e1 7f                     	andl	$127, %ecx
  210052: 48 c1 e1 15                  	shlq	$21, %rcx
  210056: 49 09 ce                     	orq	%rcx, %r14
  210059: 84 c0                        	testb	%al, %al
  21005b: 0f 89 5f 01 00 00            	jns	0x2101c0 <dwarf.DwarfInfo.getLineNumberInfo+0x2bf0>
  210061: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  210066: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  21006b: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  210070: b9 01 00 00 00               	movl	$1, %ecx
  210075: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  21007a: e8 01 92 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  21007f: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  210085: 0f 84 bc 31 00 00            	je	0x213247 <dwarf.DwarfInfo.getLineNumberInfo+0x5c77>
  21008b: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  210090: 89 c1                        	movl	%eax, %ecx
  210092: 83 e1 7f                     	andl	$127, %ecx
  210095: 48 c1 e1 1c                  	shlq	$28, %rcx
  210099: 49 09 ce                     	orq	%rcx, %r14
  21009c: 84 c0                        	testb	%al, %al
  21009e: 0f 89 1c 01 00 00            	jns	0x2101c0 <dwarf.DwarfInfo.getLineNumberInfo+0x2bf0>
  2100a4: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  2100a9: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  2100ae: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  2100b3: b9 01 00 00 00               	movl	$1, %ecx
  2100b8: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  2100bd: e8 be 91 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2100c2: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  2100c8: 0f 84 79 31 00 00            	je	0x213247 <dwarf.DwarfInfo.getLineNumberInfo+0x5c77>
  2100ce: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  2100d3: 89 c1                        	movl	%eax, %ecx
  2100d5: 83 e1 7f                     	andl	$127, %ecx
  2100d8: 48 c1 e1 23                  	shlq	$35, %rcx
  2100dc: 49 09 ce                     	orq	%rcx, %r14
  2100df: 84 c0                        	testb	%al, %al
  2100e1: 0f 89 d9 00 00 00            	jns	0x2101c0 <dwarf.DwarfInfo.getLineNumberInfo+0x2bf0>
  2100e7: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  2100ec: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  2100f1: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  2100f6: b9 01 00 00 00               	movl	$1, %ecx
  2100fb: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  210100: e8 7b 91 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  210105: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  21010b: 0f 84 36 31 00 00            	je	0x213247 <dwarf.DwarfInfo.getLineNumberInfo+0x5c77>
  210111: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  210116: 89 c1                        	movl	%eax, %ecx
  210118: 83 e1 7f                     	andl	$127, %ecx
  21011b: 48 c1 e1 2a                  	shlq	$42, %rcx
  21011f: 49 09 ce                     	orq	%rcx, %r14
  210122: 84 c0                        	testb	%al, %al
  210124: 0f 89 96 00 00 00            	jns	0x2101c0 <dwarf.DwarfInfo.getLineNumberInfo+0x2bf0>
  21012a: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  21012f: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  210134: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  210139: b9 01 00 00 00               	movl	$1, %ecx
  21013e: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  210143: e8 38 91 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  210148: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  21014e: 0f 84 f3 30 00 00            	je	0x213247 <dwarf.DwarfInfo.getLineNumberInfo+0x5c77>
  210154: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  210159: 89 c1                        	movl	%eax, %ecx
  21015b: 83 e1 7f                     	andl	$127, %ecx
  21015e: 48 c1 e1 31                  	shlq	$49, %rcx
  210162: 49 09 ce                     	orq	%rcx, %r14
  210165: 84 c0                        	testb	%al, %al
  210167: 79 4d                        	jns	0x2101b6 <dwarf.DwarfInfo.getLineNumberInfo+0x2be6>
  210169: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  21016e: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  210173: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  210178: b9 01 00 00 00               	movl	$1, %ecx
  21017d: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  210182: e8 f9 90 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  210187: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  21018d: 4c 8b 7c 24 18               	movq	24(%rsp), %r15
  210192: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  210197: 0f 84 aa 30 00 00            	je	0x213247 <dwarf.DwarfInfo.getLineNumberInfo+0x5c77>
  21019d: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  2101a2: 89 c1                        	movl	%eax, %ecx
  2101a4: 83 e1 7f                     	andl	$127, %ecx
  2101a7: 48 c1 e1 38                  	shlq	$56, %rcx
  2101ab: 49 09 ce                     	orq	%rcx, %r14
  2101ae: 84 c0                        	testb	%al, %al
  2101b0: 0f 88 2d 30 00 00            	js	0x2131e3 <dwarf.DwarfInfo.getLineNumberInfo+0x5c13>
  2101b6: 4c 8b 7c 24 18               	movq	24(%rsp), %r15
  2101bb: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  2101c0: 4d 85 f6                     	testq	%r14, %r14
  2101c3: 0f 84 c6 03 00 00            	je	0x21058f <dwarf.DwarfInfo.getLineNumberInfo+0x2fbf>
  2101c9: 31 d2                        	xorl	%edx, %edx
  2101cb: 48 c7 c0 ff ff ff ff         	movq	$-1, %rax
  2101d2: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)
  2101e0: 48 89 d1                     	movq	%rdx, %rcx
  2101e3: 48 d1 e9                     	shrq	%rcx
  2101e6: 48 83 c1 08                  	addq	$8, %rcx
  2101ea: 48 01 ca                     	addq	%rcx, %rdx
  2101ed: 48 0f 42 d0                  	cmovbq	%rax, %rdx
  2101f1: 4c 39 f2                     	cmpq	%r14, %rdx
  2101f4: 72 ea                        	jb	0x2101e0 <dwarf.DwarfInfo.getLineNumberInfo+0x2c10>
  2101f6: 48 8d b4 24 00 02 00 00      	leaq	512(%rsp), %rsi
  2101fe: 4c 89 ff                     	movq	%r15, %rdi
  210201: e8 da aa 00 00               	callq	0x21ace0 <array_list.ArrayListAligned(dwarf.FileEntry,null).ensureTotalCapacityPrecise>
  210206: 66 85 c0                     	testw	%ax, %ax
  210209: 0f 85 00 28 00 00            	jne	0x212a0f <dwarf.DwarfInfo.getLineNumberInfo+0x543f>
  21020f: 48 8b 84 24 00 02 00 00      	movq	512(%rsp), %rax
  210217: 48 8b 8c 24 c8 00 00 00      	movq	200(%rsp), %rcx
  21021f: 4c 8d a4 24 70 03 00 00      	leaq	880(%rsp), %r12
  210227: 4c 8d ac 24 20 01 00 00      	leaq	288(%rsp), %r13
  21022f: 48 8d 6c 24 20               	leaq	32(%rsp), %rbp
  210234: 4c 89 b4 24 78 01 00 00      	movq	%r14, 376(%rsp)
  21023c: 48 89 84 24 70 01 00 00      	movq	%rax, 368(%rsp)
  210244: 48 8b 84 24 08 02 00 00      	movq	520(%rsp), %rax
  21024c: 48 89 84 24 00 01 00 00      	movq	%rax, 256(%rsp)
  210254: 48 8b 84 24 10 02 00 00      	movq	528(%rsp), %rax
  21025c: 48 89 84 24 80 01 00 00      	movq	%rax, 384(%rsp)
  210264: 31 c0                        	xorl	%eax, %eax
  210266: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
  210270: c5 f8 57 c0                  	vxorps	%xmm0, %xmm0, %xmm0
  210274: 48 89 84 24 88 01 00 00      	movq	%rax, 392(%rsp)
  21027c: b8 01 00 00 00               	movl	$1, %eax
  210281: c5 f8 29 84 24 c0 02 00 00   	vmovaps	%xmm0, 704(%rsp)
  21028a: 84 c9                        	testb	%cl, %cl
  21028c: 0f 84 1f 02 00 00            	je	0x2104b1 <dwarf.DwarfInfo.getLineNumberInfo+0x2ee1>
  210292: 48 89 84 24 e0 00 00 00      	movq	%rax, 224(%rsp)
  21029a: 31 c0                        	xorl	%eax, %eax
  21029c: 45 31 f6                     	xorl	%r14d, %r14d
  21029f: c7 84 24 f0 00 00 00 00 00 00 00     	movl	$0, 240(%rsp)
  2102aa: 48 89 84 24 c0 00 00 00      	movq	%rax, 192(%rsp)
  2102b2: 31 c0                        	xorl	%eax, %eax
  2102b4: 48 89 84 24 b8 00 00 00      	movq	%rax, 184(%rsp)
  2102bc: 31 c0                        	xorl	%eax, %eax
  2102be: 48 89 84 24 e8 00 00 00      	movq	%rax, 232(%rsp)
  2102c6: eb 14                        	jmp	0x2102dc <dwarf.DwarfInfo.getLineNumberInfo+0x2d0c>
  2102c8: 48 8b 8c 24 c8 00 00 00      	movq	200(%rsp), %rcx
  2102d0: 49 ff c6                     	incq	%r14
  2102d3: 4c 39 f1                     	cmpq	%r14, %rcx
  2102d6: 0f 84 06 02 00 00            	je	0x2104e2 <dwarf.DwarfInfo.getLineNumberInfo+0x2f12>
  2102dc: 48 8b 44 24 78               	movq	120(%rsp), %rax
  2102e1: 8b 8c 24 a8 00 00 00         	movl	168(%rsp), %ecx
  2102e8: 46 0f b7 84 b4 c0 03 00 00   	movzwl	960(%rsp,%r14,4), %r8d
  2102f1: 48 8b 74 24 18               	movq	24(%rsp), %rsi
  2102f6: 46 0f b6 bc b4 c2 03 00 00   	movzbl	962(%rsp,%r14,4), %r15d
  2102ff: 4c 89 e7                     	movq	%r12, %rdi
  210302: 4c 89 ea                     	movq	%r13, %rdx
  210305: 44 8b 88 08 01 00 00         	movl	264(%rax), %r9d
  21030c: 89 0c 24                     	movl	%ecx, (%rsp)
  21030f: 48 89 e9                     	movq	%rbp, %rcx
  210312: e8 59 96 ff ff               	callq	0x209970 <dwarf.parseFormValue__anon_5650>
  210317: 0f b7 9c 24 88 03 00 00      	movzwl	904(%rsp), %ebx
  21031f: 66 85 db                     	testw	%bx, %bx
  210322: 0f 85 d7 1c 00 00            	jne	0x211fff <dwarf.DwarfInfo.getLineNumberInfo+0x4a2f>
  210328: c5 f8 10 84 24 70 03 00 00   	vmovups	880(%rsp), %xmm0
  210331: 48 8b 84 24 80 03 00 00      	movq	896(%rsp), %rax
  210339: 41 ff cf                     	decl	%r15d
  21033c: 48 89 84 24 60 01 00 00      	movq	%rax, 352(%rsp)
  210344: c5 f8 29 84 24 50 01 00 00   	vmovaps	%xmm0, 336(%rsp)
  21034d: 41 83 ff 04                  	cmpl	$4, %r15d
  210351: 0f 87 71 ff ff ff            	ja	0x2102c8 <dwarf.DwarfInfo.getLineNumberInfo+0x2cf8>
  210357: 42 ff 24 fd 08 0d 20 00      	jmpq	*2100488(,%r15,8)
  21035f: 48 8b 74 24 18               	movq	24(%rsp), %rsi
  210364: 48 8b 4c 24 78               	movq	120(%rsp), %rcx
  210369: 48 8d bc 24 20 03 00 00      	leaq	800(%rsp), %rdi
  210371: 48 8d 94 24 50 01 00 00      	leaq	336(%rsp), %rdx
  210379: e8 22 cc ff ff               	callq	0x20cfa0 <dwarf.FormValue.getString>
  21037e: 0f b7 9c 24 30 03 00 00      	movzwl	816(%rsp), %ebx
  210386: 48 8b 8c 24 c8 00 00 00      	movq	200(%rsp), %rcx
  21038e: 66 85 db                     	testw	%bx, %bx
  210391: 0f 85 78 25 00 00            	jne	0x21290f <dwarf.DwarfInfo.getLineNumberInfo+0x533f>
  210397: 48 8b 84 24 20 03 00 00      	movq	800(%rsp), %rax
  21039f: 48 8b 94 24 28 03 00 00      	movq	808(%rsp), %rdx
  2103a7: 48 89 84 24 e0 00 00 00      	movq	%rax, 224(%rsp)
  2103af: 48 89 94 24 e8 00 00 00      	movq	%rdx, 232(%rsp)
  2103b7: e9 14 ff ff ff               	jmp	0x2102d0 <dwarf.DwarfInfo.getLineNumberInfo+0x2d00>
  2103bc: 0f b6 84 24 60 01 00 00      	movzbl	352(%rsp), %eax
  2103c4: 48 8b 8c 24 c8 00 00 00      	movq	200(%rsp), %rcx
  2103cc: 83 f8 06                     	cmpl	$6, %eax
  2103cf: 74 17                        	je	0x2103e8 <dwarf.DwarfInfo.getLineNumberInfo+0x2e18>
  2103d1: 83 f8 03                     	cmpl	$3, %eax
  2103d4: 0f 85 fe 28 00 00            	jne	0x212cd8 <dwarf.DwarfInfo.getLineNumberInfo+0x5708>
  2103da: 80 bc 24 58 01 00 00 01      	cmpb	$1, 344(%rsp)
  2103e2: 0f 84 e6 28 00 00            	je	0x212cce <dwarf.DwarfInfo.getLineNumberInfo+0x56fe>
  2103e8: 48 8b 84 24 50 01 00 00      	movq	336(%rsp), %rax
  2103f0: 48 89 84 24 b8 00 00 00      	movq	%rax, 184(%rsp)
  2103f8: e9 d3 fe ff ff               	jmp	0x2102d0 <dwarf.DwarfInfo.getLineNumberInfo+0x2d00>
  2103fd: 0f b6 84 24 60 01 00 00      	movzbl	352(%rsp), %eax
  210405: 48 8b 8c 24 c8 00 00 00      	movq	200(%rsp), %rcx
  21040d: 83 f8 06                     	cmpl	$6, %eax
  210410: 74 17                        	je	0x210429 <dwarf.DwarfInfo.getLineNumberInfo+0x2e59>
  210412: 83 f8 03                     	cmpl	$3, %eax
  210415: 0f 85 2b 29 00 00            	jne	0x212d46 <dwarf.DwarfInfo.getLineNumberInfo+0x5776>
  21041b: 80 bc 24 58 01 00 00 01      	cmpb	$1, 344(%rsp)
  210423: 0f 84 13 29 00 00            	je	0x212d3c <dwarf.DwarfInfo.getLineNumberInfo+0x576c>
  210429: 48 8b 84 24 50 01 00 00      	movq	336(%rsp), %rax
  210431: 48 89 84 24 c0 00 00 00      	movq	%rax, 192(%rsp)
  210439: e9 92 fe ff ff               	jmp	0x2102d0 <dwarf.DwarfInfo.getLineNumberInfo+0x2d00>
  21043e: 80 bc 24 60 01 00 00 0f      	cmpb	$15, 352(%rsp)
  210446: 48 8b 8c 24 c8 00 00 00      	movq	200(%rsp), %rcx
  21044e: 0f 85 0b 25 00 00            	jne	0x21295f <dwarf.DwarfInfo.getLineNumberInfo+0x538f>
  210454: c5 f8 10 84 24 70 03 00 00   	vmovups	880(%rsp), %xmm0
  21045d: c5 f8 29 84 24 c0 02 00 00   	vmovaps	%xmm0, 704(%rsp)
  210466: e9 65 fe ff ff               	jmp	0x2102d0 <dwarf.DwarfInfo.getLineNumberInfo+0x2d00>
  21046b: 48 8b 74 24 18               	movq	24(%rsp), %rsi
  210470: 48 8d bc 24 30 02 00 00      	leaq	560(%rsp), %rdi
  210478: 48 8d 94 24 50 01 00 00      	leaq	336(%rsp), %rdx
  210480: e8 2b cd ff ff               	callq	0x20d1b0 <dwarf.FormValue.getUInt__anon_5815>
  210485: 0f b7 9c 24 34 02 00 00      	movzwl	564(%rsp), %ebx
  21048d: 48 8b 8c 24 c8 00 00 00      	movq	200(%rsp), %rcx
  210495: 66 85 db                     	testw	%bx, %bx
  210498: 0f 85 21 25 00 00            	jne	0x2129bf <dwarf.DwarfInfo.getLineNumberInfo+0x53ef>
  21049e: 8b 84 24 30 02 00 00         	movl	560(%rsp), %eax
  2104a5: 89 84 24 f0 00 00 00         	movl	%eax, 240(%rsp)
  2104ac: e9 1f fe ff ff               	jmp	0x2102d0 <dwarf.DwarfInfo.getLineNumberInfo+0x2d00>
  2104b1: 48 89 84 24 e0 00 00 00      	movq	%rax, 224(%rsp)
  2104b9: 31 c0                        	xorl	%eax, %eax
  2104bb: c7 84 24 f0 00 00 00 00 00 00 00     	movl	$0, 240(%rsp)
  2104c6: 48 89 84 24 e8 00 00 00      	movq	%rax, 232(%rsp)
  2104ce: 31 c0                        	xorl	%eax, %eax
  2104d0: 48 89 84 24 b8 00 00 00      	movq	%rax, 184(%rsp)
  2104d8: 31 c0                        	xorl	%eax, %eax
  2104da: 48 89 84 24 c0 00 00 00      	movq	%rax, 192(%rsp)
  2104e2: 48 8b 94 24 00 01 00 00      	movq	256(%rsp), %rdx
  2104ea: 48 3b 94 24 80 01 00 00      	cmpq	384(%rsp), %rdx
  2104f2: 0f 83 22 2e 00 00            	jae	0x21331a <dwarf.DwarfInfo.getLineNumberInfo+0x5d4a>
  2104f8: 48 6b c2 38                  	imulq	$56, %rdx, %rax
  2104fc: 4c 8b 94 24 70 01 00 00      	movq	368(%rsp), %r10
  210504: 48 8b b4 24 e0 00 00 00      	movq	224(%rsp), %rsi
  21050c: 4c 8b 84 24 e8 00 00 00      	movq	232(%rsp), %r8
  210514: 4c 8b 8c 24 b8 00 00 00      	movq	184(%rsp), %r9
  21051c: 8b bc 24 f0 00 00 00         	movl	240(%rsp), %edi
  210523: 4c 8b b4 24 78 01 00 00      	movq	376(%rsp), %r14
  21052b: 48 ff c2                     	incq	%rdx
  21052e: 48 89 94 24 00 01 00 00      	movq	%rdx, 256(%rsp)
  210536: 49 89 34 02                  	movq	%rsi, (%r10,%rax)
  21053a: 4d 89 44 02 08               	movq	%r8, 8(%r10,%rax)
  21053f: 4c 8b 84 24 c0 00 00 00      	movq	192(%rsp), %r8
  210547: 4d 89 4c 02 10               	movq	%r9, 16(%r10,%rax)
  21054c: 4d 89 44 02 18               	movq	%r8, 24(%r10,%rax)
  210551: 41 89 7c 02 20               	movl	%edi, 32(%r10,%rax)
  210556: c5 f8 28 84 24 c0 02 00 00   	vmovaps	704(%rsp), %xmm0
  21055f: c4 c1 78 11 44 02 24         	vmovups	%xmm0, 36(%r10,%rax)
  210566: 48 8b 84 24 88 01 00 00      	movq	392(%rsp), %rax
  21056e: 48 ff c0                     	incq	%rax
  210571: 4c 39 f0                     	cmpq	%r14, %rax
  210574: 0f 85 f6 fc ff ff            	jne	0x210270 <dwarf.DwarfInfo.getLineNumberInfo+0x2ca0>
  21057a: 48 8b 84 24 00 01 00 00      	movq	256(%rsp), %rax
  210582: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  210587: 48 89 84 24 08 02 00 00      	movq	%rax, 520(%rsp)
  21058f: c5 f8 28 0d 29 fd fe ff      	vmovaps	-66263(%rip), %xmm1     # 0x2002c0 <zig-graph+0x2002c0>
  210597: c5 fc 28 15 81 fc fe ff      	vmovaps	-66431(%rip), %ymm2     # 0x200220 <zig-graph+0x200220>
  21059f: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  2105a9: c5 f8 10 84 24 38 02 00 00   	vmovups	568(%rsp), %xmm0
  2105b2: 80 bc 24 d7 00 00 00 00      	cmpb	$0, 215(%rsp)
  2105ba: 48 8b 94 24 10 01 00 00      	movq	272(%rsp), %rdx
  2105c2: 48 8b 8c 24 60 02 00 00      	movq	608(%rsp), %rcx
  2105ca: 48 8b 9c 24 d8 00 00 00      	movq	216(%rsp), %rbx
  2105d2: 48 89 84 24 e8 01 00 00      	movq	%rax, 488(%rsp)
  2105da: 48 8b 84 24 70 02 00 00      	movq	624(%rsp), %rax
  2105e2: c5 f8 11 8c 24 d8 01 00 00   	vmovups	%xmm1, 472(%rsp)
  2105eb: c5 fc 11 94 24 98 01 00 00   	vmovups	%ymm2, 408(%rsp)
  2105f4: 48 89 84 24 b8 01 00 00      	movq	%rax, 440(%rsp)
  2105fc: 8b 84 24 fc 00 00 00         	movl	252(%rsp), %eax
  210603: c5 f8 11 84 24 c0 01 00 00   	vmovups	%xmm0, 448(%rsp)
  21060c: 48 c7 84 24 d0 01 00 00 00 00 00 00  	movq	$0, 464(%rsp)
  210618: 66 89 84 24 f0 01 00 00      	movw	%ax, 496(%rsp)
  210620: 0f 95 84 24 f2 01 00 00      	setne	498(%rsp)
  210628: 66 c7 84 24 f3 01 00 00 00 00	movw	$0, 499(%rsp)
  210632: 0f 95 84 24 f5 01 00 00      	setne	501(%rsp)
  21063a: 48 39 ca                     	cmpq	%rcx, %rdx
  21063d: c6 84 24 f6 01 00 00 00      	movb	$0, 502(%rsp)
  210645: 66 c7 84 24 f7 01 00 00 aa aa	movw	$43690, 503(%rsp)       # imm = 0xAAAA
  21064f: c6 84 24 f9 01 00 00 aa      	movb	$-86, 505(%rsp)
  210657: 48 0f 42 ca                  	cmovbq	%rdx, %rcx
  21065b: 48 03 9c 24 68 02 00 00      	addq	616(%rsp), %rbx
  210663: 48 89 8c 24 18 01 00 00      	movq	%rcx, 280(%rsp)
  21066b: 0f 82 5e 2b 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  210671: 4c 8b 7c 24 58               	movq	88(%rsp), %r15
  210676: 48 39 d9                     	cmpq	%rbx, %rcx
  210679: 0f 83 c0 18 00 00            	jae	0x211f3f <dwarf.DwarfInfo.getLineNumberInfo+0x496f>
  21067f: 0f b6 84 24 b6 00 00 00      	movzbl	182(%rsp), %eax
  210687: 48 8d 6c 24 30               	leaq	48(%rsp), %rbp
  21068c: 4c 8d 64 24 10               	leaq	16(%rsp), %r12
  210691: 48 89 9c 24 d8 00 00 00      	movq	%rbx, 216(%rsp)
  210699: f6 d0                        	notb	%al
  21069b: 88 84 24 c8 00 00 00         	movb	%al, 200(%rsp)
  2106a2: eb 1a                        	jmp	0x2106be <dwarf.DwarfInfo.getLineNumberInfo+0x30ee>
  2106a4: c6 84 24 f3 01 00 00 01      	movb	$1, 499(%rsp)
  2106ac: 0f 1f 40 00                  	nopl	(%rax)
  2106b0: 48 39 9c 24 18 01 00 00      	cmpq	%rbx, 280(%rsp)
  2106b8: 0f 83 81 18 00 00            	jae	0x211f3f <dwarf.DwarfInfo.getLineNumberInfo+0x496f>
  2106be: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  2106c3: b9 01 00 00 00               	movl	$1, %ecx
  2106c8: 48 89 ef                     	movq	%rbp, %rdi
  2106cb: 4c 89 e2                     	movq	%r12, %rdx
  2106ce: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  2106d3: c5 f8 77                     	vzeroupper
  2106d6: e8 a5 8b 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2106db: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  2106e1: 0f 84 67 1a 00 00            	je	0x21214e <dwarf.DwarfInfo.getLineNumberInfo+0x4b7e>
  2106e7: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  2106ec: 85 c0                        	testl	%eax, %eax
  2106ee: 0f 84 7c 00 00 00            	je	0x210770 <dwarf.DwarfInfo.getLineNumberInfo+0x31a0>
  2106f4: 0f b6 8c 24 b6 00 00 00      	movzbl	182(%rsp), %ecx
  2106fc: 38 c8                        	cmpb	%cl, %al
  2106fe: 0f 83 1c 04 00 00            	jae	0x210b20 <dwarf.DwarfInfo.getLineNumberInfo+0x3550>
  210704: 8d 48 ff                     	leal	-1(%rax), %ecx
  210707: 83 f9 09                     	cmpl	$9, %ecx
  21070a: 0f 87 20 0c 00 00            	ja	0x211330 <dwarf.DwarfInfo.getLineNumberInfo+0x3d60>
  210710: ff 24 cd 30 0d 20 00         	jmpq	*2100528(,%rcx,8)
  210717: 4c 8b 84 24 00 02 00 00      	movq	512(%rsp), %r8
  21071f: 4c 8b 8c 24 08 02 00 00      	movq	520(%rsp), %r9
  210727: 48 8b 74 24 18               	movq	24(%rsp), %rsi
  21072c: 48 8b 4c 24 68               	movq	104(%rsp), %rcx
  210731: 48 8d bc 24 50 04 00 00      	leaq	1104(%rsp), %rdi
  210739: 48 8d 94 24 98 01 00 00      	leaq	408(%rsp), %rdx
  210741: e8 ea ca ff ff               	callq	0x20d230 <dwarf.LineNumberProgram.checkLineMatch>
  210746: 44 0f b7 b4 24 78 04 00 00   	movzwl	1144(%rsp), %r14d
  21074f: 66 45 85 f6                  	testw	%r14w, %r14w
  210753: 0f 85 62 29 00 00            	jne	0x2130bb <dwarf.DwarfInfo.getLineNumberInfo+0x5aeb>
  210759: 80 bc 24 70 04 00 00 00      	cmpb	$0, 1136(%rsp)
  210761: 0f 84 64 04 00 00            	je	0x210bcb <dwarf.DwarfInfo.getLineNumberInfo+0x35fb>
  210767: e9 46 1d 00 00               	jmp	0x2124b2 <dwarf.DwarfInfo.getLineNumberInfo+0x4ee2>
  21076c: 0f 1f 40 00                  	nopl	(%rax)
  210770: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  210775: b9 01 00 00 00               	movl	$1, %ecx
  21077a: 48 89 ef                     	movq	%rbp, %rdi
  21077d: 4c 89 e2                     	movq	%r12, %rdx
  210780: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  210785: e8 f6 8a 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  21078a: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  210790: 0f 84 c9 1b 00 00            	je	0x21235f <dwarf.DwarfInfo.getLineNumberInfo+0x4d8f>
  210796: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  21079b: 89 c3                        	movl	%eax, %ebx
  21079d: 83 e3 7f                     	andl	$127, %ebx
  2107a0: 84 c0                        	testb	%al, %al
  2107a2: 0f 89 48 02 00 00            	jns	0x2109f0 <dwarf.DwarfInfo.getLineNumberInfo+0x3420>
  2107a8: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  2107ad: b9 01 00 00 00               	movl	$1, %ecx
  2107b2: 48 89 ef                     	movq	%rbp, %rdi
  2107b5: 4c 89 e2                     	movq	%r12, %rdx
  2107b8: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  2107bd: e8 be 8a 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2107c2: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  2107c8: 0f 84 91 1b 00 00            	je	0x21235f <dwarf.DwarfInfo.getLineNumberInfo+0x4d8f>
  2107ce: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  2107d3: 89 c1                        	movl	%eax, %ecx
  2107d5: 83 e1 7f                     	andl	$127, %ecx
  2107d8: 48 c1 e1 07                  	shlq	$7, %rcx
  2107dc: 48 09 cb                     	orq	%rcx, %rbx
  2107df: 84 c0                        	testb	%al, %al
  2107e1: 0f 89 09 02 00 00            	jns	0x2109f0 <dwarf.DwarfInfo.getLineNumberInfo+0x3420>
  2107e7: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  2107ec: b9 01 00 00 00               	movl	$1, %ecx
  2107f1: 48 89 ef                     	movq	%rbp, %rdi
  2107f4: 4c 89 e2                     	movq	%r12, %rdx
  2107f7: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  2107fc: e8 7f 8a 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  210801: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  210807: 0f 84 52 1b 00 00            	je	0x21235f <dwarf.DwarfInfo.getLineNumberInfo+0x4d8f>
  21080d: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  210812: 89 c1                        	movl	%eax, %ecx
  210814: 83 e1 7f                     	andl	$127, %ecx
  210817: 48 c1 e1 0e                  	shlq	$14, %rcx
  21081b: 48 09 cb                     	orq	%rcx, %rbx
  21081e: 84 c0                        	testb	%al, %al
  210820: 0f 89 ca 01 00 00            	jns	0x2109f0 <dwarf.DwarfInfo.getLineNumberInfo+0x3420>
  210826: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  21082b: b9 01 00 00 00               	movl	$1, %ecx
  210830: 48 89 ef                     	movq	%rbp, %rdi
  210833: 4c 89 e2                     	movq	%r12, %rdx
  210836: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  21083b: e8 40 8a 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  210840: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  210846: 0f 84 13 1b 00 00            	je	0x21235f <dwarf.DwarfInfo.getLineNumberInfo+0x4d8f>
  21084c: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  210851: 89 c1                        	movl	%eax, %ecx
  210853: 83 e1 7f                     	andl	$127, %ecx
  210856: 48 c1 e1 15                  	shlq	$21, %rcx
  21085a: 48 09 cb                     	orq	%rcx, %rbx
  21085d: 84 c0                        	testb	%al, %al
  21085f: 0f 89 8b 01 00 00            	jns	0x2109f0 <dwarf.DwarfInfo.getLineNumberInfo+0x3420>
  210865: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  21086a: b9 01 00 00 00               	movl	$1, %ecx
  21086f: 48 89 ef                     	movq	%rbp, %rdi
  210872: 4c 89 e2                     	movq	%r12, %rdx
  210875: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  21087a: e8 01 8a 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  21087f: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  210885: 0f 84 d4 1a 00 00            	je	0x21235f <dwarf.DwarfInfo.getLineNumberInfo+0x4d8f>
  21088b: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  210890: 89 c1                        	movl	%eax, %ecx
  210892: 83 e1 7f                     	andl	$127, %ecx
  210895: 48 c1 e1 1c                  	shlq	$28, %rcx
  210899: 48 09 cb                     	orq	%rcx, %rbx
  21089c: 84 c0                        	testb	%al, %al
  21089e: 0f 89 4c 01 00 00            	jns	0x2109f0 <dwarf.DwarfInfo.getLineNumberInfo+0x3420>
  2108a4: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  2108a9: b9 01 00 00 00               	movl	$1, %ecx
  2108ae: 48 89 ef                     	movq	%rbp, %rdi
  2108b1: 4c 89 e2                     	movq	%r12, %rdx
  2108b4: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  2108b9: e8 c2 89 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2108be: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  2108c4: 0f 84 95 1a 00 00            	je	0x21235f <dwarf.DwarfInfo.getLineNumberInfo+0x4d8f>
  2108ca: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  2108cf: 89 c1                        	movl	%eax, %ecx
  2108d1: 83 e1 7f                     	andl	$127, %ecx
  2108d4: 48 c1 e1 23                  	shlq	$35, %rcx
  2108d8: 48 09 cb                     	orq	%rcx, %rbx
  2108db: 84 c0                        	testb	%al, %al
  2108dd: 0f 89 0d 01 00 00            	jns	0x2109f0 <dwarf.DwarfInfo.getLineNumberInfo+0x3420>
  2108e3: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  2108e8: b9 01 00 00 00               	movl	$1, %ecx
  2108ed: 48 89 ef                     	movq	%rbp, %rdi
  2108f0: 4c 89 e2                     	movq	%r12, %rdx
  2108f3: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  2108f8: e8 83 89 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2108fd: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  210903: 0f 84 56 1a 00 00            	je	0x21235f <dwarf.DwarfInfo.getLineNumberInfo+0x4d8f>
  210909: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  21090e: 89 c1                        	movl	%eax, %ecx
  210910: 83 e1 7f                     	andl	$127, %ecx
  210913: 48 c1 e1 2a                  	shlq	$42, %rcx
  210917: 48 09 cb                     	orq	%rcx, %rbx
  21091a: 84 c0                        	testb	%al, %al
  21091c: 0f 89 ce 00 00 00            	jns	0x2109f0 <dwarf.DwarfInfo.getLineNumberInfo+0x3420>
  210922: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  210927: b9 01 00 00 00               	movl	$1, %ecx
  21092c: 48 89 ef                     	movq	%rbp, %rdi
  21092f: 4c 89 e2                     	movq	%r12, %rdx
  210932: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  210937: e8 44 89 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  21093c: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  210942: 0f 84 17 1a 00 00            	je	0x21235f <dwarf.DwarfInfo.getLineNumberInfo+0x4d8f>
  210948: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  21094d: 89 c1                        	movl	%eax, %ecx
  21094f: 83 e1 7f                     	andl	$127, %ecx
  210952: 48 c1 e1 31                  	shlq	$49, %rcx
  210956: 48 09 cb                     	orq	%rcx, %rbx
  210959: 84 c0                        	testb	%al, %al
  21095b: 0f 89 8f 00 00 00            	jns	0x2109f0 <dwarf.DwarfInfo.getLineNumberInfo+0x3420>
  210961: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  210966: b9 01 00 00 00               	movl	$1, %ecx
  21096b: 48 89 ef                     	movq	%rbp, %rdi
  21096e: 4c 89 e2                     	movq	%r12, %rdx
  210971: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  210976: e8 05 89 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  21097b: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  210981: 0f 84 d8 19 00 00            	je	0x21235f <dwarf.DwarfInfo.getLineNumberInfo+0x4d8f>
  210987: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  21098c: 89 c1                        	movl	%eax, %ecx
  21098e: 83 e1 7f                     	andl	$127, %ecx
  210991: 48 c1 e1 38                  	shlq	$56, %rcx
  210995: 48 09 cb                     	orq	%rcx, %rbx
  210998: 84 c0                        	testb	%al, %al
  21099a: 79 54                        	jns	0x2109f0 <dwarf.DwarfInfo.getLineNumberInfo+0x3420>
  21099c: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  2109a1: b9 01 00 00 00               	movl	$1, %ecx
  2109a6: 48 89 ef                     	movq	%rbp, %rdi
  2109a9: 4c 89 e2                     	movq	%r12, %rdx
  2109ac: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  2109b1: e8 ca 88 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2109b6: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  2109bc: 0f 84 9d 19 00 00            	je	0x21235f <dwarf.DwarfInfo.getLineNumberInfo+0x4d8f>
  2109c2: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  2109c7: 66 41 be 29 00               	movw	$41, %r14w
  2109cc: a8 7e                        	testb	$126, %al
  2109ce: 0f 85 7e 29 00 00            	jne	0x213352 <dwarf.DwarfInfo.getLineNumberInfo+0x5d82>
  2109d4: 4c 8b 7c 24 18               	movq	24(%rsp), %r15
  2109d9: 84 c0                        	testb	%al, %al
  2109db: 0f 88 90 19 00 00            	js	0x212371 <dwarf.DwarfInfo.getLineNumberInfo+0x4da1>
  2109e1: 4c 8b 7c 24 58               	movq	88(%rsp), %r15
  2109e6: 48 c1 e0 3f                  	shlq	$63, %rax
  2109ea: 48 09 c3                     	orq	%rax, %rbx
  2109ed: 0f 1f 00                     	nopl	(%rax)
  2109f0: 48 85 db                     	testq	%rbx, %rbx
  2109f3: 0f 84 d6 1b 00 00            	je	0x2125cf <dwarf.DwarfInfo.getLineNumberInfo+0x4fff>
  2109f9: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  2109fe: b9 01 00 00 00               	movl	$1, %ecx
  210a03: 48 89 ef                     	movq	%rbp, %rdi
  210a06: 4c 89 e2                     	movq	%r12, %rdx
  210a09: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  210a0e: e8 6d 88 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  210a13: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  210a19: 0f 84 67 1c 00 00            	je	0x212686 <dwarf.DwarfInfo.getLineNumberInfo+0x50b6>
  210a1f: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  210a24: 83 f8 03                     	cmpl	$3, %eax
  210a27: 0f 84 ab 01 00 00            	je	0x210bd8 <dwarf.DwarfInfo.getLineNumberInfo+0x3608>
  210a2d: 83 f8 02                     	cmpl	$2, %eax
  210a30: 0f 84 3b 08 00 00            	je	0x211271 <dwarf.DwarfInfo.getLineNumberInfo+0x3ca1>
  210a36: 83 f8 01                     	cmpl	$1, %eax
  210a39: 0f 85 b6 08 00 00            	jne	0x2112f5 <dwarf.DwarfInfo.getLineNumberInfo+0x3d25>
  210a3f: 4c 8b 84 24 00 02 00 00      	movq	512(%rsp), %r8
  210a47: 4c 8b 8c 24 08 02 00 00      	movq	520(%rsp), %r9
  210a4f: 48 8b 74 24 18               	movq	24(%rsp), %rsi
  210a54: 48 8b 4c 24 68               	movq	104(%rsp), %rcx
  210a59: 48 8d bc 24 f0 03 00 00      	leaq	1008(%rsp), %rdi
  210a61: 48 8d 94 24 98 01 00 00      	leaq	408(%rsp), %rdx
  210a69: c6 84 24 f4 01 00 00 01      	movb	$1, 500(%rsp)
  210a71: e8 ba c7 ff ff               	callq	0x20d230 <dwarf.LineNumberProgram.checkLineMatch>
  210a76: 44 0f b7 b4 24 18 04 00 00   	movzwl	1048(%rsp), %r14d
  210a7f: 66 45 85 f6                  	testw	%r14w, %r14w
  210a83: 0f 85 74 23 00 00            	jne	0x212dfd <dwarf.DwarfInfo.getLineNumberInfo+0x582d>
  210a89: 80 bc 24 10 04 00 00 00      	cmpb	$0, 1040(%rsp)
  210a91: 0f 85 14 16 00 00            	jne	0x2120ab <dwarf.DwarfInfo.getLineNumberInfo+0x4adb>
  210a97: c5 fc 28 05 81 f7 fe ff      	vmovaps	-67711(%rip), %ymm0     # 0x200220 <zig-graph+0x200220>
  210a9f: c5 f8 28 0d 19 f8 fe ff      	vmovaps	-67559(%rip), %xmm1     # 0x2002c0 <zig-graph+0x2002c0>
  210aa7: 48 8b 9c 24 d8 00 00 00      	movq	216(%rsp), %rbx
  210aaf: 48 8d 8c 24 d8 01 00 00      	leaq	472(%rsp), %rcx
  210ab7: c5 fc 11 84 24 98 01 00 00   	vmovups	%ymm0, 408(%rsp)
  210ac0: 0f b6 84 24 f5 01 00 00      	movzbl	501(%rsp), %eax
  210ac8: 88 84 24 f2 01 00 00         	movb	%al, 498(%rsp)
  210acf: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  210ad9: 66 c7 84 24 f3 01 00 00 00 00	movw	$0, 499(%rsp)
  210ae3: c6 84 24 f6 01 00 00 00      	movb	$0, 502(%rsp)
  210aeb: 48 c7 84 24 d0 01 00 00 00 00 00 00  	movq	$0, 464(%rsp)
  210af7: 66 c7 84 24 f7 01 00 00 aa aa	movw	$43690, 503(%rsp)       # imm = 0xAAAA
  210b01: c6 84 24 f9 01 00 00 aa      	movb	$-86, 505(%rsp)
  210b09: c5 f8 11 09                  	vmovups	%xmm1, (%rcx)
  210b0d: 48 89 41 10                  	movq	%rax, 16(%rcx)
  210b11: e9 9a fb ff ff               	jmp	0x2106b0 <dwarf.DwarfInfo.getLineNumberInfo+0x30e0>
  210b16: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
  210b20: 28 c8                        	subb	%cl, %al
  210b22: 0f b6 c0                     	movzbl	%al, %eax
  210b25: f6 b4 24 b5 00 00 00         	divb	181(%rsp)
  210b2c: 0f b6 d4                     	movzbl	%ah, %edx
  210b2f: 89 c1                        	movl	%eax, %ecx
  210b31: 48 8b 84 24 90 01 00 00      	movq	400(%rsp), %rax
  210b39: f6 e1                        	mulb	%cl
  210b3b: 0f 80 8e 26 00 00            	jo	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  210b41: 0f b6 ca                     	movzbl	%dl, %ecx
  210b44: 48 03 8c 24 78 02 00 00      	addq	632(%rsp), %rcx
  210b4c: 48 03 8c 24 a8 01 00 00      	addq	424(%rsp), %rcx
  210b54: 0f 80 75 26 00 00            	jo	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  210b5a: 48 89 8c 24 a8 01 00 00      	movq	%rcx, 424(%rsp)
  210b62: 0f b6 c0                     	movzbl	%al, %eax
  210b65: 48 03 84 24 98 01 00 00      	addq	408(%rsp), %rax
  210b6d: 0f 82 5c 26 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  210b73: 4c 8b 84 24 00 02 00 00      	movq	512(%rsp), %r8
  210b7b: 4c 8b 8c 24 08 02 00 00      	movq	520(%rsp), %r9
  210b83: 48 8b 74 24 18               	movq	24(%rsp), %rsi
  210b88: 48 8b 4c 24 68               	movq	104(%rsp), %rcx
  210b8d: 48 8d bc 24 20 04 00 00      	leaq	1056(%rsp), %rdi
  210b95: 48 8d 94 24 98 01 00 00      	leaq	408(%rsp), %rdx
  210b9d: 48 89 84 24 98 01 00 00      	movq	%rax, 408(%rsp)
  210ba5: e8 86 c6 ff ff               	callq	0x20d230 <dwarf.LineNumberProgram.checkLineMatch>
  210baa: 44 0f b7 b4 24 48 04 00 00   	movzwl	1096(%rsp), %r14d
  210bb3: 66 45 85 f6                  	testw	%r14w, %r14w
  210bb7: 0f 85 27 1c 00 00            	jne	0x2127e4 <dwarf.DwarfInfo.getLineNumberInfo+0x5214>
  210bbd: 80 bc 24 40 04 00 00 00      	cmpb	$0, 1088(%rsp)
  210bc5: 0f 85 ac 11 00 00            	jne	0x211d77 <dwarf.DwarfInfo.getLineNumberInfo+0x47a7>
  210bcb: c6 84 24 f3 01 00 00 00      	movb	$0, 499(%rsp)
  210bd3: e9 d8 fa ff ff               	jmp	0x2106b0 <dwarf.DwarfInfo.getLineNumberInfo+0x30e0>
  210bd8: 48 8b 54 24 20               	movq	32(%rsp), %rdx
  210bdd: 48 8b 74 24 18               	movq	24(%rsp), %rsi
  210be2: 48 8d bc 24 38 03 00 00      	leaq	824(%rsp), %rdi
  210bea: 48 8d 8c 24 20 01 00 00      	leaq	288(%rsp), %rcx
  210bf2: e8 c9 be ff ff               	callq	0x20cac0 <io.reader.Reader(*io.fixed_buffer_stream.FixedBufferStream([]const u8),error{},(function 'read')).readUntilDelimiterAlloc>
  210bf7: 44 0f b7 b4 24 48 03 00 00   	movzwl	840(%rsp), %r14d
  210c00: 66 45 85 f6                  	testw	%r14w, %r14w
  210c04: 0f 85 33 22 00 00            	jne	0x212e3d <dwarf.DwarfInfo.getLineNumberInfo+0x586d>
  210c0a: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  210c0f: 4c 8b b4 24 38 03 00 00      	movq	824(%rsp), %r14
  210c17: 48 8b 9c 24 40 03 00 00      	movq	832(%rsp), %rbx
  210c1f: b9 01 00 00 00               	movl	$1, %ecx
  210c24: 48 89 ef                     	movq	%rbp, %rdi
  210c27: 4c 89 e2                     	movq	%r12, %rdx
  210c2a: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  210c2f: e8 4c 86 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  210c34: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  210c3a: 0f 84 c3 1f 00 00            	je	0x212c03 <dwarf.DwarfInfo.getLineNumberInfo+0x5633>
  210c40: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  210c45: 41 89 c7                     	movl	%eax, %r15d
  210c48: 41 83 e7 7f                  	andl	$127, %r15d
  210c4c: 84 c0                        	testb	%al, %al
  210c4e: 0f 89 fc 00 00 00            	jns	0x210d50 <dwarf.DwarfInfo.getLineNumberInfo+0x3780>
  210c54: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  210c59: b9 01 00 00 00               	movl	$1, %ecx
  210c5e: 48 89 ef                     	movq	%rbp, %rdi
  210c61: 4c 89 e2                     	movq	%r12, %rdx
  210c64: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  210c69: e8 12 86 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  210c6e: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  210c74: 0f 84 89 1f 00 00            	je	0x212c03 <dwarf.DwarfInfo.getLineNumberInfo+0x5633>
  210c7a: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  210c7f: 89 c1                        	movl	%eax, %ecx
  210c81: 83 e1 7f                     	andl	$127, %ecx
  210c84: c1 e1 07                     	shll	$7, %ecx
  210c87: 41 09 cf                     	orl	%ecx, %r15d
  210c8a: 84 c0                        	testb	%al, %al
  210c8c: 0f 89 be 00 00 00            	jns	0x210d50 <dwarf.DwarfInfo.getLineNumberInfo+0x3780>
  210c92: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  210c97: b9 01 00 00 00               	movl	$1, %ecx
  210c9c: 48 89 ef                     	movq	%rbp, %rdi
  210c9f: 4c 89 e2                     	movq	%r12, %rdx
  210ca2: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  210ca7: e8 d4 85 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  210cac: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  210cb2: 0f 84 4b 1f 00 00            	je	0x212c03 <dwarf.DwarfInfo.getLineNumberInfo+0x5633>
  210cb8: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  210cbd: 89 c1                        	movl	%eax, %ecx
  210cbf: 83 e1 7f                     	andl	$127, %ecx
  210cc2: c1 e1 0e                     	shll	$14, %ecx
  210cc5: 41 09 cf                     	orl	%ecx, %r15d
  210cc8: 84 c0                        	testb	%al, %al
  210cca: 0f 89 80 00 00 00            	jns	0x210d50 <dwarf.DwarfInfo.getLineNumberInfo+0x3780>
  210cd0: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  210cd5: b9 01 00 00 00               	movl	$1, %ecx
  210cda: 48 89 ef                     	movq	%rbp, %rdi
  210cdd: 4c 89 e2                     	movq	%r12, %rdx
  210ce0: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  210ce5: e8 96 85 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  210cea: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  210cf0: 0f 84 0d 1f 00 00            	je	0x212c03 <dwarf.DwarfInfo.getLineNumberInfo+0x5633>
  210cf6: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  210cfb: 89 c1                        	movl	%eax, %ecx
  210cfd: 83 e1 7f                     	andl	$127, %ecx
  210d00: c1 e1 15                     	shll	$21, %ecx
  210d03: 41 09 cf                     	orl	%ecx, %r15d
  210d06: 84 c0                        	testb	%al, %al
  210d08: 79 46                        	jns	0x210d50 <dwarf.DwarfInfo.getLineNumberInfo+0x3780>
  210d0a: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  210d0f: b9 01 00 00 00               	movl	$1, %ecx
  210d14: 48 89 ef                     	movq	%rbp, %rdi
  210d17: 4c 89 e2                     	movq	%r12, %rdx
  210d1a: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  210d1f: e8 5c 85 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  210d24: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  210d2a: 0f 84 d3 1e 00 00            	je	0x212c03 <dwarf.DwarfInfo.getLineNumberInfo+0x5633>
  210d30: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  210d35: 66 41 bd 29 00               	movw	$41, %r13w
  210d3a: a8 70                        	testb	$112, %al
  210d3c: 0f 85 d0 1e 00 00            	jne	0x212c12 <dwarf.DwarfInfo.getLineNumberInfo+0x5642>
  210d42: 84 c0                        	testb	%al, %al
  210d44: 0f 88 c8 1e 00 00            	js	0x212c12 <dwarf.DwarfInfo.getLineNumberInfo+0x5642>
  210d4a: c1 e0 1c                     	shll	$28, %eax
  210d4d: 41 09 c7                     	orl	%eax, %r15d
  210d50: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  210d55: b9 01 00 00 00               	movl	$1, %ecx
  210d5a: 48 89 ef                     	movq	%rbp, %rdi
  210d5d: 4c 89 e2                     	movq	%r12, %rdx
  210d60: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  210d65: e8 16 85 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  210d6a: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  210d70: 0f 84 55 1d 00 00            	je	0x212acb <dwarf.DwarfInfo.getLineNumberInfo+0x54fb>
  210d76: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  210d7b: 48 89 9c 24 a8 00 00 00      	movq	%rbx, 168(%rsp)
  210d83: 41 89 c5                     	movl	%eax, %r13d
  210d86: 41 83 e5 7f                  	andl	$127, %r13d
  210d8a: 84 c0                        	testb	%al, %al
  210d8c: 0f 89 4a 02 00 00            	jns	0x210fdc <dwarf.DwarfInfo.getLineNumberInfo+0x3a0c>
  210d92: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  210d97: b9 01 00 00 00               	movl	$1, %ecx
  210d9c: 48 89 ef                     	movq	%rbp, %rdi
  210d9f: 4c 89 e2                     	movq	%r12, %rdx
  210da2: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  210da7: e8 d4 84 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  210dac: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  210db2: 0f 84 13 1d 00 00            	je	0x212acb <dwarf.DwarfInfo.getLineNumberInfo+0x54fb>
  210db8: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  210dbd: 89 c1                        	movl	%eax, %ecx
  210dbf: 83 e1 7f                     	andl	$127, %ecx
  210dc2: 48 c1 e1 07                  	shlq	$7, %rcx
  210dc6: 49 09 cd                     	orq	%rcx, %r13
  210dc9: 84 c0                        	testb	%al, %al
  210dcb: 0f 89 0b 02 00 00            	jns	0x210fdc <dwarf.DwarfInfo.getLineNumberInfo+0x3a0c>
  210dd1: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  210dd6: b9 01 00 00 00               	movl	$1, %ecx
  210ddb: 48 89 ef                     	movq	%rbp, %rdi
  210dde: 4c 89 e2                     	movq	%r12, %rdx
  210de1: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  210de6: e8 95 84 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  210deb: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  210df1: 0f 84 d4 1c 00 00            	je	0x212acb <dwarf.DwarfInfo.getLineNumberInfo+0x54fb>
  210df7: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  210dfc: 89 c1                        	movl	%eax, %ecx
  210dfe: 83 e1 7f                     	andl	$127, %ecx
  210e01: 48 c1 e1 0e                  	shlq	$14, %rcx
  210e05: 49 09 cd                     	orq	%rcx, %r13
  210e08: 84 c0                        	testb	%al, %al
  210e0a: 0f 89 cc 01 00 00            	jns	0x210fdc <dwarf.DwarfInfo.getLineNumberInfo+0x3a0c>
  210e10: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  210e15: b9 01 00 00 00               	movl	$1, %ecx
  210e1a: 48 89 ef                     	movq	%rbp, %rdi
  210e1d: 4c 89 e2                     	movq	%r12, %rdx
  210e20: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  210e25: e8 56 84 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  210e2a: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  210e30: 0f 84 95 1c 00 00            	je	0x212acb <dwarf.DwarfInfo.getLineNumberInfo+0x54fb>
  210e36: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  210e3b: 89 c1                        	movl	%eax, %ecx
  210e3d: 83 e1 7f                     	andl	$127, %ecx
  210e40: 48 c1 e1 15                  	shlq	$21, %rcx
  210e44: 49 09 cd                     	orq	%rcx, %r13
  210e47: 84 c0                        	testb	%al, %al
  210e49: 0f 89 8d 01 00 00            	jns	0x210fdc <dwarf.DwarfInfo.getLineNumberInfo+0x3a0c>
  210e4f: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  210e54: b9 01 00 00 00               	movl	$1, %ecx
  210e59: 48 89 ef                     	movq	%rbp, %rdi
  210e5c: 4c 89 e2                     	movq	%r12, %rdx
  210e5f: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  210e64: e8 17 84 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  210e69: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  210e6f: 0f 84 56 1c 00 00            	je	0x212acb <dwarf.DwarfInfo.getLineNumberInfo+0x54fb>
  210e75: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  210e7a: 89 c1                        	movl	%eax, %ecx
  210e7c: 83 e1 7f                     	andl	$127, %ecx
  210e7f: 48 c1 e1 1c                  	shlq	$28, %rcx
  210e83: 49 09 cd                     	orq	%rcx, %r13
  210e86: 84 c0                        	testb	%al, %al
  210e88: 0f 89 4e 01 00 00            	jns	0x210fdc <dwarf.DwarfInfo.getLineNumberInfo+0x3a0c>
  210e8e: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  210e93: b9 01 00 00 00               	movl	$1, %ecx
  210e98: 48 89 ef                     	movq	%rbp, %rdi
  210e9b: 4c 89 e2                     	movq	%r12, %rdx
  210e9e: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  210ea3: e8 d8 83 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  210ea8: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  210eae: 0f 84 17 1c 00 00            	je	0x212acb <dwarf.DwarfInfo.getLineNumberInfo+0x54fb>
  210eb4: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  210eb9: 89 c1                        	movl	%eax, %ecx
  210ebb: 83 e1 7f                     	andl	$127, %ecx
  210ebe: 48 c1 e1 23                  	shlq	$35, %rcx
  210ec2: 49 09 cd                     	orq	%rcx, %r13
  210ec5: 84 c0                        	testb	%al, %al
  210ec7: 0f 89 0f 01 00 00            	jns	0x210fdc <dwarf.DwarfInfo.getLineNumberInfo+0x3a0c>
  210ecd: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  210ed2: b9 01 00 00 00               	movl	$1, %ecx
  210ed7: 48 89 ef                     	movq	%rbp, %rdi
  210eda: 4c 89 e2                     	movq	%r12, %rdx
  210edd: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  210ee2: e8 99 83 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  210ee7: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  210eed: 0f 84 d8 1b 00 00            	je	0x212acb <dwarf.DwarfInfo.getLineNumberInfo+0x54fb>
  210ef3: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  210ef8: 89 c1                        	movl	%eax, %ecx
  210efa: 83 e1 7f                     	andl	$127, %ecx
  210efd: 48 c1 e1 2a                  	shlq	$42, %rcx
  210f01: 49 09 cd                     	orq	%rcx, %r13
  210f04: 84 c0                        	testb	%al, %al
  210f06: 0f 89 d0 00 00 00            	jns	0x210fdc <dwarf.DwarfInfo.getLineNumberInfo+0x3a0c>
  210f0c: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  210f11: b9 01 00 00 00               	movl	$1, %ecx
  210f16: 48 89 ef                     	movq	%rbp, %rdi
  210f19: 4c 89 e2                     	movq	%r12, %rdx
  210f1c: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  210f21: e8 5a 83 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  210f26: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  210f2c: 0f 84 99 1b 00 00            	je	0x212acb <dwarf.DwarfInfo.getLineNumberInfo+0x54fb>
  210f32: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  210f37: 89 c1                        	movl	%eax, %ecx
  210f39: 83 e1 7f                     	andl	$127, %ecx
  210f3c: 48 c1 e1 31                  	shlq	$49, %rcx
  210f40: 49 09 cd                     	orq	%rcx, %r13
  210f43: 84 c0                        	testb	%al, %al
  210f45: 0f 89 91 00 00 00            	jns	0x210fdc <dwarf.DwarfInfo.getLineNumberInfo+0x3a0c>
  210f4b: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  210f50: b9 01 00 00 00               	movl	$1, %ecx
  210f55: 48 89 ef                     	movq	%rbp, %rdi
  210f58: 4c 89 e2                     	movq	%r12, %rdx
  210f5b: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  210f60: e8 1b 83 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  210f65: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  210f6b: 0f 84 5a 1b 00 00            	je	0x212acb <dwarf.DwarfInfo.getLineNumberInfo+0x54fb>
  210f71: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  210f76: 89 c1                        	movl	%eax, %ecx
  210f78: 83 e1 7f                     	andl	$127, %ecx
  210f7b: 48 c1 e1 38                  	shlq	$56, %rcx
  210f7f: 49 09 cd                     	orq	%rcx, %r13
  210f82: 84 c0                        	testb	%al, %al
  210f84: 79 56                        	jns	0x210fdc <dwarf.DwarfInfo.getLineNumberInfo+0x3a0c>
  210f86: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  210f8b: b9 01 00 00 00               	movl	$1, %ecx
  210f90: 48 89 ef                     	movq	%rbp, %rdi
  210f93: 4c 89 e2                     	movq	%r12, %rdx
  210f96: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  210f9b: e8 e0 82 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  210fa0: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  210fa6: 0f 84 1f 1b 00 00            	je	0x212acb <dwarf.DwarfInfo.getLineNumberInfo+0x54fb>
  210fac: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  210fb1: 66 c7 84 24 c0 00 00 00 29 00	movw	$41, 192(%rsp)
  210fbb: a8 7e                        	testb	$126, %al
  210fbd: 0f 85 ac 23 00 00            	jne	0x21336f <dwarf.DwarfInfo.getLineNumberInfo+0x5d9f>
  210fc3: 48 8b 5c 24 18               	movq	24(%rsp), %rbx
  210fc8: 84 c0                        	testb	%al, %al
  210fca: 0f 88 12 1b 00 00            	js	0x212ae2 <dwarf.DwarfInfo.getLineNumberInfo+0x5512>
  210fd0: 48 c1 e0 3f                  	shlq	$63, %rax
  210fd4: 4c 8d 64 24 10               	leaq	16(%rsp), %r12
  210fd9: 49 09 c5                     	orq	%rax, %r13
  210fdc: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  210fe1: b9 01 00 00 00               	movl	$1, %ecx
  210fe6: 48 89 ef                     	movq	%rbp, %rdi
  210fe9: 4c 89 e2                     	movq	%r12, %rdx
  210fec: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  210ff1: e8 8a 82 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  210ff6: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  210ffc: 0f 84 3a 1b 00 00            	je	0x212b3c <dwarf.DwarfInfo.getLineNumberInfo+0x556c>
  211002: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  211007: 89 c3                        	movl	%eax, %ebx
  211009: 83 e3 7f                     	andl	$127, %ebx
  21100c: 84 c0                        	testb	%al, %al
  21100e: 0f 89 f0 01 00 00            	jns	0x211204 <dwarf.DwarfInfo.getLineNumberInfo+0x3c34>
  211014: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  211019: b9 01 00 00 00               	movl	$1, %ecx
  21101e: 48 89 ef                     	movq	%rbp, %rdi
  211021: 4c 89 e2                     	movq	%r12, %rdx
  211024: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  211029: e8 52 82 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  21102e: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  211034: 0f 84 02 1b 00 00            	je	0x212b3c <dwarf.DwarfInfo.getLineNumberInfo+0x556c>
  21103a: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  21103f: 89 c1                        	movl	%eax, %ecx
  211041: 83 e1 7f                     	andl	$127, %ecx
  211044: 48 c1 e1 07                  	shlq	$7, %rcx
  211048: 48 09 cb                     	orq	%rcx, %rbx
  21104b: 84 c0                        	testb	%al, %al
  21104d: 0f 89 b1 01 00 00            	jns	0x211204 <dwarf.DwarfInfo.getLineNumberInfo+0x3c34>
  211053: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  211058: b9 01 00 00 00               	movl	$1, %ecx
  21105d: 48 89 ef                     	movq	%rbp, %rdi
  211060: 4c 89 e2                     	movq	%r12, %rdx
  211063: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  211068: e8 13 82 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  21106d: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  211073: 0f 84 c3 1a 00 00            	je	0x212b3c <dwarf.DwarfInfo.getLineNumberInfo+0x556c>
  211079: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  21107e: 89 c1                        	movl	%eax, %ecx
  211080: 83 e1 7f                     	andl	$127, %ecx
  211083: 48 c1 e1 0e                  	shlq	$14, %rcx
  211087: 48 09 cb                     	orq	%rcx, %rbx
  21108a: 84 c0                        	testb	%al, %al
  21108c: 0f 89 72 01 00 00            	jns	0x211204 <dwarf.DwarfInfo.getLineNumberInfo+0x3c34>
  211092: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  211097: b9 01 00 00 00               	movl	$1, %ecx
  21109c: 48 89 ef                     	movq	%rbp, %rdi
  21109f: 4c 89 e2                     	movq	%r12, %rdx
  2110a2: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  2110a7: e8 d4 81 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2110ac: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  2110b2: 0f 84 84 1a 00 00            	je	0x212b3c <dwarf.DwarfInfo.getLineNumberInfo+0x556c>
  2110b8: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  2110bd: 89 c1                        	movl	%eax, %ecx
  2110bf: 83 e1 7f                     	andl	$127, %ecx
  2110c2: 48 c1 e1 15                  	shlq	$21, %rcx
  2110c6: 48 09 cb                     	orq	%rcx, %rbx
  2110c9: 84 c0                        	testb	%al, %al
  2110cb: 0f 89 33 01 00 00            	jns	0x211204 <dwarf.DwarfInfo.getLineNumberInfo+0x3c34>
  2110d1: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  2110d6: b9 01 00 00 00               	movl	$1, %ecx
  2110db: 48 89 ef                     	movq	%rbp, %rdi
  2110de: 4c 89 e2                     	movq	%r12, %rdx
  2110e1: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  2110e6: e8 95 81 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2110eb: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  2110f1: 0f 84 45 1a 00 00            	je	0x212b3c <dwarf.DwarfInfo.getLineNumberInfo+0x556c>
  2110f7: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  2110fc: 89 c1                        	movl	%eax, %ecx
  2110fe: 83 e1 7f                     	andl	$127, %ecx
  211101: 48 c1 e1 1c                  	shlq	$28, %rcx
  211105: 48 09 cb                     	orq	%rcx, %rbx
  211108: 84 c0                        	testb	%al, %al
  21110a: 0f 89 f4 00 00 00            	jns	0x211204 <dwarf.DwarfInfo.getLineNumberInfo+0x3c34>
  211110: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  211115: b9 01 00 00 00               	movl	$1, %ecx
  21111a: 48 89 ef                     	movq	%rbp, %rdi
  21111d: 4c 89 e2                     	movq	%r12, %rdx
  211120: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  211125: e8 56 81 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  21112a: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  211130: 0f 84 06 1a 00 00            	je	0x212b3c <dwarf.DwarfInfo.getLineNumberInfo+0x556c>
  211136: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  21113b: 89 c1                        	movl	%eax, %ecx
  21113d: 83 e1 7f                     	andl	$127, %ecx
  211140: 48 c1 e1 23                  	shlq	$35, %rcx
  211144: 48 09 cb                     	orq	%rcx, %rbx
  211147: 84 c0                        	testb	%al, %al
  211149: 0f 89 b5 00 00 00            	jns	0x211204 <dwarf.DwarfInfo.getLineNumberInfo+0x3c34>
  21114f: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  211154: b9 01 00 00 00               	movl	$1, %ecx
  211159: 48 89 ef                     	movq	%rbp, %rdi
  21115c: 4c 89 e2                     	movq	%r12, %rdx
  21115f: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  211164: e8 17 81 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  211169: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  21116f: 0f 84 c7 19 00 00            	je	0x212b3c <dwarf.DwarfInfo.getLineNumberInfo+0x556c>
  211175: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  21117a: 89 c1                        	movl	%eax, %ecx
  21117c: 83 e1 7f                     	andl	$127, %ecx
  21117f: 48 c1 e1 2a                  	shlq	$42, %rcx
  211183: 48 09 cb                     	orq	%rcx, %rbx
  211186: 84 c0                        	testb	%al, %al
  211188: 79 7a                        	jns	0x211204 <dwarf.DwarfInfo.getLineNumberInfo+0x3c34>
  21118a: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  21118f: b9 01 00 00 00               	movl	$1, %ecx
  211194: 48 89 ef                     	movq	%rbp, %rdi
  211197: 4c 89 e2                     	movq	%r12, %rdx
  21119a: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  21119f: e8 dc 80 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2111a4: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  2111aa: 0f 84 8c 19 00 00            	je	0x212b3c <dwarf.DwarfInfo.getLineNumberInfo+0x556c>
  2111b0: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  2111b5: 89 c1                        	movl	%eax, %ecx
  2111b7: 83 e1 7f                     	andl	$127, %ecx
  2111ba: 48 c1 e1 31                  	shlq	$49, %rcx
  2111be: 48 09 cb                     	orq	%rcx, %rbx
  2111c1: 84 c0                        	testb	%al, %al
  2111c3: 79 3f                        	jns	0x211204 <dwarf.DwarfInfo.getLineNumberInfo+0x3c34>
  2111c5: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  2111ca: b9 01 00 00 00               	movl	$1, %ecx
  2111cf: 48 89 ef                     	movq	%rbp, %rdi
  2111d2: 4c 89 e2                     	movq	%r12, %rdx
  2111d5: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  2111da: e8 a1 80 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2111df: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  2111e5: 0f 84 51 19 00 00            	je	0x212b3c <dwarf.DwarfInfo.getLineNumberInfo+0x556c>
  2111eb: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  2111f0: 89 c1                        	movl	%eax, %ecx
  2111f2: 83 e1 7f                     	andl	$127, %ecx
  2111f5: 48 c1 e1 38                  	shlq	$56, %rcx
  2111f9: 48 09 cb                     	orq	%rcx, %rbx
  2111fc: 84 c0                        	testb	%al, %al
  2111fe: 0f 88 94 09 00 00            	js	0x211b98 <dwarf.DwarfInfo.getLineNumberInfo+0x45c8>
  211204: 4d 89 f4                     	movq	%r14, %r12
  211207: 48 8b 74 24 18               	movq	24(%rsp), %rsi
  21120c: 48 89 ef                     	movq	%rbp, %rdi
  21120f: 48 8d 94 24 00 02 00 00      	leaq	512(%rsp), %rdx
  211217: e8 84 85 00 00               	callq	0x2197a0 <array_list.ArrayListAligned(dwarf.FileEntry,null).addOne>
  21121c: 44 0f b7 74 24 38            	movzwl	56(%rsp), %r14d
  211222: 66 45 85 f6                  	testw	%r14w, %r14w
  211226: 0f 85 a9 1c 00 00            	jne	0x212ed5 <dwarf.DwarfInfo.getLineNumberInfo+0x5905>
  21122c: 48 8b 44 24 30               	movq	48(%rsp), %rax
  211231: 48 8b 8c 24 a8 00 00 00      	movq	168(%rsp), %rcx
  211239: c5 f8 57 c0                  	vxorps	%xmm0, %xmm0, %xmm0
  21123d: 4c 89 20                     	movq	%r12, (%rax)
  211240: 48 89 48 08                  	movq	%rcx, 8(%rax)
  211244: 4c 89 68 10                  	movq	%r13, 16(%rax)
  211248: 48 89 58 18                  	movq	%rbx, 24(%rax)
  21124c: 44 89 78 20                  	movl	%r15d, 32(%rax)
  211250: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  211255: 4c 8b 7c 24 58               	movq	88(%rsp), %r15
  21125a: 48 8b 9c 24 d8 00 00 00      	movq	216(%rsp), %rbx
  211262: c5 f8 11 40 24               	vmovups	%xmm0, 36(%rax)
  211267: 4c 8d 64 24 10               	leaq	16(%rsp), %r12
  21126c: e9 3f f4 ff ff               	jmp	0x2106b0 <dwarf.DwarfInfo.getLineNumberInfo+0x30e0>
  211271: 48 8b 44 24 78               	movq	120(%rsp), %rax
  211276: 48 8b 5c 24 20               	movq	32(%rsp), %rbx
  21127b: 45 31 ff                     	xorl	%r15d, %r15d
  21127e: 44 0f b6 b0 08 01 00 00      	movzbl	264(%rax), %r14d
  211286: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  211290: 48 89 44 24 10               	movq	%rax, 16(%rsp)
  211295: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
  2112a0: b9 08 00 00 00               	movl	$8, %ecx
  2112a5: 4a 8d 54 3c 10               	leaq	16(%rsp,%r15), %rdx
  2112aa: 48 89 ef                     	movq	%rbp, %rdi
  2112ad: 48 89 de                     	movq	%rbx, %rsi
  2112b0: 4c 29 f9                     	subq	%r15, %rcx
  2112b3: e8 c8 7f 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2112b8: 48 8b 44 24 30               	movq	48(%rsp), %rax
  2112bd: 48 85 c0                     	testq	%rax, %rax
  2112c0: 0f 84 14 0c 00 00            	je	0x211eda <dwarf.DwarfInfo.getLineNumberInfo+0x490a>
  2112c6: 49 01 c7                     	addq	%rax, %r15
  2112c9: 0f 82 00 1f 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  2112cf: 49 83 ff 08                  	cmpq	$8, %r15
  2112d3: 72 cb                        	jb	0x2112a0 <dwarf.DwarfInfo.getLineNumberInfo+0x3cd0>
  2112d5: 48 8b 44 24 10               	movq	16(%rsp), %rax
  2112da: 41 f6 c6 01                  	testb	$1, %r14b
  2112de: 48 89 c1                     	movq	%rax, %rcx
  2112e1: 48 0f c9                     	bswapq	%rcx
  2112e4: 48 0f 45 c8                  	cmovneq	%rax, %rcx
  2112e8: 48 89 8c 24 98 01 00 00      	movq	%rcx, 408(%rsp)
  2112f0: e9 4b 08 00 00               	jmp	0x211b40 <dwarf.DwarfInfo.getLineNumberInfo+0x4570>
  2112f5: 48 ff cb                     	decq	%rbx
  2112f8: 0f 88 7f 1b 00 00            	js	0x212e7d <dwarf.DwarfInfo.getLineNumberInfo+0x58ad>
  2112fe: 48 03 9c 24 18 01 00 00      	addq	280(%rsp), %rbx
  211306: 0f 82 46 08 00 00            	jb	0x211b52 <dwarf.DwarfInfo.getLineNumberInfo+0x4582>
  21130c: 48 8b 84 24 10 01 00 00      	movq	272(%rsp), %rax
  211314: 48 39 d8                     	cmpq	%rbx, %rax
  211317: 48 0f 42 d8                  	cmovbq	%rax, %rbx
  21131b: 48 89 9c 24 18 01 00 00      	movq	%rbx, 280(%rsp)
  211323: 48 8b 9c 24 d8 00 00 00      	movq	216(%rsp), %rbx
  21132b: e9 80 f3 ff ff               	jmp	0x2106b0 <dwarf.DwarfInfo.getLineNumberInfo+0x30e0>
  211330: fe c8                        	decb	%al
  211332: 41 38 c7                     	cmpb	%al, %r15b
  211335: 0f 86 c0 1d 00 00            	jbe	0x2130fb <dwarf.DwarfInfo.getLineNumberInfo+0x5b2b>
  21133b: 48 8b 4c 24 70               	movq	112(%rsp), %rcx
  211340: 0f b6 c0                     	movzbl	%al, %eax
  211343: 0f b6 04 01                  	movzbl	(%rcx,%rax), %eax
  211347: 48 03 84 24 18 01 00 00      	addq	280(%rsp), %rax
  21134f: 0f 82 1c 08 00 00            	jb	0x211b71 <dwarf.DwarfInfo.getLineNumberInfo+0x45a1>
  211355: 48 8b 8c 24 10 01 00 00      	movq	272(%rsp), %rcx
  21135d: 48 39 c1                     	cmpq	%rax, %rcx
  211360: 48 0f 42 c1                  	cmovbq	%rcx, %rax
  211364: 48 89 84 24 18 01 00 00      	movq	%rax, 280(%rsp)
  21136c: e9 3f f3 ff ff               	jmp	0x2106b0 <dwarf.DwarfInfo.getLineNumberInfo+0x30e0>
  211371: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  211376: b9 01 00 00 00               	movl	$1, %ecx
  21137b: 48 89 ef                     	movq	%rbp, %rdi
  21137e: 4c 89 e2                     	movq	%r12, %rdx
  211381: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  211386: e8 f5 7e 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  21138b: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  211391: 0f 84 ad 1b 00 00            	je	0x212f44 <dwarf.DwarfInfo.getLineNumberInfo+0x5974>
  211397: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  21139c: 41 89 c5                     	movl	%eax, %r13d
  21139f: 41 83 e5 7f                  	andl	$127, %r13d
  2113a3: 84 c0                        	testb	%al, %al
  2113a5: 0f 89 ad 08 00 00            	jns	0x211c58 <dwarf.DwarfInfo.getLineNumberInfo+0x4688>
  2113ab: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  2113b0: b9 01 00 00 00               	movl	$1, %ecx
  2113b5: 48 89 ef                     	movq	%rbp, %rdi
  2113b8: 4c 89 e2                     	movq	%r12, %rdx
  2113bb: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  2113c0: e8 bb 7e 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2113c5: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  2113cb: 0f 84 73 1b 00 00            	je	0x212f44 <dwarf.DwarfInfo.getLineNumberInfo+0x5974>
  2113d1: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  2113d6: 89 c1                        	movl	%eax, %ecx
  2113d8: 83 e1 7f                     	andl	$127, %ecx
  2113db: 48 c1 e1 07                  	shlq	$7, %rcx
  2113df: 49 09 cd                     	orq	%rcx, %r13
  2113e2: 84 c0                        	testb	%al, %al
  2113e4: 0f 89 6e 08 00 00            	jns	0x211c58 <dwarf.DwarfInfo.getLineNumberInfo+0x4688>
  2113ea: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  2113ef: b9 01 00 00 00               	movl	$1, %ecx
  2113f4: 48 89 ef                     	movq	%rbp, %rdi
  2113f7: 4c 89 e2                     	movq	%r12, %rdx
  2113fa: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  2113ff: e8 7c 7e 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  211404: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  21140a: 0f 84 34 1b 00 00            	je	0x212f44 <dwarf.DwarfInfo.getLineNumberInfo+0x5974>
  211410: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  211415: 89 c1                        	movl	%eax, %ecx
  211417: 83 e1 7f                     	andl	$127, %ecx
  21141a: 48 c1 e1 0e                  	shlq	$14, %rcx
  21141e: 49 09 cd                     	orq	%rcx, %r13
  211421: 84 c0                        	testb	%al, %al
  211423: 0f 89 2f 08 00 00            	jns	0x211c58 <dwarf.DwarfInfo.getLineNumberInfo+0x4688>
  211429: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  21142e: b9 01 00 00 00               	movl	$1, %ecx
  211433: 48 89 ef                     	movq	%rbp, %rdi
  211436: 4c 89 e2                     	movq	%r12, %rdx
  211439: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  21143e: e8 3d 7e 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  211443: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  211449: 0f 84 f5 1a 00 00            	je	0x212f44 <dwarf.DwarfInfo.getLineNumberInfo+0x5974>
  21144f: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  211454: 89 c1                        	movl	%eax, %ecx
  211456: 83 e1 7f                     	andl	$127, %ecx
  211459: 48 c1 e1 15                  	shlq	$21, %rcx
  21145d: 49 09 cd                     	orq	%rcx, %r13
  211460: 84 c0                        	testb	%al, %al
  211462: 0f 89 f0 07 00 00            	jns	0x211c58 <dwarf.DwarfInfo.getLineNumberInfo+0x4688>
  211468: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  21146d: b9 01 00 00 00               	movl	$1, %ecx
  211472: 48 89 ef                     	movq	%rbp, %rdi
  211475: 4c 89 e2                     	movq	%r12, %rdx
  211478: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  21147d: e8 fe 7d 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  211482: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  211488: 0f 84 b6 1a 00 00            	je	0x212f44 <dwarf.DwarfInfo.getLineNumberInfo+0x5974>
  21148e: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  211493: 89 c1                        	movl	%eax, %ecx
  211495: 83 e1 7f                     	andl	$127, %ecx
  211498: 48 c1 e1 1c                  	shlq	$28, %rcx
  21149c: 49 09 cd                     	orq	%rcx, %r13
  21149f: 84 c0                        	testb	%al, %al
  2114a1: 0f 89 b1 07 00 00            	jns	0x211c58 <dwarf.DwarfInfo.getLineNumberInfo+0x4688>
  2114a7: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  2114ac: b9 01 00 00 00               	movl	$1, %ecx
  2114b1: 48 89 ef                     	movq	%rbp, %rdi
  2114b4: 4c 89 e2                     	movq	%r12, %rdx
  2114b7: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  2114bc: e8 bf 7d 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2114c1: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  2114c7: 0f 84 77 1a 00 00            	je	0x212f44 <dwarf.DwarfInfo.getLineNumberInfo+0x5974>
  2114cd: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  2114d2: 89 c1                        	movl	%eax, %ecx
  2114d4: 83 e1 7f                     	andl	$127, %ecx
  2114d7: 48 c1 e1 23                  	shlq	$35, %rcx
  2114db: 49 09 cd                     	orq	%rcx, %r13
  2114de: 84 c0                        	testb	%al, %al
  2114e0: 0f 89 72 07 00 00            	jns	0x211c58 <dwarf.DwarfInfo.getLineNumberInfo+0x4688>
  2114e6: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  2114eb: b9 01 00 00 00               	movl	$1, %ecx
  2114f0: 48 89 ef                     	movq	%rbp, %rdi
  2114f3: 4c 89 e2                     	movq	%r12, %rdx
  2114f6: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  2114fb: e8 80 7d 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  211500: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  211506: 0f 84 38 1a 00 00            	je	0x212f44 <dwarf.DwarfInfo.getLineNumberInfo+0x5974>
  21150c: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  211511: 89 c1                        	movl	%eax, %ecx
  211513: 83 e1 7f                     	andl	$127, %ecx
  211516: 48 c1 e1 2a                  	shlq	$42, %rcx
  21151a: 49 09 cd                     	orq	%rcx, %r13
  21151d: 84 c0                        	testb	%al, %al
  21151f: 0f 89 33 07 00 00            	jns	0x211c58 <dwarf.DwarfInfo.getLineNumberInfo+0x4688>
  211525: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  21152a: b9 01 00 00 00               	movl	$1, %ecx
  21152f: 48 89 ef                     	movq	%rbp, %rdi
  211532: 4c 89 e2                     	movq	%r12, %rdx
  211535: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  21153a: e8 41 7d 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  21153f: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  211545: 0f 84 f9 19 00 00            	je	0x212f44 <dwarf.DwarfInfo.getLineNumberInfo+0x5974>
  21154b: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  211550: 89 c1                        	movl	%eax, %ecx
  211552: 83 e1 7f                     	andl	$127, %ecx
  211555: 48 c1 e1 31                  	shlq	$49, %rcx
  211559: 49 09 cd                     	orq	%rcx, %r13
  21155c: 84 c0                        	testb	%al, %al
  21155e: 0f 89 f4 06 00 00            	jns	0x211c58 <dwarf.DwarfInfo.getLineNumberInfo+0x4688>
  211564: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  211569: b9 01 00 00 00               	movl	$1, %ecx
  21156e: 48 89 ef                     	movq	%rbp, %rdi
  211571: 4c 89 e2                     	movq	%r12, %rdx
  211574: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  211579: e8 02 7d 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  21157e: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  211584: 0f 84 ba 19 00 00            	je	0x212f44 <dwarf.DwarfInfo.getLineNumberInfo+0x5974>
  21158a: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  21158f: 89 c1                        	movl	%eax, %ecx
  211591: 83 e1 7f                     	andl	$127, %ecx
  211594: 48 c1 e1 38                  	shlq	$56, %rcx
  211598: 49 09 cd                     	orq	%rcx, %r13
  21159b: 84 c0                        	testb	%al, %al
  21159d: 0f 88 50 06 00 00            	js	0x211bf3 <dwarf.DwarfInfo.getLineNumberInfo+0x4623>
  2115a3: 4c 8b 7c 24 58               	movq	88(%rsp), %r15
  2115a8: e9 9e 06 00 00               	jmp	0x211c4b <dwarf.DwarfInfo.getLineNumberInfo+0x467b>
  2115ad: 48 8b 74 24 18               	movq	24(%rsp), %rsi
  2115b2: 48 8d bc 24 e0 02 00 00      	leaq	736(%rsp), %rdi
  2115ba: 48 8d 54 24 20               	leaq	32(%rsp), %rdx
  2115bf: e8 fc 34 ff ff               	callq	0x204ac0 <leb128.readILEB128__anon_5345>
  2115c4: 44 0f b7 b4 24 e8 02 00 00   	movzwl	744(%rsp), %r14d
  2115cd: 66 45 85 f6                  	testw	%r14w, %r14w
  2115d1: 0f 85 7c 1b 00 00            	jne	0x213153 <dwarf.DwarfInfo.getLineNumberInfo+0x5b83>
  2115d7: 48 8b 84 24 a8 01 00 00      	movq	424(%rsp), %rax
  2115df: 48 03 84 24 e0 02 00 00      	addq	736(%rsp), %rax
  2115e7: 0f 80 e2 1b 00 00            	jo	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  2115ed: 48 89 84 24 a8 01 00 00      	movq	%rax, 424(%rsp)
  2115f5: e9 b6 f0 ff ff               	jmp	0x2106b0 <dwarf.DwarfInfo.getLineNumberInfo+0x30e0>
  2115fa: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  2115ff: b9 01 00 00 00               	movl	$1, %ecx
  211604: 48 89 ef                     	movq	%rbp, %rdi
  211607: 4c 89 e2                     	movq	%r12, %rdx
  21160a: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  21160f: e8 6c 7c 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  211614: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  21161a: 0f 84 ab 19 00 00            	je	0x212fcb <dwarf.DwarfInfo.getLineNumberInfo+0x59fb>
  211620: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  211625: 89 c3                        	movl	%eax, %ebx
  211627: 83 e3 7f                     	andl	$127, %ebx
  21162a: 84 c0                        	testb	%al, %al
  21162c: 0f 89 b9 06 00 00            	jns	0x211ceb <dwarf.DwarfInfo.getLineNumberInfo+0x471b>
  211632: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  211637: b9 01 00 00 00               	movl	$1, %ecx
  21163c: 48 89 ef                     	movq	%rbp, %rdi
  21163f: 4c 89 e2                     	movq	%r12, %rdx
  211642: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  211647: e8 34 7c 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  21164c: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  211652: 0f 84 73 19 00 00            	je	0x212fcb <dwarf.DwarfInfo.getLineNumberInfo+0x59fb>
  211658: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  21165d: 89 c1                        	movl	%eax, %ecx
  21165f: 83 e1 7f                     	andl	$127, %ecx
  211662: 48 c1 e1 07                  	shlq	$7, %rcx
  211666: 48 09 cb                     	orq	%rcx, %rbx
  211669: 84 c0                        	testb	%al, %al
  21166b: 0f 89 7a 06 00 00            	jns	0x211ceb <dwarf.DwarfInfo.getLineNumberInfo+0x471b>
  211671: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  211676: b9 01 00 00 00               	movl	$1, %ecx
  21167b: 48 89 ef                     	movq	%rbp, %rdi
  21167e: 4c 89 e2                     	movq	%r12, %rdx
  211681: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  211686: e8 f5 7b 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  21168b: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  211691: 0f 84 34 19 00 00            	je	0x212fcb <dwarf.DwarfInfo.getLineNumberInfo+0x59fb>
  211697: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  21169c: 89 c1                        	movl	%eax, %ecx
  21169e: 83 e1 7f                     	andl	$127, %ecx
  2116a1: 48 c1 e1 0e                  	shlq	$14, %rcx
  2116a5: 48 09 cb                     	orq	%rcx, %rbx
  2116a8: 84 c0                        	testb	%al, %al
  2116aa: 0f 89 3b 06 00 00            	jns	0x211ceb <dwarf.DwarfInfo.getLineNumberInfo+0x471b>
  2116b0: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  2116b5: b9 01 00 00 00               	movl	$1, %ecx
  2116ba: 48 89 ef                     	movq	%rbp, %rdi
  2116bd: 4c 89 e2                     	movq	%r12, %rdx
  2116c0: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  2116c5: e8 b6 7b 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2116ca: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  2116d0: 0f 84 f5 18 00 00            	je	0x212fcb <dwarf.DwarfInfo.getLineNumberInfo+0x59fb>
  2116d6: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  2116db: 89 c1                        	movl	%eax, %ecx
  2116dd: 83 e1 7f                     	andl	$127, %ecx
  2116e0: 48 c1 e1 15                  	shlq	$21, %rcx
  2116e4: 48 09 cb                     	orq	%rcx, %rbx
  2116e7: 84 c0                        	testb	%al, %al
  2116e9: 0f 89 fc 05 00 00            	jns	0x211ceb <dwarf.DwarfInfo.getLineNumberInfo+0x471b>
  2116ef: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  2116f4: b9 01 00 00 00               	movl	$1, %ecx
  2116f9: 48 89 ef                     	movq	%rbp, %rdi
  2116fc: 4c 89 e2                     	movq	%r12, %rdx
  2116ff: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  211704: e8 77 7b 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  211709: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  21170f: 0f 84 b6 18 00 00            	je	0x212fcb <dwarf.DwarfInfo.getLineNumberInfo+0x59fb>
  211715: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  21171a: 89 c1                        	movl	%eax, %ecx
  21171c: 83 e1 7f                     	andl	$127, %ecx
  21171f: 48 c1 e1 1c                  	shlq	$28, %rcx
  211723: 48 09 cb                     	orq	%rcx, %rbx
  211726: 84 c0                        	testb	%al, %al
  211728: 0f 89 bd 05 00 00            	jns	0x211ceb <dwarf.DwarfInfo.getLineNumberInfo+0x471b>
  21172e: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  211733: b9 01 00 00 00               	movl	$1, %ecx
  211738: 48 89 ef                     	movq	%rbp, %rdi
  21173b: 4c 89 e2                     	movq	%r12, %rdx
  21173e: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  211743: e8 38 7b 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  211748: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  21174e: 0f 84 77 18 00 00            	je	0x212fcb <dwarf.DwarfInfo.getLineNumberInfo+0x59fb>
  211754: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  211759: 89 c1                        	movl	%eax, %ecx
  21175b: 83 e1 7f                     	andl	$127, %ecx
  21175e: 48 c1 e1 23                  	shlq	$35, %rcx
  211762: 48 09 cb                     	orq	%rcx, %rbx
  211765: 84 c0                        	testb	%al, %al
  211767: 0f 89 7e 05 00 00            	jns	0x211ceb <dwarf.DwarfInfo.getLineNumberInfo+0x471b>
  21176d: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  211772: b9 01 00 00 00               	movl	$1, %ecx
  211777: 48 89 ef                     	movq	%rbp, %rdi
  21177a: 4c 89 e2                     	movq	%r12, %rdx
  21177d: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  211782: e8 f9 7a 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  211787: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  21178d: 0f 84 38 18 00 00            	je	0x212fcb <dwarf.DwarfInfo.getLineNumberInfo+0x59fb>
  211793: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  211798: 89 c1                        	movl	%eax, %ecx
  21179a: 83 e1 7f                     	andl	$127, %ecx
  21179d: 48 c1 e1 2a                  	shlq	$42, %rcx
  2117a1: 48 09 cb                     	orq	%rcx, %rbx
  2117a4: 84 c0                        	testb	%al, %al
  2117a6: 0f 89 3f 05 00 00            	jns	0x211ceb <dwarf.DwarfInfo.getLineNumberInfo+0x471b>
  2117ac: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  2117b1: b9 01 00 00 00               	movl	$1, %ecx
  2117b6: 48 89 ef                     	movq	%rbp, %rdi
  2117b9: 4c 89 e2                     	movq	%r12, %rdx
  2117bc: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  2117c1: e8 ba 7a 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2117c6: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  2117cc: 0f 84 f9 17 00 00            	je	0x212fcb <dwarf.DwarfInfo.getLineNumberInfo+0x59fb>
  2117d2: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  2117d7: 89 c1                        	movl	%eax, %ecx
  2117d9: 83 e1 7f                     	andl	$127, %ecx
  2117dc: 48 c1 e1 31                  	shlq	$49, %rcx
  2117e0: 48 09 cb                     	orq	%rcx, %rbx
  2117e3: 84 c0                        	testb	%al, %al
  2117e5: 0f 89 00 05 00 00            	jns	0x211ceb <dwarf.DwarfInfo.getLineNumberInfo+0x471b>
  2117eb: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  2117f0: b9 01 00 00 00               	movl	$1, %ecx
  2117f5: 48 89 ef                     	movq	%rbp, %rdi
  2117f8: 4c 89 e2                     	movq	%r12, %rdx
  2117fb: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  211800: e8 7b 7a 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  211805: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  21180b: 0f 84 ba 17 00 00            	je	0x212fcb <dwarf.DwarfInfo.getLineNumberInfo+0x59fb>
  211811: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  211816: 89 c1                        	movl	%eax, %ecx
  211818: 83 e1 7f                     	andl	$127, %ecx
  21181b: 48 c1 e1 38                  	shlq	$56, %rcx
  21181f: 48 09 cb                     	orq	%rcx, %rbx
  211822: 84 c0                        	testb	%al, %al
  211824: 0f 88 5f 04 00 00            	js	0x211c89 <dwarf.DwarfInfo.getLineNumberInfo+0x46b9>
  21182a: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  21182f: e9 ad 04 00 00               	jmp	0x211ce1 <dwarf.DwarfInfo.getLineNumberInfo+0x4711>
  211834: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  211839: b9 01 00 00 00               	movl	$1, %ecx
  21183e: 48 89 ef                     	movq	%rbp, %rdi
  211841: 4c 89 e2                     	movq	%r12, %rdx
  211844: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  211849: e8 32 7a 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  21184e: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  211854: 0f 84 c4 17 00 00            	je	0x21301e <dwarf.DwarfInfo.getLineNumberInfo+0x5a4e>
  21185a: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  21185f: 89 c3                        	movl	%eax, %ebx
  211861: 83 e3 7f                     	andl	$127, %ebx
  211864: 84 c0                        	testb	%al, %al
  211866: 0f 89 f6 04 00 00            	jns	0x211d62 <dwarf.DwarfInfo.getLineNumberInfo+0x4792>
  21186c: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  211871: b9 01 00 00 00               	movl	$1, %ecx
  211876: 48 89 ef                     	movq	%rbp, %rdi
  211879: 4c 89 e2                     	movq	%r12, %rdx
  21187c: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  211881: e8 fa 79 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  211886: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  21188c: 0f 84 8c 17 00 00            	je	0x21301e <dwarf.DwarfInfo.getLineNumberInfo+0x5a4e>
  211892: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  211897: 89 c1                        	movl	%eax, %ecx
  211899: 83 e1 7f                     	andl	$127, %ecx
  21189c: 48 c1 e1 07                  	shlq	$7, %rcx
  2118a0: 48 09 cb                     	orq	%rcx, %rbx
  2118a3: 84 c0                        	testb	%al, %al
  2118a5: 0f 89 b7 04 00 00            	jns	0x211d62 <dwarf.DwarfInfo.getLineNumberInfo+0x4792>
  2118ab: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  2118b0: b9 01 00 00 00               	movl	$1, %ecx
  2118b5: 48 89 ef                     	movq	%rbp, %rdi
  2118b8: 4c 89 e2                     	movq	%r12, %rdx
  2118bb: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  2118c0: e8 bb 79 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2118c5: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  2118cb: 0f 84 4d 17 00 00            	je	0x21301e <dwarf.DwarfInfo.getLineNumberInfo+0x5a4e>
  2118d1: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  2118d6: 89 c1                        	movl	%eax, %ecx
  2118d8: 83 e1 7f                     	andl	$127, %ecx
  2118db: 48 c1 e1 0e                  	shlq	$14, %rcx
  2118df: 48 09 cb                     	orq	%rcx, %rbx
  2118e2: 84 c0                        	testb	%al, %al
  2118e4: 0f 89 78 04 00 00            	jns	0x211d62 <dwarf.DwarfInfo.getLineNumberInfo+0x4792>
  2118ea: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  2118ef: b9 01 00 00 00               	movl	$1, %ecx
  2118f4: 48 89 ef                     	movq	%rbp, %rdi
  2118f7: 4c 89 e2                     	movq	%r12, %rdx
  2118fa: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  2118ff: e8 7c 79 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  211904: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  21190a: 0f 84 0e 17 00 00            	je	0x21301e <dwarf.DwarfInfo.getLineNumberInfo+0x5a4e>
  211910: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  211915: 89 c1                        	movl	%eax, %ecx
  211917: 83 e1 7f                     	andl	$127, %ecx
  21191a: 48 c1 e1 15                  	shlq	$21, %rcx
  21191e: 48 09 cb                     	orq	%rcx, %rbx
  211921: 84 c0                        	testb	%al, %al
  211923: 0f 89 39 04 00 00            	jns	0x211d62 <dwarf.DwarfInfo.getLineNumberInfo+0x4792>
  211929: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  21192e: b9 01 00 00 00               	movl	$1, %ecx
  211933: 48 89 ef                     	movq	%rbp, %rdi
  211936: 4c 89 e2                     	movq	%r12, %rdx
  211939: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  21193e: e8 3d 79 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  211943: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  211949: 0f 84 cf 16 00 00            	je	0x21301e <dwarf.DwarfInfo.getLineNumberInfo+0x5a4e>
  21194f: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  211954: 89 c1                        	movl	%eax, %ecx
  211956: 83 e1 7f                     	andl	$127, %ecx
  211959: 48 c1 e1 1c                  	shlq	$28, %rcx
  21195d: 48 09 cb                     	orq	%rcx, %rbx
  211960: 84 c0                        	testb	%al, %al
  211962: 0f 89 fa 03 00 00            	jns	0x211d62 <dwarf.DwarfInfo.getLineNumberInfo+0x4792>
  211968: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  21196d: b9 01 00 00 00               	movl	$1, %ecx
  211972: 48 89 ef                     	movq	%rbp, %rdi
  211975: 4c 89 e2                     	movq	%r12, %rdx
  211978: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  21197d: e8 fe 78 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  211982: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  211988: 0f 84 90 16 00 00            	je	0x21301e <dwarf.DwarfInfo.getLineNumberInfo+0x5a4e>
  21198e: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  211993: 89 c1                        	movl	%eax, %ecx
  211995: 83 e1 7f                     	andl	$127, %ecx
  211998: 48 c1 e1 23                  	shlq	$35, %rcx
  21199c: 48 09 cb                     	orq	%rcx, %rbx
  21199f: 84 c0                        	testb	%al, %al
  2119a1: 0f 89 bb 03 00 00            	jns	0x211d62 <dwarf.DwarfInfo.getLineNumberInfo+0x4792>
  2119a7: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  2119ac: b9 01 00 00 00               	movl	$1, %ecx
  2119b1: 48 89 ef                     	movq	%rbp, %rdi
  2119b4: 4c 89 e2                     	movq	%r12, %rdx
  2119b7: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  2119bc: e8 bf 78 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2119c1: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  2119c7: 0f 84 51 16 00 00            	je	0x21301e <dwarf.DwarfInfo.getLineNumberInfo+0x5a4e>
  2119cd: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  2119d2: 89 c1                        	movl	%eax, %ecx
  2119d4: 83 e1 7f                     	andl	$127, %ecx
  2119d7: 48 c1 e1 2a                  	shlq	$42, %rcx
  2119db: 48 09 cb                     	orq	%rcx, %rbx
  2119de: 84 c0                        	testb	%al, %al
  2119e0: 0f 89 7c 03 00 00            	jns	0x211d62 <dwarf.DwarfInfo.getLineNumberInfo+0x4792>
  2119e6: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  2119eb: b9 01 00 00 00               	movl	$1, %ecx
  2119f0: 48 89 ef                     	movq	%rbp, %rdi
  2119f3: 4c 89 e2                     	movq	%r12, %rdx
  2119f6: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  2119fb: e8 80 78 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  211a00: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  211a06: 0f 84 12 16 00 00            	je	0x21301e <dwarf.DwarfInfo.getLineNumberInfo+0x5a4e>
  211a0c: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  211a11: 89 c1                        	movl	%eax, %ecx
  211a13: 83 e1 7f                     	andl	$127, %ecx
  211a16: 48 c1 e1 31                  	shlq	$49, %rcx
  211a1a: 48 09 cb                     	orq	%rcx, %rbx
  211a1d: 84 c0                        	testb	%al, %al
  211a1f: 0f 89 3d 03 00 00            	jns	0x211d62 <dwarf.DwarfInfo.getLineNumberInfo+0x4792>
  211a25: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  211a2a: b9 01 00 00 00               	movl	$1, %ecx
  211a2f: 48 89 ef                     	movq	%rbp, %rdi
  211a32: 4c 89 e2                     	movq	%r12, %rdx
  211a35: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  211a3a: e8 41 78 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  211a3f: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  211a45: 0f 84 d3 15 00 00            	je	0x21301e <dwarf.DwarfInfo.getLineNumberInfo+0x5a4e>
  211a4b: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  211a50: 89 c1                        	movl	%eax, %ecx
  211a52: 83 e1 7f                     	andl	$127, %ecx
  211a55: 48 c1 e1 38                  	shlq	$56, %rcx
  211a59: 48 09 cb                     	orq	%rcx, %rbx
  211a5c: 84 c0                        	testb	%al, %al
  211a5e: 0f 88 9c 02 00 00            	js	0x211d00 <dwarf.DwarfInfo.getLineNumberInfo+0x4730>
  211a64: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  211a69: e9 ea 02 00 00               	jmp	0x211d58 <dwarf.DwarfInfo.getLineNumberInfo+0x4788>
  211a6e: 0f b6 84 24 f2 01 00 00      	movzbl	498(%rsp), %eax
  211a76: f6 d0                        	notb	%al
  211a78: 24 01                        	andb	$1, %al
  211a7a: 88 84 24 f2 01 00 00         	movb	%al, 498(%rsp)
  211a81: e9 2a ec ff ff               	jmp	0x2106b0 <dwarf.DwarfInfo.getLineNumberInfo+0x30e0>
  211a86: 0f b6 84 24 c8 00 00 00      	movzbl	200(%rsp), %eax
  211a8e: f6 b4 24 b5 00 00 00         	divb	181(%rsp)
  211a95: 89 c1                        	movl	%eax, %ecx
  211a97: 48 8b 84 24 90 01 00 00      	movq	400(%rsp), %rax
  211a9f: f6 e1                        	mulb	%cl
  211aa1: 0f 80 28 17 00 00            	jo	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  211aa7: 0f b6 c0                     	movzbl	%al, %eax
  211aaa: 48 03 84 24 98 01 00 00      	addq	408(%rsp), %rax
  211ab2: 0f 83 c4 01 00 00            	jae	0x211c7c <dwarf.DwarfInfo.getLineNumberInfo+0x46ac>
  211ab8: e9 12 17 00 00               	jmp	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  211abd: 48 8b 44 24 78               	movq	120(%rsp), %rax
  211ac2: 48 8b 5c 24 20               	movq	32(%rsp), %rbx
  211ac7: 45 31 ff                     	xorl	%r15d, %r15d
  211aca: 44 0f b6 b0 08 01 00 00      	movzbl	264(%rax), %r14d
  211ad2: 66 c7 44 24 10 aa aa         	movw	$43690, 16(%rsp)        # imm = 0xAAAA
  211ad9: 0f 1f 80 00 00 00 00         	nopl	(%rax)
  211ae0: b9 02 00 00 00               	movl	$2, %ecx
  211ae5: 4a 8d 54 3c 10               	leaq	16(%rsp,%r15), %rdx
  211aea: 48 89 ef                     	movq	%rbp, %rdi
  211aed: 48 89 de                     	movq	%rbx, %rsi
  211af0: 4c 29 f9                     	subq	%r15, %rcx
  211af3: e8 88 77 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  211af8: 48 8b 44 24 30               	movq	48(%rsp), %rax
  211afd: 48 85 c0                     	testq	%rax, %rax
  211b00: 0f 84 99 06 00 00            	je	0x21219f <dwarf.DwarfInfo.getLineNumberInfo+0x4bcf>
  211b06: 49 01 c7                     	addq	%rax, %r15
  211b09: 0f 82 c0 16 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  211b0f: 49 83 ff 02                  	cmpq	$2, %r15
  211b13: 72 cb                        	jb	0x211ae0 <dwarf.DwarfInfo.getLineNumberInfo+0x4510>
  211b15: 0f b7 44 24 10               	movzwl	16(%rsp), %eax
  211b1a: 89 c1                        	movl	%eax, %ecx
  211b1c: 66 c1 c1 08                  	rolw	$8, %cx
  211b20: 41 f6 c6 01                  	testb	$1, %r14b
  211b24: 0f 45 c8                     	cmovnel	%eax, %ecx
  211b27: 0f b7 c1                     	movzwl	%cx, %eax
  211b2a: 48 03 84 24 98 01 00 00      	addq	408(%rsp), %rax
  211b32: 0f 82 97 16 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  211b38: 48 89 84 24 98 01 00 00      	movq	%rax, 408(%rsp)
  211b40: 4c 8b 7c 24 58               	movq	88(%rsp), %r15
  211b45: 48 8b 9c 24 d8 00 00 00      	movq	216(%rsp), %rbx
  211b4d: e9 5e eb ff ff               	jmp	0x2106b0 <dwarf.DwarfInfo.getLineNumberInfo+0x30e0>
  211b52: 4c 8b 74 24 18               	movq	24(%rsp), %r14
  211b57: 49 8b 1e                     	movq	(%r14), %rbx
  211b5a: 4c 89 f7                     	movq	%r14, %rdi
  211b5d: e8 ee a1 00 00               	callq	0x21bd50 <builtin.returnError>
  211b62: 49 89 1e                     	movq	%rbx, (%r14)
  211b65: 48 c7 c3 ff ff ff ff         	movq	$-1, %rbx
  211b6c: e9 9b f7 ff ff               	jmp	0x21130c <dwarf.DwarfInfo.getLineNumberInfo+0x3d3c>
  211b71: 4c 8b 74 24 18               	movq	24(%rsp), %r14
  211b76: 49 8b 1e                     	movq	(%r14), %rbx
  211b79: 4c 89 f7                     	movq	%r14, %rdi
  211b7c: e8 cf a1 00 00               	callq	0x21bd50 <builtin.returnError>
  211b81: 49 89 1e                     	movq	%rbx, (%r14)
  211b84: 48 8b 9c 24 d8 00 00 00      	movq	216(%rsp), %rbx
  211b8c: 48 c7 c0 ff ff ff ff         	movq	$-1, %rax
  211b93: e9 bd f7 ff ff               	jmp	0x211355 <dwarf.DwarfInfo.getLineNumberInfo+0x3d85>
  211b98: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  211b9d: b9 01 00 00 00               	movl	$1, %ecx
  211ba2: 48 89 ef                     	movq	%rbp, %rdi
  211ba5: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  211baa: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  211baf: e8 cc 76 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  211bb4: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  211bba: 0f 84 7c 0f 00 00            	je	0x212b3c <dwarf.DwarfInfo.getLineNumberInfo+0x556c>
  211bc0: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  211bc5: 66 c7 84 24 c0 00 00 00 29 00	movw	$41, 192(%rsp)
  211bcf: a8 7e                        	testb	$126, %al
  211bd1: 0f 85 a2 17 00 00            	jne	0x213379 <dwarf.DwarfInfo.getLineNumberInfo+0x5da9>
  211bd7: 4d 89 f4                     	movq	%r14, %r12
  211bda: 4c 8b 74 24 18               	movq	24(%rsp), %r14
  211bdf: 84 c0                        	testb	%al, %al
  211be1: 0f 88 6c 0f 00 00            	js	0x212b53 <dwarf.DwarfInfo.getLineNumberInfo+0x5583>
  211be7: 48 c1 e0 3f                  	shlq	$63, %rax
  211beb: 48 09 c3                     	orq	%rax, %rbx
  211bee: e9 14 f6 ff ff               	jmp	0x211207 <dwarf.DwarfInfo.getLineNumberInfo+0x3c37>
  211bf3: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  211bf8: b9 01 00 00 00               	movl	$1, %ecx
  211bfd: 48 89 ef                     	movq	%rbp, %rdi
  211c00: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  211c05: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  211c0a: e8 71 76 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  211c0f: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  211c15: 4c 8b 7c 24 58               	movq	88(%rsp), %r15
  211c1a: 0f 84 24 13 00 00            	je	0x212f44 <dwarf.DwarfInfo.getLineNumberInfo+0x5974>
  211c20: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  211c25: a8 7e                        	testb	$126, %al
  211c27: 0f 85 56 17 00 00            	jne	0x213383 <dwarf.DwarfInfo.getLineNumberInfo+0x5db3>
  211c2d: 4c 8b 64 24 18               	movq	24(%rsp), %r12
  211c32: 4c 8b 7c 24 58               	movq	88(%rsp), %r15
  211c37: 66 41 be 29 00               	movw	$41, %r14w
  211c3c: 84 c0                        	testb	%al, %al
  211c3e: 0f 88 12 13 00 00            	js	0x212f56 <dwarf.DwarfInfo.getLineNumberInfo+0x5986>
  211c44: 48 c1 e0 3f                  	shlq	$63, %rax
  211c48: 49 09 c5                     	orq	%rax, %r13
  211c4b: 48 8b 9c 24 d8 00 00 00      	movq	216(%rsp), %rbx
  211c53: 4c 8d 64 24 10               	leaq	16(%rsp), %r12
  211c58: 4c 89 e8                     	movq	%r13, %rax
  211c5b: 48 f7 a4 24 90 01 00 00      	mulq	400(%rsp)
  211c63: 0f 80 66 15 00 00            	jo	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  211c69: 48 03 84 24 98 01 00 00      	addq	408(%rsp), %rax
  211c71: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  211c76: 0f 82 53 15 00 00            	jb	0x2131cf <dwarf.DwarfInfo.getLineNumberInfo+0x5bff>
  211c7c: 48 89 84 24 98 01 00 00      	movq	%rax, 408(%rsp)
  211c84: e9 27 ea ff ff               	jmp	0x2106b0 <dwarf.DwarfInfo.getLineNumberInfo+0x30e0>
  211c89: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  211c8e: b9 01 00 00 00               	movl	$1, %ecx
  211c93: 48 89 ef                     	movq	%rbp, %rdi
  211c96: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  211c9b: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  211ca0: e8 db 75 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  211ca5: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  211cab: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  211cb0: 0f 84 15 13 00 00            	je	0x212fcb <dwarf.DwarfInfo.getLineNumberInfo+0x59fb>
  211cb6: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  211cbb: a8 7e                        	testb	$126, %al
  211cbd: 0f 85 d4 16 00 00            	jne	0x213397 <dwarf.DwarfInfo.getLineNumberInfo+0x5dc7>
  211cc3: 4c 8b 64 24 18               	movq	24(%rsp), %r12
  211cc8: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  211ccd: 66 41 bf 29 00               	movw	$41, %r15w
  211cd2: 84 c0                        	testb	%al, %al
  211cd4: 0f 88 03 13 00 00            	js	0x212fdd <dwarf.DwarfInfo.getLineNumberInfo+0x5a0d>
  211cda: 48 c1 e0 3f                  	shlq	$63, %rax
  211cde: 48 09 c3                     	orq	%rax, %rbx
  211ce1: 4c 8b 7c 24 58               	movq	88(%rsp), %r15
  211ce6: 4c 8d 64 24 10               	leaq	16(%rsp), %r12
  211ceb: 48 89 9c 24 a0 01 00 00      	movq	%rbx, 416(%rsp)
  211cf3: 48 8b 9c 24 d8 00 00 00      	movq	216(%rsp), %rbx
  211cfb: e9 b0 e9 ff ff               	jmp	0x2106b0 <dwarf.DwarfInfo.getLineNumberInfo+0x30e0>
  211d00: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  211d05: b9 01 00 00 00               	movl	$1, %ecx
  211d0a: 48 89 ef                     	movq	%rbp, %rdi
  211d0d: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  211d12: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  211d17: e8 64 75 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  211d1c: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  211d22: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  211d27: 0f 84 f1 12 00 00            	je	0x21301e <dwarf.DwarfInfo.getLineNumberInfo+0x5a4e>
  211d2d: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  211d32: a8 7e                        	testb	$126, %al
  211d34: 0f 85 71 16 00 00            	jne	0x2133ab <dwarf.DwarfInfo.getLineNumberInfo+0x5ddb>
  211d3a: 4c 8b 64 24 18               	movq	24(%rsp), %r12
  211d3f: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  211d44: 66 41 bf 29 00               	movw	$41, %r15w
  211d49: 84 c0                        	testb	%al, %al
  211d4b: 0f 88 df 12 00 00            	js	0x213030 <dwarf.DwarfInfo.getLineNumberInfo+0x5a60>
  211d51: 48 c1 e0 3f                  	shlq	$63, %rax
  211d55: 48 09 c3                     	orq	%rax, %rbx
  211d58: 4c 8b 7c 24 58               	movq	88(%rsp), %r15
  211d5d: 4c 8d 64 24 10               	leaq	16(%rsp), %r12
  211d62: 48 89 9c 24 b0 01 00 00      	movq	%rbx, 432(%rsp)
  211d6a: 48 8b 9c 24 d8 00 00 00      	movq	216(%rsp), %rbx
  211d72: e9 39 e9 ff ff               	jmp	0x2106b0 <dwarf.DwarfInfo.getLineNumberInfo+0x30e0>
  211d77: c5 fc 10 84 24 20 04 00 00   	vmovups	1056(%rsp), %ymm0
  211d80: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  211d88: c5 fc 11 84 24 a0 04 00 00   	vmovups	%ymm0, 1184(%rsp)
  211d91: 48 85 f6                     	testq	%rsi, %rsi
  211d94: 74 37                        	je	0x211dcd <dwarf.DwarfInfo.getLineNumberInfo+0x47fd>
  211d96: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
  211da0: 48 8b 56 08                  	movq	8(%rsi), %rdx
  211da4: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  211dac: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  211db4: 48 8b 1e                     	movq	(%rsi), %rbx
  211db7: b9 03 00 00 00               	movl	$3, %ecx
  211dbc: 4d 89 e8                     	movq	%r13, %r8
  211dbf: c5 f8 77                     	vzeroupper
  211dc2: ff 50 10                     	callq	*16(%rax)
  211dc5: 48 89 de                     	movq	%rbx, %rsi
  211dc8: 48 85 db                     	testq	%rbx, %rbx
  211dcb: 75 d3                        	jne	0x211da0 <dwarf.DwarfInfo.getLineNumberInfo+0x47d0>
  211dcd: 4c 8b 64 24 70               	movq	112(%rsp), %r12
  211dd2: 4d 85 ff                     	testq	%r15, %r15
  211dd5: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  211ddf: 4c 0f 44 e0                  	cmoveq	%rax, %r12
  211de3: 74 31                        	je	0x211e16 <dwarf.DwarfInfo.getLineNumberInfo+0x4846>
  211de5: 48 8b 44 24 68               	movq	104(%rsp), %rax
  211dea: 4c 89 e7                     	movq	%r12, %rdi
  211ded: be aa 00 00 00               	movl	$170, %esi
  211df2: 4c 89 fa                     	movq	%r15, %rdx
  211df5: 48 8b 18                     	movq	(%rax), %rbx
  211df8: 4c 8b 70 08                  	movq	8(%rax), %r14
  211dfc: c5 f8 77                     	vzeroupper
  211dff: e8 dc a5 00 00               	callq	0x21c3e0 <memset>
  211e04: 48 89 df                     	movq	%rbx, %rdi
  211e07: 4c 89 e6                     	movq	%r12, %rsi
  211e0a: 4c 89 fa                     	movq	%r15, %rdx
  211e0d: 31 c9                        	xorl	%ecx, %ecx
  211e0f: 4d 89 e8                     	movq	%r13, %r8
  211e12: 41 ff 56 10                  	callq	*16(%r14)
  211e16: c5 fc 10 84 24 a0 04 00 00   	vmovups	1184(%rsp), %ymm0
  211e1f: e9 2c 07 00 00               	jmp	0x212550 <dwarf.DwarfInfo.getLineNumberInfo+0x4f80>
  211e24: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  211e2c: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  211e31: 48 85 f6                     	testq	%rsi, %rsi
  211e34: 74 34                        	je	0x211e6a <dwarf.DwarfInfo.getLineNumberInfo+0x489a>
  211e36: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
  211e40: 48 8b 56 08                  	movq	8(%rsi), %rdx
  211e44: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  211e4c: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  211e54: 48 8b 1e                     	movq	(%rsi), %rbx
  211e57: b9 03 00 00 00               	movl	$3, %ecx
  211e5c: 4d 89 e8                     	movq	%r13, %r8
  211e5f: ff 50 10                     	callq	*16(%rax)
  211e62: 48 89 de                     	movq	%rbx, %rsi
  211e65: 48 85 db                     	testq	%rbx, %rbx
  211e68: 75 d6                        	jne	0x211e40 <dwarf.DwarfInfo.getLineNumberInfo+0x4870>
  211e6a: 48 8b 6c 24 58               	movq	88(%rsp), %rbp
  211e6f: 4c 8b 7c 24 70               	movq	112(%rsp), %r15
  211e74: 4c 8b 64 24 18               	movq	24(%rsp), %r12
  211e79: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  211e83: 48 85 ed                     	testq	%rbp, %rbp
  211e86: 4c 0f 44 f8                  	cmoveq	%rax, %r15
  211e8a: 74 37                        	je	0x211ec3 <dwarf.DwarfInfo.getLineNumberInfo+0x48f3>
  211e8c: 48 8b 44 24 68               	movq	104(%rsp), %rax
  211e91: 4c 89 ff                     	movq	%r15, %rdi
  211e94: be aa 00 00 00               	movl	$170, %esi
  211e99: 48 89 ea                     	movq	%rbp, %rdx
  211e9c: 48 8b 18                     	movq	(%rax), %rbx
  211e9f: 48 8b 40 08                  	movq	8(%rax), %rax
  211ea3: 48 89 44 24 78               	movq	%rax, 120(%rsp)
  211ea8: e8 33 a5 00 00               	callq	0x21c3e0 <memset>
  211ead: 48 8b 44 24 78               	movq	120(%rsp), %rax
  211eb2: 48 89 df                     	movq	%rbx, %rdi
  211eb5: 4c 89 fe                     	movq	%r15, %rsi
  211eb8: 48 89 ea                     	movq	%rbp, %rdx
  211ebb: 31 c9                        	xorl	%ecx, %ecx
  211ebd: 4d 89 e8                     	movq	%r13, %r8
  211ec0: ff 50 10                     	callq	*16(%rax)
  211ec3: 4c 89 e7                     	movq	%r12, %rdi
  211ec6: e8 85 9e 00 00               	callq	0x21bd50 <builtin.returnError>
  211ecb: 48 8b 44 24 28               	movq	40(%rsp), %rax
  211ed0: 66 44 89 70 20               	movw	%r14w, 32(%rax)
  211ed5: e9 2b 14 00 00               	jmp	0x213305 <dwarf.DwarfInfo.getLineNumberInfo+0x5d35>
  211eda: 4c 8b 7c 24 18               	movq	24(%rsp), %r15
  211edf: 4c 89 ff                     	movq	%r15, %rdi
  211ee2: e8 69 9e 00 00               	callq	0x21bd50 <builtin.returnError>
  211ee7: 4c 89 ff                     	movq	%r15, %rdi
  211eea: e8 61 9e 00 00               	callq	0x21bd50 <builtin.returnError>
  211eef: 4c 89 ff                     	movq	%r15, %rdi
  211ef2: e8 59 9e 00 00               	callq	0x21bd50 <builtin.returnError>
  211ef7: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  211eff: 48 85 f6                     	testq	%rsi, %rsi
  211f02: 0f 84 c2 07 00 00            	je	0x2126ca <dwarf.DwarfInfo.getLineNumberInfo+0x50fa>
  211f08: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
  211f10: 48 8b 56 08                  	movq	8(%rsi), %rdx
  211f14: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  211f1c: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  211f24: 48 8b 1e                     	movq	(%rsi), %rbx
  211f27: b9 03 00 00 00               	movl	$3, %ecx
  211f2c: 4d 89 e8                     	movq	%r13, %r8
  211f2f: ff 50 10                     	callq	*16(%rax)
  211f32: 48 89 de                     	movq	%rbx, %rsi
  211f35: 48 85 db                     	testq	%rbx, %rbx
  211f38: 75 d6                        	jne	0x211f10 <dwarf.DwarfInfo.getLineNumberInfo+0x4940>
  211f3a: e9 8b 07 00 00               	jmp	0x2126ca <dwarf.DwarfInfo.getLineNumberInfo+0x50fa>
  211f3f: 4c 8b 7c 24 18               	movq	24(%rsp), %r15
  211f44: 4c 89 ff                     	movq	%r15, %rdi
  211f47: c5 f8 77                     	vzeroupper
  211f4a: e8 01 9e 00 00               	callq	0x21bd50 <builtin.returnError>
  211f4f: 48 8b 44 24 28               	movq	40(%rsp), %rax
  211f54: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  211f5c: 66 c7 40 20 18 00            	movw	$24, 32(%rax)
  211f62: 48 85 f6                     	testq	%rsi, %rsi
  211f65: 0f 84 b3 06 00 00            	je	0x21261e <dwarf.DwarfInfo.getLineNumberInfo+0x504e>
  211f6b: 0f 1f 44 00 00               	nopl	(%rax,%rax)
  211f70: 48 8b 56 08                  	movq	8(%rsi), %rdx
  211f74: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  211f7c: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  211f84: 48 8b 1e                     	movq	(%rsi), %rbx
  211f87: b9 03 00 00 00               	movl	$3, %ecx
  211f8c: 4d 89 e8                     	movq	%r13, %r8
  211f8f: ff 50 10                     	callq	*16(%rax)
  211f92: 48 89 de                     	movq	%rbx, %rsi
  211f95: 48 85 db                     	testq	%rbx, %rbx
  211f98: 75 d6                        	jne	0x211f70 <dwarf.DwarfInfo.getLineNumberInfo+0x49a0>
  211f9a: e9 7f 06 00 00               	jmp	0x21261e <dwarf.DwarfInfo.getLineNumberInfo+0x504e>
  211f9f: 4c 89 ff                     	movq	%r15, %rdi
  211fa2: e8 a9 9d 00 00               	callq	0x21bd50 <builtin.returnError>
  211fa7: 66 bd 33 00                  	movw	$51, %bp
  211fab: 4c 89 ff                     	movq	%r15, %rdi
  211fae: e8 9d 9d 00 00               	callq	0x21bd50 <builtin.returnError>
  211fb3: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  211fbb: 48 85 f6                     	testq	%rsi, %rsi
  211fbe: 0f 84 d6 12 00 00            	je	0x21329a <dwarf.DwarfInfo.getLineNumberInfo+0x5cca>
  211fc4: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
  211fd0: 48 8b 56 08                  	movq	8(%rsi), %rdx
  211fd4: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  211fdc: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  211fe4: 48 8b 1e                     	movq	(%rsi), %rbx
  211fe7: b9 03 00 00 00               	movl	$3, %ecx
  211fec: 4d 89 e8                     	movq	%r13, %r8
  211fef: ff 50 10                     	callq	*16(%rax)
  211ff2: 48 89 de                     	movq	%rbx, %rsi
  211ff5: 48 85 db                     	testq	%rbx, %rbx
  211ff8: 75 d6                        	jne	0x211fd0 <dwarf.DwarfInfo.getLineNumberInfo+0x4a00>
  211ffa: e9 9b 12 00 00               	jmp	0x21329a <dwarf.DwarfInfo.getLineNumberInfo+0x5cca>
  211fff: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  212007: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  21200c: 48 85 f6                     	testq	%rsi, %rsi
  21200f: 74 39                        	je	0x21204a <dwarf.DwarfInfo.getLineNumberInfo+0x4a7a>
  212011: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
  212020: 48 8b 56 08                  	movq	8(%rsi), %rdx
  212024: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  21202c: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  212034: 4c 8b 36                     	movq	(%rsi), %r14
  212037: b9 03 00 00 00               	movl	$3, %ecx
  21203c: 4d 89 e8                     	movq	%r13, %r8
  21203f: ff 50 10                     	callq	*16(%rax)
  212042: 4c 89 f6                     	movq	%r14, %rsi
  212045: 4d 85 f6                     	testq	%r14, %r14
  212048: 75 d6                        	jne	0x212020 <dwarf.DwarfInfo.getLineNumberInfo+0x4a50>
  21204a: 48 8b 6c 24 58               	movq	88(%rsp), %rbp
  21204f: 4c 8b 7c 24 70               	movq	112(%rsp), %r15
  212054: 4c 8b 64 24 18               	movq	24(%rsp), %r12
  212059: 48 85 ed                     	testq	%rbp, %rbp
  21205c: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  212066: 4c 0f 44 f8                  	cmoveq	%rax, %r15
  21206a: 74 37                        	je	0x2120a3 <dwarf.DwarfInfo.getLineNumberInfo+0x4ad3>
  21206c: 48 8b 44 24 68               	movq	104(%rsp), %rax
  212071: 4c 89 ff                     	movq	%r15, %rdi
  212074: be aa 00 00 00               	movl	$170, %esi
  212079: 48 89 ea                     	movq	%rbp, %rdx
  21207c: 4c 8b 30                     	movq	(%rax), %r14
  21207f: 48 8b 40 08                  	movq	8(%rax), %rax
  212083: 48 89 44 24 78               	movq	%rax, 120(%rsp)
  212088: e8 53 a3 00 00               	callq	0x21c3e0 <memset>
  21208d: 48 8b 44 24 78               	movq	120(%rsp), %rax
  212092: 4c 89 f7                     	movq	%r14, %rdi
  212095: 4c 89 fe                     	movq	%r15, %rsi
  212098: 48 89 ea                     	movq	%rbp, %rdx
  21209b: 31 c9                        	xorl	%ecx, %ecx
  21209d: 4d 89 e8                     	movq	%r13, %r8
  2120a0: ff 50 10                     	callq	*16(%rax)
  2120a3: 4c 89 e7                     	movq	%r12, %rdi
  2120a6: e9 2b d1 ff ff               	jmp	0x20f1d6 <dwarf.DwarfInfo.getLineNumberInfo+0x1c06>
  2120ab: c5 fc 10 84 24 f0 03 00 00   	vmovups	1008(%rsp), %ymm0
  2120b4: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  2120bc: c5 fc 11 84 24 80 04 00 00   	vmovups	%ymm0, 1152(%rsp)
  2120c5: 48 85 f6                     	testq	%rsi, %rsi
  2120c8: 74 2d                        	je	0x2120f7 <dwarf.DwarfInfo.getLineNumberInfo+0x4b27>
  2120ca: 48 8b 56 08                  	movq	8(%rsi), %rdx
  2120ce: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  2120d6: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  2120de: 48 8b 1e                     	movq	(%rsi), %rbx
  2120e1: b9 03 00 00 00               	movl	$3, %ecx
  2120e6: 4d 89 e8                     	movq	%r13, %r8
  2120e9: c5 f8 77                     	vzeroupper
  2120ec: ff 50 10                     	callq	*16(%rax)
  2120ef: 48 89 de                     	movq	%rbx, %rsi
  2120f2: 48 85 db                     	testq	%rbx, %rbx
  2120f5: 75 d3                        	jne	0x2120ca <dwarf.DwarfInfo.getLineNumberInfo+0x4afa>
  2120f7: 4c 8b 64 24 70               	movq	112(%rsp), %r12
  2120fc: 4d 85 ff                     	testq	%r15, %r15
  2120ff: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  212109: 4c 0f 44 e0                  	cmoveq	%rax, %r12
  21210d: 74 31                        	je	0x212140 <dwarf.DwarfInfo.getLineNumberInfo+0x4b70>
  21210f: 48 8b 44 24 68               	movq	104(%rsp), %rax
  212114: 4c 89 e7                     	movq	%r12, %rdi
  212117: be aa 00 00 00               	movl	$170, %esi
  21211c: 4c 89 fa                     	movq	%r15, %rdx
  21211f: 48 8b 18                     	movq	(%rax), %rbx
  212122: 4c 8b 70 08                  	movq	8(%rax), %r14
  212126: c5 f8 77                     	vzeroupper
  212129: e8 b2 a2 00 00               	callq	0x21c3e0 <memset>
  21212e: 48 89 df                     	movq	%rbx, %rdi
  212131: 4c 89 e6                     	movq	%r12, %rsi
  212134: 4c 89 fa                     	movq	%r15, %rdx
  212137: 31 c9                        	xorl	%ecx, %ecx
  212139: 4d 89 e8                     	movq	%r13, %r8
  21213c: 41 ff 56 10                  	callq	*16(%r14)
  212140: c5 fc 10 84 24 80 04 00 00   	vmovups	1152(%rsp), %ymm0
  212149: e9 02 04 00 00               	jmp	0x212550 <dwarf.DwarfInfo.getLineNumberInfo+0x4f80>
  21214e: 4c 8b 7c 24 18               	movq	24(%rsp), %r15
  212153: 4c 89 ff                     	movq	%r15, %rdi
  212156: e8 f5 9b 00 00               	callq	0x21bd50 <builtin.returnError>
  21215b: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  212163: 48 85 f6                     	testq	%rsi, %rsi
  212166: 0f 84 5e 05 00 00            	je	0x2126ca <dwarf.DwarfInfo.getLineNumberInfo+0x50fa>
  21216c: 0f 1f 40 00                  	nopl	(%rax)
  212170: 48 8b 56 08                  	movq	8(%rsi), %rdx
  212174: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  21217c: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  212184: 48 8b 1e                     	movq	(%rsi), %rbx
  212187: b9 03 00 00 00               	movl	$3, %ecx
  21218c: 4d 89 e8                     	movq	%r13, %r8
  21218f: ff 50 10                     	callq	*16(%rax)
  212192: 48 89 de                     	movq	%rbx, %rsi
  212195: 48 85 db                     	testq	%rbx, %rbx
  212198: 75 d6                        	jne	0x212170 <dwarf.DwarfInfo.getLineNumberInfo+0x4ba0>
  21219a: e9 2b 05 00 00               	jmp	0x2126ca <dwarf.DwarfInfo.getLineNumberInfo+0x50fa>
  21219f: 4c 8b 7c 24 18               	movq	24(%rsp), %r15
  2121a4: 4c 89 ff                     	movq	%r15, %rdi
  2121a7: e8 a4 9b 00 00               	callq	0x21bd50 <builtin.returnError>
  2121ac: 4c 89 ff                     	movq	%r15, %rdi
  2121af: e8 9c 9b 00 00               	callq	0x21bd50 <builtin.returnError>
  2121b4: 4c 89 ff                     	movq	%r15, %rdi
  2121b7: e8 94 9b 00 00               	callq	0x21bd50 <builtin.returnError>
  2121bc: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  2121c4: 48 85 f6                     	testq	%rsi, %rsi
  2121c7: 0f 84 fd 04 00 00            	je	0x2126ca <dwarf.DwarfInfo.getLineNumberInfo+0x50fa>
  2121cd: 0f 1f 00                     	nopl	(%rax)
  2121d0: 48 8b 56 08                  	movq	8(%rsi), %rdx
  2121d4: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  2121dc: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  2121e4: 48 8b 1e                     	movq	(%rsi), %rbx
  2121e7: b9 03 00 00 00               	movl	$3, %ecx
  2121ec: 4d 89 e8                     	movq	%r13, %r8
  2121ef: ff 50 10                     	callq	*16(%rax)
  2121f2: 48 89 de                     	movq	%rbx, %rsi
  2121f5: 48 85 db                     	testq	%rbx, %rbx
  2121f8: 75 d6                        	jne	0x2121d0 <dwarf.DwarfInfo.getLineNumberInfo+0x4c00>
  2121fa: e9 cb 04 00 00               	jmp	0x2126ca <dwarf.DwarfInfo.getLineNumberInfo+0x50fa>
  2121ff: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  212207: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  21220c: 48 85 f6                     	testq	%rsi, %rsi
  21220f: 0f 84 55 fc ff ff            	je	0x211e6a <dwarf.DwarfInfo.getLineNumberInfo+0x489a>
  212215: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
  212220: 48 8b 56 08                  	movq	8(%rsi), %rdx
  212224: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  21222c: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  212234: 48 8b 1e                     	movq	(%rsi), %rbx
  212237: b9 03 00 00 00               	movl	$3, %ecx
  21223c: 4d 89 e8                     	movq	%r13, %r8
  21223f: ff 50 10                     	callq	*16(%rax)
  212242: 48 89 de                     	movq	%rbx, %rsi
  212245: 48 85 db                     	testq	%rbx, %rbx
  212248: 75 d6                        	jne	0x212220 <dwarf.DwarfInfo.getLineNumberInfo+0x4c50>
  21224a: e9 1b fc ff ff               	jmp	0x211e6a <dwarf.DwarfInfo.getLineNumberInfo+0x489a>
  21224f: 4c 8b 7c 24 18               	movq	24(%rsp), %r15
  212254: 4c 89 ff                     	movq	%r15, %rdi
  212257: e8 f4 9a 00 00               	callq	0x21bd50 <builtin.returnError>
  21225c: 4c 89 ff                     	movq	%r15, %rdi
  21225f: e8 ec 9a 00 00               	callq	0x21bd50 <builtin.returnError>
  212264: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  21226c: 4c 8b 64 24 60               	movq	96(%rsp), %r12
  212271: 48 85 f6                     	testq	%rsi, %rsi
  212274: 0f 84 20 0b 00 00            	je	0x212d9a <dwarf.DwarfInfo.getLineNumberInfo+0x57ca>
  21227a: 66 0f 1f 44 00 00            	nopw	(%rax,%rax)
  212280: 48 8b 56 08                  	movq	8(%rsi), %rdx
  212284: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  21228c: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  212294: 48 8b 1e                     	movq	(%rsi), %rbx
  212297: b9 03 00 00 00               	movl	$3, %ecx
  21229c: 4d 89 e0                     	movq	%r12, %r8
  21229f: ff 50 10                     	callq	*16(%rax)
  2122a2: 48 89 de                     	movq	%rbx, %rsi
  2122a5: 48 85 db                     	testq	%rbx, %rbx
  2122a8: 75 d6                        	jne	0x212280 <dwarf.DwarfInfo.getLineNumberInfo+0x4cb0>
  2122aa: e9 eb 0a 00 00               	jmp	0x212d9a <dwarf.DwarfInfo.getLineNumberInfo+0x57ca>
  2122af: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  2122b7: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  2122bc: 48 85 f6                     	testq	%rsi, %rsi
  2122bf: 0f 84 a5 fb ff ff            	je	0x211e6a <dwarf.DwarfInfo.getLineNumberInfo+0x489a>
  2122c5: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
  2122d0: 48 8b 56 08                  	movq	8(%rsi), %rdx
  2122d4: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  2122dc: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  2122e4: 48 8b 1e                     	movq	(%rsi), %rbx
  2122e7: b9 03 00 00 00               	movl	$3, %ecx
  2122ec: 4d 89 e8                     	movq	%r13, %r8
  2122ef: ff 50 10                     	callq	*16(%rax)
  2122f2: 48 89 de                     	movq	%rbx, %rsi
  2122f5: 48 85 db                     	testq	%rbx, %rbx
  2122f8: 75 d6                        	jne	0x2122d0 <dwarf.DwarfInfo.getLineNumberInfo+0x4d00>
  2122fa: e9 6b fb ff ff               	jmp	0x211e6a <dwarf.DwarfInfo.getLineNumberInfo+0x489a>
  2122ff: 4c 89 ff                     	movq	%r15, %rdi
  212302: 89 c3                        	movl	%eax, %ebx
  212304: e8 47 9a 00 00               	callq	0x21bd50 <builtin.returnError>
  212309: 4c 89 ff                     	movq	%r15, %rdi
  21230c: e8 3f 9a 00 00               	callq	0x21bd50 <builtin.returnError>
  212311: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  212319: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  21231e: 48 85 f6                     	testq	%rsi, %rsi
  212321: 0f 84 43 07 00 00            	je	0x212a6a <dwarf.DwarfInfo.getLineNumberInfo+0x549a>
  212327: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
  212330: 48 8b 56 08                  	movq	8(%rsi), %rdx
  212334: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  21233c: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  212344: 4c 8b 36                     	movq	(%rsi), %r14
  212347: b9 03 00 00 00               	movl	$3, %ecx
  21234c: 4d 89 e8                     	movq	%r13, %r8
  21234f: ff 50 10                     	callq	*16(%rax)
  212352: 4c 89 f6                     	movq	%r14, %rsi
  212355: 4d 85 f6                     	testq	%r14, %r14
  212358: 75 d6                        	jne	0x212330 <dwarf.DwarfInfo.getLineNumberInfo+0x4d60>
  21235a: e9 0b 07 00 00               	jmp	0x212a6a <dwarf.DwarfInfo.getLineNumberInfo+0x549a>
  21235f: 4c 8b 7c 24 18               	movq	24(%rsp), %r15
  212364: 4c 89 ff                     	movq	%r15, %rdi
  212367: e8 e4 99 00 00               	callq	0x21bd50 <builtin.returnError>
  21236c: 66 41 be 33 00               	movw	$51, %r14w
  212371: 4c 89 ff                     	movq	%r15, %rdi
  212374: e8 d7 99 00 00               	callq	0x21bd50 <builtin.returnError>
  212379: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  212381: 4d 89 fc                     	movq	%r15, %r12
  212384: 48 85 f6                     	testq	%rsi, %rsi
  212387: 74 31                        	je	0x2123ba <dwarf.DwarfInfo.getLineNumberInfo+0x4dea>
  212389: 0f 1f 80 00 00 00 00         	nopl	(%rax)
  212390: 48 8b 56 08                  	movq	8(%rsi), %rdx
  212394: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  21239c: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  2123a4: 48 8b 1e                     	movq	(%rsi), %rbx
  2123a7: b9 03 00 00 00               	movl	$3, %ecx
  2123ac: 4d 89 e8                     	movq	%r13, %r8
  2123af: ff 50 10                     	callq	*16(%rax)
  2123b2: 48 89 de                     	movq	%rbx, %rsi
  2123b5: 48 85 db                     	testq	%rbx, %rbx
  2123b8: 75 d6                        	jne	0x212390 <dwarf.DwarfInfo.getLineNumberInfo+0x4dc0>
  2123ba: 48 8b 6c 24 58               	movq	88(%rsp), %rbp
  2123bf: 48 8b 7c 24 70               	movq	112(%rsp), %rdi
  2123c4: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  2123ce: 48 85 ed                     	testq	%rbp, %rbp
  2123d1: 48 0f 44 f8                  	cmoveq	%rax, %rdi
  2123d5: 0f 84 e8 fa ff ff            	je	0x211ec3 <dwarf.DwarfInfo.getLineNumberInfo+0x48f3>
  2123db: 48 8b 44 24 68               	movq	104(%rsp), %rax
  2123e0: be aa 00 00 00               	movl	$170, %esi
  2123e5: 48 89 ea                     	movq	%rbp, %rdx
  2123e8: 48 8b 18                     	movq	(%rax), %rbx
  2123eb: 48 8b 40 08                  	movq	8(%rax), %rax
  2123ef: 48 89 44 24 18               	movq	%rax, 24(%rsp)
  2123f4: 45 89 f7                     	movl	%r14d, %r15d
  2123f7: 49 89 fe                     	movq	%rdi, %r14
  2123fa: e8 e1 9f 00 00               	callq	0x21c3e0 <memset>
  2123ff: 4c 89 f6                     	movq	%r14, %rsi
  212402: 48 89 df                     	movq	%rbx, %rdi
  212405: 45 89 fe                     	movl	%r15d, %r14d
  212408: e9 65 d3 ff ff               	jmp	0x20f772 <dwarf.DwarfInfo.getLineNumberInfo+0x21a2>
  21240d: 4c 89 ff                     	movq	%r15, %rdi
  212410: e8 3b 99 00 00               	callq	0x21bd50 <builtin.returnError>
  212415: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  21241d: 48 85 f6                     	testq	%rsi, %rsi
  212420: 0f 84 a4 02 00 00            	je	0x2126ca <dwarf.DwarfInfo.getLineNumberInfo+0x50fa>
  212426: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
  212430: 48 8b 56 08                  	movq	8(%rsi), %rdx
  212434: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  21243c: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  212444: 48 8b 1e                     	movq	(%rsi), %rbx
  212447: b9 03 00 00 00               	movl	$3, %ecx
  21244c: 4d 89 e8                     	movq	%r13, %r8
  21244f: ff 50 10                     	callq	*16(%rax)
  212452: 48 89 de                     	movq	%rbx, %rsi
  212455: 48 85 db                     	testq	%rbx, %rbx
  212458: 75 d6                        	jne	0x212430 <dwarf.DwarfInfo.getLineNumberInfo+0x4e60>
  21245a: e9 6b 02 00 00               	jmp	0x2126ca <dwarf.DwarfInfo.getLineNumberInfo+0x50fa>
  21245f: 4c 89 ff                     	movq	%r15, %rdi
  212462: e8 e9 98 00 00               	callq	0x21bd50 <builtin.returnError>
  212467: 48 8b 44 24 28               	movq	40(%rsp), %rax
  21246c: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  212474: 66 c7 40 20 34 00            	movw	$52, 32(%rax)
  21247a: 48 85 f6                     	testq	%rsi, %rsi
  21247d: 0f 84 9b 01 00 00            	je	0x21261e <dwarf.DwarfInfo.getLineNumberInfo+0x504e>
  212483: 48 8b 56 08                  	movq	8(%rsi), %rdx
  212487: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  21248f: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  212497: 48 8b 1e                     	movq	(%rsi), %rbx
  21249a: b9 03 00 00 00               	movl	$3, %ecx
  21249f: 4d 89 e8                     	movq	%r13, %r8
  2124a2: ff 50 10                     	callq	*16(%rax)
  2124a5: 48 89 de                     	movq	%rbx, %rsi
  2124a8: 48 85 db                     	testq	%rbx, %rbx
  2124ab: 75 d6                        	jne	0x212483 <dwarf.DwarfInfo.getLineNumberInfo+0x4eb3>
  2124ad: e9 6c 01 00 00               	jmp	0x21261e <dwarf.DwarfInfo.getLineNumberInfo+0x504e>
  2124b2: c5 fc 10 84 24 50 04 00 00   	vmovups	1104(%rsp), %ymm0
  2124bb: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  2124c3: c5 fc 11 84 24 c0 04 00 00   	vmovups	%ymm0, 1216(%rsp)
  2124cc: 48 85 f6                     	testq	%rsi, %rsi
  2124cf: 74 2d                        	je	0x2124fe <dwarf.DwarfInfo.getLineNumberInfo+0x4f2e>
  2124d1: 48 8b 56 08                  	movq	8(%rsi), %rdx
  2124d5: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  2124dd: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  2124e5: 48 8b 1e                     	movq	(%rsi), %rbx
  2124e8: b9 03 00 00 00               	movl	$3, %ecx
  2124ed: 4d 89 e8                     	movq	%r13, %r8
  2124f0: c5 f8 77                     	vzeroupper
  2124f3: ff 50 10                     	callq	*16(%rax)
  2124f6: 48 89 de                     	movq	%rbx, %rsi
  2124f9: 48 85 db                     	testq	%rbx, %rbx
  2124fc: 75 d3                        	jne	0x2124d1 <dwarf.DwarfInfo.getLineNumberInfo+0x4f01>
  2124fe: 4c 8b 64 24 70               	movq	112(%rsp), %r12
  212503: 4d 85 ff                     	testq	%r15, %r15
  212506: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  212510: 4c 0f 44 e0                  	cmoveq	%rax, %r12
  212514: 74 31                        	je	0x212547 <dwarf.DwarfInfo.getLineNumberInfo+0x4f77>
  212516: 48 8b 44 24 68               	movq	104(%rsp), %rax
  21251b: 4c 89 e7                     	movq	%r12, %rdi
  21251e: be aa 00 00 00               	movl	$170, %esi
  212523: 4c 89 fa                     	movq	%r15, %rdx
  212526: 48 8b 18                     	movq	(%rax), %rbx
  212529: 4c 8b 70 08                  	movq	8(%rax), %r14
  21252d: c5 f8 77                     	vzeroupper
  212530: e8 ab 9e 00 00               	callq	0x21c3e0 <memset>
  212535: 48 89 df                     	movq	%rbx, %rdi
  212538: 4c 89 e6                     	movq	%r12, %rsi
  21253b: 4c 89 fa                     	movq	%r15, %rdx
  21253e: 31 c9                        	xorl	%ecx, %ecx
  212540: 4d 89 e8                     	movq	%r13, %r8
  212543: 41 ff 56 10                  	callq	*16(%r14)
  212547: c5 fc 10 84 24 c0 04 00 00   	vmovups	1216(%rsp), %ymm0
  212550: 48 8b 44 24 28               	movq	40(%rsp), %rax
  212555: c5 fc 11 00                  	vmovups	%ymm0, (%rax)
  212559: 66 c7 40 20 00 00            	movw	$0, 32(%rax)
  21255f: e9 a1 0d 00 00               	jmp	0x213305 <dwarf.DwarfInfo.getLineNumberInfo+0x5d35>
  212564: 48 8b 7c 24 18               	movq	24(%rsp), %rdi
  212569: e8 e2 97 00 00               	callq	0x21bd50 <builtin.returnError>
  21256e: 66 bd 33 00                  	movw	$51, %bp
  212572: 4c 8b 7c 24 18               	movq	24(%rsp), %r15
  212577: 4c 89 ff                     	movq	%r15, %rdi
  21257a: e8 d1 97 00 00               	callq	0x21bd50 <builtin.returnError>
  21257f: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  212587: 4c 8b 64 24 60               	movq	96(%rsp), %r12
  21258c: 48 85 f6                     	testq	%rsi, %rsi
  21258f: 0f 84 f5 01 00 00            	je	0x21278a <dwarf.DwarfInfo.getLineNumberInfo+0x51ba>
  212595: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
  2125a0: 48 8b 56 08                  	movq	8(%rsi), %rdx
  2125a4: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  2125ac: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  2125b4: 48 8b 1e                     	movq	(%rsi), %rbx
  2125b7: b9 03 00 00 00               	movl	$3, %ecx
  2125bc: 4d 89 e0                     	movq	%r12, %r8
  2125bf: ff 50 10                     	callq	*16(%rax)
  2125c2: 48 89 de                     	movq	%rbx, %rsi
  2125c5: 48 85 db                     	testq	%rbx, %rbx
  2125c8: 75 d6                        	jne	0x2125a0 <dwarf.DwarfInfo.getLineNumberInfo+0x4fd0>
  2125ca: e9 bb 01 00 00               	jmp	0x21278a <dwarf.DwarfInfo.getLineNumberInfo+0x51ba>
  2125cf: 4c 8b 7c 24 18               	movq	24(%rsp), %r15
  2125d4: 4c 89 ff                     	movq	%r15, %rdi
  2125d7: e8 74 97 00 00               	callq	0x21bd50 <builtin.returnError>
  2125dc: 48 8b 44 24 28               	movq	40(%rsp), %rax
  2125e1: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  2125e9: 66 c7 40 20 34 00            	movw	$52, 32(%rax)
  2125ef: 48 85 f6                     	testq	%rsi, %rsi
  2125f2: 74 2a                        	je	0x21261e <dwarf.DwarfInfo.getLineNumberInfo+0x504e>
  2125f4: 48 8b 56 08                  	movq	8(%rsi), %rdx
  2125f8: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  212600: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  212608: 48 8b 1e                     	movq	(%rsi), %rbx
  21260b: b9 03 00 00 00               	movl	$3, %ecx
  212610: 4d 89 e8                     	movq	%r13, %r8
  212613: ff 50 10                     	callq	*16(%rax)
  212616: 48 89 de                     	movq	%rbx, %rsi
  212619: 48 85 db                     	testq	%rbx, %rbx
  21261c: 75 d6                        	jne	0x2125f4 <dwarf.DwarfInfo.getLineNumberInfo+0x5024>
  21261e: 4c 8b 64 24 58               	movq	88(%rsp), %r12
  212623: 48 8b 6c 24 70               	movq	112(%rsp), %rbp
  212628: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  212632: 4d 85 e4                     	testq	%r12, %r12
  212635: 48 0f 44 e8                  	cmoveq	%rax, %rbp
  212639: 74 2e                        	je	0x212669 <dwarf.DwarfInfo.getLineNumberInfo+0x5099>
  21263b: 48 8b 44 24 68               	movq	104(%rsp), %rax
  212640: 48 89 ef                     	movq	%rbp, %rdi
  212643: be aa 00 00 00               	movl	$170, %esi
  212648: 4c 89 e2                     	movq	%r12, %rdx
  21264b: 48 8b 18                     	movq	(%rax), %rbx
  21264e: 4c 8b 70 08                  	movq	8(%rax), %r14
  212652: e8 89 9d 00 00               	callq	0x21c3e0 <memset>
  212657: 48 89 df                     	movq	%rbx, %rdi
  21265a: 48 89 ee                     	movq	%rbp, %rsi
  21265d: 4c 89 e2                     	movq	%r12, %rdx
  212660: 31 c9                        	xorl	%ecx, %ecx
  212662: 4d 89 e8                     	movq	%r13, %r8
  212665: 41 ff 56 10                  	callq	*16(%r14)
  212669: 48 8b 44 24 28               	movq	40(%rsp), %rax
  21266e: 66 83 78 20 00               	cmpw	$0, 32(%rax)
  212673: 0f 84 8c 0c 00 00            	je	0x213305 <dwarf.DwarfInfo.getLineNumberInfo+0x5d35>
  212679: 4c 89 ff                     	movq	%r15, %rdi
  21267c: e8 cf 96 00 00               	callq	0x21bd50 <builtin.returnError>
  212681: e9 7f 0c 00 00               	jmp	0x213305 <dwarf.DwarfInfo.getLineNumberInfo+0x5d35>
  212686: 4c 8b 7c 24 18               	movq	24(%rsp), %r15
  21268b: 4c 89 ff                     	movq	%r15, %rdi
  21268e: e8 bd 96 00 00               	callq	0x21bd50 <builtin.returnError>
  212693: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  21269b: 48 85 f6                     	testq	%rsi, %rsi
  21269e: 74 2a                        	je	0x2126ca <dwarf.DwarfInfo.getLineNumberInfo+0x50fa>
  2126a0: 48 8b 56 08                  	movq	8(%rsi), %rdx
  2126a4: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  2126ac: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  2126b4: 48 8b 1e                     	movq	(%rsi), %rbx
  2126b7: b9 03 00 00 00               	movl	$3, %ecx
  2126bc: 4d 89 e8                     	movq	%r13, %r8
  2126bf: ff 50 10                     	callq	*16(%rax)
  2126c2: 48 89 de                     	movq	%rbx, %rsi
  2126c5: 48 85 db                     	testq	%rbx, %rbx
  2126c8: 75 d6                        	jne	0x2126a0 <dwarf.DwarfInfo.getLineNumberInfo+0x50d0>
  2126ca: 4c 8b 64 24 58               	movq	88(%rsp), %r12
  2126cf: 48 8b 6c 24 70               	movq	112(%rsp), %rbp
  2126d4: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  2126de: 4d 85 e4                     	testq	%r12, %r12
  2126e1: 48 0f 44 e8                  	cmoveq	%rax, %rbp
  2126e5: 74 2e                        	je	0x212715 <dwarf.DwarfInfo.getLineNumberInfo+0x5145>
  2126e7: 48 8b 44 24 68               	movq	104(%rsp), %rax
  2126ec: 48 89 ef                     	movq	%rbp, %rdi
  2126ef: be aa 00 00 00               	movl	$170, %esi
  2126f4: 4c 89 e2                     	movq	%r12, %rdx
  2126f7: 48 8b 18                     	movq	(%rax), %rbx
  2126fa: 4c 8b 70 08                  	movq	8(%rax), %r14
  2126fe: e8 dd 9c 00 00               	callq	0x21c3e0 <memset>
  212703: 48 89 df                     	movq	%rbx, %rdi
  212706: 48 89 ee                     	movq	%rbp, %rsi
  212709: 4c 89 e2                     	movq	%r12, %rdx
  21270c: 31 c9                        	xorl	%ecx, %ecx
  21270e: 4d 89 e8                     	movq	%r13, %r8
  212711: 41 ff 56 10                  	callq	*16(%r14)
  212715: 4c 89 ff                     	movq	%r15, %rdi
  212718: e8 33 96 00 00               	callq	0x21bd50 <builtin.returnError>
  21271d: 48 8b 44 24 28               	movq	40(%rsp), %rax
  212722: 66 c7 40 20 33 00            	movw	$51, 32(%rax)
  212728: e9 d8 0b 00 00               	jmp	0x213305 <dwarf.DwarfInfo.getLineNumberInfo+0x5d35>
  21272d: 48 8b 7c 24 18               	movq	24(%rsp), %rdi
  212732: e8 19 96 00 00               	callq	0x21bd50 <builtin.returnError>
  212737: 66 bd 33 00                  	movw	$51, %bp
  21273b: 4c 8b 7c 24 18               	movq	24(%rsp), %r15
  212740: 4c 89 ff                     	movq	%r15, %rdi
  212743: e8 08 96 00 00               	callq	0x21bd50 <builtin.returnError>
  212748: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  212750: 4c 8b 64 24 60               	movq	96(%rsp), %r12
  212755: 48 85 f6                     	testq	%rsi, %rsi
  212758: 74 30                        	je	0x21278a <dwarf.DwarfInfo.getLineNumberInfo+0x51ba>
  21275a: 66 0f 1f 44 00 00            	nopw	(%rax,%rax)
  212760: 48 8b 56 08                  	movq	8(%rsi), %rdx
  212764: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  21276c: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  212774: 48 8b 1e                     	movq	(%rsi), %rbx
  212777: b9 03 00 00 00               	movl	$3, %ecx
  21277c: 4d 89 e0                     	movq	%r12, %r8
  21277f: ff 50 10                     	callq	*16(%rax)
  212782: 48 89 de                     	movq	%rbx, %rsi
  212785: 48 85 db                     	testq	%rbx, %rbx
  212788: 75 d6                        	jne	0x212760 <dwarf.DwarfInfo.getLineNumberInfo+0x5190>
  21278a: 4c 8b 6c 24 58               	movq	88(%rsp), %r13
  21278f: 4c 8b 74 24 70               	movq	112(%rsp), %r14
  212794: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  21279e: 4d 85 ed                     	testq	%r13, %r13
  2127a1: 4c 0f 44 f0                  	cmoveq	%rax, %r14
  2127a5: 0f 84 49 0b 00 00            	je	0x2132f4 <dwarf.DwarfInfo.getLineNumberInfo+0x5d24>
  2127ab: 48 8b 44 24 68               	movq	104(%rsp), %rax
  2127b0: 4c 89 f7                     	movq	%r14, %rdi
  2127b3: be aa 00 00 00               	movl	$170, %esi
  2127b8: 4c 89 ea                     	movq	%r13, %rdx
  2127bb: 48 8b 18                     	movq	(%rax), %rbx
  2127be: 48 8b 40 08                  	movq	8(%rax), %rax
  2127c2: 48 89 44 24 78               	movq	%rax, 120(%rsp)
  2127c7: e8 14 9c 00 00               	callq	0x21c3e0 <memset>
  2127cc: 48 8b 44 24 78               	movq	120(%rsp), %rax
  2127d1: 48 89 df                     	movq	%rbx, %rdi
  2127d4: 4c 89 f6                     	movq	%r14, %rsi
  2127d7: 4c 89 ea                     	movq	%r13, %rdx
  2127da: 31 c9                        	xorl	%ecx, %ecx
  2127dc: 4d 89 e0                     	movq	%r12, %r8
  2127df: e9 0d 0b 00 00               	jmp	0x2132f1 <dwarf.DwarfInfo.getLineNumberInfo+0x5d21>
  2127e4: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  2127ec: 48 85 f6                     	testq	%rsi, %rsi
  2127ef: 0f 84 95 09 00 00            	je	0x21318a <dwarf.DwarfInfo.getLineNumberInfo+0x5bba>
  2127f5: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
  212800: 48 8b 56 08                  	movq	8(%rsi), %rdx
  212804: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  21280c: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  212814: 48 8b 1e                     	movq	(%rsi), %rbx
  212817: b9 03 00 00 00               	movl	$3, %ecx
  21281c: 4d 89 e8                     	movq	%r13, %r8
  21281f: ff 50 10                     	callq	*16(%rax)
  212822: 48 89 de                     	movq	%rbx, %rsi
  212825: 48 85 db                     	testq	%rbx, %rbx
  212828: 75 d6                        	jne	0x212800 <dwarf.DwarfInfo.getLineNumberInfo+0x5230>
  21282a: e9 5b 09 00 00               	jmp	0x21318a <dwarf.DwarfInfo.getLineNumberInfo+0x5bba>
  21282f: 48 8b 7c 24 18               	movq	24(%rsp), %rdi
  212834: e8 17 95 00 00               	callq	0x21bd50 <builtin.returnError>
  212839: 4c 8b 7c 24 18               	movq	24(%rsp), %r15
  21283e: 4c 89 ff                     	movq	%r15, %rdi
  212841: e8 0a 95 00 00               	callq	0x21bd50 <builtin.returnError>
  212846: 4c 89 ff                     	movq	%r15, %rdi
  212849: e8 02 95 00 00               	callq	0x21bd50 <builtin.returnError>
  21284e: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  212856: 4c 8b 64 24 60               	movq	96(%rsp), %r12
  21285b: 48 85 f6                     	testq	%rsi, %rsi
  21285e: 0f 84 36 05 00 00            	je	0x212d9a <dwarf.DwarfInfo.getLineNumberInfo+0x57ca>
  212864: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
  212870: 48 8b 56 08                  	movq	8(%rsi), %rdx
  212874: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  21287c: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  212884: 48 8b 1e                     	movq	(%rsi), %rbx
  212887: b9 03 00 00 00               	movl	$3, %ecx
  21288c: 4d 89 e0                     	movq	%r12, %r8
  21288f: ff 50 10                     	callq	*16(%rax)
  212892: 48 89 de                     	movq	%rbx, %rsi
  212895: 48 85 db                     	testq	%rbx, %rbx
  212898: 75 d6                        	jne	0x212870 <dwarf.DwarfInfo.getLineNumberInfo+0x52a0>
  21289a: e9 fb 04 00 00               	jmp	0x212d9a <dwarf.DwarfInfo.getLineNumberInfo+0x57ca>
  21289f: 48 8b 7c 24 18               	movq	24(%rsp), %rdi
  2128a4: e8 a7 94 00 00               	callq	0x21bd50 <builtin.returnError>
  2128a9: 4c 8b 7c 24 18               	movq	24(%rsp), %r15
  2128ae: 4c 89 ff                     	movq	%r15, %rdi
  2128b1: e8 9a 94 00 00               	callq	0x21bd50 <builtin.returnError>
  2128b6: 4c 89 ff                     	movq	%r15, %rdi
  2128b9: e8 92 94 00 00               	callq	0x21bd50 <builtin.returnError>
  2128be: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  2128c6: 4c 8b 64 24 60               	movq	96(%rsp), %r12
  2128cb: 48 85 f6                     	testq	%rsi, %rsi
  2128ce: 0f 84 c6 04 00 00            	je	0x212d9a <dwarf.DwarfInfo.getLineNumberInfo+0x57ca>
  2128d4: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
  2128e0: 48 8b 56 08                  	movq	8(%rsi), %rdx
  2128e4: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  2128ec: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  2128f4: 48 8b 1e                     	movq	(%rsi), %rbx
  2128f7: b9 03 00 00 00               	movl	$3, %ecx
  2128fc: 4d 89 e0                     	movq	%r12, %r8
  2128ff: ff 50 10                     	callq	*16(%rax)
  212902: 48 89 de                     	movq	%rbx, %rsi
  212905: 48 85 db                     	testq	%rbx, %rbx
  212908: 75 d6                        	jne	0x2128e0 <dwarf.DwarfInfo.getLineNumberInfo+0x5310>
  21290a: e9 8b 04 00 00               	jmp	0x212d9a <dwarf.DwarfInfo.getLineNumberInfo+0x57ca>
  21290f: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  212917: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  21291c: 48 8b 6c 24 58               	movq	88(%rsp), %rbp
  212921: 48 85 f6                     	testq	%rsi, %rsi
  212924: 0f 84 25 f7 ff ff            	je	0x21204f <dwarf.DwarfInfo.getLineNumberInfo+0x4a7f>
  21292a: 66 0f 1f 44 00 00            	nopw	(%rax,%rax)
  212930: 48 8b 56 08                  	movq	8(%rsi), %rdx
  212934: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  21293c: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  212944: 4c 8b 36                     	movq	(%rsi), %r14
  212947: b9 03 00 00 00               	movl	$3, %ecx
  21294c: 4d 89 e8                     	movq	%r13, %r8
  21294f: ff 50 10                     	callq	*16(%rax)
  212952: 4c 89 f6                     	movq	%r14, %rsi
  212955: 4d 85 f6                     	testq	%r14, %r14
  212958: 75 d6                        	jne	0x212930 <dwarf.DwarfInfo.getLineNumberInfo+0x5360>
  21295a: e9 f0 f6 ff ff               	jmp	0x21204f <dwarf.DwarfInfo.getLineNumberInfo+0x4a7f>
  21295f: 4c 8b 7c 24 18               	movq	24(%rsp), %r15
  212964: 4c 89 ff                     	movq	%r15, %rdi
  212967: e8 e4 93 00 00               	callq	0x21bd50 <builtin.returnError>
  21296c: 4c 89 ff                     	movq	%r15, %rdi
  21296f: e8 dc 93 00 00               	callq	0x21bd50 <builtin.returnError>
  212974: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  21297c: 4c 8b 64 24 60               	movq	96(%rsp), %r12
  212981: 48 85 f6                     	testq	%rsi, %rsi
  212984: 0f 84 10 04 00 00            	je	0x212d9a <dwarf.DwarfInfo.getLineNumberInfo+0x57ca>
  21298a: 66 0f 1f 44 00 00            	nopw	(%rax,%rax)
  212990: 48 8b 56 08                  	movq	8(%rsi), %rdx
  212994: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  21299c: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  2129a4: 48 8b 1e                     	movq	(%rsi), %rbx
  2129a7: b9 03 00 00 00               	movl	$3, %ecx
  2129ac: 4d 89 e0                     	movq	%r12, %r8
  2129af: ff 50 10                     	callq	*16(%rax)
  2129b2: 48 89 de                     	movq	%rbx, %rsi
  2129b5: 48 85 db                     	testq	%rbx, %rbx
  2129b8: 75 d6                        	jne	0x212990 <dwarf.DwarfInfo.getLineNumberInfo+0x53c0>
  2129ba: e9 db 03 00 00               	jmp	0x212d9a <dwarf.DwarfInfo.getLineNumberInfo+0x57ca>
  2129bf: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  2129c7: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  2129cc: 48 8b 6c 24 58               	movq	88(%rsp), %rbp
  2129d1: 48 85 f6                     	testq	%rsi, %rsi
  2129d4: 0f 84 75 f6 ff ff            	je	0x21204f <dwarf.DwarfInfo.getLineNumberInfo+0x4a7f>
  2129da: 66 0f 1f 44 00 00            	nopw	(%rax,%rax)
  2129e0: 48 8b 56 08                  	movq	8(%rsi), %rdx
  2129e4: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  2129ec: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  2129f4: 4c 8b 36                     	movq	(%rsi), %r14
  2129f7: b9 03 00 00 00               	movl	$3, %ecx
  2129fc: 4d 89 e8                     	movq	%r13, %r8
  2129ff: ff 50 10                     	callq	*16(%rax)
  212a02: 4c 89 f6                     	movq	%r14, %rsi
  212a05: 4d 85 f6                     	testq	%r14, %r14
  212a08: 75 d6                        	jne	0x2129e0 <dwarf.DwarfInfo.getLineNumberInfo+0x5410>
  212a0a: e9 40 f6 ff ff               	jmp	0x21204f <dwarf.DwarfInfo.getLineNumberInfo+0x4a7f>
  212a0f: 4c 89 ff                     	movq	%r15, %rdi
  212a12: 89 c3                        	movl	%eax, %ebx
  212a14: e8 37 93 00 00               	callq	0x21bd50 <builtin.returnError>
  212a19: 4c 89 ff                     	movq	%r15, %rdi
  212a1c: e8 2f 93 00 00               	callq	0x21bd50 <builtin.returnError>
  212a21: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  212a29: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  212a2e: 48 85 f6                     	testq	%rsi, %rsi
  212a31: 74 37                        	je	0x212a6a <dwarf.DwarfInfo.getLineNumberInfo+0x549a>
  212a33: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
  212a40: 48 8b 56 08                  	movq	8(%rsi), %rdx
  212a44: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  212a4c: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  212a54: 4c 8b 36                     	movq	(%rsi), %r14
  212a57: b9 03 00 00 00               	movl	$3, %ecx
  212a5c: 4d 89 e8                     	movq	%r13, %r8
  212a5f: ff 50 10                     	callq	*16(%rax)
  212a62: 4c 89 f6                     	movq	%r14, %rsi
  212a65: 4d 85 f6                     	testq	%r14, %r14
  212a68: 75 d6                        	jne	0x212a40 <dwarf.DwarfInfo.getLineNumberInfo+0x5470>
  212a6a: 48 8b 6c 24 58               	movq	88(%rsp), %rbp
  212a6f: 4c 8b 74 24 70               	movq	112(%rsp), %r14
  212a74: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  212a7e: 48 85 ed                     	testq	%rbp, %rbp
  212a81: 4c 0f 44 f0                  	cmoveq	%rax, %r14
  212a85: 74 3c                        	je	0x212ac3 <dwarf.DwarfInfo.getLineNumberInfo+0x54f3>
  212a87: 48 8b 44 24 68               	movq	104(%rsp), %rax
  212a8c: 4c 89 f7                     	movq	%r14, %rdi
  212a8f: be aa 00 00 00               	movl	$170, %esi
  212a94: 48 89 ea                     	movq	%rbp, %rdx
  212a97: 4c 8b 20                     	movq	(%rax), %r12
  212a9a: 48 8b 40 08                  	movq	8(%rax), %rax
  212a9e: 48 89 44 24 78               	movq	%rax, 120(%rsp)
  212aa3: e8 38 99 00 00               	callq	0x21c3e0 <memset>
  212aa8: 48 8b 44 24 78               	movq	120(%rsp), %rax
  212aad: 4c 8b 7c 24 18               	movq	24(%rsp), %r15
  212ab2: 4c 89 e7                     	movq	%r12, %rdi
  212ab5: 4c 89 f6                     	movq	%r14, %rsi
  212ab8: 48 89 ea                     	movq	%rbp, %rdx
  212abb: 31 c9                        	xorl	%ecx, %ecx
  212abd: 4d 89 e8                     	movq	%r13, %r8
  212ac0: ff 50 10                     	callq	*16(%rax)
  212ac3: 4c 89 ff                     	movq	%r15, %rdi
  212ac6: e9 0b c7 ff ff               	jmp	0x20f1d6 <dwarf.DwarfInfo.getLineNumberInfo+0x1c06>
  212acb: 48 8b 5c 24 18               	movq	24(%rsp), %rbx
  212ad0: 48 89 df                     	movq	%rbx, %rdi
  212ad3: e8 78 92 00 00               	callq	0x21bd50 <builtin.returnError>
  212ad8: 66 c7 84 24 c0 00 00 00 33 00	movw	$51, 192(%rsp)
  212ae2: 48 89 df                     	movq	%rbx, %rdi
  212ae5: e8 66 92 00 00               	callq	0x21bd50 <builtin.returnError>
  212aea: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  212af2: 4c 8b 64 24 60               	movq	96(%rsp), %r12
  212af7: 49 89 df                     	movq	%rbx, %r15
  212afa: 48 85 f6                     	testq	%rsi, %rsi
  212afd: 0f 84 97 00 00 00            	je	0x212b9a <dwarf.DwarfInfo.getLineNumberInfo+0x55ca>
  212b03: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
  212b10: 48 8b 56 08                  	movq	8(%rsi), %rdx
  212b14: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  212b1c: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  212b24: 48 8b 1e                     	movq	(%rsi), %rbx
  212b27: b9 03 00 00 00               	movl	$3, %ecx
  212b2c: 4d 89 e0                     	movq	%r12, %r8
  212b2f: ff 50 10                     	callq	*16(%rax)
  212b32: 48 89 de                     	movq	%rbx, %rsi
  212b35: 48 85 db                     	testq	%rbx, %rbx
  212b38: 75 d6                        	jne	0x212b10 <dwarf.DwarfInfo.getLineNumberInfo+0x5540>
  212b3a: eb 5e                        	jmp	0x212b9a <dwarf.DwarfInfo.getLineNumberInfo+0x55ca>
  212b3c: 4c 8b 74 24 18               	movq	24(%rsp), %r14
  212b41: 4c 89 f7                     	movq	%r14, %rdi
  212b44: e8 07 92 00 00               	callq	0x21bd50 <builtin.returnError>
  212b49: 66 c7 84 24 c0 00 00 00 33 00	movw	$51, 192(%rsp)
  212b53: 4c 89 f7                     	movq	%r14, %rdi
  212b56: e8 f5 91 00 00               	callq	0x21bd50 <builtin.returnError>
  212b5b: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  212b63: 4c 8b 64 24 60               	movq	96(%rsp), %r12
  212b68: 4d 89 f7                     	movq	%r14, %r15
  212b6b: 48 85 f6                     	testq	%rsi, %rsi
  212b6e: 74 2a                        	je	0x212b9a <dwarf.DwarfInfo.getLineNumberInfo+0x55ca>
  212b70: 48 8b 56 08                  	movq	8(%rsi), %rdx
  212b74: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  212b7c: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  212b84: 48 8b 1e                     	movq	(%rsi), %rbx
  212b87: b9 03 00 00 00               	movl	$3, %ecx
  212b8c: 4d 89 e0                     	movq	%r12, %r8
  212b8f: ff 50 10                     	callq	*16(%rax)
  212b92: 48 89 de                     	movq	%rbx, %rsi
  212b95: 48 85 db                     	testq	%rbx, %rbx
  212b98: 75 d6                        	jne	0x212b70 <dwarf.DwarfInfo.getLineNumberInfo+0x55a0>
  212b9a: 4c 8b 6c 24 58               	movq	88(%rsp), %r13
  212b9f: 48 8b 6c 24 70               	movq	112(%rsp), %rbp
  212ba4: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  212bae: 4d 85 ed                     	testq	%r13, %r13
  212bb1: 48 0f 44 e8                  	cmoveq	%rax, %rbp
  212bb5: 74 2e                        	je	0x212be5 <dwarf.DwarfInfo.getLineNumberInfo+0x5615>
  212bb7: 48 8b 44 24 68               	movq	104(%rsp), %rax
  212bbc: 48 89 ef                     	movq	%rbp, %rdi
  212bbf: be aa 00 00 00               	movl	$170, %esi
  212bc4: 4c 89 ea                     	movq	%r13, %rdx
  212bc7: 48 8b 18                     	movq	(%rax), %rbx
  212bca: 4c 8b 70 08                  	movq	8(%rax), %r14
  212bce: e8 0d 98 00 00               	callq	0x21c3e0 <memset>
  212bd3: 48 89 df                     	movq	%rbx, %rdi
  212bd6: 48 89 ee                     	movq	%rbp, %rsi
  212bd9: 4c 89 ea                     	movq	%r13, %rdx
  212bdc: 31 c9                        	xorl	%ecx, %ecx
  212bde: 4d 89 e0                     	movq	%r12, %r8
  212be1: 41 ff 56 10                  	callq	*16(%r14)
  212be5: 4c 89 ff                     	movq	%r15, %rdi
  212be8: e8 63 91 00 00               	callq	0x21bd50 <builtin.returnError>
  212bed: 0f b7 8c 24 c0 00 00 00      	movzwl	192(%rsp), %ecx
  212bf5: 48 8b 44 24 28               	movq	40(%rsp), %rax
  212bfa: 66 89 48 20                  	movw	%cx, 32(%rax)
  212bfe: e9 02 07 00 00               	jmp	0x213305 <dwarf.DwarfInfo.getLineNumberInfo+0x5d35>
  212c03: 48 8b 7c 24 18               	movq	24(%rsp), %rdi
  212c08: e8 43 91 00 00               	callq	0x21bd50 <builtin.returnError>
  212c0d: 66 41 bd 33 00               	movw	$51, %r13w
  212c12: 4c 8b 7c 24 18               	movq	24(%rsp), %r15
  212c17: 4c 89 ff                     	movq	%r15, %rdi
  212c1a: e8 31 91 00 00               	callq	0x21bd50 <builtin.returnError>
  212c1f: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  212c27: 4c 8b 74 24 60               	movq	96(%rsp), %r14
  212c2c: 48 85 f6                     	testq	%rsi, %rsi
  212c2f: 74 39                        	je	0x212c6a <dwarf.DwarfInfo.getLineNumberInfo+0x569a>
  212c31: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
  212c40: 48 8b 56 08                  	movq	8(%rsi), %rdx
  212c44: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  212c4c: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  212c54: 48 8b 1e                     	movq	(%rsi), %rbx
  212c57: b9 03 00 00 00               	movl	$3, %ecx
  212c5c: 4d 89 f0                     	movq	%r14, %r8
  212c5f: ff 50 10                     	callq	*16(%rax)
  212c62: 48 89 de                     	movq	%rbx, %rsi
  212c65: 48 85 db                     	testq	%rbx, %rbx
  212c68: 75 d6                        	jne	0x212c40 <dwarf.DwarfInfo.getLineNumberInfo+0x5670>
  212c6a: 4c 8b 64 24 58               	movq	88(%rsp), %r12
  212c6f: 48 8b 6c 24 70               	movq	112(%rsp), %rbp
  212c74: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  212c7e: 4d 85 e4                     	testq	%r12, %r12
  212c81: 48 0f 44 e8                  	cmoveq	%rax, %rbp
  212c85: 74 30                        	je	0x212cb7 <dwarf.DwarfInfo.getLineNumberInfo+0x56e7>
  212c87: 48 8b 44 24 68               	movq	104(%rsp), %rax
  212c8c: 48 89 ef                     	movq	%rbp, %rdi
  212c8f: be aa 00 00 00               	movl	$170, %esi
  212c94: 4c 89 e2                     	movq	%r12, %rdx
  212c97: 48 8b 18                     	movq	(%rax), %rbx
  212c9a: 4c 8b 70 08                  	movq	8(%rax), %r14
  212c9e: e8 3d 97 00 00               	callq	0x21c3e0 <memset>
  212ca3: 4c 8b 44 24 60               	movq	96(%rsp), %r8
  212ca8: 48 89 df                     	movq	%rbx, %rdi
  212cab: 48 89 ee                     	movq	%rbp, %rsi
  212cae: 4c 89 e2                     	movq	%r12, %rdx
  212cb1: 31 c9                        	xorl	%ecx, %ecx
  212cb3: 41 ff 56 10                  	callq	*16(%r14)
  212cb7: 4c 89 ff                     	movq	%r15, %rdi
  212cba: e8 91 90 00 00               	callq	0x21bd50 <builtin.returnError>
  212cbf: 48 8b 44 24 28               	movq	40(%rsp), %rax
  212cc4: 66 44 89 68 20               	movw	%r13w, 32(%rax)
  212cc9: e9 37 06 00 00               	jmp	0x213305 <dwarf.DwarfInfo.getLineNumberInfo+0x5d35>
  212cce: 48 8b 7c 24 18               	movq	24(%rsp), %rdi
  212cd3: e8 78 90 00 00               	callq	0x21bd50 <builtin.returnError>
  212cd8: 4c 8b 7c 24 18               	movq	24(%rsp), %r15
  212cdd: 4c 89 ff                     	movq	%r15, %rdi
  212ce0: e8 6b 90 00 00               	callq	0x21bd50 <builtin.returnError>
  212ce5: 4c 89 ff                     	movq	%r15, %rdi
  212ce8: e8 63 90 00 00               	callq	0x21bd50 <builtin.returnError>
  212ced: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  212cf5: 4c 8b 64 24 60               	movq	96(%rsp), %r12
  212cfa: 48 85 f6                     	testq	%rsi, %rsi
  212cfd: 0f 84 97 00 00 00            	je	0x212d9a <dwarf.DwarfInfo.getLineNumberInfo+0x57ca>
  212d03: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
  212d10: 48 8b 56 08                  	movq	8(%rsi), %rdx
  212d14: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  212d1c: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  212d24: 48 8b 1e                     	movq	(%rsi), %rbx
  212d27: b9 03 00 00 00               	movl	$3, %ecx
  212d2c: 4d 89 e0                     	movq	%r12, %r8
  212d2f: ff 50 10                     	callq	*16(%rax)
  212d32: 48 89 de                     	movq	%rbx, %rsi
  212d35: 48 85 db                     	testq	%rbx, %rbx
  212d38: 75 d6                        	jne	0x212d10 <dwarf.DwarfInfo.getLineNumberInfo+0x5740>
  212d3a: eb 5e                        	jmp	0x212d9a <dwarf.DwarfInfo.getLineNumberInfo+0x57ca>
  212d3c: 48 8b 7c 24 18               	movq	24(%rsp), %rdi
  212d41: e8 0a 90 00 00               	callq	0x21bd50 <builtin.returnError>
  212d46: 4c 8b 7c 24 18               	movq	24(%rsp), %r15
  212d4b: 4c 89 ff                     	movq	%r15, %rdi
  212d4e: e8 fd 8f 00 00               	callq	0x21bd50 <builtin.returnError>
  212d53: 4c 89 ff                     	movq	%r15, %rdi
  212d56: e8 f5 8f 00 00               	callq	0x21bd50 <builtin.returnError>
  212d5b: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  212d63: 4c 8b 64 24 60               	movq	96(%rsp), %r12
  212d68: 48 85 f6                     	testq	%rsi, %rsi
  212d6b: 74 2d                        	je	0x212d9a <dwarf.DwarfInfo.getLineNumberInfo+0x57ca>
  212d6d: 0f 1f 00                     	nopl	(%rax)
  212d70: 48 8b 56 08                  	movq	8(%rsi), %rdx
  212d74: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  212d7c: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  212d84: 48 8b 1e                     	movq	(%rsi), %rbx
  212d87: b9 03 00 00 00               	movl	$3, %ecx
  212d8c: 4d 89 e0                     	movq	%r12, %r8
  212d8f: ff 50 10                     	callq	*16(%rax)
  212d92: 48 89 de                     	movq	%rbx, %rsi
  212d95: 48 85 db                     	testq	%rbx, %rbx
  212d98: 75 d6                        	jne	0x212d70 <dwarf.DwarfInfo.getLineNumberInfo+0x57a0>
  212d9a: 4c 8b 6c 24 58               	movq	88(%rsp), %r13
  212d9f: 48 8b 6c 24 70               	movq	112(%rsp), %rbp
  212da4: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  212dae: 4d 85 ed                     	testq	%r13, %r13
  212db1: 48 0f 44 e8                  	cmoveq	%rax, %rbp
  212db5: 74 2e                        	je	0x212de5 <dwarf.DwarfInfo.getLineNumberInfo+0x5815>
  212db7: 48 8b 44 24 68               	movq	104(%rsp), %rax
  212dbc: 48 89 ef                     	movq	%rbp, %rdi
  212dbf: be aa 00 00 00               	movl	$170, %esi
  212dc4: 4c 89 ea                     	movq	%r13, %rdx
  212dc7: 48 8b 18                     	movq	(%rax), %rbx
  212dca: 4c 8b 70 08                  	movq	8(%rax), %r14
  212dce: e8 0d 96 00 00               	callq	0x21c3e0 <memset>
  212dd3: 48 89 df                     	movq	%rbx, %rdi
  212dd6: 48 89 ee                     	movq	%rbp, %rsi
  212dd9: 4c 89 ea                     	movq	%r13, %rdx
  212ddc: 31 c9                        	xorl	%ecx, %ecx
  212dde: 4d 89 e0                     	movq	%r12, %r8
  212de1: 41 ff 56 10                  	callq	*16(%r14)
  212de5: 4c 89 ff                     	movq	%r15, %rdi
  212de8: e8 63 8f 00 00               	callq	0x21bd50 <builtin.returnError>
  212ded: 48 8b 44 24 28               	movq	40(%rsp), %rax
  212df2: 66 c7 40 20 34 00            	movw	$52, 32(%rax)
  212df8: e9 08 05 00 00               	jmp	0x213305 <dwarf.DwarfInfo.getLineNumberInfo+0x5d35>
  212dfd: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  212e05: 48 85 f6                     	testq	%rsi, %rsi
  212e08: 0f 84 7c 03 00 00            	je	0x21318a <dwarf.DwarfInfo.getLineNumberInfo+0x5bba>
  212e0e: 48 8b 56 08                  	movq	8(%rsi), %rdx
  212e12: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  212e1a: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  212e22: 48 8b 1e                     	movq	(%rsi), %rbx
  212e25: b9 03 00 00 00               	movl	$3, %ecx
  212e2a: 4d 89 e8                     	movq	%r13, %r8
  212e2d: ff 50 10                     	callq	*16(%rax)
  212e30: 48 89 de                     	movq	%rbx, %rsi
  212e33: 48 85 db                     	testq	%rbx, %rbx
  212e36: 75 d6                        	jne	0x212e0e <dwarf.DwarfInfo.getLineNumberInfo+0x583e>
  212e38: e9 4d 03 00 00               	jmp	0x21318a <dwarf.DwarfInfo.getLineNumberInfo+0x5bba>
  212e3d: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  212e45: 48 85 f6                     	testq	%rsi, %rsi
  212e48: 0f 84 3c 03 00 00            	je	0x21318a <dwarf.DwarfInfo.getLineNumberInfo+0x5bba>
  212e4e: 48 8b 56 08                  	movq	8(%rsi), %rdx
  212e52: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  212e5a: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  212e62: 48 8b 1e                     	movq	(%rsi), %rbx
  212e65: b9 03 00 00 00               	movl	$3, %ecx
  212e6a: 4d 89 e8                     	movq	%r13, %r8
  212e6d: ff 50 10                     	callq	*16(%rax)
  212e70: 48 89 de                     	movq	%rbx, %rsi
  212e73: 48 85 db                     	testq	%rbx, %rbx
  212e76: 75 d6                        	jne	0x212e4e <dwarf.DwarfInfo.getLineNumberInfo+0x587e>
  212e78: e9 0d 03 00 00               	jmp	0x21318a <dwarf.DwarfInfo.getLineNumberInfo+0x5bba>
  212e7d: 4c 8b 7c 24 18               	movq	24(%rsp), %r15
  212e82: 4c 89 ff                     	movq	%r15, %rdi
  212e85: e8 c6 8e 00 00               	callq	0x21bd50 <builtin.returnError>
  212e8a: 48 8b 44 24 28               	movq	40(%rsp), %rax
  212e8f: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  212e97: 66 c7 40 20 34 00            	movw	$52, 32(%rax)
  212e9d: 48 85 f6                     	testq	%rsi, %rsi
  212ea0: 0f 84 78 f7 ff ff            	je	0x21261e <dwarf.DwarfInfo.getLineNumberInfo+0x504e>
  212ea6: 48 8b 56 08                  	movq	8(%rsi), %rdx
  212eaa: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  212eb2: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  212eba: 48 8b 1e                     	movq	(%rsi), %rbx
  212ebd: b9 03 00 00 00               	movl	$3, %ecx
  212ec2: 4d 89 e8                     	movq	%r13, %r8
  212ec5: ff 50 10                     	callq	*16(%rax)
  212ec8: 48 89 de                     	movq	%rbx, %rsi
  212ecb: 48 85 db                     	testq	%rbx, %rbx
  212ece: 75 d6                        	jne	0x212ea6 <dwarf.DwarfInfo.getLineNumberInfo+0x58d6>
  212ed0: e9 49 f7 ff ff               	jmp	0x21261e <dwarf.DwarfInfo.getLineNumberInfo+0x504e>
  212ed5: 4c 8b 64 24 18               	movq	24(%rsp), %r12
  212eda: 4c 89 e7                     	movq	%r12, %rdi
  212edd: e8 6e 8e 00 00               	callq	0x21bd50 <builtin.returnError>
  212ee2: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  212eea: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  212eef: 48 85 f6                     	testq	%rsi, %rsi
  212ef2: 74 2a                        	je	0x212f1e <dwarf.DwarfInfo.getLineNumberInfo+0x594e>
  212ef4: 48 8b 56 08                  	movq	8(%rsi), %rdx
  212ef8: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  212f00: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  212f08: 48 8b 1e                     	movq	(%rsi), %rbx
  212f0b: b9 03 00 00 00               	movl	$3, %ecx
  212f10: 4d 89 e8                     	movq	%r13, %r8
  212f13: ff 50 10                     	callq	*16(%rax)
  212f16: 48 89 de                     	movq	%rbx, %rsi
  212f19: 48 85 db                     	testq	%rbx, %rbx
  212f1c: 75 d6                        	jne	0x212ef4 <dwarf.DwarfInfo.getLineNumberInfo+0x5924>
  212f1e: 48 8b 6c 24 58               	movq	88(%rsp), %rbp
  212f23: 4c 8b 7c 24 70               	movq	112(%rsp), %r15
  212f28: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  212f32: 48 85 ed                     	testq	%rbp, %rbp
  212f35: 4c 0f 44 f8                  	cmoveq	%rax, %r15
  212f39: 0f 85 4d ef ff ff            	jne	0x211e8c <dwarf.DwarfInfo.getLineNumberInfo+0x48bc>
  212f3f: e9 7f ef ff ff               	jmp	0x211ec3 <dwarf.DwarfInfo.getLineNumberInfo+0x48f3>
  212f44: 4c 8b 64 24 18               	movq	24(%rsp), %r12
  212f49: 4c 89 e7                     	movq	%r12, %rdi
  212f4c: e8 ff 8d 00 00               	callq	0x21bd50 <builtin.returnError>
  212f51: 66 41 be 33 00               	movw	$51, %r14w
  212f56: 4c 89 e7                     	movq	%r12, %rdi
  212f59: e8 f2 8d 00 00               	callq	0x21bd50 <builtin.returnError>
  212f5e: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  212f66: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  212f6b: 48 85 f6                     	testq	%rsi, %rsi
  212f6e: 74 2a                        	je	0x212f9a <dwarf.DwarfInfo.getLineNumberInfo+0x59ca>
  212f70: 48 8b 56 08                  	movq	8(%rsi), %rdx
  212f74: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  212f7c: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  212f84: 48 8b 1e                     	movq	(%rsi), %rbx
  212f87: b9 03 00 00 00               	movl	$3, %ecx
  212f8c: 4d 89 e8                     	movq	%r13, %r8
  212f8f: ff 50 10                     	callq	*16(%rax)
  212f92: 48 89 de                     	movq	%rbx, %rsi
  212f95: 48 85 db                     	testq	%rbx, %rbx
  212f98: 75 d6                        	jne	0x212f70 <dwarf.DwarfInfo.getLineNumberInfo+0x59a0>
  212f9a: 48 8b 7c 24 70               	movq	112(%rsp), %rdi
  212f9f: 4d 85 ff                     	testq	%r15, %r15
  212fa2: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  212fac: 48 0f 44 f8                  	cmoveq	%rax, %rdi
  212fb0: 0f 84 0d ef ff ff            	je	0x211ec3 <dwarf.DwarfInfo.getLineNumberInfo+0x48f3>
  212fb6: 48 8b 44 24 68               	movq	104(%rsp), %rax
  212fbb: 4c 89 fd                     	movq	%r15, %rbp
  212fbe: be aa 00 00 00               	movl	$170, %esi
  212fc3: 4c 89 fa                     	movq	%r15, %rdx
  212fc6: e9 1d f4 ff ff               	jmp	0x2123e8 <dwarf.DwarfInfo.getLineNumberInfo+0x4e18>
  212fcb: 4c 8b 64 24 18               	movq	24(%rsp), %r12
  212fd0: 4c 89 e7                     	movq	%r12, %rdi
  212fd3: e8 78 8d 00 00               	callq	0x21bd50 <builtin.returnError>
  212fd8: 66 41 bf 33 00               	movw	$51, %r15w
  212fdd: 4c 89 e7                     	movq	%r12, %rdi
  212fe0: e8 6b 8d 00 00               	callq	0x21bd50 <builtin.returnError>
  212fe5: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  212fed: 48 85 f6                     	testq	%rsi, %rsi
  212ff0: 74 7d                        	je	0x21306f <dwarf.DwarfInfo.getLineNumberInfo+0x5a9f>
  212ff2: 48 8b 56 08                  	movq	8(%rsi), %rdx
  212ff6: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  212ffe: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  213006: 48 8b 1e                     	movq	(%rsi), %rbx
  213009: b9 03 00 00 00               	movl	$3, %ecx
  21300e: 4d 89 e8                     	movq	%r13, %r8
  213011: ff 50 10                     	callq	*16(%rax)
  213014: 48 89 de                     	movq	%rbx, %rsi
  213017: 48 85 db                     	testq	%rbx, %rbx
  21301a: 75 d6                        	jne	0x212ff2 <dwarf.DwarfInfo.getLineNumberInfo+0x5a22>
  21301c: eb 51                        	jmp	0x21306f <dwarf.DwarfInfo.getLineNumberInfo+0x5a9f>
  21301e: 4c 8b 64 24 18               	movq	24(%rsp), %r12
  213023: 4c 89 e7                     	movq	%r12, %rdi
  213026: e8 25 8d 00 00               	callq	0x21bd50 <builtin.returnError>
  21302b: 66 41 bf 33 00               	movw	$51, %r15w
  213030: 4c 89 e7                     	movq	%r12, %rdi
  213033: e8 18 8d 00 00               	callq	0x21bd50 <builtin.returnError>
  213038: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  213040: 48 85 f6                     	testq	%rsi, %rsi
  213043: 74 2a                        	je	0x21306f <dwarf.DwarfInfo.getLineNumberInfo+0x5a9f>
  213045: 48 8b 56 08                  	movq	8(%rsi), %rdx
  213049: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  213051: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  213059: 48 8b 1e                     	movq	(%rsi), %rbx
  21305c: b9 03 00 00 00               	movl	$3, %ecx
  213061: 4d 89 e8                     	movq	%r13, %r8
  213064: ff 50 10                     	callq	*16(%rax)
  213067: 48 89 de                     	movq	%rbx, %rsi
  21306a: 48 85 db                     	testq	%rbx, %rbx
  21306d: 75 d6                        	jne	0x213045 <dwarf.DwarfInfo.getLineNumberInfo+0x5a75>
  21306f: 48 8b 6c 24 58               	movq	88(%rsp), %rbp
  213074: 48 8b 7c 24 70               	movq	112(%rsp), %rdi
  213079: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  213083: 48 85 ed                     	testq	%rbp, %rbp
  213086: 48 0f 44 f8                  	cmoveq	%rax, %rdi
  21308a: 0f 84 1e c8 ff ff            	je	0x20f8ae <dwarf.DwarfInfo.getLineNumberInfo+0x22de>
  213090: 48 8b 44 24 68               	movq	104(%rsp), %rax
  213095: be aa 00 00 00               	movl	$170, %esi
  21309a: 48 89 ea                     	movq	%rbp, %rdx
  21309d: 49 89 fe                     	movq	%rdi, %r14
  2130a0: 48 8b 18                     	movq	(%rax), %rbx
  2130a3: 48 8b 40 08                  	movq	8(%rax), %rax
  2130a7: 48 89 44 24 18               	movq	%rax, 24(%rsp)
  2130ac: e8 2f 93 00 00               	callq	0x21c3e0 <memset>
  2130b1: 48 8b 44 24 18               	movq	24(%rsp), %rax
  2130b6: e9 e2 c7 ff ff               	jmp	0x20f89d <dwarf.DwarfInfo.getLineNumberInfo+0x22cd>
  2130bb: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  2130c3: 48 85 f6                     	testq	%rsi, %rsi
  2130c6: 0f 84 be 00 00 00            	je	0x21318a <dwarf.DwarfInfo.getLineNumberInfo+0x5bba>
  2130cc: 48 8b 56 08                  	movq	8(%rsi), %rdx
  2130d0: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  2130d8: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  2130e0: 48 8b 1e                     	movq	(%rsi), %rbx
  2130e3: b9 03 00 00 00               	movl	$3, %ecx
  2130e8: 4d 89 e8                     	movq	%r13, %r8
  2130eb: ff 50 10                     	callq	*16(%rax)
  2130ee: 48 89 de                     	movq	%rbx, %rsi
  2130f1: 48 85 db                     	testq	%rbx, %rbx
  2130f4: 75 d6                        	jne	0x2130cc <dwarf.DwarfInfo.getLineNumberInfo+0x5afc>
  2130f6: e9 8f 00 00 00               	jmp	0x21318a <dwarf.DwarfInfo.getLineNumberInfo+0x5bba>
  2130fb: 4c 8b 7c 24 18               	movq	24(%rsp), %r15
  213100: 4c 89 ff                     	movq	%r15, %rdi
  213103: e8 48 8c 00 00               	callq	0x21bd50 <builtin.returnError>
  213108: 48 8b 44 24 28               	movq	40(%rsp), %rax
  21310d: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  213115: 66 c7 40 20 34 00            	movw	$52, 32(%rax)
  21311b: 48 85 f6                     	testq	%rsi, %rsi
  21311e: 0f 84 fa f4 ff ff            	je	0x21261e <dwarf.DwarfInfo.getLineNumberInfo+0x504e>
  213124: 48 8b 56 08                  	movq	8(%rsi), %rdx
  213128: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  213130: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  213138: 48 8b 1e                     	movq	(%rsi), %rbx
  21313b: b9 03 00 00 00               	movl	$3, %ecx
  213140: 4d 89 e8                     	movq	%r13, %r8
  213143: ff 50 10                     	callq	*16(%rax)
  213146: 48 89 de                     	movq	%rbx, %rsi
  213149: 48 85 db                     	testq	%rbx, %rbx
  21314c: 75 d6                        	jne	0x213124 <dwarf.DwarfInfo.getLineNumberInfo+0x5b54>
  21314e: e9 cb f4 ff ff               	jmp	0x21261e <dwarf.DwarfInfo.getLineNumberInfo+0x504e>
  213153: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  21315b: 48 85 f6                     	testq	%rsi, %rsi
  21315e: 74 2a                        	je	0x21318a <dwarf.DwarfInfo.getLineNumberInfo+0x5bba>
  213160: 48 8b 56 08                  	movq	8(%rsi), %rdx
  213164: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  21316c: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  213174: 48 8b 1e                     	movq	(%rsi), %rbx
  213177: b9 03 00 00 00               	movl	$3, %ecx
  21317c: 4d 89 e8                     	movq	%r13, %r8
  21317f: ff 50 10                     	callq	*16(%rax)
  213182: 48 89 de                     	movq	%rbx, %rsi
  213185: 48 85 db                     	testq	%rbx, %rbx
  213188: 75 d6                        	jne	0x213160 <dwarf.DwarfInfo.getLineNumberInfo+0x5b90>
  21318a: 48 8b 7c 24 70               	movq	112(%rsp), %rdi
  21318f: 4c 8b 64 24 18               	movq	24(%rsp), %r12
  213194: 4d 85 ff                     	testq	%r15, %r15
  213197: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  2131a1: 48 0f 44 f8                  	cmoveq	%rax, %rdi
  2131a5: 0f 84 18 ed ff ff            	je	0x211ec3 <dwarf.DwarfInfo.getLineNumberInfo+0x48f3>
  2131ab: 48 8b 44 24 68               	movq	104(%rsp), %rax
  2131b0: 4c 89 fd                     	movq	%r15, %rbp
  2131b3: be aa 00 00 00               	movl	$170, %esi
  2131b8: 4c 89 fa                     	movq	%r15, %rdx
  2131bb: 48 8b 18                     	movq	(%rax), %rbx
  2131be: 48 8b 40 08                  	movq	8(%rax), %rax
  2131c2: 48 89 44 24 78               	movq	%rax, 120(%rsp)
  2131c7: 49 89 ff                     	movq	%rdi, %r15
  2131ca: e9 d9 ec ff ff               	jmp	0x211ea8 <dwarf.DwarfInfo.getLineNumberInfo+0x48d8>
  2131cf: bf 59 1d 20 00               	movl	$2104665, %edi          # imm = 0x201D59
  2131d4: be 10 00 00 00               	movl	$16, %esi
  2131d9: 31 c9                        	xorl	%ecx, %ecx
  2131db: c5 f8 77                     	vzeroupper
  2131de: e8 2d 81 00 00               	callq	0x21b310 <builtin.default_panic>
  2131e3: 48 8b 74 24 20               	movq	32(%rsp), %rsi
  2131e8: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  2131ed: 48 8d 54 24 10               	leaq	16(%rsp), %rdx
  2131f2: b9 01 00 00 00               	movl	$1, %ecx
  2131f7: c6 44 24 10 aa               	movb	$-86, 16(%rsp)
  2131fc: e8 7f 60 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  213201: 48 83 7c 24 30 00            	cmpq	$0, 48(%rsp)
  213207: 4c 8b 7c 24 18               	movq	24(%rsp), %r15
  21320c: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  213211: 74 34                        	je	0x213247 <dwarf.DwarfInfo.getLineNumberInfo+0x5c77>
  213213: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  213218: a8 7e                        	testb	$126, %al
  21321a: 0f 85 3c 01 00 00            	jne	0x21335c <dwarf.DwarfInfo.getLineNumberInfo+0x5d8c>
  213220: 4c 8b 7c 24 18               	movq	24(%rsp), %r15
  213225: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  21322a: 66 bd 29 00                  	movw	$41, %bp
  21322e: 84 c0                        	testb	%al, %al
  213230: 78 21                        	js	0x213253 <dwarf.DwarfInfo.getLineNumberInfo+0x5c83>
  213232: 48 c1 e0 3f                  	shlq	$63, %rax
  213236: 49 09 c6                     	orq	%rax, %r14
  213239: 4d 85 f6                     	testq	%r14, %r14
  21323c: 0f 85 87 cf ff ff            	jne	0x2101c9 <dwarf.DwarfInfo.getLineNumberInfo+0x2bf9>
  213242: e9 48 d3 ff ff               	jmp	0x21058f <dwarf.DwarfInfo.getLineNumberInfo+0x2fbf>
  213247: 4c 89 ff                     	movq	%r15, %rdi
  21324a: e8 01 8b 00 00               	callq	0x21bd50 <builtin.returnError>
  21324f: 66 bd 33 00                  	movw	$51, %bp
  213253: 4c 89 ff                     	movq	%r15, %rdi
  213256: e8 f5 8a 00 00               	callq	0x21bd50 <builtin.returnError>
  21325b: 48 8b b4 24 90 00 00 00      	movq	144(%rsp), %rsi
  213263: 48 85 f6                     	testq	%rsi, %rsi
  213266: 74 32                        	je	0x21329a <dwarf.DwarfInfo.getLineNumberInfo+0x5cca>
  213268: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
  213270: 48 8b 56 08                  	movq	8(%rsi), %rdx
  213274: 48 8b bc 24 80 00 00 00      	movq	128(%rsp), %rdi
  21327c: 48 8b 84 24 88 00 00 00      	movq	136(%rsp), %rax
  213284: 48 8b 1e                     	movq	(%rsi), %rbx
  213287: b9 03 00 00 00               	movl	$3, %ecx
  21328c: 4d 89 e8                     	movq	%r13, %r8
  21328f: ff 50 10                     	callq	*16(%rax)
  213292: 48 89 de                     	movq	%rbx, %rsi
  213295: 48 85 db                     	testq	%rbx, %rbx
  213298: 75 d6                        	jne	0x213270 <dwarf.DwarfInfo.getLineNumberInfo+0x5ca0>
  21329a: 4c 8b 64 24 58               	movq	88(%rsp), %r12
  21329f: 48 8b 7c 24 70               	movq	112(%rsp), %rdi
  2132a4: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  2132ae: 4d 85 e4                     	testq	%r12, %r12
  2132b1: 48 0f 44 f8                  	cmoveq	%rax, %rdi
  2132b5: 74 3d                        	je	0x2132f4 <dwarf.DwarfInfo.getLineNumberInfo+0x5d24>
  2132b7: 48 8b 44 24 68               	movq	104(%rsp), %rax
  2132bc: be aa 00 00 00               	movl	$170, %esi
  2132c1: 4c 89 e2                     	movq	%r12, %rdx
  2132c4: 41 89 ee                     	movl	%ebp, %r14d
  2132c7: 48 89 fd                     	movq	%rdi, %rbp
  2132ca: 48 8b 18                     	movq	(%rax), %rbx
  2132cd: 48 8b 40 08                  	movq	8(%rax), %rax
  2132d1: 48 89 44 24 18               	movq	%rax, 24(%rsp)
  2132d6: e8 05 91 00 00               	callq	0x21c3e0 <memset>
  2132db: 48 8b 44 24 18               	movq	24(%rsp), %rax
  2132e0: 48 89 ee                     	movq	%rbp, %rsi
  2132e3: 48 89 df                     	movq	%rbx, %rdi
  2132e6: 44 89 f5                     	movl	%r14d, %ebp
  2132e9: 4c 89 e2                     	movq	%r12, %rdx
  2132ec: 31 c9                        	xorl	%ecx, %ecx
  2132ee: 4d 89 e8                     	movq	%r13, %r8
  2132f1: ff 50 10                     	callq	*16(%rax)
  2132f4: 4c 89 ff                     	movq	%r15, %rdi
  2132f7: e8 54 8a 00 00               	callq	0x21bd50 <builtin.returnError>
  2132fc: 48 8b 44 24 28               	movq	40(%rsp), %rax
  213301: 66 89 68 20                  	movw	%bp, 32(%rax)
  213305: 48 81 c4 e8 04 00 00         	addq	$1256, %rsp             # imm = 0x4E8
  21330c: 5b                           	popq	%rbx
  21330d: 41 5c                        	popq	%r12
  21330f: 41 5d                        	popq	%r13
  213311: 41 5e                        	popq	%r14
  213313: 41 5f                        	popq	%r15
  213315: 5d                           	popq	%rbp
  213316: c5 f8 77                     	vzeroupper
  213319: c3                           	retq
  21331a: bf 32 22 20 00               	movl	$2105906, %edi          # imm = 0x202232
  21331f: be 18 00 00 00               	movl	$24, %esi
  213324: 31 c9                        	xorl	%ecx, %ecx
  213326: e8 e5 7f 00 00               	callq	0x21b310 <builtin.default_panic>
  21332b: 4c 8b 74 24 18               	movq	24(%rsp), %r14
  213330: e9 7f c1 ff ff               	jmp	0x20f4b4 <dwarf.DwarfInfo.getLineNumberInfo+0x1ee4>
  213335: 4c 8b 64 24 18               	movq	24(%rsp), %r12
  21333a: e9 42 c2 ff ff               	jmp	0x20f581 <dwarf.DwarfInfo.getLineNumberInfo+0x1fb1>
  21333f: 4c 8b 7c 24 18               	movq	24(%rsp), %r15
  213344: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  213349: 66 bd 29 00                  	movw	$41, %bp
  21334d: e9 59 ec ff ff               	jmp	0x211fab <dwarf.DwarfInfo.getLineNumberInfo+0x49db>
  213352: 4c 8b 7c 24 18               	movq	24(%rsp), %r15
  213357: e9 15 f0 ff ff               	jmp	0x212371 <dwarf.DwarfInfo.getLineNumberInfo+0x4da1>
  21335c: 4c 8b 7c 24 18               	movq	24(%rsp), %r15
  213361: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  213366: 66 bd 29 00                  	movw	$41, %bp
  21336a: e9 e4 fe ff ff               	jmp	0x213253 <dwarf.DwarfInfo.getLineNumberInfo+0x5c83>
  21336f: 48 8b 5c 24 18               	movq	24(%rsp), %rbx
  213374: e9 69 f7 ff ff               	jmp	0x212ae2 <dwarf.DwarfInfo.getLineNumberInfo+0x5512>
  213379: 4c 8b 74 24 18               	movq	24(%rsp), %r14
  21337e: e9 d0 f7 ff ff               	jmp	0x212b53 <dwarf.DwarfInfo.getLineNumberInfo+0x5583>
  213383: 4c 8b 64 24 18               	movq	24(%rsp), %r12
  213388: 4c 8b 7c 24 58               	movq	88(%rsp), %r15
  21338d: 66 41 be 29 00               	movw	$41, %r14w
  213392: e9 bf fb ff ff               	jmp	0x212f56 <dwarf.DwarfInfo.getLineNumberInfo+0x5986>
  213397: 4c 8b 64 24 18               	movq	24(%rsp), %r12
  21339c: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  2133a1: 66 41 bf 29 00               	movw	$41, %r15w
  2133a6: e9 32 fc ff ff               	jmp	0x212fdd <dwarf.DwarfInfo.getLineNumberInfo+0x5a0d>
  2133ab: 4c 8b 64 24 18               	movq	24(%rsp), %r12
  2133b0: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  2133b5: 66 41 bf 29 00               	movw	$41, %r15w
  2133ba: e9 71 fc ff ff               	jmp	0x213030 <dwarf.DwarfInfo.getLineNumberInfo+0x5a60>
  2133bf: 90                           	nop

00000000002133c0 <debug.printSourceAtAddress__anon_4447>:
  2133c0: 55                           	pushq	%rbp
  2133c1: 41 57                        	pushq	%r15
  2133c3: 41 56                        	pushq	%r14
  2133c5: 41 55                        	pushq	%r13
  2133c7: 41 54                        	pushq	%r12
  2133c9: 53                           	pushq	%rbx
  2133ca: b8 28 25 00 00               	movl	$9512, %eax             # imm = 0x2528
  2133cf: e8 cc 8e 00 00               	callq	0x21c2a0 <__zig_probe_stack>
  2133d4: 48 29 c4                     	subq	%rax, %rsp
  2133d7: 48 8b 07                     	movq	(%rdi), %rax
  2133da: 49 89 ce                     	movq	%rcx, %r14
  2133dd: 48 89 94 24 90 01 00 00      	movq	%rdx, 400(%rsp)
  2133e5: 48 89 74 24 20               	movq	%rsi, 32(%rsp)
  2133ea: 48 89 3c 24                  	movq	%rdi, (%rsp)
  2133ee: 48 89 84 24 d0 00 00 00      	movq	%rax, 208(%rsp)
  2133f6: 48 8b 05 0b bc 00 00         	movq	48139(%rip), %rax       # 0x21f008 <os.linux.elf_aux_maybe>
  2133fd: 48 85 c0                     	testq	%rax, %rax
  213400: 74 3c                        	je	0x21343e <debug.printSourceAtAddress__anon_4447+0x7e>
  213402: 48 8d 48 08                  	leaq	8(%rax), %rcx
  213406: 31 f6                        	xorl	%esi, %esi
  213408: 48 8b 51 f8                  	movq	-8(%rcx), %rdx
  21340c: 48 85 d2                     	testq	%rdx, %rdx
  21340f: 74 3b                        	je	0x21344c <debug.printSourceAtAddress__anon_4447+0x8c>
  213411: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
  213420: 48 83 fa 07                  	cmpq	$7, %rdx
  213424: 74 1c                        	je	0x213442 <debug.printSourceAtAddress__anon_4447+0x82>
  213426: 48 ff c6                     	incq	%rsi
  213429: 0f 84 f3 44 00 00            	je	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  21342f: 48 83 c1 10                  	addq	$16, %rcx
  213433: 48 8b 51 f8                  	movq	-8(%rcx), %rdx
  213437: 48 85 d2                     	testq	%rdx, %rdx
  21343a: 75 e4                        	jne	0x213420 <debug.printSourceAtAddress__anon_4447+0x60>
  21343c: eb 0e                        	jmp	0x21344c <debug.printSourceAtAddress__anon_4447+0x8c>
  21343e: 31 c9                        	xorl	%ecx, %ecx
  213440: eb 4f                        	jmp	0x213491 <debug.printSourceAtAddress__anon_4447+0xd1>
  213442: 48 8b 09                     	movq	(%rcx), %rcx
  213445: 48 85 c9                     	testq	%rcx, %rcx
  213448: 75 57                        	jne	0x2134a1 <debug.printSourceAtAddress__anon_4447+0xe1>
  21344a: 31 d2                        	xorl	%edx, %edx
  21344c: 48 89 d1                     	movq	%rdx, %rcx
  21344f: 48 c1 e1 04                  	shlq	$4, %rcx
  213453: 48 8d 44 01 08               	leaq	8(%rcx,%rax), %rax
  213458: 48 8b 48 f8                  	movq	-8(%rax), %rcx
  21345c: 48 85 c9                     	testq	%rcx, %rcx
  21345f: 74 30                        	je	0x213491 <debug.printSourceAtAddress__anon_4447+0xd1>
  213461: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
  213470: 48 83 f9 03                  	cmpq	$3, %rcx
  213474: 74 18                        	je	0x21348e <debug.printSourceAtAddress__anon_4447+0xce>
  213476: 48 ff c2                     	incq	%rdx
  213479: 0f 84 a3 44 00 00            	je	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  21347f: 48 83 c0 10                  	addq	$16, %rax
  213483: 48 8b 48 f8                  	movq	-8(%rax), %rcx
  213487: 48 85 c9                     	testq	%rcx, %rcx
  21348a: 75 e4                        	jne	0x213470 <debug.printSourceAtAddress__anon_4447+0xb0>
  21348c: eb 03                        	jmp	0x213491 <debug.printSourceAtAddress__anon_4447+0xd1>
  21348e: 48 8b 08                     	movq	(%rax), %rcx
  213491: 48 83 e9 40                  	subq	$64, %rcx
  213495: 0f 82 87 44 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  21349b: 0f 84 98 4e 00 00            	je	0x218339 <debug.printSourceAtAddress__anon_4447+0x4f79>
  2134a1: f6 c1 07                     	testb	$7, %cl
  2134a4: 0f 85 f3 4c 00 00            	jne	0x21819d <debug.printSourceAtAddress__anon_4447+0x4ddd>
  2134aa: 48 81 f9 b3 23 20 00         	cmpq	$2106291, %rcx          # imm = 0x2023B3
  2134b1: 74 27                        	je	0x2134da <debug.printSourceAtAddress__anon_4447+0x11a>
  2134b3: 80 39 7f                     	cmpb	$127, (%rcx)
  2134b6: 0f 85 17 01 00 00            	jne	0x2135d3 <debug.printSourceAtAddress__anon_4447+0x213>
  2134bc: 80 79 01 45                  	cmpb	$69, 1(%rcx)
  2134c0: 0f 85 0d 01 00 00            	jne	0x2135d3 <debug.printSourceAtAddress__anon_4447+0x213>
  2134c6: 80 79 02 4c                  	cmpb	$76, 2(%rcx)
  2134ca: 0f 85 03 01 00 00            	jne	0x2135d3 <debug.printSourceAtAddress__anon_4447+0x213>
  2134d0: 80 79 03 46                  	cmpb	$70, 3(%rcx)
  2134d4: 0f 85 f9 00 00 00            	jne	0x2135d3 <debug.printSourceAtAddress__anon_4447+0x213>
  2134da: 48 8b 41 20                  	movq	32(%rcx), %rax
  2134de: 48 01 c8                     	addq	%rcx, %rax
  2134e1: 0f 82 3b 44 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  2134e7: 0f 84 4c 4e 00 00            	je	0x218339 <debug.printSourceAtAddress__anon_4447+0x4f79>
  2134ed: 4c 89 84 24 88 01 00 00      	movq	%r8, 392(%rsp)
  2134f5: a8 07                        	testb	$7, %al
  2134f7: 0f 85 a0 4c 00 00            	jne	0x21819d <debug.printSourceAtAddress__anon_4447+0x4ddd>
  2134fd: 48 83 3d ab 9f 00 00 00      	cmpq	$0, 40875(%rip)         # 0x21d4b0 <zig-graph+0x21d4b0>
  213505: 0f b7 71 38                  	movzwl	56(%rcx), %esi
  213509: 4c 89 74 24 10               	movq	%r14, 16(%rsp)
  21350e: 0f 84 9e 00 00 00            	je	0x2135b2 <debug.printSourceAtAddress__anon_4447+0x1f2>
  213514: 48 8b 15 95 9f 00 00         	movq	40853(%rip), %rdx       # 0x21d4b0 <zig-graph+0x21d4b0>
  21351b: 48 83 c1 38                  	addq	$56, %rcx
  21351f: 31 ff                        	xorl	%edi, %edi
  213521: 48 83 c2 08                  	addq	$8, %rdx
  213525: 4c 8b 42 f8                  	movq	-8(%rdx), %r8
  213529: 49 83 f8 03                  	cmpq	$3, %r8
  21352d: 74 31                        	je	0x213560 <debug.printSourceAtAddress__anon_4447+0x1a0>
  21352f: 90                           	nop
  213530: 49 83 f8 15                  	cmpq	$21, %r8
  213534: 74 0a                        	je	0x213540 <debug.printSourceAtAddress__anon_4447+0x180>
  213536: 4d 85 c0                     	testq	%r8, %r8
  213539: 75 37                        	jne	0x213572 <debug.printSourceAtAddress__anon_4447+0x1b2>
  21353b: eb 75                        	jmp	0x2135b2 <debug.printSourceAtAddress__anon_4447+0x1f2>
  21353d: 0f 1f 00                     	nopl	(%rax)
  213540: 4c 8b 02                     	movq	(%rdx), %r8
  213543: 41 f6 c0 07                  	testb	$7, %r8b
  213547: 0f 85 50 4c 00 00            	jne	0x21819d <debug.printSourceAtAddress__anon_4447+0x4ddd>
  21354d: 4d 85 c0                     	testq	%r8, %r8
  213550: 74 20                        	je	0x213572 <debug.printSourceAtAddress__anon_4447+0x1b2>
  213552: eb 37                        	jmp	0x21358b <debug.printSourceAtAddress__anon_4447+0x1cb>
  213554: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
  213560: 4c 8b 02                     	movq	(%rdx), %r8
  213563: 41 f6 c0 07                  	testb	$7, %r8b
  213567: 0f 85 30 4c 00 00            	jne	0x21819d <debug.printSourceAtAddress__anon_4447+0x4ddd>
  21356d: 4d 85 c0                     	testq	%r8, %r8
  213570: 75 2e                        	jne	0x2135a0 <debug.printSourceAtAddress__anon_4447+0x1e0>
  213572: 48 ff c7                     	incq	%rdi
  213575: 0f 84 a7 43 00 00            	je	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  21357b: 48 83 c2 10                  	addq	$16, %rdx
  21357f: 4c 8b 42 f8                  	movq	-8(%rdx), %r8
  213583: 49 83 f8 03                  	cmpq	$3, %r8
  213587: 75 a7                        	jne	0x213530 <debug.printSourceAtAddress__anon_4447+0x170>
  213589: eb d5                        	jmp	0x213560 <debug.printSourceAtAddress__anon_4447+0x1a0>
  21358b: 41 83 38 01                  	cmpl	$1, (%r8)
  21358f: 0f 85 8d 4e 00 00            	jne	0x218422 <debug.printSourceAtAddress__anon_4447+0x5062>
  213595: 49 8b 50 08                  	movq	8(%r8), %rdx
  213599: 48 85 d2                     	testq	%rdx, %rdx
  21359c: 75 5b                        	jne	0x2135f9 <debug.printSourceAtAddress__anon_4447+0x239>
  21359e: eb 12                        	jmp	0x2135b2 <debug.printSourceAtAddress__anon_4447+0x1f2>
  2135a0: 49 8b 50 08                  	movq	8(%r8), %rdx
  2135a4: f6 c2 07                     	testb	$7, %dl
  2135a7: 0f 85 f0 4b 00 00            	jne	0x21819d <debug.printSourceAtAddress__anon_4447+0x4ddd>
  2135ad: 48 85 d2                     	testq	%rdx, %rdx
  2135b0: 75 47                        	jne	0x2135f9 <debug.printSourceAtAddress__anon_4447+0x239>
  2135b2: 48 85 f6                     	testq	%rsi, %rsi
  2135b5: 74 1c                        	je	0x2135d3 <debug.printSourceAtAddress__anon_4447+0x213>
  2135b7: 48 6b ce 38                  	imulq	$56, %rsi, %rcx
  2135bb: 31 d2                        	xorl	%edx, %edx
  2135bd: 0f 1f 00                     	nopl	(%rax)
  2135c0: 83 3c 10 06                  	cmpl	$6, (%rax,%rdx)
  2135c4: 0f 84 7c 02 00 00            	je	0x213846 <debug.printSourceAtAddress__anon_4447+0x486>
  2135ca: 48 83 c2 38                  	addq	$56, %rdx
  2135ce: 48 39 d1                     	cmpq	%rdx, %rcx
  2135d1: 75 ed                        	jne	0x2135c0 <debug.printSourceAtAddress__anon_4447+0x200>
  2135d3: bf 32 22 20 00               	movl	$2105906, %edi          # imm = 0x202232
  2135d8: be 18 00 00 00               	movl	$24, %esi
  2135dd: 31 c9                        	xorl	%ecx, %ecx
  2135df: c5 f8 77                     	vzeroupper
  2135e2: e8 29 7d 00 00               	callq	0x21b310 <builtin.default_panic>
  2135e7: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
  2135f0: 48 85 d2                     	testq	%rdx, %rdx
  2135f3: 0f 84 64 02 00 00            	je	0x21385d <debug.printSourceAtAddress__anon_4447+0x49d>
  2135f9: 48 89 d6                     	movq	%rdx, %rsi
  2135fc: 4c 8b 22                     	movq	(%rdx), %r12
  2135ff: 48 8b 52 18                  	movq	24(%rdx), %rdx
  213603: 4d 85 e4                     	testq	%r12, %r12
  213606: 74 38                        	je	0x213640 <debug.printSourceAtAddress__anon_4447+0x280>
  213608: 41 f6 c4 07                  	testb	$7, %r12b
  21360c: 0f 85 8b 4b 00 00            	jne	0x21819d <debug.printSourceAtAddress__anon_4447+0x4ddd>
  213612: 49 8b 7c 24 20               	movq	32(%r12), %rdi
  213617: 4c 01 e7                     	addq	%r12, %rdi
  21361a: 0f 82 02 43 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  213620: 0f 84 13 4d 00 00            	je	0x218339 <debug.printSourceAtAddress__anon_4447+0x4f79>
  213626: 40 f6 c7 07                  	testb	$7, %dil
  21362a: 0f 85 6d 4b 00 00            	jne	0x21819d <debug.printSourceAtAddress__anon_4447+0x4ddd>
  213630: 4d 8d 44 24 38               	leaq	56(%r12), %r8
  213635: 4d 39 f4                     	cmpq	%r14, %r12
  213638: 77 b6                        	ja	0x2135f0 <debug.printSourceAtAddress__anon_4447+0x230>
  21363a: eb 0f                        	jmp	0x21364b <debug.printSourceAtAddress__anon_4447+0x28b>
  21363c: 0f 1f 40 00                  	nopl	(%rax)
  213640: 48 89 c7                     	movq	%rax, %rdi
  213643: 49 89 c8                     	movq	%rcx, %r8
  213646: 4d 39 f4                     	cmpq	%r14, %r12
  213649: 77 a5                        	ja	0x2135f0 <debug.printSourceAtAddress__anon_4447+0x230>
  21364b: 45 0f b7 00                  	movzwl	(%r8), %r8d
  21364f: 4d 85 c0                     	testq	%r8, %r8
  213652: 74 9c                        	je	0x2135f0 <debug.printSourceAtAddress__anon_4447+0x230>
  213654: 4d 6b c0 38                  	imulq	$56, %r8, %r8
  213658: 45 31 c9                     	xorl	%r9d, %r9d
  21365b: eb 0c                        	jmp	0x213669 <debug.printSourceAtAddress__anon_4447+0x2a9>
  21365d: 0f 1f 00                     	nopl	(%rax)
  213660: 49 83 c1 38                  	addq	$56, %r9
  213664: 4d 39 c8                     	cmpq	%r9, %r8
  213667: 74 87                        	je	0x2135f0 <debug.printSourceAtAddress__anon_4447+0x230>
  213669: 42 83 3c 0f 01               	cmpl	$1, (%rdi,%r9)
  21366e: 75 f0                        	jne	0x213660 <debug.printSourceAtAddress__anon_4447+0x2a0>
  213670: 4e 8b 54 0f 10               	movq	16(%rdi,%r9), %r10
  213675: 4d 01 e2                     	addq	%r12, %r10
  213678: 0f 82 a4 42 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  21367e: 4e 8b 5c 0f 28               	movq	40(%rdi,%r9), %r11
  213683: 4d 01 d3                     	addq	%r10, %r11
  213686: 0f 82 96 42 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  21368c: 4d 39 f2                     	cmpq	%r14, %r10
  21368f: 77 cf                        	ja	0x213660 <debug.printSourceAtAddress__anon_4447+0x2a0>
  213691: 4d 39 f3                     	cmpq	%r14, %r11
  213694: 76 ca                        	jbe	0x213660 <debug.printSourceAtAddress__anon_4447+0x2a0>
  213696: 48 8b 46 08                  	movq	8(%rsi), %rax
  21369a: 31 c9                        	xorl	%ecx, %ecx
  21369c: bb 00 00 00 00               	movl	$0, %ebx
  2136a1: 48 85 c0                     	testq	%rax, %rax
  2136a4: 74 2c                        	je	0x2136d2 <debug.printSourceAtAddress__anon_4447+0x312>
  2136a6: 80 38 00                     	cmpb	$0, (%rax)
  2136a9: 75 04                        	jne	0x2136af <debug.printSourceAtAddress__anon_4447+0x2ef>
  2136ab: 31 db                        	xorl	%ebx, %ebx
  2136ad: eb 20                        	jmp	0x2136cf <debug.printSourceAtAddress__anon_4447+0x30f>
  2136af: 31 db                        	xorl	%ebx, %ebx
  2136b1: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
  2136c0: 48 ff c3                     	incq	%rbx
  2136c3: 0f 84 59 42 00 00            	je	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  2136c9: 80 3c 18 00                  	cmpb	$0, (%rax,%rbx)
  2136cd: 75 f1                        	jne	0x2136c0 <debug.printSourceAtAddress__anon_4447+0x300>
  2136cf: 48 89 c1                     	movq	%rax, %rcx
  2136d2: 48 85 c9                     	testq	%rcx, %rcx
  2136d5: 41 be d7 25 20 00            	movl	$2106839, %r14d         # imm = 0x2025D7
  2136db: 48 0f 44 d9                  	cmoveq	%rcx, %rbx
  2136df: 4c 0f 45 f1                  	cmovneq	%rcx, %r14
  2136e3: 4c 8b 3c 24                  	movq	(%rsp), %r15
  2136e7: 4c 89 ff                     	movq	%r15, %rdi
  2136ea: e8 61 86 00 00               	callq	0x21bd50 <builtin.returnError>
  2136ef: 4c 89 ff                     	movq	%r15, %rdi
  2136f2: e8 59 86 00 00               	callq	0x21bd50 <builtin.returnError>
  2136f7: 48 8b 84 24 d0 00 00 00      	movq	208(%rsp), %rax
  2136ff: 48 8b 4c 24 20               	movq	32(%rsp), %rcx
  213704: 49 89 07                     	movq	%rax, (%r15)
  213707: 83 79 18 00                  	cmpl	$0, 24(%rcx)
  21370b: 48 8b 41 10                  	movq	16(%rcx), %rax
  21370f: b9 80 02 20 00               	movl	$2097792, %ecx          # imm = 0x200280
  213714: 0f 84 ad 00 00 00            	je	0x2137c7 <debug.printSourceAtAddress__anon_4447+0x407>
  21371a: c4 c3 fb f0 f4 20            	rorxq	$32, %r12, %rsi
  213720: 48 ba 2f 64 bd 78 64 1d 76 a0	movabsq	$-6884282663029611473, %rdx # imm = 0xA0761D6478BD642F
  21372a: 48 bf 94 3a c9 64 f6 30 8d fa	movabsq	$-392603757700367724, %rdi # imm = 0xFA8D30F664C93A94
  213734: 48 31 f2                     	xorq	%rsi, %rdx
  213737: c4 e2 cb f6 d7               	mulxq	%rdi, %rsi, %rdx
  21373c: 48 31 f2                     	xorq	%rsi, %rdx
  21373f: 48 be 4f 12 7d c4 27 4e 8e 1d	movabsq	$2129725606500045391, %rsi # imm = 0x1D8E4E27C47D124F
  213749: 48 83 f2 08                  	xorq	$8, %rdx
  21374d: c4 e2 c3 f6 d6               	mulxq	%rsi, %rdi, %rdx
  213752: 48 85 c0                     	testq	%rax, %rax
  213755: 0f 84 c7 41 00 00            	je	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  21375b: a8 07                        	testb	$7, %al
  21375d: 0f 85 3a 4a 00 00            	jne	0x21819d <debug.printSourceAtAddress__anon_4447+0x4ddd>
  213763: 8b 70 f8                     	movl	-8(%rax), %esi
  213766: 83 ee 01                     	subl	$1, %esi
  213769: 0f 82 b3 41 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  21376f: 48 31 fa                     	xorq	%rdi, %rdx
  213772: 89 f7                        	movl	%esi, %edi
  213774: 21 d7                        	andl	%edx, %edi
  213776: 44 0f b6 0c 38               	movzbl	(%rax,%rdi), %r9d
  21377b: 45 84 c9                     	testb	%r9b, %r9b
  21377e: 74 47                        	je	0x2137c7 <debug.printSourceAtAddress__anon_4447+0x407>
  213780: 48 c1 ea 39                  	shrq	$57, %rdx
  213784: 41 89 f0                     	movl	%esi, %r8d
  213787: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
  213790: 45 84 c9                     	testb	%r9b, %r9b
  213793: 79 17                        	jns	0x2137ac <debug.printSourceAtAddress__anon_4447+0x3ec>
  213795: 41 80 e1 7f                  	andb	$127, %r9b
  213799: 44 38 ca                     	cmpb	%r9b, %dl
  21379c: 75 0e                        	jne	0x2137ac <debug.printSourceAtAddress__anon_4447+0x3ec>
  21379e: 4c 8b 48 f0                  	movq	-16(%rax), %r9
  2137a2: 4d 3b 24 f9                  	cmpq	(%r9,%rdi,8), %r12
  2137a6: 0f 84 c3 00 00 00            	je	0x21386f <debug.printSourceAtAddress__anon_4447+0x4af>
  2137ac: ff c7                        	incl	%edi
  2137ae: 44 21 c7                     	andl	%r8d, %edi
  2137b1: 83 ee 01                     	subl	$1, %esi
  2137b4: 44 0f b6 0c 38               	movzbl	(%rax,%rdi), %r9d
  2137b9: 41 0f 92 c2                  	setb	%r10b
  2137bd: 45 84 c9                     	testb	%r9b, %r9b
  2137c0: 74 05                        	je	0x2137c7 <debug.printSourceAtAddress__anon_4447+0x407>
  2137c2: 45 84 d2                     	testb	%r10b, %r10b
  2137c5: 74 c9                        	je	0x213790 <debug.printSourceAtAddress__anon_4447+0x3d0>
  2137c7: 80 79 08 00                  	cmpb	$0, 8(%rcx)
  2137cb: 0f 84 c0 00 00 00            	je	0x213891 <debug.printSourceAtAddress__anon_4447+0x4d1>
  2137d1: 48 85 c0                     	testq	%rax, %rax
  2137d4: 0f 84 37 4c 00 00            	je	0x218411 <debug.printSourceAtAddress__anon_4447+0x5051>
  2137da: a8 07                        	testb	$7, %al
  2137dc: 0f 85 bb 49 00 00            	jne	0x21819d <debug.printSourceAtAddress__anon_4447+0x4ddd>
  2137e2: 48 8b 09                     	movq	(%rcx), %rcx
  2137e5: 48 8b 40 e8                  	movq	-24(%rax), %rax
  2137e9: 48 8b 2c c8                  	movq	(%rax,%rcx,8), %rbp
  2137ed: 48 85 ed                     	testq	%rbp, %rbp
  2137f0: 0f 84 9b 00 00 00            	je	0x213891 <debug.printSourceAtAddress__anon_4447+0x4d1>
  2137f6: 48 8b 44 24 10               	movq	16(%rsp), %rax
  2137fb: 48 2b 45 00                  	subq	(%rbp), %rax
  2137ff: 48 89 44 24 68               	movq	%rax, 104(%rsp)
  213804: 0f 82 18 41 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  21380a: 48 8b 85 e8 00 00 00         	movq	232(%rbp), %rax
  213811: 48 89 84 24 c8 00 00 00      	movq	%rax, 200(%rsp)
  213819: 48 85 c0                     	testq	%rax, %rax
  21381c: 0f 84 3d 37 00 00            	je	0x216f5f <debug.printSourceAtAddress__anon_4447+0x3b9f>
  213822: 48 8b 95 e0 00 00 00         	movq	224(%rbp), %rdx
  213829: 48 8d 45 08                  	leaq	8(%rbp), %rax
  21382d: 48 89 6c 24 18               	movq	%rbp, 24(%rsp)
  213832: 48 89 84 24 a8 00 00 00      	movq	%rax, 168(%rsp)
  21383a: 31 c0                        	xorl	%eax, %eax
  21383c: 48 89 54 24 60               	movq	%rdx, 96(%rsp)
  213841: e9 c8 10 00 00               	jmp	0x21490e <debug.printSourceAtAddress__anon_4447+0x154e>
  213846: 49 89 c4                     	movq	%rax, %r12
  213849: 4c 2b 64 10 10               	subq	16(%rax,%rdx), %r12
  21384e: 0f 82 ce 40 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  213854: 4d 39 f4                     	cmpq	%r14, %r12
  213857: 0f 86 dd 15 00 00            	jbe	0x214e3a <debug.printSourceAtAddress__anon_4447+0x1a7a>
  21385d: 48 8b 3c 24                  	movq	(%rsp), %rdi
  213861: e8 ea 84 00 00               	callq	0x21bd50 <builtin.returnError>
  213866: 66 bb 18 00                  	movw	$24, %bx
  21386a: e9 d0 46 00 00               	jmp	0x217f3f <debug.printSourceAtAddress__anon_4447+0x4b7f>
  21386f: 48 89 bc 24 20 05 00 00      	movq	%rdi, 1312(%rsp)
  213877: c6 84 24 28 05 00 00 01      	movb	$1, 1320(%rsp)
  21387f: 48 8d 8c 24 20 05 00 00      	leaq	1312(%rsp), %rcx
  213887: 80 79 08 00                  	cmpb	$0, 8(%rcx)
  21388b: 0f 85 40 ff ff ff            	jne	0x2137d1 <debug.printSourceAtAddress__anon_4447+0x411>
  213891: 48 8b 44 24 20               	movq	32(%rsp), %rax
  213896: 48 8b 8c 24 58 25 00 00      	movq	9560(%rsp), %rcx
  21389e: be 28 01 00 00               	movl	$296, %esi              # imm = 0x128
  2138a3: ba 03 00 00 00               	movl	$3, %edx
  2138a8: 4c 89 a4 24 d8 01 00 00      	movq	%r12, 472(%rsp)
  2138b0: 48 8b 38                     	movq	(%rax), %rdi
  2138b3: 48 8b 40 08                  	movq	8(%rax), %rax
  2138b7: 48 89 4c 24 28               	movq	%rcx, 40(%rsp)
  2138bc: ff 10                        	callq	*(%rax)
  2138be: 48 85 c0                     	testq	%rax, %rax
  2138c1: 0f 84 6e 36 00 00            	je	0x216f35 <debug.printSourceAtAddress__anon_4447+0x3b75>
  2138c7: c5 fc 28 05 71 c9 fe ff      	vmovaps	-79503(%rip), %ymm0     # 0x200240 <zig-graph+0x200240>
  2138cf: 49 89 c4                     	movq	%rax, %r12
  2138d2: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  2138dc: 49 89 84 24 20 01 00 00      	movq	%rax, 288(%r12)
  2138e4: c4 c1 7c 11 84 24 00 01 00 00	vmovups	%ymm0, 256(%r12)
  2138ee: c4 c1 7c 11 84 24 e0 00 00 00	vmovups	%ymm0, 224(%r12)
  2138f8: c4 c1 7c 11 84 24 c0 00 00 00	vmovups	%ymm0, 192(%r12)
  213902: c4 c1 7c 11 84 24 a0 00 00 00	vmovups	%ymm0, 160(%r12)
  21390c: c4 c1 7c 11 84 24 80 00 00 00	vmovups	%ymm0, 128(%r12)
  213916: c4 c1 7c 11 44 24 60         	vmovups	%ymm0, 96(%r12)
  21391d: c4 c1 7c 11 44 24 40         	vmovups	%ymm0, 64(%r12)
  213924: c4 c1 7c 11 44 24 20         	vmovups	%ymm0, 32(%r12)
  21392b: c4 c1 7c 11 04 24            	vmovups	%ymm0, (%r12)
  213931: 41 f6 c4 07                  	testb	$7, %r12b
  213935: 0f 85 62 48 00 00            	jne	0x21819d <debug.printSourceAtAddress__anon_4447+0x4ddd>
  21393b: 4c 89 64 24 18               	movq	%r12, 24(%rsp)
  213940: 48 85 db                     	testq	%rbx, %rbx
  213943: 0f 84 e6 00 00 00            	je	0x213a2f <debug.printSourceAtAddress__anon_4447+0x66f>
  213949: 31 c0                        	xorl	%eax, %eax
  21394b: 0f 1f 44 00 00               	nopl	(%rax,%rax)
  213950: 41 80 3c 06 00               	cmpb	$0, (%r14,%rax)
  213955: 0f 84 78 fc ff ff            	je	0x2135d3 <debug.printSourceAtAddress__anon_4447+0x213>
  21395b: 48 ff c0                     	incq	%rax
  21395e: 48 39 c3                     	cmpq	%rax, %rbx
  213961: 75 ed                        	jne	0x213950 <debug.printSourceAtAddress__anon_4447+0x590>
  213963: 4c 8d ac 24 20 05 00 00      	leaq	1312(%rsp), %r13
  21396b: ba 00 10 00 00               	movl	$4096, %edx             # imm = 0x1000
  213970: be aa 00 00 00               	movl	$170, %esi
  213975: 4c 89 ef                     	movq	%r13, %rdi
  213978: c5 f8 77                     	vzeroupper
  21397b: e8 60 8a 00 00               	callq	0x21c3e0 <memset>
  213980: 48 81 fb ff 0f 00 00         	cmpq	$4095, %rbx             # imm = 0xFFF
  213987: 0f 87 b1 37 00 00            	ja	0x21713e <debug.printSourceAtAddress__anon_4447+0x3d7e>
  21398d: 49 8d 04 1e                  	leaq	(%r14,%rbx), %rax
  213991: 48 8d 8c 1c 20 05 00 00      	leaq	1312(%rsp,%rbx), %rcx
  213999: 49 39 c5                     	cmpq	%rax, %r13
  21399c: 0f 93 c0                     	setae	%al
  21399f: 4c 39 f1                     	cmpq	%r14, %rcx
  2139a2: 76 08                        	jbe	0x2139ac <debug.printSourceAtAddress__anon_4447+0x5ec>
  2139a4: 84 c0                        	testb	%al, %al
  2139a6: 0f 84 34 47 00 00            	je	0x2180e0 <debug.printSourceAtAddress__anon_4447+0x4d20>
  2139ac: 4c 8d ac 24 20 05 00 00      	leaq	1312(%rsp), %r13
  2139b4: 4c 89 f6                     	movq	%r14, %rsi
  2139b7: 48 89 da                     	movq	%rbx, %rdx
  2139ba: 4c 89 ef                     	movq	%r13, %rdi
  2139bd: e8 1e 89 00 00               	callq	0x21c2e0 <memcpy>
  2139c2: c6 84 1c 20 05 00 00 00      	movb	$0, 1312(%rsp,%rbx)
  2139ca: 48 8d 9c 24 20 15 00 00      	leaq	5408(%rsp), %rbx
  2139d2: ba 00 10 00 00               	movl	$4096, %edx             # imm = 0x1000
  2139d7: 4c 89 ee                     	movq	%r13, %rsi
  2139da: 48 89 df                     	movq	%rbx, %rdi
  2139dd: e8 fe 88 00 00               	callq	0x21c2e0 <memcpy>
  2139e2: 48 8b 34 24                  	movq	(%rsp), %rsi
  2139e6: 48 8d bc 24 f0 01 00 00      	leaq	496(%rsp), %rdi
  2139ee: 41 b8 dc 25 20 00            	movl	$2106844, %r8d          # imm = 0x2025DC
  2139f4: ba 9c ff ff ff               	movl	$4294967196, %edx       # imm = 0xFFFFFF9C
  2139f9: 48 89 d9                     	movq	%rbx, %rcx
  2139fc: e8 1f 56 00 00               	callq	0x219020 <fs.Dir.openFileZ>
  213a01: 0f b7 9c 24 f4 01 00 00      	movzwl	500(%rsp), %ebx
  213a09: 8b ac 24 f0 01 00 00         	movl	496(%rsp), %ebp
  213a10: 4c 8b 64 24 28               	movq	40(%rsp), %r12
  213a15: 89 ac 24 98 01 00 00         	movl	%ebp, 408(%rsp)
  213a1c: 66 85 db                     	testw	%bx, %bx
  213a1f: 0f 85 61 39 00 00            	jne	0x217386 <debug.printSourceAtAddress__anon_4447+0x3fc6>
  213a25: 48 8d 9c 24 98 01 00 00      	leaq	408(%rsp), %rbx
  213a2d: eb 5f                        	jmp	0x213a8e <debug.printSourceAtAddress__anon_4447+0x6ce>
  213a2f: 48 8b 34 24                  	movq	(%rsp), %rsi
  213a33: 48 8d bc 24 20 05 00 00      	leaq	1312(%rsp), %rdi
  213a3b: b9 40 21 20 00               	movl	$2105664, %ecx          # imm = 0x202140
  213a40: 41 b8 dc 25 20 00            	movl	$2106844, %r8d          # imm = 0x2025DC
  213a46: ba 9c ff ff ff               	movl	$4294967196, %edx       # imm = 0xFFFFFF9C
  213a4b: c5 f8 77                     	vzeroupper
  213a4e: e8 cd 55 00 00               	callq	0x219020 <fs.Dir.openFileZ>
  213a53: 0f b7 9c 24 24 05 00 00      	movzwl	1316(%rsp), %ebx
  213a5b: 66 83 bc 24 24 05 00 00 00   	cmpw	$0, 1316(%rsp)
  213a64: 8b ac 24 20 05 00 00         	movl	1312(%rsp), %ebp
  213a6b: 0f 85 f7 38 00 00            	jne	0x217368 <debug.printSourceAtAddress__anon_4447+0x3fa8>
  213a71: 4c 8b 64 24 28               	movq	40(%rsp), %r12
  213a76: 89 ac 24 a0 01 00 00         	movl	%ebp, 416(%rsp)
  213a7d: 66 85 db                     	testw	%bx, %bx
  213a80: 0f 85 00 39 00 00            	jne	0x217386 <debug.printSourceAtAddress__anon_4447+0x3fc6>
  213a86: 48 8d 9c 24 a0 01 00 00      	leaq	416(%rsp), %rbx
  213a8e: c5 f8 57 c0                  	vxorps	%xmm0, %xmm0, %xmm0
  213a92: 48 63 fd                     	movslq	%ebp, %rdi
  213a95: 48 8d b4 24 20 15 00 00      	leaq	5408(%rsp), %rsi
  213a9d: b8 05 00 00 00               	movl	$5, %eax
  213aa2: c5 fc 11 84 24 90 15 00 00   	vmovups	%ymm0, 5520(%rsp)
  213aab: c5 fc 11 84 24 80 15 00 00   	vmovups	%ymm0, 5504(%rsp)
  213ab4: c5 fc 11 84 24 60 15 00 00   	vmovups	%ymm0, 5472(%rsp)
  213abd: c5 fc 11 84 24 40 15 00 00   	vmovups	%ymm0, 5440(%rsp)
  213ac6: c5 fc 11 84 24 20 15 00 00   	vmovups	%ymm0, 5408(%rsp)
  213acf: 0f 05                        	syscall
  213ad1: 89 c2                        	movl	%eax, %edx
  213ad3: 31 c9                        	xorl	%ecx, %ecx
  213ad5: 4c 8b 74 24 10               	movq	16(%rsp), %r14
  213ada: f7 da                        	negl	%edx
  213adc: 48 3d 01 f0 ff ff            	cmpq	$-4095, %rax            # imm = 0xF001
  213ae2: 0f 43 ca                     	cmovael	%edx, %ecx
  213ae5: 66 85 c9                     	testw	%cx, %cx
  213ae8: 0f 85 b7 33 00 00            	jne	0x216ea5 <debug.printSourceAtAddress__anon_4447+0x3ae5>
  213aee: 48 8b 8c 24 50 15 00 00      	movq	5456(%rsp), %rcx
  213af6: 8b 03                        	movl	(%rbx), %eax
  213af8: 48 83 ec 08                  	subq	$8, %rsp
  213afc: 48 8b 74 24 08               	movq	8(%rsp), %rsi
  213b01: 48 8d bc 24 f8 01 00 00      	leaq	504(%rsp), %rdi
  213b09: 31 d2                        	xorl	%edx, %edx
  213b0b: 41 b8 01 00 00 00            	movl	$1, %r8d
  213b11: 41 b9 01 00 00 00            	movl	$1, %r9d
  213b17: 50                           	pushq	%rax
  213b18: c5 f8 77                     	vzeroupper
  213b1b: e8 90 04 ff ff               	callq	0x203fb0 <os.mmap>
  213b20: 48 83 c4 10                  	addq	$16, %rsp
  213b24: 44 0f b7 ac 24 00 02 00 00   	movzwl	512(%rsp), %r13d
  213b2d: 48 8b 6c 24 18               	movq	24(%rsp), %rbp
  213b32: 66 45 85 ed                  	testw	%r13w, %r13w
  213b36: 0f 85 af 35 00 00            	jne	0x2170eb <debug.printSourceAtAddress__anon_4447+0x3d2b>
  213b3c: 48 8b 94 24 f0 01 00 00      	movq	496(%rsp), %rdx
  213b44: 48 8b b4 24 f8 01 00 00      	movq	504(%rsp), %rsi
  213b4c: 48 63 3b                     	movslq	(%rbx), %rdi
  213b4f: b8 03 00 00 00               	movl	$3, %eax
  213b54: 0f 05                        	syscall
  213b56: 48 3d 01 f0 ff ff            	cmpq	$-4095, %rax            # imm = 0xF001
  213b5c: 72 0e                        	jb	0x213b6c <debug.printSourceAtAddress__anon_4447+0x7ac>
  213b5e: 0f b7 c0                     	movzwl	%ax, %eax
  213b61: 3d f7 ff 00 00               	cmpl	$65527, %eax            # imm = 0xFFF7
  213b66: 0f 84 67 fa ff ff            	je	0x2135d3 <debug.printSourceAtAddress__anon_4447+0x213>
  213b6c: 48 89 74 24 58               	movq	%rsi, 88(%rsp)
  213b71: 48 85 f6                     	testq	%rsi, %rsi
  213b74: 0f 84 32 45 00 00            	je	0x2180ac <debug.printSourceAtAddress__anon_4447+0x4cec>
  213b7a: 48 89 d0                     	movq	%rdx, %rax
  213b7d: 48 81 fa b3 23 20 00         	cmpq	$2106291, %rdx          # imm = 0x2023B3
  213b84: 74 2b                        	je	0x213bb1 <debug.printSourceAtAddress__anon_4447+0x7f1>
  213b86: 80 38 7f                     	cmpb	$127, (%rax)
  213b89: 66 bb 30 00                  	movw	$48, %bx
  213b8d: 0f 85 79 43 00 00            	jne	0x217f0c <debug.printSourceAtAddress__anon_4447+0x4b4c>
  213b93: 80 78 01 45                  	cmpb	$69, 1(%rax)
  213b97: 0f 85 6f 43 00 00            	jne	0x217f0c <debug.printSourceAtAddress__anon_4447+0x4b4c>
  213b9d: 80 78 02 4c                  	cmpb	$76, 2(%rax)
  213ba1: 0f 85 65 43 00 00            	jne	0x217f0c <debug.printSourceAtAddress__anon_4447+0x4b4c>
  213ba7: 80 78 03 46                  	cmpb	$70, 3(%rax)
  213bab: 0f 85 5b 43 00 00            	jne	0x217f0c <debug.printSourceAtAddress__anon_4447+0x4b4c>
  213bb1: 80 78 06 01                  	cmpb	$1, 6(%rax)
  213bb5: 0f 85 a5 35 00 00            	jne	0x217160 <debug.printSourceAtAddress__anon_4447+0x3da0>
  213bbb: 48 89 c6                     	movq	%rax, %rsi
  213bbe: 0f b6 40 05                  	movzbl	5(%rax), %eax
  213bc2: 83 f8 01                     	cmpl	$1, %eax
  213bc5: 0f 85 df 35 00 00            	jne	0x2171aa <debug.printSourceAtAddress__anon_4447+0x3dea>
  213bcb: 0f b7 46 3a                  	movzwl	58(%rsi), %eax
  213bcf: 0f b7 56 3e                  	movzwl	62(%rsi), %edx
  213bd3: 48 8b 4e 28                  	movq	40(%rsi), %rcx
  213bd7: 48 0f af d0                  	imulq	%rax, %rdx
  213bdb: 48 01 ca                     	addq	%rcx, %rdx
  213bde: 0f 82 3e 3d 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  213be4: 48 8b 7c 24 58               	movq	88(%rsp), %rdi
  213be9: 48 39 fa                     	cmpq	%rdi, %rdx
  213bec: 0f 83 ba 44 00 00            	jae	0x2180ac <debug.printSourceAtAddress__anon_4447+0x4cec>
  213bf2: 48 01 f2                     	addq	%rsi, %rdx
  213bf5: f6 c2 07                     	testb	$7, %dl
  213bf8: 0f 85 9f 45 00 00            	jne	0x21819d <debug.printSourceAtAddress__anon_4447+0x4ddd>
  213bfe: 48 8b 42 18                  	movq	24(%rdx), %rax
  213c02: 4c 8b 42 20                  	movq	32(%rdx), %r8
  213c06: 49 01 c0                     	addq	%rax, %r8
  213c09: 0f 82 13 3d 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  213c0f: 49 39 f8                     	cmpq	%rdi, %r8
  213c12: 0f 87 94 44 00 00            	ja	0x2180ac <debug.printSourceAtAddress__anon_4447+0x4cec>
  213c18: 48 39 f9                     	cmpq	%rdi, %rcx
  213c1b: 0f 83 8b 44 00 00            	jae	0x2180ac <debug.printSourceAtAddress__anon_4447+0x4cec>
  213c21: 48 01 f1                     	addq	%rsi, %rcx
  213c24: f6 c1 07                     	testb	$7, %cl
  213c27: 0f 85 70 45 00 00            	jne	0x21819d <debug.printSourceAtAddress__anon_4447+0x4ddd>
  213c2d: 0f b7 6e 3c                  	movzwl	60(%rsi), %ebp
  213c31: 48 85 ed                     	testq	%rbp, %rbp
  213c34: 0f 84 b3 36 00 00            	je	0x2172ed <debug.printSourceAtAddress__anon_4447+0x3f2d>
  213c3a: 4c 8d 34 06                  	leaq	(%rsi,%rax), %r14
  213c3e: 49 29 c0                     	subq	%rax, %r8
  213c41: 31 c0                        	xorl	%eax, %eax
  213c43: 48 8b 54 24 20               	movq	32(%rsp), %rdx
  213c48: 48 89 74 24 60               	movq	%rsi, 96(%rsp)
  213c4d: 31 f6                        	xorl	%esi, %esi
  213c4f: 31 ff                        	xorl	%edi, %edi
  213c51: 45 31 c9                     	xorl	%r9d, %r9d
  213c54: 45 31 db                     	xorl	%r11d, %r11d
  213c57: 45 31 d2                     	xorl	%r10d, %r10d
  213c5a: 48 89 84 24 d8 00 00 00      	movq	%rax, 216(%rsp)
  213c62: 31 c0                        	xorl	%eax, %eax
  213c64: 48 89 b4 24 60 01 00 00      	movq	%rsi, 352(%rsp)
  213c6c: 31 f6                        	xorl	%esi, %esi
  213c6e: 48 89 84 24 58 01 00 00      	movq	%rax, 344(%rsp)
  213c76: 31 c0                        	xorl	%eax, %eax
  213c78: 48 89 b4 24 b8 01 00 00      	movq	%rsi, 440(%rsp)
  213c80: 31 f6                        	xorl	%esi, %esi
  213c82: 48 89 84 24 a8 00 00 00      	movq	%rax, 168(%rsp)
  213c8a: 31 c0                        	xorl	%eax, %eax
  213c8c: 48 89 b4 24 c8 00 00 00      	movq	%rsi, 200(%rsp)
  213c94: 31 f6                        	xorl	%esi, %esi
  213c96: 48 89 84 24 70 01 00 00      	movq	%rax, 368(%rsp)
  213c9e: 31 c0                        	xorl	%eax, %eax
  213ca0: 48 83 c2 10                  	addq	$16, %rdx
  213ca4: 48 89 b4 24 e0 00 00 00      	movq	%rsi, 224(%rsp)
  213cac: 48 89 84 24 68 01 00 00      	movq	%rax, 360(%rsp)
  213cb4: 31 c0                        	xorl	%eax, %eax
  213cb6: 48 89 94 24 b8 02 00 00      	movq	%rdx, 696(%rsp)
  213cbe: 31 d2                        	xorl	%edx, %edx
  213cc0: 48 89 84 24 b0 01 00 00      	movq	%rax, 432(%rsp)
  213cc8: 31 c0                        	xorl	%eax, %eax
  213cca: 48 89 54 24 68               	movq	%rdx, 104(%rsp)
  213ccf: 31 d2                        	xorl	%edx, %edx
  213cd1: 48 89 84 24 a8 01 00 00      	movq	%rax, 424(%rsp)
  213cd9: 31 c0                        	xorl	%eax, %eax
  213cdb: 48 89 54 24 50               	movq	%rdx, 80(%rsp)
  213ce0: 31 d2                        	xorl	%edx, %edx
  213ce2: 48 89 84 24 50 01 00 00      	movq	%rax, 336(%rsp)
  213cea: 31 c0                        	xorl	%eax, %eax
  213cec: 48 89 94 24 a0 00 00 00      	movq	%rdx, 160(%rsp)
  213cf4: 31 d2                        	xorl	%edx, %edx
  213cf6: 48 89 84 24 d0 01 00 00      	movq	%rax, 464(%rsp)
  213cfe: 31 c0                        	xorl	%eax, %eax
  213d00: 48 89 84 24 c8 01 00 00      	movq	%rax, 456(%rsp)
  213d08: 31 c0                        	xorl	%eax, %eax
  213d0a: 48 89 84 24 c0 01 00 00      	movq	%rax, 448(%rsp)
  213d12: 31 c0                        	xorl	%eax, %eax
  213d14: 48 89 44 24 08               	movq	%rax, 8(%rsp)
  213d19: 31 c0                        	xorl	%eax, %eax
  213d1b: eb 1c                        	jmp	0x213d39 <debug.printSourceAtAddress__anon_4447+0x979>
  213d1d: 0f 1f 00                     	nopl	(%rax)
  213d20: 4c 8b 64 24 28               	movq	40(%rsp), %r12
  213d25: 48 ff c7                     	incq	%rdi
  213d28: 4c 8d ac 24 20 15 00 00      	leaq	5408(%rsp), %r13
  213d30: 48 39 ef                     	cmpq	%rbp, %rdi
  213d33: 0f 84 1d 09 00 00            	je	0x214656 <debug.printSourceAtAddress__anon_4447+0x1296>
  213d39: 48 89 fb                     	movq	%rdi, %rbx
  213d3c: 48 c1 e3 06                  	shlq	$6, %rbx
  213d40: 83 7c 19 04 00               	cmpl	$0, 4(%rcx,%rbx)
  213d45: 74 de                        	je	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  213d47: 48 01 cb                     	addq	%rcx, %rbx
  213d4a: 4d 89 c7                     	movq	%r8, %r15
  213d4d: 44 8b 23                     	movl	(%rbx), %r12d
  213d50: 4b 8d 34 26                  	leaq	(%r14,%r12), %rsi
  213d54: 4d 29 e7                     	subq	%r12, %r15
  213d57: 0f 82 92 46 00 00            	jb	0x2183ef <debug.printSourceAtAddress__anon_4447+0x502f>
  213d5d: 74 c1                        	je	0x213d20 <debug.printSourceAtAddress__anon_4447+0x960>
  213d5f: 4c 8b 64 24 28               	movq	40(%rsp), %r12
  213d64: 45 31 ed                     	xorl	%r13d, %r13d
  213d67: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
  213d70: 42 80 3c 2e 00               	cmpb	$0, (%rsi,%r13)
  213d75: 74 0d                        	je	0x213d84 <debug.printSourceAtAddress__anon_4447+0x9c4>
  213d77: 49 ff c5                     	incq	%r13
  213d7a: 4d 39 ef                     	cmpq	%r13, %r15
  213d7d: 75 f1                        	jne	0x213d70 <debug.printSourceAtAddress__anon_4447+0x9b0>
  213d7f: 4d 89 fd                     	movq	%r15, %r13
  213d82: eb 09                        	jmp	0x213d8d <debug.printSourceAtAddress__anon_4447+0x9cd>
  213d84: 4d 39 fd                     	cmpq	%r15, %r13
  213d87: 0f 87 1f 43 00 00            	ja	0x2180ac <debug.printSourceAtAddress__anon_4447+0x4cec>
  213d8d: 4d 8d 7d f6                  	leaq	-10(%r13), %r15
  213d91: 49 83 ff 08                  	cmpq	$8, %r15
  213d95: 77 8e                        	ja	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  213d97: 42 ff 24 fd f0 0d 20 00      	jmpq	*2100720(,%r15,8)
  213d9f: 48 81 fe c8 1e 20 00         	cmpq	$2105032, %rsi          # imm = 0x201EC8
  213da6: 74 63                        	je	0x213e0b <debug.printSourceAtAddress__anon_4447+0xa4b>
  213da8: 80 3e 2e                     	cmpb	$46, (%rsi)
  213dab: 0f 85 74 ff ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  213db1: 80 7e 01 64                  	cmpb	$100, 1(%rsi)
  213db5: 0f 85 6a ff ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  213dbb: 80 7e 02 65                  	cmpb	$101, 2(%rsi)
  213dbf: 0f 85 60 ff ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  213dc5: 80 7e 03 62                  	cmpb	$98, 3(%rsi)
  213dc9: 0f 85 56 ff ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  213dcf: 80 7e 04 75                  	cmpb	$117, 4(%rsi)
  213dd3: 0f 85 4c ff ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  213dd9: 80 7e 05 67                  	cmpb	$103, 5(%rsi)
  213ddd: 0f 85 42 ff ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  213de3: 80 7e 06 5f                  	cmpb	$95, 6(%rsi)
  213de7: 0f 85 38 ff ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  213ded: 80 7e 07 73                  	cmpb	$115, 7(%rsi)
  213df1: 0f 85 2e ff ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  213df7: 80 7e 08 74                  	cmpb	$116, 8(%rsi)
  213dfb: 0f 85 24 ff ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  213e01: 80 7e 09 72                  	cmpb	$114, 9(%rsi)
  213e05: 0f 85 1a ff ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  213e0b: 48 8b 73 18                  	movq	24(%rbx), %rsi
  213e0f: 4c 8b 53 20                  	movq	32(%rbx), %r10
  213e13: 49 01 f2                     	addq	%rsi, %r10
  213e16: 0f 82 06 3b 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  213e1c: 4c 3b 54 24 58               	cmpq	88(%rsp), %r10
  213e21: 0f 87 85 42 00 00            	ja	0x2180ac <debug.printSourceAtAddress__anon_4447+0x4cec>
  213e27: 49 29 f2                     	subq	%rsi, %r10
  213e2a: 48 03 74 24 60               	addq	96(%rsp), %rsi
  213e2f: 48 89 74 24 50               	movq	%rsi, 80(%rsp)
  213e34: e9 ec fe ff ff               	jmp	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  213e39: 48 81 fe 58 1f 20 00         	cmpq	$2105176, %rsi          # imm = 0x201F58
  213e40: 74 72                        	je	0x213eb4 <debug.printSourceAtAddress__anon_4447+0xaf4>
  213e42: 44 0f b6 3e                  	movzbl	(%rsi), %r15d
  213e46: 41 80 ff 2e                  	cmpb	$46, %r15b
  213e4a: 0f 85 40 03 00 00            	jne	0x214190 <debug.printSourceAtAddress__anon_4447+0xdd0>
  213e50: 80 7e 01 64                  	cmpb	$100, 1(%rsi)
  213e54: 0f 85 64 03 00 00            	jne	0x2141be <debug.printSourceAtAddress__anon_4447+0xdfe>
  213e5a: 80 7e 02 65                  	cmpb	$101, 2(%rsi)
  213e5e: 0f 85 5a 03 00 00            	jne	0x2141be <debug.printSourceAtAddress__anon_4447+0xdfe>
  213e64: 80 7e 03 62                  	cmpb	$98, 3(%rsi)
  213e68: 0f 85 50 03 00 00            	jne	0x2141be <debug.printSourceAtAddress__anon_4447+0xdfe>
  213e6e: 80 7e 04 75                  	cmpb	$117, 4(%rsi)
  213e72: 0f 85 46 03 00 00            	jne	0x2141be <debug.printSourceAtAddress__anon_4447+0xdfe>
  213e78: 80 7e 05 67                  	cmpb	$103, 5(%rsi)
  213e7c: 0f 85 3c 03 00 00            	jne	0x2141be <debug.printSourceAtAddress__anon_4447+0xdfe>
  213e82: 80 7e 06 5f                  	cmpb	$95, 6(%rsi)
  213e86: 0f 85 32 03 00 00            	jne	0x2141be <debug.printSourceAtAddress__anon_4447+0xdfe>
  213e8c: 80 7e 07 69                  	cmpb	$105, 7(%rsi)
  213e90: 0f 85 28 03 00 00            	jne	0x2141be <debug.printSourceAtAddress__anon_4447+0xdfe>
  213e96: 80 7e 08 6e                  	cmpb	$110, 8(%rsi)
  213e9a: 0f 85 1e 03 00 00            	jne	0x2141be <debug.printSourceAtAddress__anon_4447+0xdfe>
  213ea0: 80 7e 09 66                  	cmpb	$102, 9(%rsi)
  213ea4: 0f 85 14 03 00 00            	jne	0x2141be <debug.printSourceAtAddress__anon_4447+0xdfe>
  213eaa: 80 7e 0a 6f                  	cmpb	$111, 10(%rsi)
  213eae: 0f 85 0a 03 00 00            	jne	0x2141be <debug.printSourceAtAddress__anon_4447+0xdfe>
  213eb4: 48 8b 73 18                  	movq	24(%rbx), %rsi
  213eb8: 48 8b 43 20                  	movq	32(%rbx), %rax
  213ebc: 48 01 f0                     	addq	%rsi, %rax
  213ebf: 0f 82 5d 3a 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  213ec5: 48 3b 44 24 58               	cmpq	88(%rsp), %rax
  213eca: 0f 87 dc 41 00 00            	ja	0x2180ac <debug.printSourceAtAddress__anon_4447+0x4cec>
  213ed0: 48 29 f0                     	subq	%rsi, %rax
  213ed3: 48 03 74 24 60               	addq	96(%rsp), %rsi
  213ed8: 48 89 74 24 08               	movq	%rsi, 8(%rsp)
  213edd: e9 43 fe ff ff               	jmp	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  213ee2: 48 81 fe 73 1d 20 00         	cmpq	$2104691, %rsi          # imm = 0x201D73
  213ee9: 0f 84 86 00 00 00            	je	0x213f75 <debug.printSourceAtAddress__anon_4447+0xbb5>
  213eef: 80 3e 2e                     	cmpb	$46, (%rsi)
  213ef2: 0f 85 86 02 00 00            	jne	0x21417e <debug.printSourceAtAddress__anon_4447+0xdbe>
  213ef8: 44 0f b6 7e 01               	movzbl	1(%rsi), %r15d
  213efd: 41 80 ff 64                  	cmpb	$100, %r15b
  213f01: 0f 85 77 02 00 00            	jne	0x21417e <debug.printSourceAtAddress__anon_4447+0xdbe>
  213f07: 80 7e 02 65                  	cmpb	$101, 2(%rsi)
  213f0b: 0f 85 25 05 00 00            	jne	0x214436 <debug.printSourceAtAddress__anon_4447+0x1076>
  213f11: 80 7e 03 62                  	cmpb	$98, 3(%rsi)
  213f15: 0f 85 1b 05 00 00            	jne	0x214436 <debug.printSourceAtAddress__anon_4447+0x1076>
  213f1b: 80 7e 04 75                  	cmpb	$117, 4(%rsi)
  213f1f: 0f 85 11 05 00 00            	jne	0x214436 <debug.printSourceAtAddress__anon_4447+0x1076>
  213f25: 80 7e 05 67                  	cmpb	$103, 5(%rsi)
  213f29: 0f 85 07 05 00 00            	jne	0x214436 <debug.printSourceAtAddress__anon_4447+0x1076>
  213f2f: 80 7e 06 5f                  	cmpb	$95, 6(%rsi)
  213f33: 0f 85 fd 04 00 00            	jne	0x214436 <debug.printSourceAtAddress__anon_4447+0x1076>
  213f39: 80 7e 07 61                  	cmpb	$97, 7(%rsi)
  213f3d: 0f 85 f3 04 00 00            	jne	0x214436 <debug.printSourceAtAddress__anon_4447+0x1076>
  213f43: 80 7e 08 62                  	cmpb	$98, 8(%rsi)
  213f47: 0f 85 e9 04 00 00            	jne	0x214436 <debug.printSourceAtAddress__anon_4447+0x1076>
  213f4d: 80 7e 09 62                  	cmpb	$98, 9(%rsi)
  213f51: 0f 85 df 04 00 00            	jne	0x214436 <debug.printSourceAtAddress__anon_4447+0x1076>
  213f57: 80 7e 0a 72                  	cmpb	$114, 10(%rsi)
  213f5b: 0f 85 d5 04 00 00            	jne	0x214436 <debug.printSourceAtAddress__anon_4447+0x1076>
  213f61: 80 7e 0b 65                  	cmpb	$101, 11(%rsi)
  213f65: 0f 85 cb 04 00 00            	jne	0x214436 <debug.printSourceAtAddress__anon_4447+0x1076>
  213f6b: 80 7e 0c 76                  	cmpb	$118, 12(%rsi)
  213f6f: 0f 85 c1 04 00 00            	jne	0x214436 <debug.printSourceAtAddress__anon_4447+0x1076>
  213f75: 48 8b 73 18                  	movq	24(%rbx), %rsi
  213f79: 4c 8b 5b 20                  	movq	32(%rbx), %r11
  213f7d: 49 01 f3                     	addq	%rsi, %r11
  213f80: 0f 82 9c 39 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  213f86: 4c 3b 5c 24 58               	cmpq	88(%rsp), %r11
  213f8b: 0f 87 1b 41 00 00            	ja	0x2180ac <debug.printSourceAtAddress__anon_4447+0x4cec>
  213f91: 49 29 f3                     	subq	%rsi, %r11
  213f94: 48 03 74 24 60               	addq	96(%rsp), %rsi
  213f99: 48 89 74 24 68               	movq	%rsi, 104(%rsp)
  213f9e: e9 82 fd ff ff               	jmp	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  213fa3: 48 81 fe d3 1e 20 00         	cmpq	$2105043, %rsi          # imm = 0x201ED3
  213faa: 0f 84 9f 00 00 00            	je	0x21404f <debug.printSourceAtAddress__anon_4447+0xc8f>
  213fb0: 44 0f b6 2e                  	movzbl	(%rsi), %r13d
  213fb4: 41 80 fd 2e                  	cmpb	$46, %r13b
  213fb8: 0f 85 e1 01 00 00            	jne	0x21419f <debug.printSourceAtAddress__anon_4447+0xddf>
  213fbe: 44 0f b6 7e 01               	movzbl	1(%rsi), %r15d
  213fc3: 41 80 ff 64                  	cmpb	$100, %r15b
  213fc7: 0f 85 db 02 00 00            	jne	0x2142a8 <debug.printSourceAtAddress__anon_4447+0xee8>
  213fcd: 80 7e 02 65                  	cmpb	$101, 2(%rsi)
  213fd1: 0f 85 e0 02 00 00            	jne	0x2142b7 <debug.printSourceAtAddress__anon_4447+0xef7>
  213fd7: 80 7e 03 62                  	cmpb	$98, 3(%rsi)
  213fdb: 0f 85 d6 02 00 00            	jne	0x2142b7 <debug.printSourceAtAddress__anon_4447+0xef7>
  213fe1: 80 7e 04 75                  	cmpb	$117, 4(%rsi)
  213fe5: 0f 85 cc 02 00 00            	jne	0x2142b7 <debug.printSourceAtAddress__anon_4447+0xef7>
  213feb: 80 7e 05 67                  	cmpb	$103, 5(%rsi)
  213fef: 0f 85 c2 02 00 00            	jne	0x2142b7 <debug.printSourceAtAddress__anon_4447+0xef7>
  213ff5: 80 7e 06 5f                  	cmpb	$95, 6(%rsi)
  213ff9: 0f 85 b8 02 00 00            	jne	0x2142b7 <debug.printSourceAtAddress__anon_4447+0xef7>
  213fff: 80 7e 07 6c                  	cmpb	$108, 7(%rsi)
  214003: 0f 85 ae 02 00 00            	jne	0x2142b7 <debug.printSourceAtAddress__anon_4447+0xef7>
  214009: 80 7e 08 69                  	cmpb	$105, 8(%rsi)
  21400d: 0f 85 a4 02 00 00            	jne	0x2142b7 <debug.printSourceAtAddress__anon_4447+0xef7>
  214013: 80 7e 09 6e                  	cmpb	$110, 9(%rsi)
  214017: 0f 85 9a 02 00 00            	jne	0x2142b7 <debug.printSourceAtAddress__anon_4447+0xef7>
  21401d: 80 7e 0a 65                  	cmpb	$101, 10(%rsi)
  214021: 0f 85 90 02 00 00            	jne	0x2142b7 <debug.printSourceAtAddress__anon_4447+0xef7>
  214027: 80 7e 0b 5f                  	cmpb	$95, 11(%rsi)
  21402b: 0f 85 86 02 00 00            	jne	0x2142b7 <debug.printSourceAtAddress__anon_4447+0xef7>
  214031: 80 7e 0c 73                  	cmpb	$115, 12(%rsi)
  214035: 0f 85 7c 02 00 00            	jne	0x2142b7 <debug.printSourceAtAddress__anon_4447+0xef7>
  21403b: 80 7e 0d 74                  	cmpb	$116, 13(%rsi)
  21403f: 0f 85 72 02 00 00            	jne	0x2142b7 <debug.printSourceAtAddress__anon_4447+0xef7>
  214045: 80 7e 0e 72                  	cmpb	$114, 14(%rsi)
  214049: 0f 85 68 02 00 00            	jne	0x2142b7 <debug.printSourceAtAddress__anon_4447+0xef7>
  21404f: 48 8b 73 18                  	movq	24(%rbx), %rsi
  214053: 48 8b 5b 20                  	movq	32(%rbx), %rbx
  214057: 48 01 f3                     	addq	%rsi, %rbx
  21405a: 0f 82 c2 38 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  214060: 48 3b 5c 24 58               	cmpq	88(%rsp), %rbx
  214065: 0f 87 41 40 00 00            	ja	0x2180ac <debug.printSourceAtAddress__anon_4447+0x4cec>
  21406b: 48 29 f3                     	subq	%rsi, %rbx
  21406e: 48 03 74 24 60               	addq	96(%rsp), %rsi
  214073: 48 89 9c 24 e0 00 00 00      	movq	%rbx, 224(%rsp)
  21407b: 48 89 b4 24 c8 00 00 00      	movq	%rsi, 200(%rsp)
  214083: e9 9d fc ff ff               	jmp	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  214088: 48 81 fe 35 1e 20 00         	cmpq	$2104885, %rsi          # imm = 0x201E35
  21408f: 0f 84 b8 00 00 00            	je	0x21414d <debug.printSourceAtAddress__anon_4447+0xd8d>
  214095: 80 3e 2e                     	cmpb	$46, (%rsi)
  214098: 0f 85 87 fc ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  21409e: 80 7e 01 64                  	cmpb	$100, 1(%rsi)
  2140a2: 0f 85 7d fc ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  2140a8: 80 7e 02 65                  	cmpb	$101, 2(%rsi)
  2140ac: 0f 85 73 fc ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  2140b2: 80 7e 03 62                  	cmpb	$98, 3(%rsi)
  2140b6: 0f 85 69 fc ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  2140bc: 80 7e 04 75                  	cmpb	$117, 4(%rsi)
  2140c0: 0f 85 5f fc ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  2140c6: 80 7e 05 67                  	cmpb	$103, 5(%rsi)
  2140ca: 0f 85 55 fc ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  2140d0: 80 7e 06 5f                  	cmpb	$95, 6(%rsi)
  2140d4: 0f 85 4b fc ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  2140da: 80 7e 07 73                  	cmpb	$115, 7(%rsi)
  2140de: 0f 85 41 fc ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  2140e4: 80 7e 08 74                  	cmpb	$116, 8(%rsi)
  2140e8: 0f 85 37 fc ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  2140ee: 80 7e 09 72                  	cmpb	$114, 9(%rsi)
  2140f2: 0f 85 2d fc ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  2140f8: 80 7e 0a 5f                  	cmpb	$95, 10(%rsi)
  2140fc: 0f 85 23 fc ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  214102: 80 7e 0b 6f                  	cmpb	$111, 11(%rsi)
  214106: 0f 85 19 fc ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  21410c: 80 7e 0c 66                  	cmpb	$102, 12(%rsi)
  214110: 0f 85 0a fc ff ff            	jne	0x213d20 <debug.printSourceAtAddress__anon_4447+0x960>
  214116: 80 7e 0d 66                  	cmpb	$102, 13(%rsi)
  21411a: 0f 85 00 fc ff ff            	jne	0x213d20 <debug.printSourceAtAddress__anon_4447+0x960>
  214120: 80 7e 0e 73                  	cmpb	$115, 14(%rsi)
  214124: 0f 85 f6 fb ff ff            	jne	0x213d20 <debug.printSourceAtAddress__anon_4447+0x960>
  21412a: 80 7e 0f 65                  	cmpb	$101, 15(%rsi)
  21412e: 0f 85 ec fb ff ff            	jne	0x213d20 <debug.printSourceAtAddress__anon_4447+0x960>
  214134: 80 7e 10 74                  	cmpb	$116, 16(%rsi)
  214138: 0f 85 e2 fb ff ff            	jne	0x213d20 <debug.printSourceAtAddress__anon_4447+0x960>
  21413e: 80 7e 11 73                  	cmpb	$115, 17(%rsi)
  214142: 4c 8b 64 24 28               	movq	40(%rsp), %r12
  214147: 0f 85 d8 fb ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  21414d: 48 8b 73 18                  	movq	24(%rbx), %rsi
  214151: 48 8b 53 20                  	movq	32(%rbx), %rdx
  214155: 48 01 f2                     	addq	%rsi, %rdx
  214158: 0f 82 c4 37 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  21415e: 48 3b 54 24 58               	cmpq	88(%rsp), %rdx
  214163: 0f 87 43 3f 00 00            	ja	0x2180ac <debug.printSourceAtAddress__anon_4447+0x4cec>
  214169: 48 29 f2                     	subq	%rsi, %rdx
  21416c: 48 03 74 24 60               	addq	96(%rsp), %rsi
  214171: 48 89 b4 24 a0 00 00 00      	movq	%rsi, 160(%rsp)
  214179: e9 a7 fb ff ff               	jmp	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  21417e: 48 81 fe 7e 1e 20 00         	cmpq	$2104958, %rsi          # imm = 0x201E7E
  214185: 0f 85 9a fb ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  21418b: e9 2c 03 00 00               	jmp	0x2144bc <debug.printSourceAtAddress__anon_4447+0x10fc>
  214190: 48 81 fe c8 21 20 00         	cmpq	$2105800, %rsi          # imm = 0x2021C8
  214197: 0f 85 a5 00 00 00            	jne	0x214242 <debug.printSourceAtAddress__anon_4447+0xe82>
  21419d: eb 6a                        	jmp	0x214209 <debug.printSourceAtAddress__anon_4447+0xe49>
  21419f: 48 81 fe 09 1e 20 00         	cmpq	$2104841, %rsi          # imm = 0x201E09
  2141a6: 0f 84 70 01 00 00            	je	0x21431c <debug.printSourceAtAddress__anon_4447+0xf5c>
  2141ac: 48 81 fe f9 1d 20 00         	cmpq	$2104825, %rsi          # imm = 0x201DF9
  2141b3: 0f 85 6c fb ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  2141b9: e9 3f 02 00 00               	jmp	0x2143fd <debug.printSourceAtAddress__anon_4447+0x103d>
  2141be: 48 81 fe c8 21 20 00         	cmpq	$2105800, %rsi          # imm = 0x2021C8
  2141c5: 74 42                        	je	0x214209 <debug.printSourceAtAddress__anon_4447+0xe49>
  2141c7: 41 80 ff 2e                  	cmpb	$46, %r15b
  2141cb: 75 75                        	jne	0x214242 <debug.printSourceAtAddress__anon_4447+0xe82>
  2141cd: 80 7e 01 64                  	cmpb	$100, 1(%rsi)
  2141d1: 75 6f                        	jne	0x214242 <debug.printSourceAtAddress__anon_4447+0xe82>
  2141d3: 80 7e 02 65                  	cmpb	$101, 2(%rsi)
  2141d7: 75 69                        	jne	0x214242 <debug.printSourceAtAddress__anon_4447+0xe82>
  2141d9: 80 7e 03 62                  	cmpb	$98, 3(%rsi)
  2141dd: 75 63                        	jne	0x214242 <debug.printSourceAtAddress__anon_4447+0xe82>
  2141df: 80 7e 04 75                  	cmpb	$117, 4(%rsi)
  2141e3: 75 5d                        	jne	0x214242 <debug.printSourceAtAddress__anon_4447+0xe82>
  2141e5: 80 7e 05 67                  	cmpb	$103, 5(%rsi)
  2141e9: 75 57                        	jne	0x214242 <debug.printSourceAtAddress__anon_4447+0xe82>
  2141eb: 80 7e 06 5f                  	cmpb	$95, 6(%rsi)
  2141ef: 75 51                        	jne	0x214242 <debug.printSourceAtAddress__anon_4447+0xe82>
  2141f1: 80 7e 07 6c                  	cmpb	$108, 7(%rsi)
  2141f5: 75 4b                        	jne	0x214242 <debug.printSourceAtAddress__anon_4447+0xe82>
  2141f7: 80 7e 08 69                  	cmpb	$105, 8(%rsi)
  2141fb: 75 45                        	jne	0x214242 <debug.printSourceAtAddress__anon_4447+0xe82>
  2141fd: 80 7e 09 6e                  	cmpb	$110, 9(%rsi)
  214201: 75 3f                        	jne	0x214242 <debug.printSourceAtAddress__anon_4447+0xe82>
  214203: 80 7e 0a 65                  	cmpb	$101, 10(%rsi)
  214207: 75 39                        	jne	0x214242 <debug.printSourceAtAddress__anon_4447+0xe82>
  214209: 48 8b 73 18                  	movq	24(%rbx), %rsi
  21420d: 48 8b 5b 20                  	movq	32(%rbx), %rbx
  214211: 48 01 f3                     	addq	%rsi, %rbx
  214214: 0f 82 08 37 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  21421a: 48 3b 5c 24 58               	cmpq	88(%rsp), %rbx
  21421f: 0f 87 87 3e 00 00            	ja	0x2180ac <debug.printSourceAtAddress__anon_4447+0x4cec>
  214225: 48 29 f3                     	subq	%rsi, %rbx
  214228: 48 03 74 24 60               	addq	96(%rsp), %rsi
  21422d: 48 89 9c 24 b8 01 00 00      	movq	%rbx, 440(%rsp)
  214235: 48 89 b4 24 60 01 00 00      	movq	%rsi, 352(%rsp)
  21423d: e9 e3 fa ff ff               	jmp	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  214242: 48 81 fe 40 1f 20 00         	cmpq	$2105152, %rsi          # imm = 0x201F40
  214249: 74 1f                        	je	0x21426a <debug.printSourceAtAddress__anon_4447+0xeaa>
  21424b: 45 31 ff                     	xorl	%r15d, %r15d
  21424e: 66 90                        	nop
  214250: 46 0f b6 24 3e               	movzbl	(%rsi,%r15), %r12d
  214255: 45 3a a7 40 1f 20 00         	cmpb	2105152(%r15), %r12b
  21425c: 0f 85 93 02 00 00            	jne	0x2144f5 <debug.printSourceAtAddress__anon_4447+0x1135>
  214262: 49 ff c7                     	incq	%r15
  214265: 4d 39 fd                     	cmpq	%r15, %r13
  214268: 75 e6                        	jne	0x214250 <debug.printSourceAtAddress__anon_4447+0xe90>
  21426a: 4c 8b 7b 18                  	movq	24(%rbx), %r15
  21426e: 48 8b 73 20                  	movq	32(%rbx), %rsi
  214272: 4c 01 fe                     	addq	%r15, %rsi
  214275: 0f 82 a7 36 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  21427b: 4c 8b 64 24 28               	movq	40(%rsp), %r12
  214280: 48 3b 74 24 58               	cmpq	88(%rsp), %rsi
  214285: 0f 87 21 3e 00 00            	ja	0x2180ac <debug.printSourceAtAddress__anon_4447+0x4cec>
  21428b: 4c 29 fe                     	subq	%r15, %rsi
  21428e: 4c 03 7c 24 60               	addq	96(%rsp), %r15
  214293: 48 89 b4 24 70 01 00 00      	movq	%rsi, 368(%rsp)
  21429b: 4c 89 bc 24 68 01 00 00      	movq	%r15, 360(%rsp)
  2142a3: e9 7d fa ff ff               	jmp	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  2142a8: 48 81 fe 09 1e 20 00         	cmpq	$2104841, %rsi          # imm = 0x201E09
  2142af: 0f 85 a0 00 00 00            	jne	0x214355 <debug.printSourceAtAddress__anon_4447+0xf95>
  2142b5: eb 65                        	jmp	0x21431c <debug.printSourceAtAddress__anon_4447+0xf5c>
  2142b7: 48 81 fe 09 1e 20 00         	cmpq	$2104841, %rsi          # imm = 0x201E09
  2142be: 74 5c                        	je	0x21431c <debug.printSourceAtAddress__anon_4447+0xf5c>
  2142c0: 41 80 ff 64                  	cmpb	$100, %r15b
  2142c4: 0f 85 8b 00 00 00            	jne	0x214355 <debug.printSourceAtAddress__anon_4447+0xf95>
  2142ca: 80 7e 02 65                  	cmpb	$101, 2(%rsi)
  2142ce: 0f 85 81 00 00 00            	jne	0x214355 <debug.printSourceAtAddress__anon_4447+0xf95>
  2142d4: 80 7e 03 62                  	cmpb	$98, 3(%rsi)
  2142d8: 75 7b                        	jne	0x214355 <debug.printSourceAtAddress__anon_4447+0xf95>
  2142da: 80 7e 04 75                  	cmpb	$117, 4(%rsi)
  2142de: 75 75                        	jne	0x214355 <debug.printSourceAtAddress__anon_4447+0xf95>
  2142e0: 80 7e 05 67                  	cmpb	$103, 5(%rsi)
  2142e4: 75 6f                        	jne	0x214355 <debug.printSourceAtAddress__anon_4447+0xf95>
  2142e6: 80 7e 06 5f                  	cmpb	$95, 6(%rsi)
  2142ea: 75 69                        	jne	0x214355 <debug.printSourceAtAddress__anon_4447+0xf95>
  2142ec: 80 7e 07 6c                  	cmpb	$108, 7(%rsi)
  2142f0: 75 63                        	jne	0x214355 <debug.printSourceAtAddress__anon_4447+0xf95>
  2142f2: 80 7e 08 6f                  	cmpb	$111, 8(%rsi)
  2142f6: 75 5d                        	jne	0x214355 <debug.printSourceAtAddress__anon_4447+0xf95>
  2142f8: 80 7e 09 63                  	cmpb	$99, 9(%rsi)
  2142fc: 75 57                        	jne	0x214355 <debug.printSourceAtAddress__anon_4447+0xf95>
  2142fe: 80 7e 0a 6c                  	cmpb	$108, 10(%rsi)
  214302: 75 51                        	jne	0x214355 <debug.printSourceAtAddress__anon_4447+0xf95>
  214304: 80 7e 0b 69                  	cmpb	$105, 11(%rsi)
  214308: 75 4b                        	jne	0x214355 <debug.printSourceAtAddress__anon_4447+0xf95>
  21430a: 80 7e 0c 73                  	cmpb	$115, 12(%rsi)
  21430e: 75 45                        	jne	0x214355 <debug.printSourceAtAddress__anon_4447+0xf95>
  214310: 80 7e 0d 74                  	cmpb	$116, 13(%rsi)
  214314: 75 3f                        	jne	0x214355 <debug.printSourceAtAddress__anon_4447+0xf95>
  214316: 80 7e 0e 73                  	cmpb	$115, 14(%rsi)
  21431a: 75 39                        	jne	0x214355 <debug.printSourceAtAddress__anon_4447+0xf95>
  21431c: 4c 8b 7b 18                  	movq	24(%rbx), %r15
  214320: 48 8b 73 20                  	movq	32(%rbx), %rsi
  214324: 4c 01 fe                     	addq	%r15, %rsi
  214327: 0f 82 f5 35 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  21432d: 48 3b 74 24 58               	cmpq	88(%rsp), %rsi
  214332: 0f 87 74 3d 00 00            	ja	0x2180ac <debug.printSourceAtAddress__anon_4447+0x4cec>
  214338: 4c 29 fe                     	subq	%r15, %rsi
  21433b: 4c 03 7c 24 60               	addq	96(%rsp), %r15
  214340: 48 89 b4 24 50 01 00 00      	movq	%rsi, 336(%rsp)
  214348: 4c 89 bc 24 d0 01 00 00      	movq	%r15, 464(%rsp)
  214350: e9 d0 f9 ff ff               	jmp	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  214355: 48 81 fe f9 1d 20 00         	cmpq	$2104825, %rsi          # imm = 0x201DF9
  21435c: 0f 84 9b 00 00 00            	je	0x2143fd <debug.printSourceAtAddress__anon_4447+0x103d>
  214362: 41 80 fd 2e                  	cmpb	$46, %r13b
  214366: 0f 85 b9 f9 ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  21436c: 80 7e 01 64                  	cmpb	$100, 1(%rsi)
  214370: 0f 85 af f9 ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  214376: 80 7e 02 65                  	cmpb	$101, 2(%rsi)
  21437a: 0f 85 a5 f9 ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  214380: 80 7e 03 62                  	cmpb	$98, 3(%rsi)
  214384: 0f 85 9b f9 ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  21438a: 80 7e 04 75                  	cmpb	$117, 4(%rsi)
  21438e: 0f 85 91 f9 ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  214394: 80 7e 05 67                  	cmpb	$103, 5(%rsi)
  214398: 0f 85 87 f9 ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  21439e: 80 7e 06 5f                  	cmpb	$95, 6(%rsi)
  2143a2: 0f 85 7d f9 ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  2143a8: 80 7e 07 72                  	cmpb	$114, 7(%rsi)
  2143ac: 0f 85 73 f9 ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  2143b2: 80 7e 08 6e                  	cmpb	$110, 8(%rsi)
  2143b6: 0f 85 69 f9 ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  2143bc: 80 7e 09 67                  	cmpb	$103, 9(%rsi)
  2143c0: 0f 85 5f f9 ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  2143c6: 80 7e 0a 6c                  	cmpb	$108, 10(%rsi)
  2143ca: 0f 85 50 f9 ff ff            	jne	0x213d20 <debug.printSourceAtAddress__anon_4447+0x960>
  2143d0: 80 7e 0b 69                  	cmpb	$105, 11(%rsi)
  2143d4: 0f 85 46 f9 ff ff            	jne	0x213d20 <debug.printSourceAtAddress__anon_4447+0x960>
  2143da: 80 7e 0c 73                  	cmpb	$115, 12(%rsi)
  2143de: 0f 85 3c f9 ff ff            	jne	0x213d20 <debug.printSourceAtAddress__anon_4447+0x960>
  2143e4: 80 7e 0d 74                  	cmpb	$116, 13(%rsi)
  2143e8: 0f 85 32 f9 ff ff            	jne	0x213d20 <debug.printSourceAtAddress__anon_4447+0x960>
  2143ee: 80 7e 0e 73                  	cmpb	$115, 14(%rsi)
  2143f2: 4c 8b 64 24 28               	movq	40(%rsp), %r12
  2143f7: 0f 85 28 f9 ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  2143fd: 4c 8b 7b 18                  	movq	24(%rbx), %r15
  214401: 48 8b 73 20                  	movq	32(%rbx), %rsi
  214405: 4c 01 fe                     	addq	%r15, %rsi
  214408: 0f 82 14 35 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  21440e: 48 3b 74 24 58               	cmpq	88(%rsp), %rsi
  214413: 0f 87 93 3c 00 00            	ja	0x2180ac <debug.printSourceAtAddress__anon_4447+0x4cec>
  214419: 4c 29 fe                     	subq	%r15, %rsi
  21441c: 4c 03 7c 24 60               	addq	96(%rsp), %r15
  214421: 48 89 b4 24 b0 01 00 00      	movq	%rsi, 432(%rsp)
  214429: 4c 89 bc 24 a8 01 00 00      	movq	%r15, 424(%rsp)
  214431: e9 ef f8 ff ff               	jmp	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  214436: 48 81 fe 7e 1e 20 00         	cmpq	$2104958, %rsi          # imm = 0x201E7E
  21443d: 74 7d                        	je	0x2144bc <debug.printSourceAtAddress__anon_4447+0x10fc>
  21443f: 41 80 ff 64                  	cmpb	$100, %r15b
  214443: 0f 85 dc f8 ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  214449: 80 7e 02 65                  	cmpb	$101, 2(%rsi)
  21444d: 0f 85 d2 f8 ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  214453: 80 7e 03 62                  	cmpb	$98, 3(%rsi)
  214457: 0f 85 c8 f8 ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  21445d: 80 7e 04 75                  	cmpb	$117, 4(%rsi)
  214461: 0f 85 be f8 ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  214467: 80 7e 05 67                  	cmpb	$103, 5(%rsi)
  21446b: 0f 85 b4 f8 ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  214471: 80 7e 06 5f                  	cmpb	$95, 6(%rsi)
  214475: 0f 85 aa f8 ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  21447b: 80 7e 07 72                  	cmpb	$114, 7(%rsi)
  21447f: 0f 85 a0 f8 ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  214485: 80 7e 08 61                  	cmpb	$97, 8(%rsi)
  214489: 0f 85 96 f8 ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  21448f: 80 7e 09 6e                  	cmpb	$110, 9(%rsi)
  214493: 0f 85 8c f8 ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  214499: 80 7e 0a 67                  	cmpb	$103, 10(%rsi)
  21449d: 0f 85 7d f8 ff ff            	jne	0x213d20 <debug.printSourceAtAddress__anon_4447+0x960>
  2144a3: 80 7e 0b 65                  	cmpb	$101, 11(%rsi)
  2144a7: 0f 85 73 f8 ff ff            	jne	0x213d20 <debug.printSourceAtAddress__anon_4447+0x960>
  2144ad: 80 7e 0c 73                  	cmpb	$115, 12(%rsi)
  2144b1: 4c 8b 64 24 28               	movq	40(%rsp), %r12
  2144b6: 0f 85 69 f8 ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  2144bc: 4c 8b 7b 18                  	movq	24(%rbx), %r15
  2144c0: 48 8b 73 20                  	movq	32(%rbx), %rsi
  2144c4: 4c 01 fe                     	addq	%r15, %rsi
  2144c7: 0f 82 55 34 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  2144cd: 48 3b 74 24 58               	cmpq	88(%rsp), %rsi
  2144d2: 0f 87 d4 3b 00 00            	ja	0x2180ac <debug.printSourceAtAddress__anon_4447+0x4cec>
  2144d8: 4c 29 fe                     	subq	%r15, %rsi
  2144db: 4c 03 7c 24 60               	addq	96(%rsp), %r15
  2144e0: 48 89 b4 24 c8 01 00 00      	movq	%rsi, 456(%rsp)
  2144e8: 4c 89 bc 24 c0 01 00 00      	movq	%r15, 448(%rsp)
  2144f0: e9 30 f8 ff ff               	jmp	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  2144f5: 4c 8b 64 24 28               	movq	40(%rsp), %r12
  2144fa: 49 83 fd 0c                  	cmpq	$12, %r13
  2144fe: 0f 85 21 f8 ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  214504: 48 81 fe 71 1e 20 00         	cmpq	$2104945, %rsi          # imm = 0x201E71
  21450b: 74 4c                        	je	0x214559 <debug.printSourceAtAddress__anon_4447+0x1199>
  21450d: 44 0f b6 3e                  	movzbl	(%rsi), %r15d
  214511: 41 80 ff 2e                  	cmpb	$46, %r15b
  214515: 75 73                        	jne	0x21458a <debug.printSourceAtAddress__anon_4447+0x11ca>
  214517: 80 7e 01 64                  	cmpb	$100, 1(%rsi)
  21451b: 75 7f                        	jne	0x21459c <debug.printSourceAtAddress__anon_4447+0x11dc>
  21451d: 80 7e 02 65                  	cmpb	$101, 2(%rsi)
  214521: 75 79                        	jne	0x21459c <debug.printSourceAtAddress__anon_4447+0x11dc>
  214523: 80 7e 03 62                  	cmpb	$98, 3(%rsi)
  214527: 75 73                        	jne	0x21459c <debug.printSourceAtAddress__anon_4447+0x11dc>
  214529: 80 7e 04 75                  	cmpb	$117, 4(%rsi)
  21452d: 75 6d                        	jne	0x21459c <debug.printSourceAtAddress__anon_4447+0x11dc>
  21452f: 80 7e 05 67                  	cmpb	$103, 5(%rsi)
  214533: 75 67                        	jne	0x21459c <debug.printSourceAtAddress__anon_4447+0x11dc>
  214535: 80 7e 06 5f                  	cmpb	$95, 6(%rsi)
  214539: 75 61                        	jne	0x21459c <debug.printSourceAtAddress__anon_4447+0x11dc>
  21453b: 80 7e 07 6e                  	cmpb	$110, 7(%rsi)
  21453f: 75 5b                        	jne	0x21459c <debug.printSourceAtAddress__anon_4447+0x11dc>
  214541: 80 7e 08 61                  	cmpb	$97, 8(%rsi)
  214545: 75 55                        	jne	0x21459c <debug.printSourceAtAddress__anon_4447+0x11dc>
  214547: 80 7e 09 6d                  	cmpb	$109, 9(%rsi)
  21454b: 75 4f                        	jne	0x21459c <debug.printSourceAtAddress__anon_4447+0x11dc>
  21454d: 80 7e 0a 65                  	cmpb	$101, 10(%rsi)
  214551: 75 49                        	jne	0x21459c <debug.printSourceAtAddress__anon_4447+0x11dc>
  214553: 80 7e 0b 73                  	cmpb	$115, 11(%rsi)
  214557: 75 43                        	jne	0x21459c <debug.printSourceAtAddress__anon_4447+0x11dc>
  214559: 48 8b 73 18                  	movq	24(%rbx), %rsi
  21455d: 4c 8b 4b 20                  	movq	32(%rbx), %r9
  214561: 49 01 f1                     	addq	%rsi, %r9
  214564: 0f 82 b8 33 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  21456a: 4c 3b 4c 24 58               	cmpq	88(%rsp), %r9
  21456f: 0f 87 37 3b 00 00            	ja	0x2180ac <debug.printSourceAtAddress__anon_4447+0x4cec>
  214575: 49 29 f1                     	subq	%rsi, %r9
  214578: 48 03 74 24 60               	addq	96(%rsp), %rsi
  21457d: 48 89 b4 24 a8 00 00 00      	movq	%rsi, 168(%rsp)
  214585: e9 9b f7 ff ff               	jmp	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  21458a: 48 81 fe d4 21 20 00         	cmpq	$2105812, %rsi          # imm = 0x2021D4
  214591: 0f 85 8e f7 ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  214597: e9 81 00 00 00               	jmp	0x21461d <debug.printSourceAtAddress__anon_4447+0x125d>
  21459c: 48 81 fe d4 21 20 00         	cmpq	$2105812, %rsi          # imm = 0x2021D4
  2145a3: 74 78                        	je	0x21461d <debug.printSourceAtAddress__anon_4447+0x125d>
  2145a5: 41 80 ff 2e                  	cmpb	$46, %r15b
  2145a9: 0f 85 76 f7 ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  2145af: 80 7e 01 64                  	cmpb	$100, 1(%rsi)
  2145b3: 0f 85 6c f7 ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  2145b9: 80 7e 02 65                  	cmpb	$101, 2(%rsi)
  2145bd: 0f 85 62 f7 ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  2145c3: 80 7e 03 62                  	cmpb	$98, 3(%rsi)
  2145c7: 0f 85 58 f7 ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  2145cd: 80 7e 04 75                  	cmpb	$117, 4(%rsi)
  2145d1: 0f 85 4e f7 ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  2145d7: 80 7e 05 67                  	cmpb	$103, 5(%rsi)
  2145db: 0f 85 44 f7 ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  2145e1: 80 7e 06 5f                  	cmpb	$95, 6(%rsi)
  2145e5: 0f 85 3a f7 ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  2145eb: 80 7e 07 66                  	cmpb	$102, 7(%rsi)
  2145ef: 0f 85 30 f7 ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  2145f5: 80 7e 08 72                  	cmpb	$114, 8(%rsi)
  2145f9: 0f 85 26 f7 ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  2145ff: 80 7e 09 61                  	cmpb	$97, 9(%rsi)
  214603: 0f 85 1c f7 ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  214609: 80 7e 0a 6d                  	cmpb	$109, 10(%rsi)
  21460d: 0f 85 12 f7 ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  214613: 80 7e 0b 65                  	cmpb	$101, 11(%rsi)
  214617: 0f 85 08 f7 ff ff            	jne	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  21461d: 4c 8b 7b 18                  	movq	24(%rbx), %r15
  214621: 48 8b 73 20                  	movq	32(%rbx), %rsi
  214625: 4c 01 fe                     	addq	%r15, %rsi
  214628: 0f 82 f4 32 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  21462e: 48 3b 74 24 58               	cmpq	88(%rsp), %rsi
  214633: 0f 87 73 3a 00 00            	ja	0x2180ac <debug.printSourceAtAddress__anon_4447+0x4cec>
  214639: 4c 29 fe                     	subq	%r15, %rsi
  21463c: 4c 03 7c 24 60               	addq	96(%rsp), %r15
  214641: 48 89 b4 24 d8 00 00 00      	movq	%rsi, 216(%rsp)
  214649: 4c 89 bc 24 58 01 00 00      	movq	%r15, 344(%rsp)
  214651: e9 cf f6 ff ff               	jmp	0x213d25 <debug.printSourceAtAddress__anon_4447+0x965>
  214656: 48 8b 74 24 08               	movq	8(%rsp), %rsi
  21465b: 66 bb 18 00                  	movw	$24, %bx
  21465f: c6 84 24 28 06 00 00 01      	movb	$1, 1576(%rsp)
  214667: 48 85 f6                     	testq	%rsi, %rsi
  21466a: 0f 84 8b 2c 00 00            	je	0x2172fb <debug.printSourceAtAddress__anon_4447+0x3f3b>
  214670: 48 8b 4c 24 68               	movq	104(%rsp), %rcx
  214675: 4c 8b 74 24 10               	movq	16(%rsp), %r14
  21467a: 48 8b 6c 24 18               	movq	24(%rsp), %rbp
  21467f: 48 89 b4 24 20 05 00 00      	movq	%rsi, 1312(%rsp)
  214687: 48 89 84 24 28 05 00 00      	movq	%rax, 1320(%rsp)
  21468f: 48 85 c9                     	testq	%rcx, %rcx
  214692: 0f 84 74 38 00 00            	je	0x217f0c <debug.printSourceAtAddress__anon_4447+0x4b4c>
  214698: 48 89 8c 24 30 05 00 00      	movq	%rcx, 1328(%rsp)
  2146a0: 48 8b 4c 24 50               	movq	80(%rsp), %rcx
  2146a5: 4c 89 9c 24 38 05 00 00      	movq	%r11, 1336(%rsp)
  2146ad: 48 85 c9                     	testq	%rcx, %rcx
  2146b0: 0f 84 56 38 00 00            	je	0x217f0c <debug.printSourceAtAddress__anon_4447+0x4b4c>
  2146b6: 48 89 8c 24 40 05 00 00      	movq	%rcx, 1344(%rsp)
  2146be: 48 8b bc 24 a0 00 00 00      	movq	160(%rsp), %rdi
  2146c6: 48 8b 8c 24 60 01 00 00      	movq	352(%rsp), %rcx
  2146ce: 4c 89 94 24 48 05 00 00      	movq	%r10, 1352(%rsp)
  2146d6: 48 89 bc 24 50 05 00 00      	movq	%rdi, 1360(%rsp)
  2146de: 48 89 94 24 58 05 00 00      	movq	%rdx, 1368(%rsp)
  2146e6: 48 85 c9                     	testq	%rcx, %rcx
  2146e9: 0f 84 1d 38 00 00            	je	0x217f0c <debug.printSourceAtAddress__anon_4447+0x4b4c>
  2146ef: 48 8b bc 24 b8 01 00 00      	movq	440(%rsp), %rdi
  2146f7: 48 8b 94 24 c8 00 00 00      	movq	200(%rsp), %rdx
  2146ff: 48 89 8c 24 60 05 00 00      	movq	%rcx, 1376(%rsp)
  214707: c5 f8 10 05 19 ce fe ff      	vmovups	-78311(%rip), %xmm0     # 0x201528 <os.abort__anon_4125+0xb0>
  21470f: 48 8b 0c 24                  	movq	(%rsp), %rcx
  214713: 48 89 bc 24 68 05 00 00      	movq	%rdi, 1384(%rsp)
  21471b: 48 89 94 24 70 05 00 00      	movq	%rdx, 1392(%rsp)
  214723: 48 8b bc 24 e0 00 00 00      	movq	224(%rsp), %rdi
  21472b: 48 8b 94 24 c0 01 00 00      	movq	448(%rsp), %rdx
  214733: 48 89 bc 24 78 05 00 00      	movq	%rdi, 1400(%rsp)
  21473b: 48 89 94 24 80 05 00 00      	movq	%rdx, 1408(%rsp)
  214743: 48 8b bc 24 c8 01 00 00      	movq	456(%rsp), %rdi
  21474b: 48 8b 94 24 d0 01 00 00      	movq	464(%rsp), %rdx
  214753: 48 89 bc 24 88 05 00 00      	movq	%rdi, 1416(%rsp)
  21475b: 48 89 94 24 90 05 00 00      	movq	%rdx, 1424(%rsp)
  214763: 48 8b bc 24 50 01 00 00      	movq	336(%rsp), %rdi
  21476b: 48 8b 94 24 a8 01 00 00      	movq	424(%rsp), %rdx
  214773: 48 89 bc 24 98 05 00 00      	movq	%rdi, 1432(%rsp)
  21477b: 48 89 94 24 a0 05 00 00      	movq	%rdx, 1440(%rsp)
  214783: 48 8b bc 24 b0 01 00 00      	movq	432(%rsp), %rdi
  21478b: 48 8b 94 24 68 01 00 00      	movq	360(%rsp), %rdx
  214793: 48 89 bc 24 a8 05 00 00      	movq	%rdi, 1448(%rsp)
  21479b: 48 89 94 24 b0 05 00 00      	movq	%rdx, 1456(%rsp)
  2147a3: 48 8b bc 24 70 01 00 00      	movq	368(%rsp), %rdi
  2147ab: 48 8b 94 24 a8 00 00 00      	movq	168(%rsp), %rdx
  2147b3: 48 89 bc 24 b8 05 00 00      	movq	%rdi, 1464(%rsp)
  2147bb: 48 89 94 24 c0 05 00 00      	movq	%rdx, 1472(%rsp)
  2147c3: 48 8b bc 24 58 01 00 00      	movq	344(%rsp), %rdi
  2147cb: 48 8b 94 24 d8 00 00 00      	movq	216(%rsp), %rdx
  2147d3: 4c 89 8c 24 c8 05 00 00      	movq	%r9, 1480(%rsp)
  2147db: 48 89 bc 24 d0 05 00 00      	movq	%rdi, 1488(%rsp)
  2147e3: 48 89 94 24 d8 05 00 00      	movq	%rdx, 1496(%rsp)
  2147eb: c5 f8 11 84 24 e0 05 00 00   	vmovups	%xmm0, 1504(%rsp)
  2147f4: c5 f8 10 05 44 cd fe ff      	vmovups	-78524(%rip), %xmm0     # 0x201540 <os.abort__anon_4125+0xc8>
  2147fc: 48 c7 84 24 f0 05 00 00 00 00 00 00  	movq	$0, 1520(%rsp)
  214808: 48 8b 54 24 20               	movq	32(%rsp), %rdx
  21480d: 48 c7 84 24 08 06 00 00 00 00 00 00  	movq	$0, 1544(%rsp)
  214819: c5 f8 11 84 24 f8 05 00 00   	vmovups	%xmm0, 1528(%rsp)
  214822: c5 f8 10 05 2e cd fe ff      	vmovups	-78546(%rip), %xmm0     # 0x201558 <os.abort__anon_4125+0xe0>
  21482a: 48 c7 84 24 20 06 00 00 00 00 00 00  	movq	$0, 1568(%rsp)
  214836: c5 f8 11 84 24 10 06 00 00   	vmovups	%xmm0, 1552(%rsp)
  21483f: 48 8b 09                     	movq	(%rcx), %rcx
  214842: 48 89 b4 24 88 00 00 00      	movq	%rsi, 136(%rsp)
  21484a: 48 8d b4 24 88 00 00 00      	leaq	136(%rsp), %rsi
  214852: 48 89 84 24 90 00 00 00      	movq	%rax, 144(%rsp)
  21485a: 48 c7 84 24 98 00 00 00 00 00 00 00  	movq	$0, 152(%rsp)
  214866: 48 89 b4 24 78 01 00 00      	movq	%rsi, 376(%rsp)
  21486e: c5 f8 10 02                  	vmovups	(%rdx), %xmm0
  214872: 48 89 8c 24 e0 00 00 00      	movq	%rcx, 224(%rsp)
  21487a: 48 8d 4c 24 30               	leaq	48(%rsp), %rcx
  21487f: 48 89 8c 24 48 02 00 00      	movq	%rcx, 584(%rsp)
  214887: 48 c7 84 24 50 02 00 00 10 18 20 00  	movq	$2103312, 592(%rsp) # imm = 0x201810
  214893: c5 f8 29 84 24 20 15 00 00   	vmovaps	%xmm0, 5408(%rsp)
  21489c: c5 f8 57 c0                  	vxorps	%xmm0, %xmm0, %xmm0
  2148a0: c5 f8 29 84 24 30 15 00 00   	vmovaps	%xmm0, 5424(%rsp)
  2148a9: c5 f8 10 84 24 20 15 00 00   	vmovups	5408(%rsp), %xmm0
  2148b2: c5 f8 10 8c 24 30 15 00 00   	vmovups	5424(%rsp), %xmm1
  2148bb: c5 f8 11 44 24 30            	vmovups	%xmm0, 48(%rsp)
  2148c1: c5 f8 11 4c 24 40            	vmovups	%xmm1, 64(%rsp)
  2148c7: 48 85 c0                     	testq	%rax, %rax
  2148ca: 0f 84 c4 15 00 00            	je	0x215e94 <debug.printSourceAtAddress__anon_4447+0x2ad4>
  2148d0: 31 d2                        	xorl	%edx, %edx
  2148d2: e9 c3 05 00 00               	jmp	0x214e9a <debug.printSourceAtAddress__anon_4447+0x1ada>
  2148d7: 48 8b 6c 24 18               	movq	24(%rsp), %rbp
  2148dc: 4c 89 a4 24 30 05 00 00      	movq	%r12, 1328(%rsp)
  2148e4: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
  2148f0: 48 8b 84 24 a0 00 00 00      	movq	160(%rsp), %rax
  2148f8: 48 8b 54 24 60               	movq	96(%rsp), %rdx
  2148fd: 48 ff c0                     	incq	%rax
  214900: 48 3b 84 24 c8 00 00 00      	cmpq	200(%rsp), %rax
  214908: 0f 84 51 26 00 00            	je	0x216f5f <debug.printSourceAtAddress__anon_4447+0x3b9f>
  21490e: 48 89 84 24 a0 00 00 00      	movq	%rax, 160(%rsp)
  214916: 48 8d 04 c0                  	leaq	(%rax,%rax,8), %rax
  21491a: 80 7c c2 18 00               	cmpb	$0, 24(%rdx,%rax,8)
  21491f: 48 8d 0c c2                  	leaq	(%rdx,%rax,8), %rcx
  214923: 48 89 4c 24 58               	movq	%rcx, 88(%rsp)
  214928: 74 23                        	je	0x21494d <debug.printSourceAtAddress__anon_4447+0x158d>
  21492a: 48 8b 4c 24 60               	movq	96(%rsp), %rcx
  21492f: 48 8b 54 24 68               	movq	104(%rsp), %rdx
  214934: 48 8d 44 c1 08               	leaq	8(%rcx,%rax,8), %rax
  214939: 48 39 10                     	cmpq	%rdx, (%rax)
  21493c: 77 0f                        	ja	0x21494d <debug.printSourceAtAddress__anon_4447+0x158d>
  21493e: 48 8b 4c 24 68               	movq	104(%rsp), %rcx
  214943: 48 39 48 08                  	cmpq	%rcx, 8(%rax)
  214947: 0f 87 80 25 00 00            	ja	0x216ecd <debug.printSourceAtAddress__anon_4447+0x3b0d>
  21494d: 48 8b 45 68                  	movq	104(%rbp), %rax
  214951: 4c 8d bc 24 10 04 00 00      	leaq	1040(%rsp), %r15
  214959: 4c 8d a4 24 20 05 00 00      	leaq	1312(%rsp), %r12
  214961: 48 85 c0                     	testq	%rax, %rax
  214964: 74 8a                        	je	0x2148f0 <debug.printSourceAtAddress__anon_4447+0x1530>
  214966: 4c 8b 44 24 58               	movq	88(%rsp), %r8
  21496b: 49 8b 10                     	movq	(%r8), %rdx
  21496e: 48 8b 72 30                  	movq	48(%rdx), %rsi
  214972: 48 85 f6                     	testq	%rsi, %rsi
  214975: 74 29                        	je	0x2149a0 <debug.printSourceAtAddress__anon_4447+0x15e0>
  214977: 48 8b 4a 28                  	movq	40(%rdx), %rcx
  21497b: 48 8b 5d 70                  	movq	112(%rbp), %rbx
  21497f: 48 83 c1 18                  	addq	$24, %rcx
  214983: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
  214990: 48 83 79 e8 55               	cmpq	$85, -24(%rcx)
  214995: 74 29                        	je	0x2149c0 <debug.printSourceAtAddress__anon_4447+0x1600>
  214997: 48 83 c1 20                  	addq	$32, %rcx
  21499b: 48 ff ce                     	decq	%rsi
  21499e: 75 f0                        	jne	0x214990 <debug.printSourceAtAddress__anon_4447+0x15d0>
  2149a0: 48 8b 1c 24                  	movq	(%rsp), %rbx
  2149a4: 48 89 df                     	movq	%rbx, %rdi
  2149a7: e8 a4 73 00 00               	callq	0x21bd50 <builtin.returnError>
  2149ac: 48 8b 84 24 d0 00 00 00      	movq	208(%rsp), %rax
  2149b4: 48 89 03                     	movq	%rax, (%rbx)
  2149b7: e9 34 ff ff ff               	jmp	0x2148f0 <debug.printSourceAtAddress__anon_4447+0x1530>
  2149bc: 0f 1f 40 00                  	nopl	(%rax)
  2149c0: 0f b6 31                     	movzbl	(%rcx), %esi
  2149c3: 83 fe 06                     	cmpl	$6, %esi
  2149c6: 74 13                        	je	0x2149db <debug.printSourceAtAddress__anon_4447+0x161b>
  2149c8: 83 fe 03                     	cmpl	$3, %esi
  2149cb: 0f 85 06 32 00 00            	jne	0x217bd7 <debug.printSourceAtAddress__anon_4447+0x4817>
  2149d1: 80 79 f8 01                  	cmpb	$1, -8(%rcx)
  2149d5: 0f 84 f3 31 00 00            	je	0x217bce <debug.printSourceAtAddress__anon_4447+0x480e>
  2149db: 4c 8b 71 f0                  	movq	-16(%rcx), %r14
  2149df: 48 8b 34 24                  	movq	(%rsp), %rsi
  2149e3: 48 8b 8c 24 a8 00 00 00      	movq	168(%rsp), %rcx
  2149eb: 48 8d bc 24 f0 01 00 00      	leaq	496(%rsp), %rdi
  2149f3: 48 89 84 24 20 05 00 00      	movq	%rax, 1312(%rsp)
  2149fb: 48 89 9c 24 28 05 00 00      	movq	%rbx, 1320(%rsp)
  214a03: 48 c7 84 24 30 05 00 00 00 00 00 00  	movq	$0, 1328(%rsp)
  214a0f: e8 6c 4b ff ff               	callq	0x209580 <dwarf.Die.getAttrAddr>
  214a14: 0f b7 84 24 f8 01 00 00      	movzwl	504(%rsp), %eax
  214a1c: 85 c0                        	testl	%eax, %eax
  214a1e: 74 20                        	je	0x214a40 <debug.printSourceAtAddress__anon_4447+0x1680>
  214a20: 83 f8 18                     	cmpl	$24, %eax
  214a23: 0f 85 c7 31 00 00            	jne	0x217bf0 <debug.printSourceAtAddress__anon_4447+0x4830>
  214a29: 48 8b 84 24 d0 00 00 00      	movq	208(%rsp), %rax
  214a31: 48 8b 0c 24                  	movq	(%rsp), %rcx
  214a35: 48 89 01                     	movq	%rax, (%rcx)
  214a38: 31 c0                        	xorl	%eax, %eax
  214a3a: eb 0c                        	jmp	0x214a48 <debug.printSourceAtAddress__anon_4447+0x1688>
  214a3c: 0f 1f 40 00                  	nopl	(%rax)
  214a40: 48 8b 84 24 f0 01 00 00      	movq	496(%rsp), %rax
  214a48: 4c 39 f3                     	cmpq	%r14, %rbx
  214a4b: 48 89 44 24 50               	movq	%rax, 80(%rsp)
  214a50: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  214a5a: 4c 0f 42 f3                  	cmovbq	%rbx, %r14
  214a5e: 4c 89 b4 24 30 05 00 00      	movq	%r14, 1328(%rsp)
  214a66: 45 31 f6                     	xorl	%r14d, %r14d
  214a69: 0f b6 9d 10 01 00 00         	movzbl	272(%rbp), %ebx
  214a70: 48 89 84 24 b0 03 00 00      	movq	%rax, 944(%rsp)
  214a78: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
  214a80: b9 08 00 00 00               	movl	$8, %ecx
  214a85: 4a 8d 94 34 b0 03 00 00      	leaq	944(%rsp,%r14), %rdx
  214a8d: 4c 89 ff                     	movq	%r15, %rdi
  214a90: 4c 89 e6                     	movq	%r12, %rsi
  214a93: 4c 29 f1                     	subq	%r14, %rcx
  214a96: e8 e5 47 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  214a9b: 48 8b 84 24 10 04 00 00      	movq	1040(%rsp), %rax
  214aa3: 48 85 c0                     	testq	%rax, %rax
  214aa6: 0f 84 31 02 00 00            	je	0x214cdd <debug.printSourceAtAddress__anon_4447+0x191d>
  214aac: 49 01 c6                     	addq	%rax, %r14
  214aaf: 0f 82 6d 2e 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  214ab5: 49 83 fe 08                  	cmpq	$8, %r14
  214ab9: 72 c5                        	jb	0x214a80 <debug.printSourceAtAddress__anon_4447+0x16c0>
  214abb: 48 8b 84 24 b0 03 00 00      	movq	944(%rsp), %rax
  214ac3: 4c 8b ac 24 20 05 00 00      	movq	1312(%rsp), %r13
  214acb: 4c 8b b4 24 28 05 00 00      	movq	1320(%rsp), %r14
  214ad3: 48 8b ac 24 30 05 00 00      	movq	1328(%rsp), %rbp
  214adb: f6 c3 01                     	testb	$1, %bl
  214ade: 48 89 c1                     	movq	%rax, %rcx
  214ae1: 48 0f c9                     	bswapq	%rcx
  214ae4: 48 0f 45 c8                  	cmovneq	%rax, %rcx
  214ae8: 48 89 4c 24 28               	movq	%rcx, 40(%rsp)
  214aed: 0f 1f 00                     	nopl	(%rax)
  214af0: 48 8b 44 24 18               	movq	24(%rsp), %rax
  214af5: 45 31 ff                     	xorl	%r15d, %r15d
  214af8: 48 b9 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rcx # imm = 0xAAAAAAAAAAAAAAAA
  214b02: 0f b6 80 10 01 00 00         	movzbl	272(%rax), %eax
  214b09: 48 89 8c 24 10 04 00 00      	movq	%rcx, 1040(%rsp)
  214b11: 88 44 24 08                  	movb	%al, 8(%rsp)
  214b15: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
  214b20: 4c 89 f0                     	movq	%r14, %rax
  214b23: 48 29 e8                     	subq	%rbp, %rax
  214b26: 0f 82 f6 2d 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  214b2c: bb 08 00 00 00               	movl	$8, %ebx
  214b31: 49 89 ec                     	movq	%rbp, %r12
  214b34: 4c 29 fb                     	subq	%r15, %rbx
  214b37: 48 39 c3                     	cmpq	%rax, %rbx
  214b3a: 48 0f 43 d8                  	cmovaeq	%rax, %rbx
  214b3e: 49 01 dc                     	addq	%rbx, %r12
  214b41: 0f 82 db 2d 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  214b47: 4d 39 f4                     	cmpq	%r14, %r12
  214b4a: 0f 87 5c 35 00 00            	ja	0x2180ac <debug.printSourceAtAddress__anon_4447+0x4cec>
  214b50: 4c 89 e0                     	movq	%r12, %rax
  214b53: 48 29 e8                     	subq	%rbp, %rax
  214b56: 48 39 c3                     	cmpq	%rax, %rbx
  214b59: 0f 85 92 35 00 00            	jne	0x2180f1 <debug.printSourceAtAddress__anon_4447+0x4d31>
  214b5f: 4c 01 ed                     	addq	%r13, %rbp
  214b62: 4a 8d bc 3c 10 04 00 00      	leaq	1040(%rsp,%r15), %rdi
  214b6a: 48 8d 44 1d 00               	leaq	(%rbp,%rbx), %rax
  214b6f: 48 39 f8                     	cmpq	%rdi, %rax
  214b72: 76 0d                        	jbe	0x214b81 <debug.printSourceAtAddress__anon_4447+0x17c1>
  214b74: 48 8d 04 1f                  	leaq	(%rdi,%rbx), %rax
  214b78: 48 39 c5                     	cmpq	%rax, %rbp
  214b7b: 0f 82 5f 35 00 00            	jb	0x2180e0 <debug.printSourceAtAddress__anon_4447+0x4d20>
  214b81: 48 89 ee                     	movq	%rbp, %rsi
  214b84: 48 89 da                     	movq	%rbx, %rdx
  214b87: e8 54 77 00 00               	callq	0x21c2e0 <memcpy>
  214b8c: 48 85 db                     	testq	%rbx, %rbx
  214b8f: 0f 84 48 01 00 00            	je	0x214cdd <debug.printSourceAtAddress__anon_4447+0x191d>
  214b95: 49 01 df                     	addq	%rbx, %r15
  214b98: 4c 89 e5                     	movq	%r12, %rbp
  214b9b: 49 83 ff 08                  	cmpq	$8, %r15
  214b9f: 0f 82 7b ff ff ff            	jb	0x214b20 <debug.printSourceAtAddress__anon_4447+0x1760>
  214ba5: 48 8b 8c 24 10 04 00 00      	movq	1040(%rsp), %rcx
  214bad: f6 44 24 08 01               	testb	$1, 8(%rsp)
  214bb2: 48 8b 54 24 28               	movq	40(%rsp), %rdx
  214bb7: 48 89 c8                     	movq	%rcx, %rax
  214bba: 48 89 d6                     	movq	%rdx, %rsi
  214bbd: 48 0f c8                     	bswapq	%rax
  214bc0: 48 0f 45 c1                  	cmovneq	%rcx, %rax
  214bc4: 48 09 c6                     	orq	%rax, %rsi
  214bc7: 0f 84 0a fd ff ff            	je	0x2148d7 <debug.printSourceAtAddress__anon_4447+0x1517>
  214bcd: 48 8b 6c 24 18               	movq	24(%rsp), %rbp
  214bd2: 48 83 fa ff                  	cmpq	$-1, %rdx
  214bd6: 74 38                        	je	0x214c10 <debug.printSourceAtAddress__anon_4447+0x1850>
  214bd8: 48 03 54 24 50               	addq	80(%rsp), %rdx
  214bdd: 0f 82 3f 2d 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  214be3: 48 3b 54 24 68               	cmpq	104(%rsp), %rdx
  214be8: 77 2b                        	ja	0x214c15 <debug.printSourceAtAddress__anon_4447+0x1855>
  214bea: 48 03 44 24 50               	addq	80(%rsp), %rax
  214bef: 0f 82 2d 2d 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  214bf5: 48 3b 44 24 68               	cmpq	104(%rsp), %rax
  214bfa: 76 19                        	jbe	0x214c15 <debug.printSourceAtAddress__anon_4447+0x1855>
  214bfc: e9 cc 22 00 00               	jmp	0x216ecd <debug.printSourceAtAddress__anon_4447+0x3b0d>
  214c01: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
  214c10: 48 89 44 24 50               	movq	%rax, 80(%rsp)
  214c15: 0f b6 85 10 01 00 00         	movzbl	272(%rbp), %eax
  214c1c: 48 b9 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rcx # imm = 0xAAAAAAAAAAAAAAAA
  214c26: 45 31 ff                     	xorl	%r15d, %r15d
  214c29: 48 89 8c 24 10 04 00 00      	movq	%rcx, 1040(%rsp)
  214c31: 88 44 24 28                  	movb	%al, 40(%rsp)
  214c35: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
  214c40: 4c 89 f0                     	movq	%r14, %rax
  214c43: 4c 29 e0                     	subq	%r12, %rax
  214c46: 0f 82 d6 2c 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  214c4c: bb 08 00 00 00               	movl	$8, %ebx
  214c51: 4c 89 e5                     	movq	%r12, %rbp
  214c54: 4c 29 fb                     	subq	%r15, %rbx
  214c57: 48 39 c3                     	cmpq	%rax, %rbx
  214c5a: 48 0f 43 d8                  	cmovaeq	%rax, %rbx
  214c5e: 48 01 dd                     	addq	%rbx, %rbp
  214c61: 0f 82 bb 2c 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  214c67: 4c 39 f5                     	cmpq	%r14, %rbp
  214c6a: 0f 87 3c 34 00 00            	ja	0x2180ac <debug.printSourceAtAddress__anon_4447+0x4cec>
  214c70: 48 89 e8                     	movq	%rbp, %rax
  214c73: 4c 29 e0                     	subq	%r12, %rax
  214c76: 48 39 c3                     	cmpq	%rax, %rbx
  214c79: 0f 85 72 34 00 00            	jne	0x2180f1 <debug.printSourceAtAddress__anon_4447+0x4d31>
  214c7f: 4d 01 ec                     	addq	%r13, %r12
  214c82: 4a 8d bc 3c 10 04 00 00      	leaq	1040(%rsp,%r15), %rdi
  214c8a: 49 8d 04 1c                  	leaq	(%r12,%rbx), %rax
  214c8e: 48 39 f8                     	cmpq	%rdi, %rax
  214c91: 76 0d                        	jbe	0x214ca0 <debug.printSourceAtAddress__anon_4447+0x18e0>
  214c93: 48 8d 04 1f                  	leaq	(%rdi,%rbx), %rax
  214c97: 49 39 c4                     	cmpq	%rax, %r12
  214c9a: 0f 82 40 34 00 00            	jb	0x2180e0 <debug.printSourceAtAddress__anon_4447+0x4d20>
  214ca0: 4c 89 e6                     	movq	%r12, %rsi
  214ca3: 48 89 da                     	movq	%rbx, %rdx
  214ca6: e8 35 76 00 00               	callq	0x21c2e0 <memcpy>
  214cab: 48 85 db                     	testq	%rbx, %rbx
  214cae: 74 2d                        	je	0x214cdd <debug.printSourceAtAddress__anon_4447+0x191d>
  214cb0: 49 01 df                     	addq	%rbx, %r15
  214cb3: 49 89 ec                     	movq	%rbp, %r12
  214cb6: 49 83 ff 08                  	cmpq	$8, %r15
  214cba: 72 84                        	jb	0x214c40 <debug.printSourceAtAddress__anon_4447+0x1880>
  214cbc: 48 8b 84 24 10 04 00 00      	movq	1040(%rsp), %rax
  214cc4: f6 44 24 28 01               	testb	$1, 40(%rsp)
  214cc9: 48 89 c1                     	movq	%rax, %rcx
  214ccc: 48 0f c9                     	bswapq	%rcx
  214ccf: 48 0f 45 c8                  	cmovneq	%rax, %rcx
  214cd3: 48 89 4c 24 28               	movq	%rcx, 40(%rsp)
  214cd8: e9 13 fe ff ff               	jmp	0x214af0 <debug.printSourceAtAddress__anon_4447+0x1730>
  214cdd: 48 8b 1c 24                  	movq	(%rsp), %rbx
  214ce1: 48 89 df                     	movq	%rbx, %rdi
  214ce4: e8 67 70 00 00               	callq	0x21bd50 <builtin.returnError>
  214ce9: 48 89 df                     	movq	%rbx, %rdi
  214cec: e8 5f 70 00 00               	callq	0x21bd50 <builtin.returnError>
  214cf1: 48 8b 1c 24                  	movq	(%rsp), %rbx
  214cf5: 48 89 df                     	movq	%rbx, %rdi
  214cf8: e8 53 70 00 00               	callq	0x21bd50 <builtin.returnError>
  214cfd: 48 89 df                     	movq	%rbx, %rdi
  214d00: e8 4b 70 00 00               	callq	0x21bd50 <builtin.returnError>
  214d05: 66 b8 33 00                  	movw	$51, %ax
  214d09: 48 8b 3c 24                  	movq	(%rsp), %rdi
  214d0d: 89 c3                        	movl	%eax, %ebx
  214d0f: e8 3c 70 00 00               	callq	0x21bd50 <builtin.returnError>
  214d14: 89 da                        	movl	%ebx, %edx
  214d16: c5 fc 10 84 24 20 15 00 00   	vmovups	5408(%rsp), %ymm0
  214d1f: 8b b4 24 f0 00 00 00         	movl	240(%rsp), %esi
  214d26: 8b 8c 24 f3 00 00 00         	movl	243(%rsp), %ecx
  214d2d: 4c 89 84 24 60 03 00 00      	movq	%r8, 864(%rsp)
  214d35: 4c 89 ac 24 68 03 00 00      	movq	%r13, 872(%rsp)
  214d3d: 48 89 ac 24 70 03 00 00      	movq	%rbp, 880(%rsp)
  214d45: 4c 89 b4 24 78 03 00 00      	movq	%r14, 888(%rsp)
  214d4d: c5 fc 11 84 24 80 03 00 00   	vmovups	%ymm0, 896(%rsp)
  214d56: 88 84 24 a0 03 00 00         	movb	%al, 928(%rsp)
  214d5d: 89 b4 24 a1 03 00 00         	movl	%esi, 929(%rsp)
  214d64: 89 8c 24 a4 03 00 00         	movl	%ecx, 932(%rsp)
  214d6b: 66 89 94 24 a8 03 00 00      	movw	%dx, 936(%rsp)
  214d73: c7 84 24 aa 03 00 00 00 00 00 00     	movl	$0, 938(%rsp)
  214d7e: 66 c7 84 24 ae 03 00 00 00 00	movw	$0, 942(%rsp)
  214d88: 66 85 d2                     	testw	%dx, %dx
  214d8b: 0f 85 37 22 00 00            	jne	0x216fc8 <debug.printSourceAtAddress__anon_4447+0x3c08>
  214d91: 4c 8b a4 24 90 03 00 00      	movq	912(%rsp), %r12
  214d99: 48 8b 9c 24 98 03 00 00      	movq	920(%rsp), %rbx
  214da1: 48 8d 94 24 80 03 00 00      	leaq	896(%rsp), %rdx
  214da9: 48 83 ec 08                  	subq	$8, %rsp
  214dad: 48 8b 4c 24 18               	movq	24(%rsp), %rcx
  214db2: 48 8b 7c 24 08               	movq	8(%rsp), %rdi
  214db7: 48 8b b4 24 98 01 00 00      	movq	408(%rsp), %rsi
  214dbf: 4d 89 e9                     	movq	%r13, %r9
  214dc2: ff b4 24 90 01 00 00         	pushq	400(%rsp)
  214dc9: 41 56                        	pushq	%r14
  214dcb: 55                           	pushq	%rbp
  214dcc: c5 f8 77                     	vzeroupper
  214dcf: e8 7c 6e ff ff               	callq	0x20bc50 <debug.printLineInfo__anon_5656>
  214dd4: 48 83 c4 20                  	addq	$32, %rsp
  214dd8: 89 c1                        	movl	%eax, %ecx
  214dda: 41 f6 c7 01                  	testb	$1, %r15b
  214dde: 75 4a                        	jne	0x214e2a <debug.printSourceAtAddress__anon_4447+0x1a6a>
  214de0: 48 85 db                     	testq	%rbx, %rbx
  214de3: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  214ded: 4c 0f 44 e0                  	cmoveq	%rax, %r12
  214df1: 74 37                        	je	0x214e2a <debug.printSourceAtAddress__anon_4447+0x1a6a>
  214df3: 48 8b 44 24 20               	movq	32(%rsp), %rax
  214df8: 4c 89 e7                     	movq	%r12, %rdi
  214dfb: be aa 00 00 00               	movl	$170, %esi
  214e00: 48 89 da                     	movq	%rbx, %rdx
  214e03: 89 cd                        	movl	%ecx, %ebp
  214e05: 4c 8b 30                     	movq	(%rax), %r14
  214e08: 4c 8b 78 08                  	movq	8(%rax), %r15
  214e0c: e8 cf 75 00 00               	callq	0x21c3e0 <memset>
  214e11: 4c 8b 84 24 58 25 00 00      	movq	9560(%rsp), %r8
  214e19: 4c 89 f7                     	movq	%r14, %rdi
  214e1c: 4c 89 e6                     	movq	%r12, %rsi
  214e1f: 48 89 da                     	movq	%rbx, %rdx
  214e22: 31 c9                        	xorl	%ecx, %ecx
  214e24: 41 ff 57 10                  	callq	*16(%r15)
  214e28: 89 e9                        	movl	%ebp, %ecx
  214e2a: 66 85 c9                     	testw	%cx, %cx
  214e2d: 0f 84 73 31 00 00            	je	0x217fa6 <debug.printSourceAtAddress__anon_4447+0x4be6>
  214e33: 89 cb                        	movl	%ecx, %ebx
  214e35: e9 80 31 00 00               	jmp	0x217fba <debug.printSourceAtAddress__anon_4447+0x4bfa>
  214e3a: 31 d2                        	xorl	%edx, %edx
  214e3c: eb 0f                        	jmp	0x214e4d <debug.printSourceAtAddress__anon_4447+0x1a8d>
  214e3e: 66 90                        	nop
  214e40: 48 83 c2 38                  	addq	$56, %rdx
  214e44: 48 39 d1                     	cmpq	%rdx, %rcx
  214e47: 0f 84 10 ea ff ff            	je	0x21385d <debug.printSourceAtAddress__anon_4447+0x49d>
  214e4d: 83 3c 10 01                  	cmpl	$1, (%rax,%rdx)
  214e51: 75 ed                        	jne	0x214e40 <debug.printSourceAtAddress__anon_4447+0x1a80>
  214e53: 48 8b 74 10 10               	movq	16(%rax,%rdx), %rsi
  214e58: 4c 01 e6                     	addq	%r12, %rsi
  214e5b: 0f 82 c1 2a 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  214e61: 48 8b 7c 10 28               	movq	40(%rax,%rdx), %rdi
  214e66: 48 01 f7                     	addq	%rsi, %rdi
  214e69: 0f 82 b3 2a 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  214e6f: 4c 39 f6                     	cmpq	%r14, %rsi
  214e72: 77 cc                        	ja	0x214e40 <debug.printSourceAtAddress__anon_4447+0x1a80>
  214e74: 4c 39 f7                     	cmpq	%r14, %rdi
  214e77: 76 c7                        	jbe	0x214e40 <debug.printSourceAtAddress__anon_4447+0x1a80>
  214e79: 41 be 40 21 20 00            	movl	$2105664, %r14d         # imm = 0x202140
  214e7f: bb 0e 00 00 00               	movl	$14, %ebx
  214e84: e9 5a e8 ff ff               	jmp	0x2136e3 <debug.printSourceAtAddress__anon_4447+0x323>
  214e89: 48 8b 84 24 90 00 00 00      	movq	144(%rsp), %rax
  214e91: 48 39 c2                     	cmpq	%rax, %rdx
  214e94: 0f 83 fa 0f 00 00            	jae	0x215e94 <debug.printSourceAtAddress__anon_4447+0x2ad4>
  214e9a: 44 0f b6 b4 24 28 06 00 00   	movzbl	1576(%rsp), %r14d
  214ea3: 48 8b 9c 24 78 01 00 00      	movq	376(%rsp), %rbx
  214eab: 48 39 d0                     	cmpq	%rdx, %rax
  214eae: 48 89 d1                     	movq	%rdx, %rcx
  214eb1: 48 89 94 24 a8 00 00 00      	movq	%rdx, 168(%rsp)
  214eb9: c7 84 24 b0 00 00 00 aa aa aa aa     	movl	$2863311530, 176(%rsp) # imm = 0xAAAAAAAA
  214ec4: 48 0f 43 c2                  	cmovaeq	%rdx, %rax
  214ec8: 45 31 ff                     	xorl	%r15d, %r15d
  214ecb: 48 89 84 24 98 00 00 00      	movq	%rax, 152(%rsp)
  214ed3: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
  214ee0: b9 04 00 00 00               	movl	$4, %ecx
  214ee5: 4a 8d 94 3c b0 00 00 00      	leaq	176(%rsp,%r15), %rdx
  214eed: 4c 89 ef                     	movq	%r13, %rdi
  214ef0: 48 89 de                     	movq	%rbx, %rsi
  214ef3: 4c 29 f9                     	subq	%r15, %rcx
  214ef6: c5 f8 77                     	vzeroupper
  214ef9: e8 82 43 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  214efe: 48 8b 84 24 20 15 00 00      	movq	5408(%rsp), %rax
  214f06: 48 85 c0                     	testq	%rax, %rax
  214f09: 0f 84 0d 22 00 00            	je	0x21711c <debug.printSourceAtAddress__anon_4447+0x3d5c>
  214f0f: 49 01 c7                     	addq	%rax, %r15
  214f12: 0f 82 0a 2a 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  214f18: 49 83 ff 04                  	cmpq	$4, %r15
  214f1c: 72 c2                        	jb	0x214ee0 <debug.printSourceAtAddress__anon_4447+0x1b20>
  214f1e: 8b 84 24 b0 00 00 00         	movl	176(%rsp), %eax
  214f25: 41 f6 c6 01                  	testb	$1, %r14b
  214f29: 89 c5                        	movl	%eax, %ebp
  214f2b: 0f cd                        	bswapl	%ebp
  214f2d: 0f 45 e8                     	cmovnel	%eax, %ebp
  214f30: 83 fd ff                     	cmpl	$-1, %ebp
  214f33: 0f 94 84 24 87 00 00 00      	sete	135(%rsp)
  214f3b: 74 15                        	je	0x214f52 <debug.printSourceAtAddress__anon_4447+0x1b92>
  214f3d: 83 fd ef                     	cmpl	$-17, %ebp
  214f40: 0f 87 c6 2c 00 00            	ja	0x217c0c <debug.printSourceAtAddress__anon_4447+0x484c>
  214f46: 89 e9                        	movl	%ebp, %ecx
  214f48: 48 85 c9                     	testq	%rcx, %rcx
  214f4b: 75 7d                        	jne	0x214fca <debug.printSourceAtAddress__anon_4447+0x1c0a>
  214f4d: e9 f7 24 00 00               	jmp	0x217449 <debug.printSourceAtAddress__anon_4447+0x4089>
  214f52: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  214f5c: 45 31 ff                     	xorl	%r15d, %r15d
  214f5f: 48 89 84 24 b0 00 00 00      	movq	%rax, 176(%rsp)
  214f67: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
  214f70: b9 08 00 00 00               	movl	$8, %ecx
  214f75: 4a 8d 94 3c b0 00 00 00      	leaq	176(%rsp,%r15), %rdx
  214f7d: 4c 89 ef                     	movq	%r13, %rdi
  214f80: 48 89 de                     	movq	%rbx, %rsi
  214f83: 4c 29 f9                     	subq	%r15, %rcx
  214f86: e8 f5 42 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  214f8b: 48 8b 84 24 20 15 00 00      	movq	5408(%rsp), %rax
  214f93: 48 85 c0                     	testq	%rax, %rax
  214f96: 0f 84 1d 25 00 00            	je	0x2174b9 <debug.printSourceAtAddress__anon_4447+0x40f9>
  214f9c: 49 01 c7                     	addq	%rax, %r15
  214f9f: 0f 82 7d 29 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  214fa5: 49 83 ff 08                  	cmpq	$8, %r15
  214fa9: 72 c5                        	jb	0x214f70 <debug.printSourceAtAddress__anon_4447+0x1bb0>
  214fab: 48 8b 84 24 b0 00 00 00      	movq	176(%rsp), %rax
  214fb3: 41 f6 c6 01                  	testb	$1, %r14b
  214fb7: 48 89 c1                     	movq	%rax, %rcx
  214fba: 48 0f c9                     	bswapq	%rcx
  214fbd: 48 0f 45 c8                  	cmovneq	%rax, %rcx
  214fc1: 48 85 c9                     	testq	%rcx, %rcx
  214fc4: 0f 84 7f 24 00 00            	je	0x217449 <debug.printSourceAtAddress__anon_4447+0x4089>
  214fca: 31 c0                        	xorl	%eax, %eax
  214fcc: 83 fd ff                     	cmpl	$-1, %ebp
  214fcf: 0f 94 c0                     	sete	%al
  214fd2: 48 8d 04 c5 04 00 00 00      	leaq	4(,%rax,8), %rax
  214fda: 48 01 c1                     	addq	%rax, %rcx
  214fdd: 48 89 8c 24 c8 00 00 00      	movq	%rcx, 200(%rsp)
  214fe5: 0f 82 37 29 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  214feb: 0f b6 9c 24 28 06 00 00      	movzbl	1576(%rsp), %ebx
  214ff3: 45 31 f6                     	xorl	%r14d, %r14d
  214ff6: 66 c7 84 24 b0 00 00 00 aa aa	movw	$43690, 176(%rsp)       # imm = 0xAAAA
  215000: b9 02 00 00 00               	movl	$2, %ecx
  215005: 4a 8d 94 34 b0 00 00 00      	leaq	176(%rsp,%r14), %rdx
  21500d: 4c 89 ef                     	movq	%r13, %rdi
  215010: 48 8d b4 24 88 00 00 00      	leaq	136(%rsp), %rsi
  215018: 4c 29 f1                     	subq	%r14, %rcx
  21501b: e8 60 42 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  215020: 48 8b 84 24 20 15 00 00      	movq	5408(%rsp), %rax
  215028: 48 85 c0                     	testq	%rax, %rax
  21502b: 0f 84 38 21 00 00            	je	0x217169 <debug.printSourceAtAddress__anon_4447+0x3da9>
  215031: 49 01 c6                     	addq	%rax, %r14
  215034: 0f 82 e8 28 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  21503a: 49 83 fe 02                  	cmpq	$2, %r14
  21503e: 72 c0                        	jb	0x215000 <debug.printSourceAtAddress__anon_4447+0x1c40>
  215040: 0f b7 84 24 b0 00 00 00      	movzwl	176(%rsp), %eax
  215048: 4c 8b 74 24 10               	movq	16(%rsp), %r14
  21504d: 89 c1                        	movl	%eax, %ecx
  21504f: 66 c1 c1 08                  	rolw	$8, %cx
  215053: f6 c3 01                     	testb	$1, %bl
  215056: 0f 45 c8                     	cmovnel	%eax, %ecx
  215059: 8d 41 fa                     	leal	-6(%rcx), %eax
  21505c: 66 83 f8 fb                  	cmpw	$-5, %ax
  215060: 0f 86 8e 2a 00 00            	jbe	0x217af4 <debug.printSourceAtAddress__anon_4447+0x4734>
  215066: 48 89 8c 24 70 01 00 00      	movq	%rcx, 368(%rsp)
  21506e: 66 83 f9 05                  	cmpw	$5, %cx
  215072: 0f 82 09 01 00 00            	jb	0x215181 <debug.printSourceAtAddress__anon_4447+0x1dc1>
  215078: b9 01 00 00 00               	movl	$1, %ecx
  21507d: 4c 89 ef                     	movq	%r13, %rdi
  215080: 48 8d b4 24 88 00 00 00      	leaq	136(%rsp), %rsi
  215088: 48 8d 94 24 b0 00 00 00      	leaq	176(%rsp), %rdx
  215090: c6 84 24 b0 00 00 00 aa      	movb	$-86, 176(%rsp)
  215098: e8 e3 41 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  21509d: 48 83 bc 24 20 15 00 00 00   	cmpq	$0, 5408(%rsp)
  2150a6: 0f 84 23 2d 00 00            	je	0x217dcf <debug.printSourceAtAddress__anon_4447+0x4a0f>
  2150ac: 80 bc 24 b0 00 00 00 01      	cmpb	$1, 176(%rsp)
  2150b4: 0f 85 71 2d 00 00            	jne	0x217e2b <debug.printSourceAtAddress__anon_4447+0x4a6b>
  2150ba: b9 01 00 00 00               	movl	$1, %ecx
  2150bf: 4c 89 ef                     	movq	%r13, %rdi
  2150c2: 48 8d b4 24 88 00 00 00      	leaq	136(%rsp), %rsi
  2150ca: 48 8d 94 24 b0 00 00 00      	leaq	176(%rsp), %rdx
  2150d2: c6 84 24 b0 00 00 00 aa      	movb	$-86, 176(%rsp)
  2150da: e8 a1 41 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2150df: 48 83 bc 24 20 15 00 00 00   	cmpq	$0, 5408(%rsp)
  2150e8: 0f 84 7e 2d 00 00            	je	0x217e6c <debug.printSourceAtAddress__anon_4447+0x4aac>
  2150ee: 44 0f b6 b4 24 b0 00 00 00   	movzbl	176(%rsp), %r14d
  2150f7: 44 0f b6 bc 24 28 06 00 00   	movzbl	1576(%rsp), %r15d
  215100: 83 fd ff                     	cmpl	$-1, %ebp
  215103: 0f 84 b9 01 00 00            	je	0x2152c2 <debug.printSourceAtAddress__anon_4447+0x1f02>
  215109: 48 8b 6c 24 18               	movq	24(%rsp), %rbp
  21510e: 31 db                        	xorl	%ebx, %ebx
  215110: c7 84 24 b0 00 00 00 aa aa aa aa     	movl	$2863311530, 176(%rsp) # imm = 0xAAAAAAAA
  21511b: 0f 1f 44 00 00               	nopl	(%rax,%rax)
  215120: b9 04 00 00 00               	movl	$4, %ecx
  215125: 48 8d 94 1c b0 00 00 00      	leaq	176(%rsp,%rbx), %rdx
  21512d: 4c 89 ef                     	movq	%r13, %rdi
  215130: 48 8d b4 24 88 00 00 00      	leaq	136(%rsp), %rsi
  215138: 48 29 d9                     	subq	%rbx, %rcx
  21513b: e8 40 41 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  215140: 48 8b 84 24 20 15 00 00      	movq	5408(%rsp), %rax
  215148: 48 85 c0                     	testq	%rax, %rax
  21514b: 0f 84 88 24 00 00            	je	0x2175d9 <debug.printSourceAtAddress__anon_4447+0x4219>
  215151: 48 01 c3                     	addq	%rax, %rbx
  215154: 0f 82 c8 27 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  21515a: 48 83 fb 04                  	cmpq	$4, %rbx
  21515e: 72 c0                        	jb	0x215120 <debug.printSourceAtAddress__anon_4447+0x1d60>
  215160: 8b 84 24 b0 00 00 00         	movl	176(%rsp), %eax
  215167: 41 f6 c7 01                  	testb	$1, %r15b
  21516b: 89 c3                        	movl	%eax, %ebx
  21516d: 0f cb                        	bswapl	%ebx
  21516f: 0f 45 d8                     	cmovnel	%eax, %ebx
  215172: 41 80 fe 08                  	cmpb	$8, %r14b
  215176: 0f 84 c4 01 00 00            	je	0x215340 <debug.printSourceAtAddress__anon_4447+0x1f80>
  21517c: e9 c0 29 00 00               	jmp	0x217b41 <debug.printSourceAtAddress__anon_4447+0x4781>
  215181: 44 0f b6 b4 24 28 06 00 00   	movzbl	1576(%rsp), %r14d
  21518a: 83 fd ff                     	cmpl	$-1, %ebp
  21518d: 74 75                        	je	0x215204 <debug.printSourceAtAddress__anon_4447+0x1e44>
  21518f: 48 8b 6c 24 18               	movq	24(%rsp), %rbp
  215194: 31 db                        	xorl	%ebx, %ebx
  215196: c7 84 24 b0 00 00 00 aa aa aa aa     	movl	$2863311530, 176(%rsp) # imm = 0xAAAAAAAA
  2151a1: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
  2151b0: b9 04 00 00 00               	movl	$4, %ecx
  2151b5: 48 8d 94 1c b0 00 00 00      	leaq	176(%rsp,%rbx), %rdx
  2151bd: 4c 89 ef                     	movq	%r13, %rdi
  2151c0: 48 8d b4 24 88 00 00 00      	leaq	136(%rsp), %rsi
  2151c8: 48 29 d9                     	subq	%rbx, %rcx
  2151cb: e8 b0 40 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2151d0: 48 8b 84 24 20 15 00 00      	movq	5408(%rsp), %rax
  2151d8: 48 85 c0                     	testq	%rax, %rax
  2151db: 0f 84 58 23 00 00            	je	0x217539 <debug.printSourceAtAddress__anon_4447+0x4179>
  2151e1: 48 01 c3                     	addq	%rax, %rbx
  2151e4: 0f 82 38 27 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  2151ea: 48 83 fb 04                  	cmpq	$4, %rbx
  2151ee: 72 c0                        	jb	0x2151b0 <debug.printSourceAtAddress__anon_4447+0x1df0>
  2151f0: 8b 84 24 b0 00 00 00         	movl	176(%rsp), %eax
  2151f7: 41 f6 c6 01                  	testb	$1, %r14b
  2151fb: 89 c3                        	movl	%eax, %ebx
  2151fd: 0f cb                        	bswapl	%ebx
  2151ff: 0f 45 d8                     	cmovnel	%eax, %ebx
  215202: eb 72                        	jmp	0x215276 <debug.printSourceAtAddress__anon_4447+0x1eb6>
  215204: 48 8b 6c 24 18               	movq	24(%rsp), %rbp
  215209: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  215213: 31 db                        	xorl	%ebx, %ebx
  215215: 48 89 84 24 b0 00 00 00      	movq	%rax, 176(%rsp)
  21521d: 0f 1f 00                     	nopl	(%rax)
  215220: b9 08 00 00 00               	movl	$8, %ecx
  215225: 48 8d 94 1c b0 00 00 00      	leaq	176(%rsp,%rbx), %rdx
  21522d: 4c 89 ef                     	movq	%r13, %rdi
  215230: 48 8d b4 24 88 00 00 00      	leaq	136(%rsp), %rsi
  215238: 48 29 d9                     	subq	%rbx, %rcx
  21523b: e8 40 40 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  215240: 48 8b 84 24 20 15 00 00      	movq	5408(%rsp), %rax
  215248: 48 85 c0                     	testq	%rax, %rax
  21524b: 0f 84 e8 23 00 00            	je	0x217639 <debug.printSourceAtAddress__anon_4447+0x4279>
  215251: 48 01 c3                     	addq	%rax, %rbx
  215254: 0f 82 c8 26 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  21525a: 48 83 fb 08                  	cmpq	$8, %rbx
  21525e: 72 c0                        	jb	0x215220 <debug.printSourceAtAddress__anon_4447+0x1e60>
  215260: 48 8b 84 24 b0 00 00 00      	movq	176(%rsp), %rax
  215268: 41 f6 c6 01                  	testb	$1, %r14b
  21526c: 48 89 c3                     	movq	%rax, %rbx
  21526f: 48 0f cb                     	bswapq	%rbx
  215272: 48 0f 45 d8                  	cmovneq	%rax, %rbx
  215276: b9 01 00 00 00               	movl	$1, %ecx
  21527b: 4c 89 ef                     	movq	%r13, %rdi
  21527e: 48 8d b4 24 88 00 00 00      	leaq	136(%rsp), %rsi
  215286: 48 8d 94 24 b0 00 00 00      	leaq	176(%rsp), %rdx
  21528e: c6 84 24 b0 00 00 00 aa      	movb	$-86, 176(%rsp)
  215296: e8 e5 3f 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  21529b: 48 83 bc 24 20 15 00 00 00   	cmpq	$0, 5408(%rsp)
  2152a4: 0f 84 08 2c 00 00            	je	0x217eb2 <debug.printSourceAtAddress__anon_4447+0x4af2>
  2152aa: 44 0f b6 b4 24 b0 00 00 00   	movzbl	176(%rsp), %r14d
  2152b3: 41 80 fe 08                  	cmpb	$8, %r14b
  2152b7: 0f 84 83 00 00 00            	je	0x215340 <debug.printSourceAtAddress__anon_4447+0x1f80>
  2152bd: e9 7f 28 00 00               	jmp	0x217b41 <debug.printSourceAtAddress__anon_4447+0x4781>
  2152c2: 48 8b 6c 24 18               	movq	24(%rsp), %rbp
  2152c7: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  2152d1: 31 db                        	xorl	%ebx, %ebx
  2152d3: 48 89 84 24 b0 00 00 00      	movq	%rax, 176(%rsp)
  2152db: 0f 1f 44 00 00               	nopl	(%rax,%rax)
  2152e0: b9 08 00 00 00               	movl	$8, %ecx
  2152e5: 48 8d 94 1c b0 00 00 00      	leaq	176(%rsp,%rbx), %rdx
  2152ed: 4c 89 ef                     	movq	%r13, %rdi
  2152f0: 48 8d b4 24 88 00 00 00      	leaq	136(%rsp), %rsi
  2152f8: 48 29 d9                     	subq	%rbx, %rcx
  2152fb: e8 80 3f 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  215300: 48 8b 84 24 20 15 00 00      	movq	5408(%rsp), %rax
  215308: 48 85 c0                     	testq	%rax, %rax
  21530b: 0f 84 85 23 00 00            	je	0x217696 <debug.printSourceAtAddress__anon_4447+0x42d6>
  215311: 48 01 c3                     	addq	%rax, %rbx
  215314: 0f 82 08 26 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  21531a: 48 83 fb 08                  	cmpq	$8, %rbx
  21531e: 72 c0                        	jb	0x2152e0 <debug.printSourceAtAddress__anon_4447+0x1f20>
  215320: 48 8b 84 24 b0 00 00 00      	movq	176(%rsp), %rax
  215328: 41 f6 c7 01                  	testb	$1, %r15b
  21532c: 48 89 c3                     	movq	%rax, %rbx
  21532f: 48 0f cb                     	bswapq	%rbx
  215332: 48 0f 45 d8                  	cmovneq	%rax, %rbx
  215336: 41 80 fe 08                  	cmpb	$8, %r14b
  21533a: 0f 85 01 28 00 00            	jne	0x217b41 <debug.printSourceAtAddress__anon_4447+0x4781>
  215340: 48 8b 34 24                  	movq	(%rsp), %rsi
  215344: 48 8b 4c 24 20               	movq	32(%rsp), %rcx
  215349: 4c 8b b4 24 98 00 00 00      	movq	152(%rsp), %r14
  215351: 48 8d bc 24 e0 01 00 00      	leaq	480(%rsp), %rdi
  215359: 48 8d 94 24 20 05 00 00      	leaq	1312(%rsp), %rdx
  215361: 49 89 d8                     	movq	%rbx, %r8
  215364: e8 27 fb fe ff               	callq	0x204e90 <dwarf.DwarfInfo.getAbbrevTable>
  215369: 0f b7 84 24 e8 01 00 00      	movzwl	488(%rsp), %eax
  215371: 66 85 c0                     	testw	%ax, %ax
  215374: 0f 85 14 28 00 00            	jne	0x217b8e <debug.printSourceAtAddress__anon_4447+0x47ce>
  21537a: 48 8b 84 24 e0 01 00 00      	movq	480(%rsp), %rax
  215382: 48 8b 94 24 a8 00 00 00      	movq	168(%rsp), %rdx
  21538a: 48 89 44 24 08               	movq	%rax, 8(%rsp)
  21538f: 48 8b 84 24 90 00 00 00      	movq	144(%rsp), %rax
  215397: 4c 39 f0                     	cmpq	%r14, %rax
  21539a: 4c 0f 42 f0                  	cmovbq	%rax, %r14
  21539e: 48 03 94 24 c8 00 00 00      	addq	200(%rsp), %rdx
  2153a6: 4c 89 b4 24 98 00 00 00      	movq	%r14, 152(%rsp)
  2153ae: 0f 82 6e 25 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  2153b4: c5 fc 28 05 84 ae fe ff      	vmovaps	-86396(%rip), %ymm0     # 0x200240 <zig-graph+0x200240>
  2153bc: 48 b9 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rcx # imm = 0xAAAAAAAAAAAAAAAA
  2153c6: 48 89 8c 24 00 03 00 00      	movq	%rcx, 768(%rsp)
  2153ce: c5 fc 11 84 24 e0 02 00 00   	vmovups	%ymm0, 736(%rsp)
  2153d7: c5 fc 11 84 24 c0 02 00 00   	vmovups	%ymm0, 704(%rsp)
  2153e0: 49 39 d6                     	cmpq	%rdx, %r14
  2153e3: 0f 83 a8 fa ff ff            	jae	0x214e91 <debug.printSourceAtAddress__anon_4447+0x1ad1>
  2153e9: 4c 8b 74 24 10               	movq	16(%rsp), %r14
  2153ee: 48 89 54 24 50               	movq	%rdx, 80(%rsp)
  2153f3: eb 21                        	jmp	0x215416 <debug.printSourceAtAddress__anon_4447+0x2056>
  2153f5: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
  215400: 48 8b 8c 24 98 00 00 00      	movq	152(%rsp), %rcx
  215408: 48 8b 54 24 50               	movq	80(%rsp), %rdx
  21540d: 48 39 d1                     	cmpq	%rdx, %rcx
  215410: 0f 83 73 fa ff ff            	jae	0x214e89 <debug.printSourceAtAddress__anon_4447+0x1ac9>
  215416: 0f b6 9c 24 87 00 00 00      	movzbl	135(%rsp), %ebx
  21541e: 48 83 ec 08                  	subq	$8, %rsp
  215422: 48 8b 74 24 08               	movq	8(%rsp), %rsi
  215427: 4c 8b 4c 24 10               	movq	16(%rsp), %r9
  21542c: 48 8d bc 24 f8 00 00 00      	leaq	248(%rsp), %rdi
  215434: 48 8d 94 24 28 05 00 00      	leaq	1320(%rsp), %rdx
  21543c: 48 8d 8c 24 50 02 00 00      	leaq	592(%rsp), %rcx
  215444: 4c 8d 84 24 80 01 00 00      	leaq	384(%rsp), %r8
  21544c: 53                           	pushq	%rbx
  21544d: c5 f8 77                     	vzeroupper
  215450: e8 bb 1a ff ff               	callq	0x206f10 <dwarf.DwarfInfo.parseDie__anon_5346>
  215455: 48 83 c4 10                  	addq	$16, %rsp
  215459: 0f b7 84 24 40 01 00 00      	movzwl	320(%rsp), %eax
  215461: 66 85 c0                     	testw	%ax, %ax
  215464: 0f 85 2f 21 00 00            	jne	0x217599 <debug.printSourceAtAddress__anon_4447+0x41d9>
  21546a: 80 bc 24 38 01 00 00 00      	cmpb	$0, 312(%rsp)
  215472: 74 8c                        	je	0x215400 <debug.printSourceAtAddress__anon_4447+0x2040>
  215474: c5 fc 10 84 24 f0 00 00 00   	vmovups	240(%rsp), %ymm0
  21547d: c5 fc 10 8c 24 10 01 00 00   	vmovups	272(%rsp), %ymm1
  215486: 48 8b 84 24 30 01 00 00      	movq	304(%rsp), %rax
  21548e: 48 89 84 24 b0 02 00 00      	movq	%rax, 688(%rsp)
  215496: 48 8b 84 24 98 00 00 00      	movq	152(%rsp), %rax
  21549e: c5 fc 11 84 24 70 02 00 00   	vmovups	%ymm0, 624(%rsp)
  2154a7: c5 fc 11 8c 24 90 02 00 00   	vmovups	%ymm1, 656(%rsp)
  2154b0: 48 89 44 24 68               	movq	%rax, 104(%rsp)
  2154b5: c5 f8 57 c0                  	vxorps	%xmm0, %xmm0, %xmm0
  2154b9: 48 8b 84 24 90 02 00 00      	movq	656(%rsp), %rax
  2154c1: 48 83 f8 2e                  	cmpq	$46, %rax
  2154c5: 0f 87 9a 09 00 00            	ja	0x215e65 <debug.printSourceAtAddress__anon_4447+0x2aa5>
  2154cb: 48 b9 08 00 10 20 00 40 00 00	movabsq	$70369282097160, %rcx   # imm = 0x400020100008
  2154d5: 48 0f a3 c1                  	btq	%rax, %rcx
  2154d9: 0f 83 6d 03 00 00            	jae	0x21584c <debug.printSourceAtAddress__anon_4447+0x248c>
  2154df: c5 fc 10 84 24 f0 00 00 00   	vmovups	240(%rsp), %ymm0
  2154e8: c5 fc 10 8c 24 10 01 00 00   	vmovups	272(%rsp), %ymm1
  2154f1: 48 8b 84 24 30 01 00 00      	movq	304(%rsp), %rax
  2154f9: 41 be 03 00 00 00            	movl	$3, %r14d
  2154ff: 48 89 84 24 50 03 00 00      	movq	%rax, 848(%rsp)
  215507: c5 fc 11 8c 24 30 03 00 00   	vmovups	%ymm1, 816(%rsp)
  215510: c5 fc 11 84 24 10 03 00 00   	vmovups	%ymm0, 784(%rsp)
  215519: 48 8b 8c 24 40 03 00 00      	movq	832(%rsp), %rcx
  215521: 48 85 c9                     	testq	%rcx, %rcx
  215524: 0f 84 42 02 00 00            	je	0x21576c <debug.printSourceAtAddress__anon_4447+0x23ac>
  21552a: 48 8b 84 24 38 03 00 00      	movq	824(%rsp), %rax
  215532: 48 89 ce                     	movq	%rcx, %rsi
  215535: 48 89 c2                     	movq	%rax, %rdx
  215538: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
  215540: 48 83 3a 03                  	cmpq	$3, (%rdx)
  215544: 0f 84 46 02 00 00            	je	0x215790 <debug.printSourceAtAddress__anon_4447+0x23d0>
  21554a: 48 83 c2 20                  	addq	$32, %rdx
  21554e: 48 ff ce                     	decq	%rsi
  215551: 75 ed                        	jne	0x215540 <debug.printSourceAtAddress__anon_4447+0x2180>
  215553: 48 89 c2                     	movq	%rax, %rdx
  215556: 48 89 ce                     	movq	%rcx, %rsi
  215559: 0f 1f 80 00 00 00 00         	nopl	(%rax)
  215560: 48 83 3a 31                  	cmpq	$49, (%rdx)
  215564: 0f 84 06 01 00 00            	je	0x215670 <debug.printSourceAtAddress__anon_4447+0x22b0>
  21556a: 48 83 c2 20                  	addq	$32, %rdx
  21556e: 48 ff ce                     	decq	%rsi
  215571: 75 ed                        	jne	0x215560 <debug.printSourceAtAddress__anon_4447+0x21a0>
  215573: 48 89 c2                     	movq	%rax, %rdx
  215576: 48 89 ce                     	movq	%rcx, %rsi
  215579: 0f 1f 80 00 00 00 00         	nopl	(%rax)
  215580: 48 83 3a 47                  	cmpq	$71, (%rdx)
  215584: 74 27                        	je	0x2155ad <debug.printSourceAtAddress__anon_4447+0x21ed>
  215586: 48 83 c2 20                  	addq	$32, %rdx
  21558a: 48 ff ce                     	decq	%rsi
  21558d: 75 f1                        	jne	0x215580 <debug.printSourceAtAddress__anon_4447+0x21c0>
  21558f: e9 d8 01 00 00               	jmp	0x21576c <debug.printSourceAtAddress__anon_4447+0x23ac>
  215594: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
  2155a0: 48 83 c0 20                  	addq	$32, %rax
  2155a4: 48 ff c9                     	decq	%rcx
  2155a7: 0f 84 42 1e 00 00            	je	0x2173ef <debug.printSourceAtAddress__anon_4447+0x402f>
  2155ad: 48 83 38 47                  	cmpq	$71, (%rax)
  2155b1: 75 ed                        	jne	0x2155a0 <debug.printSourceAtAddress__anon_4447+0x21e0>
  2155b3: 80 78 18 07                  	cmpb	$7, 24(%rax)
  2155b7: 0f 85 7e 26 00 00            	jne	0x217c3b <debug.printSourceAtAddress__anon_4447+0x487b>
  2155bd: 48 8b 40 08                  	movq	8(%rax), %rax
  2155c1: 48 3b 84 24 c8 00 00 00      	cmpq	200(%rsp), %rax
  2155c9: 0f 87 75 26 00 00            	ja	0x217c44 <debug.printSourceAtAddress__anon_4447+0x4884>
  2155cf: 48 03 84 24 a8 00 00 00      	addq	168(%rsp), %rax
  2155d7: 0f 82 45 23 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  2155dd: 48 8b 8c 24 90 00 00 00      	movq	144(%rsp), %rcx
  2155e5: 49 89 ef                     	movq	%rbp, %r15
  2155e8: 48 39 c1                     	cmpq	%rax, %rcx
  2155eb: 48 0f 42 c1                  	cmovbq	%rcx, %rax
  2155ef: 48 89 84 24 98 00 00 00      	movq	%rax, 152(%rsp)
  2155f7: 48 83 ec 08                  	subq	$8, %rsp
  2155fb: 48 8b 74 24 08               	movq	8(%rsp), %rsi
  215600: 4c 8b 4c 24 10               	movq	16(%rsp), %r9
  215605: 48 8d ac 24 f8 01 00 00      	leaq	504(%rsp), %rbp
  21560d: 0f b6 c3                     	movzbl	%bl, %eax
  215610: 48 8d 94 24 28 05 00 00      	leaq	1320(%rsp), %rdx
  215618: 48 8d 8c 24 50 02 00 00      	leaq	592(%rsp), %rcx
  215620: 4c 8d 84 24 80 01 00 00      	leaq	384(%rsp), %r8
  215628: 48 89 ef                     	movq	%rbp, %rdi
  21562b: 50                           	pushq	%rax
  21562c: c5 f8 77                     	vzeroupper
  21562f: e8 dc 18 ff ff               	callq	0x206f10 <dwarf.DwarfInfo.parseDie__anon_5346>
  215634: 48 83 c4 10                  	addq	$16, %rsp
  215638: 0f b7 84 24 40 02 00 00      	movzwl	576(%rsp), %eax
  215640: 66 85 c0                     	testw	%ax, %ax
  215643: 0f 85 4b 26 00 00            	jne	0x217c94 <debug.printSourceAtAddress__anon_4447+0x48d4>
  215649: 80 bc 24 38 02 00 00 00      	cmpb	$0, 568(%rsp)
  215651: 48 89 e8                     	movq	%rbp, %rax
  215654: 4c 89 fd                     	movq	%r15, %rbp
  215657: 0f 85 df 00 00 00            	jne	0x21573c <debug.printSourceAtAddress__anon_4447+0x237c>
  21565d: e9 58 26 00 00               	jmp	0x217cba <debug.printSourceAtAddress__anon_4447+0x48fa>
  215662: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)
  215670: 48 8d bc 24 b0 03 00 00      	leaq	944(%rsp), %rdi
  215678: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
  215680: 48 83 38 31                  	cmpq	$49, (%rax)
  215684: 74 1a                        	je	0x2156a0 <debug.printSourceAtAddress__anon_4447+0x22e0>
  215686: 48 83 c0 20                  	addq	$32, %rax
  21568a: 48 ff c9                     	decq	%rcx
  21568d: 75 f1                        	jne	0x215680 <debug.printSourceAtAddress__anon_4447+0x22c0>
  21568f: e9 d0 19 00 00               	jmp	0x217064 <debug.printSourceAtAddress__anon_4447+0x3ca4>
  215694: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
  2156a0: 80 78 18 07                  	cmpb	$7, 24(%rax)
  2156a4: 0f 85 52 23 00 00            	jne	0x2179fc <debug.printSourceAtAddress__anon_4447+0x463c>
  2156aa: 48 8b 40 08                  	movq	8(%rax), %rax
  2156ae: 48 3b 84 24 c8 00 00 00      	cmpq	200(%rsp), %rax
  2156b6: 0f 87 49 23 00 00            	ja	0x217a05 <debug.printSourceAtAddress__anon_4447+0x4645>
  2156bc: 48 03 84 24 a8 00 00 00      	addq	168(%rsp), %rax
  2156c4: 0f 82 58 22 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  2156ca: 48 8b 8c 24 90 00 00 00      	movq	144(%rsp), %rcx
  2156d2: 48 39 c1                     	cmpq	%rax, %rcx
  2156d5: 48 0f 42 c1                  	cmovbq	%rcx, %rax
  2156d9: 48 89 84 24 98 00 00 00      	movq	%rax, 152(%rsp)
  2156e1: 48 83 ec 08                  	subq	$8, %rsp
  2156e5: 48 8b 74 24 08               	movq	8(%rsp), %rsi
  2156ea: 4c 8b 4c 24 10               	movq	16(%rsp), %r9
  2156ef: 0f b6 c3                     	movzbl	%bl, %eax
  2156f2: 49 89 ff                     	movq	%rdi, %r15
  2156f5: 48 8d 94 24 28 05 00 00      	leaq	1320(%rsp), %rdx
  2156fd: 48 8d 8c 24 50 02 00 00      	leaq	592(%rsp), %rcx
  215705: 4c 8d 84 24 80 01 00 00      	leaq	384(%rsp), %r8
  21570d: 50                           	pushq	%rax
  21570e: c5 f8 77                     	vzeroupper
  215711: e8 fa 17 ff ff               	callq	0x206f10 <dwarf.DwarfInfo.parseDie__anon_5346>
  215716: 48 83 c4 10                  	addq	$16, %rsp
  21571a: 0f b7 84 24 00 04 00 00      	movzwl	1024(%rsp), %eax
  215722: 66 85 c0                     	testw	%ax, %ax
  215725: 0f 85 2a 23 00 00            	jne	0x217a55 <debug.printSourceAtAddress__anon_4447+0x4695>
  21572b: 80 bc 24 f8 03 00 00 00      	cmpb	$0, 1016(%rsp)
  215733: 4c 89 f8                     	movq	%r15, %rax
  215736: 0f 84 59 23 00 00            	je	0x217a95 <debug.printSourceAtAddress__anon_4447+0x46d5>
  21573c: c5 fc 10 00                  	vmovups	(%rax), %ymm0
  215740: c5 fc 10 48 20               	vmovups	32(%rax), %ymm1
  215745: 48 8b 48 40                  	movq	64(%rax), %rcx
  215749: 41 ff ce                     	decl	%r14d
  21574c: 48 89 8c 24 50 03 00 00      	movq	%rcx, 848(%rsp)
  215754: c5 fc 11 8c 24 30 03 00 00   	vmovups	%ymm1, 816(%rsp)
  21575d: c5 fc 11 84 24 10 03 00 00   	vmovups	%ymm0, 784(%rsp)
  215766: 0f 85 ad fd ff ff            	jne	0x215519 <debug.printSourceAtAddress__anon_4447+0x2159>
  21576c: 4c 8b 74 24 10               	movq	16(%rsp), %r14
  215771: 45 31 ed                     	xorl	%r13d, %r13d
  215774: 31 c0                        	xorl	%eax, %eax
  215776: 48 89 84 24 a0 00 00 00      	movq	%rax, 160(%rsp)
  21577e: e9 8f 01 00 00               	jmp	0x215912 <debug.printSourceAtAddress__anon_4447+0x2552>
  215783: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
  215790: 4c 8b 8c 24 40 05 00 00      	movq	1344(%rsp), %r9
  215798: 48 8b 34 24                  	movq	(%rsp), %rsi
  21579c: 48 8d 84 24 c0 02 00 00      	leaq	704(%rsp), %rax
  2157a4: 41 b8 03 00 00 00            	movl	$3, %r8d
  2157aa: 48 8d bc 24 58 02 00 00      	leaq	600(%rsp), %rdi
  2157b2: 48 8d 94 24 10 03 00 00      	leaq	784(%rsp), %rdx
  2157ba: 48 8d 8c 24 20 05 00 00      	leaq	1312(%rsp), %rcx
  2157c2: 50                           	pushq	%rax
  2157c3: ff b4 24 50 05 00 00         	pushq	1360(%rsp)
  2157ca: c5 f8 77                     	vzeroupper
  2157cd: e8 7e 3a ff ff               	callq	0x209250 <dwarf.Die.getAttrString>
  2157d2: 48 83 c4 10                  	addq	$16, %rsp
  2157d6: 0f b7 84 24 68 02 00 00      	movzwl	616(%rsp), %eax
  2157de: 66 85 c0                     	testw	%ax, %ax
  2157e1: 0f 85 ae 20 00 00            	jne	0x217895 <debug.printSourceAtAddress__anon_4447+0x44d5>
  2157e7: 49 89 ef                     	movq	%rbp, %r15
  2157ea: 48 8b 9c 24 58 02 00 00      	movq	600(%rsp), %rbx
  2157f2: 48 8b ac 24 60 02 00 00      	movq	608(%rsp), %rbp
  2157fa: 4c 8b 74 24 10               	movq	16(%rsp), %r14
  2157ff: 48 85 ed                     	testq	%rbp, %rbp
  215802: 0f 84 d3 00 00 00            	je	0x2158db <debug.printSourceAtAddress__anon_4447+0x251b>
  215808: 48 8b 44 24 20               	movq	32(%rsp), %rax
  21580d: 48 89 ee                     	movq	%rbp, %rsi
  215810: 31 d2                        	xorl	%edx, %edx
  215812: 4c 89 e1                     	movq	%r12, %rcx
  215815: 48 8b 38                     	movq	(%rax), %rdi
  215818: 48 8b 40 08                  	movq	8(%rax), %rax
  21581c: ff 10                        	callq	*(%rax)
  21581e: 48 85 c0                     	testq	%rax, %rax
  215821: 0f 84 52 21 00 00            	je	0x217979 <debug.printSourceAtAddress__anon_4447+0x45b9>
  215827: 48 89 c7                     	movq	%rax, %rdi
  21582a: be aa 00 00 00               	movl	$170, %esi
  21582f: 48 89 ea                     	movq	%rbp, %rdx
  215832: 49 89 c5                     	movq	%rax, %r13
  215835: e8 a6 6b 00 00               	callq	0x21c3e0 <memset>
  21583a: 48 8d 04 2b                  	leaq	(%rbx,%rbp), %rax
  21583e: 49 39 c5                     	cmpq	%rax, %r13
  215841: 0f 82 a4 00 00 00            	jb	0x2158eb <debug.printSourceAtAddress__anon_4447+0x252b>
  215847: e9 ad 00 00 00               	jmp	0x2158f9 <debug.printSourceAtAddress__anon_4447+0x2539>
  21584c: 48 83 f8 11                  	cmpq	$17, %rax
  215850: 0f 85 0f 06 00 00            	jne	0x215e65 <debug.printSourceAtAddress__anon_4447+0x2aa5>
  215856: 48 8b 84 24 70 01 00 00      	movq	368(%rsp), %rax
  21585e: 80 e3 01                     	andb	$1, %bl
  215861: 48 8d 8c 24 70 02 00 00      	leaq	624(%rsp), %rcx
  215869: 66 89 84 24 00 03 00 00      	movw	%ax, 768(%rsp)
  215871: 88 9c 24 02 03 00 00         	movb	%bl, 770(%rsp)
  215878: 48 89 8c 24 c0 02 00 00      	movq	%rcx, 704(%rsp)
  215880: 48 8b 8c 24 a0 02 00 00      	movq	672(%rsp), %rcx
  215888: 48 8d 84 24 c8 02 00 00      	leaq	712(%rsp), %rax
  215890: c5 f8 11 00                  	vmovups	%xmm0, (%rax)
  215894: 48 c7 40 10 00 00 00 00      	movq	$0, 16(%rax)
  21589c: 48 85 c9                     	testq	%rcx, %rcx
  21589f: 0f 84 90 02 00 00            	je	0x215b35 <debug.printSourceAtAddress__anon_4447+0x2775>
  2158a5: 48 8b 84 24 98 02 00 00      	movq	664(%rsp), %rax
  2158ad: 48 89 ce                     	movq	%rcx, %rsi
  2158b0: 48 83 c0 18                  	addq	$24, %rax
  2158b4: 48 89 c2                     	movq	%rax, %rdx
  2158b7: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
  2158c0: 48 83 7a e8 72               	cmpq	$114, -24(%rdx)
  2158c5: 0f 84 20 03 00 00            	je	0x215beb <debug.printSourceAtAddress__anon_4447+0x282b>
  2158cb: 48 83 c2 20                  	addq	$32, %rdx
  2158cf: 48 ff ce                     	decq	%rsi
  2158d2: 75 ec                        	jne	0x2158c0 <debug.printSourceAtAddress__anon_4447+0x2500>
  2158d4: 31 d2                        	xorl	%edx, %edx
  2158d6: e9 2f 03 00 00               	jmp	0x215c0a <debug.printSourceAtAddress__anon_4447+0x284a>
  2158db: 49 c7 c5 ff ff ff ff         	movq	$-1, %r13
  2158e2: 48 8d 04 2b                  	leaq	(%rbx,%rbp), %rax
  2158e6: 49 39 c5                     	cmpq	%rax, %r13
  2158e9: 73 0e                        	jae	0x2158f9 <debug.printSourceAtAddress__anon_4447+0x2539>
  2158eb: 49 8d 44 2d 00               	leaq	(%r13,%rbp), %rax
  2158f0: 48 39 d8                     	cmpq	%rbx, %rax
  2158f3: 0f 87 e7 27 00 00            	ja	0x2180e0 <debug.printSourceAtAddress__anon_4447+0x4d20>
  2158f9: 4c 89 ef                     	movq	%r13, %rdi
  2158fc: 48 89 de                     	movq	%rbx, %rsi
  2158ff: 48 89 ea                     	movq	%rbp, %rdx
  215902: 48 89 ac 24 a0 00 00 00      	movq	%rbp, 160(%rsp)
  21590a: e8 d1 69 00 00               	callq	0x21c2e0 <memcpy>
  21590f: 4c 89 fd                     	movq	%r15, %rbp
  215912: 48 8b 34 24                  	movq	(%rsp), %rsi
  215916: 48 8d 7c 24 70               	leaq	112(%rsp), %rdi
  21591b: 48 8d 94 24 70 02 00 00      	leaq	624(%rsp), %rdx
  215923: 48 8d 8c 24 20 05 00 00      	leaq	1312(%rsp), %rcx
  21592b: 4c 8d 84 24 c0 02 00 00      	leaq	704(%rsp), %r8
  215933: c5 f8 77                     	vzeroupper
  215936: e8 45 3c ff ff               	callq	0x209580 <dwarf.Die.getAttrAddr>
  21593b: 0f b7 44 24 78               	movzwl	120(%rsp), %eax
  215940: 83 f8 18                     	cmpl	$24, %eax
  215943: 74 6a                        	je	0x2159af <debug.printSourceAtAddress__anon_4447+0x25ef>
  215945: 48 c7 c6 ff ff ff ff         	movq	$-1, %rsi
  21594c: 85 c0                        	testl	%eax, %eax
  21594e: 0f 85 e2 1f 00 00            	jne	0x217936 <debug.printSourceAtAddress__anon_4447+0x4576>
  215954: 48 8b 8c 24 a0 02 00 00      	movq	672(%rsp), %rcx
  21595c: 48 85 c9                     	testq	%rcx, %rcx
  21595f: 74 33                        	je	0x215994 <debug.printSourceAtAddress__anon_4447+0x25d4>
  215961: 48 8b 84 24 98 02 00 00      	movq	664(%rsp), %rax
  215969: 4c 8b 7c 24 70               	movq	112(%rsp), %r15
  21596e: 48 83 c0 18                  	addq	$24, %rax
  215972: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)
  215980: 48 83 78 e8 12               	cmpq	$18, -24(%rax)
  215985: 0f 84 77 01 00 00            	je	0x215b02 <debug.printSourceAtAddress__anon_4447+0x2742>
  21598b: 48 83 c0 20                  	addq	$32, %rax
  21598f: 48 ff c9                     	decq	%rcx
  215992: 75 ec                        	jne	0x215980 <debug.printSourceAtAddress__anon_4447+0x25c0>
  215994: c7 84 24 eb 00 00 00 00 00 00 00     	movl	$0, 235(%rsp)
  21599f: c7 84 24 e8 00 00 00 00 00 00 00     	movl	$0, 232(%rsp)
  2159aa: 45 31 c0                     	xorl	%r8d, %r8d
  2159ad: eb 2f                        	jmp	0x2159de <debug.printSourceAtAddress__anon_4447+0x261e>
  2159af: 48 8b 84 24 e0 00 00 00      	movq	224(%rsp), %rax
  2159b7: 48 8b 0c 24                  	movq	(%rsp), %rcx
  2159bb: 45 31 c0                     	xorl	%r8d, %r8d
  2159be: 48 c7 c6 ff ff ff ff         	movq	$-1, %rsi
  2159c5: c7 84 24 eb 00 00 00 00 00 00 00     	movl	$0, 235(%rsp)
  2159d0: c7 84 24 e8 00 00 00 00 00 00 00     	movl	$0, 232(%rsp)
  2159db: 48 89 01                     	movq	%rax, (%rcx)
  2159de: 8b 8c 24 eb 00 00 00         	movl	235(%rsp), %ecx
  2159e5: 8b 84 24 e8 00 00 00         	movl	232(%rsp), %eax
  2159ec: 89 8c 24 83 01 00 00         	movl	%ecx, 387(%rsp)
  2159f3: 89 84 24 80 01 00 00         	movl	%eax, 384(%rsp)
  2159fa: 48 8b 84 24 18 06 00 00      	movq	1560(%rsp), %rax
  215a02: 48 89 c1                     	movq	%rax, %rcx
  215a05: 48 ff c1                     	incq	%rcx
  215a08: 0f 84 14 1f 00 00            	je	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  215a0e: 48 8b 9c 24 20 06 00 00      	movq	1568(%rsp), %rbx
  215a16: 48 39 cb                     	cmpq	%rcx, %rbx
  215a19: 0f 83 e7 03 00 00            	jae	0x215e06 <debug.printSourceAtAddress__anon_4447+0x2a46>
  215a1f: 48 89 dd                     	movq	%rbx, %rbp
  215a22: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)
  215a30: 48 89 ea                     	movq	%rbp, %rdx
  215a33: 48 d1 ea                     	shrq	%rdx
  215a36: 48 83 c2 08                  	addq	$8, %rdx
  215a3a: 48 01 d5                     	addq	%rdx, %rbp
  215a3d: 48 0f 42 ee                  	cmovbq	%rsi, %rbp
  215a41: 48 39 cd                     	cmpq	%rcx, %rbp
  215a44: 72 ea                        	jb	0x215a30 <debug.printSourceAtAddress__anon_4447+0x2670>
  215a46: 48 39 eb                     	cmpq	%rbp, %rbx
  215a49: 0f 83 a9 00 00 00            	jae	0x215af8 <debug.printSourceAtAddress__anon_4447+0x2738>
  215a4f: 48 8b 44 24 20               	movq	32(%rsp), %rax
  215a54: 48 8b b4 24 10 06 00 00      	movq	1552(%rsp), %rsi
  215a5c: 44 89 84 24 68 01 00 00      	movl	%r8d, 360(%rsp)
  215a64: 4c 89 8c 24 60 01 00 00      	movq	%r9, 352(%rsp)
  215a6c: 48 8b 38                     	movq	(%rax), %rdi
  215a6f: 4c 8b 50 08                  	movq	8(%rax), %r10
  215a73: 48 8d 84 24 20 15 00 00      	leaq	5408(%rsp), %rax
  215a7b: 48 89 b4 24 d8 00 00 00      	movq	%rsi, 216(%rsp)
  215a83: 48 89 84 24 b8 00 00 00      	movq	%rax, 184(%rsp)
  215a8b: 48 c7 84 24 c0 00 00 00 20 00 00 00  	movq	$32, 192(%rsp)
  215a97: 48 c7 84 24 b0 00 00 00 00 00 00 00  	movq	$0, 176(%rsp)
  215aa3: 48 85 db                     	testq	%rbx, %rbx
  215aa6: 0f 84 9b 00 00 00            	je	0x215b47 <debug.printSourceAtAddress__anon_4447+0x2787>
  215aac: 48 89 d8                     	movq	%rbx, %rax
  215aaf: 41 bb 28 00 00 00            	movl	$40, %r11d
  215ab5: 49 f7 e3                     	mulq	%r11
  215ab8: 0f 80 64 1e 00 00            	jo	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  215abe: 48 89 c1                     	movq	%rax, %rcx
  215ac1: 48 89 e8                     	movq	%rbp, %rax
  215ac4: 49 f7 e3                     	mulq	%r11
  215ac7: 0f 80 6f 22 00 00            	jo	0x217d3c <debug.printSourceAtAddress__anon_4447+0x497c>
  215acd: 48 89 ca                     	movq	%rcx, %rdx
  215ad0: b9 03 00 00 00               	movl	$3, %ecx
  215ad5: 49 89 c0                     	movq	%rax, %r8
  215ad8: 4d 89 e1                     	movq	%r12, %r9
  215adb: 49 89 c6                     	movq	%rax, %r14
  215ade: 41 ff 52 08                  	callq	*8(%r10)
  215ae2: a8 01                        	testb	$1, %al
  215ae4: 0f 85 ef 02 00 00            	jne	0x215dd9 <debug.printSourceAtAddress__anon_4447+0x2a19>
  215aea: 48 8b 44 24 20               	movq	32(%rsp), %rax
  215aef: 48 8b 38                     	movq	(%rax), %rdi
  215af2: 4c 8b 50 08                  	movq	8(%rax), %r10
  215af6: eb 63                        	jmp	0x215b5b <debug.printSourceAtAddress__anon_4447+0x279b>
  215af8: 48 8b 6c 24 18               	movq	24(%rsp), %rbp
  215afd: e9 04 03 00 00               	jmp	0x215e06 <debug.printSourceAtAddress__anon_4447+0x2a46>
  215b02: 4c 8b 48 f0                  	movq	-16(%rax), %r9
  215b06: 0f b6 08                     	movzbl	(%rax), %ecx
  215b09: 41 b0 01                     	movb	$1, %r8b
  215b0c: 85 c9                        	testl	%ecx, %ecx
  215b0e: 0f 84 ca fe ff ff            	je	0x2159de <debug.printSourceAtAddress__anon_4447+0x261e>
  215b14: 83 f9 03                     	cmpl	$3, %ecx
  215b17: 0f 85 e5 25 00 00            	jne	0x218102 <debug.printSourceAtAddress__anon_4447+0x4d42>
  215b1d: f6 40 f8 01                  	testb	$1, -8(%rax)
  215b21: 0f 85 23 26 00 00            	jne	0x21814a <debug.printSourceAtAddress__anon_4447+0x4d8a>
  215b27: 4d 01 f9                     	addq	%r15, %r9
  215b2a: 0f 83 ae fe ff ff            	jae	0x2159de <debug.printSourceAtAddress__anon_4447+0x261e>
  215b30: e9 ed 1d 00 00               	jmp	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  215b35: c5 f8 11 40 18               	vmovups	%xmm0, 24(%rax)
  215b3a: 48 c7 40 28 00 00 00 00      	movq	$0, 40(%rax)
  215b42: e9 7c 01 00 00               	jmp	0x215cc3 <debug.printSourceAtAddress__anon_4447+0x2903>
  215b47: 48 89 e8                     	movq	%rbp, %rax
  215b4a: b9 28 00 00 00               	movl	$40, %ecx
  215b4f: 48 f7 e1                     	mulq	%rcx
  215b52: 0f 80 f1 21 00 00            	jo	0x217d49 <debug.printSourceAtAddress__anon_4447+0x4989>
  215b58: 49 89 c6                     	movq	%rax, %r14
  215b5b: 48 8b 6c 24 18               	movq	24(%rsp), %rbp
  215b60: 4c 89 f6                     	movq	%r14, %rsi
  215b63: ba 03 00 00 00               	movl	$3, %edx
  215b68: 4c 89 e1                     	movq	%r12, %rcx
  215b6b: 41 ff 12                     	callq	*(%r10)
  215b6e: 48 85 c0                     	testq	%rax, %rax
  215b71: 0f 84 e0 21 00 00            	je	0x217d57 <debug.printSourceAtAddress__anon_4447+0x4997>
  215b77: 48 89 c7                     	movq	%rax, %rdi
  215b7a: be aa 00 00 00               	movl	$170, %esi
  215b7f: 4c 89 f2                     	movq	%r14, %rdx
  215b82: 48 89 c5                     	movq	%rax, %rbp
  215b85: e8 56 68 00 00               	callq	0x21c3e0 <memset>
  215b8a: 48 89 ef                     	movq	%rbp, %rdi
  215b8d: 4d 85 f6                     	testq	%r14, %r14
  215b90: 74 0b                        	je	0x215b9d <debug.printSourceAtAddress__anon_4447+0x27dd>
  215b92: 89 f8                        	movl	%edi, %eax
  215b94: 83 e0 07                     	andl	$7, %eax
  215b97: 0f 85 00 26 00 00            	jne	0x21819d <debug.printSourceAtAddress__anon_4447+0x4ddd>
  215b9d: 4d 85 f6                     	testq	%r14, %r14
  215ba0: 0f 84 5a 01 00 00            	je	0x215d00 <debug.printSourceAtAddress__anon_4447+0x2940>
  215ba6: 4c 89 f2                     	movq	%r14, %rdx
  215ba9: 48 b8 cd cc cc cc cc cc cc cc	movabsq	$-3689348814741910323, %rax # imm = 0xCCCCCCCCCCCCCCCD
  215bb3: 48 b9 67 66 66 66 66 66 66 06	movabsq	$461168601842738791, %rcx # imm = 0x666666666666667
  215bbd: c4 e2 fb f6 e8               	mulxq	%rax, %rax, %rbp
  215bc2: c4 e3 fb f0 c0 03            	rorxq	$3, %rax, %rax
  215bc8: 48 39 c8                     	cmpq	%rcx, %rax
  215bcb: 0f 83 6b 28 00 00            	jae	0x21843c <debug.printSourceAtAddress__anon_4447+0x507c>
  215bd1: 48 c1 ed 05                  	shrq	$5, %rbp
  215bd5: 48 8b 84 24 18 06 00 00      	movq	1560(%rsp), %rax
  215bdd: 48 39 e8                     	cmpq	%rbp, %rax
  215be0: 0f 86 37 01 00 00            	jbe	0x215d1d <debug.printSourceAtAddress__anon_4447+0x295d>
  215be6: e9 c1 24 00 00               	jmp	0x2180ac <debug.printSourceAtAddress__anon_4447+0x4cec>
  215beb: 0f b6 32                     	movzbl	(%rdx), %esi
  215bee: 83 fe 06                     	cmpl	$6, %esi
  215bf1: 74 13                        	je	0x215c06 <debug.printSourceAtAddress__anon_4447+0x2846>
  215bf3: 83 fe 03                     	cmpl	$3, %esi
  215bf6: 0f 85 c1 25 00 00            	jne	0x2181bd <debug.printSourceAtAddress__anon_4447+0x4dfd>
  215bfc: 80 7a f8 01                  	cmpb	$1, -8(%rdx)
  215c00: 0f 84 ab 25 00 00            	je	0x2181b1 <debug.printSourceAtAddress__anon_4447+0x4df1>
  215c06: 48 8b 52 f0                  	movq	-16(%rdx), %rdx
  215c0a: 48 89 94 24 e0 02 00 00      	movq	%rdx, 736(%rsp)
  215c12: 48 89 ce                     	movq	%rcx, %rsi
  215c15: 48 89 c2                     	movq	%rax, %rdx
  215c18: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
  215c20: 48 83 7a e8 73               	cmpq	$115, -24(%rdx)
  215c25: 74 0d                        	je	0x215c34 <debug.printSourceAtAddress__anon_4447+0x2874>
  215c27: 48 83 c2 20                  	addq	$32, %rdx
  215c2b: 48 ff ce                     	decq	%rsi
  215c2e: 75 f0                        	jne	0x215c20 <debug.printSourceAtAddress__anon_4447+0x2860>
  215c30: 31 d2                        	xorl	%edx, %edx
  215c32: eb 1f                        	jmp	0x215c53 <debug.printSourceAtAddress__anon_4447+0x2893>
  215c34: 0f b6 32                     	movzbl	(%rdx), %esi
  215c37: 83 fe 06                     	cmpl	$6, %esi
  215c3a: 74 13                        	je	0x215c4f <debug.printSourceAtAddress__anon_4447+0x288f>
  215c3c: 83 fe 03                     	cmpl	$3, %esi
  215c3f: 0f 85 da 25 00 00            	jne	0x21821f <debug.printSourceAtAddress__anon_4447+0x4e5f>
  215c45: 80 7a f8 01                  	cmpb	$1, -8(%rdx)
  215c49: 0f 84 c4 25 00 00            	je	0x218213 <debug.printSourceAtAddress__anon_4447+0x4e53>
  215c4f: 48 8b 52 f0                  	movq	-16(%rdx), %rdx
  215c53: 48 89 94 24 e8 02 00 00      	movq	%rdx, 744(%rsp)
  215c5b: 48 89 ce                     	movq	%rcx, %rsi
  215c5e: 48 89 c2                     	movq	%rax, %rdx
  215c61: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
  215c70: 48 83 7a e8 74               	cmpq	$116, -24(%rdx)
  215c75: 74 0d                        	je	0x215c84 <debug.printSourceAtAddress__anon_4447+0x28c4>
  215c77: 48 83 c2 20                  	addq	$32, %rdx
  215c7b: 48 ff ce                     	decq	%rsi
  215c7e: 75 f0                        	jne	0x215c70 <debug.printSourceAtAddress__anon_4447+0x28b0>
  215c80: 31 d2                        	xorl	%edx, %edx
  215c82: eb 1f                        	jmp	0x215ca3 <debug.printSourceAtAddress__anon_4447+0x28e3>
  215c84: 0f b6 32                     	movzbl	(%rdx), %esi
  215c87: 83 fe 06                     	cmpl	$6, %esi
  215c8a: 74 13                        	je	0x215c9f <debug.printSourceAtAddress__anon_4447+0x28df>
  215c8c: 83 fe 03                     	cmpl	$3, %esi
  215c8f: 0f 85 ec 25 00 00            	jne	0x218281 <debug.printSourceAtAddress__anon_4447+0x4ec1>
  215c95: 80 7a f8 01                  	cmpb	$1, -8(%rdx)
  215c99: 0f 84 d6 25 00 00            	je	0x218275 <debug.printSourceAtAddress__anon_4447+0x4eb5>
  215c9f: 48 8b 52 f0                  	movq	-16(%rdx), %rdx
  215ca3: 48 89 94 24 f0 02 00 00      	movq	%rdx, 752(%rsp)
  215cab: 0f 1f 44 00 00               	nopl	(%rax,%rax)
  215cb0: 48 81 78 e8 8c 00 00 00      	cmpq	$140, -24(%rax)
  215cb8: 74 1a                        	je	0x215cd4 <debug.printSourceAtAddress__anon_4447+0x2914>
  215cba: 48 83 c0 20                  	addq	$32, %rax
  215cbe: 48 ff c9                     	decq	%rcx
  215cc1: 75 ed                        	jne	0x215cb0 <debug.printSourceAtAddress__anon_4447+0x28f0>
  215cc3: 48 c7 84 24 f8 02 00 00 00 00 00 00  	movq	$0, 760(%rsp)
  215ccf: e9 91 01 00 00               	jmp	0x215e65 <debug.printSourceAtAddress__anon_4447+0x2aa5>
  215cd4: 0f b6 08                     	movzbl	(%rax), %ecx
  215cd7: 83 f9 06                     	cmpl	$6, %ecx
  215cda: 74 13                        	je	0x215cef <debug.printSourceAtAddress__anon_4447+0x292f>
  215cdc: 83 f9 03                     	cmpl	$3, %ecx
  215cdf: 0f 85 fe 25 00 00            	jne	0x2182e3 <debug.printSourceAtAddress__anon_4447+0x4f23>
  215ce5: 80 78 f8 01                  	cmpb	$1, -8(%rax)
  215ce9: 0f 84 e8 25 00 00            	je	0x2182d7 <debug.printSourceAtAddress__anon_4447+0x4f17>
  215cef: 48 8b 40 f0                  	movq	-16(%rax), %rax
  215cf3: 48 89 84 24 f8 02 00 00      	movq	%rax, 760(%rsp)
  215cfb: e9 65 01 00 00               	jmp	0x215e65 <debug.printSourceAtAddress__anon_4447+0x2aa5>
  215d00: 48 bf aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rdi # imm = 0xAAAAAAAAAAAAAAAA
  215d0a: 31 ed                        	xorl	%ebp, %ebp
  215d0c: 48 8b 84 24 18 06 00 00      	movq	1560(%rsp), %rax
  215d14: 48 39 e8                     	cmpq	%rbp, %rax
  215d17: 0f 87 8f 23 00 00            	ja	0x2180ac <debug.printSourceAtAddress__anon_4447+0x4cec>
  215d1d: 48 8b b4 24 10 06 00 00      	movq	1552(%rsp), %rsi
  215d25: 48 c1 e0 03                  	shlq	$3, %rax
  215d29: 48 8d 14 80                  	leaq	(%rax,%rax,4), %rdx
  215d2d: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  215d31: 48 39 c7                     	cmpq	%rax, %rdi
  215d34: 73 0d                        	jae	0x215d43 <debug.printSourceAtAddress__anon_4447+0x2983>
  215d36: 48 8d 04 17                  	leaq	(%rdi,%rdx), %rax
  215d3a: 48 39 c6                     	cmpq	%rax, %rsi
  215d3d: 0f 82 9d 23 00 00            	jb	0x2180e0 <debug.printSourceAtAddress__anon_4447+0x4d20>
  215d43: 48 89 bc 24 58 01 00 00      	movq	%rdi, 344(%rsp)
  215d4b: e8 90 65 00 00               	callq	0x21c2e0 <memcpy>
  215d50: 48 8b bc 24 d8 00 00 00      	movq	216(%rsp), %rdi
  215d58: 48 8d 04 dd 00 00 00 00      	leaq	(,%rbx,8), %rax
  215d60: 48 85 db                     	testq	%rbx, %rbx
  215d63: 4c 8d 34 80                  	leaq	(%rax,%rax,4), %r14
  215d67: b8 08 00 00 00               	movl	$8, %eax
  215d6c: 4c 0f 44 f3                  	cmoveq	%rbx, %r14
  215d70: 48 0f 44 f8                  	cmoveq	%rax, %rdi
  215d74: 4d 85 f6                     	testq	%r14, %r14
  215d77: 74 50                        	je	0x215dc9 <debug.printSourceAtAddress__anon_4447+0x2a09>
  215d79: 48 8b 44 24 20               	movq	32(%rsp), %rax
  215d7e: be aa 00 00 00               	movl	$170, %esi
  215d83: 4c 89 f2                     	movq	%r14, %rdx
  215d86: 4c 89 bc 24 d8 00 00 00      	movq	%r15, 216(%rsp)
  215d8e: 49 89 ff                     	movq	%rdi, %r15
  215d91: 48 8b 18                     	movq	(%rax), %rbx
  215d94: 48 8b 40 08                  	movq	8(%rax), %rax
  215d98: 48 89 84 24 50 01 00 00      	movq	%rax, 336(%rsp)
  215da0: e8 3b 66 00 00               	callq	0x21c3e0 <memset>
  215da5: 48 8b 84 24 50 01 00 00      	movq	336(%rsp), %rax
  215dad: 48 89 df                     	movq	%rbx, %rdi
  215db0: 4c 89 fe                     	movq	%r15, %rsi
  215db3: 4c 89 f2                     	movq	%r14, %rdx
  215db6: b9 03 00 00 00               	movl	$3, %ecx
  215dbb: 4d 89 e0                     	movq	%r12, %r8
  215dbe: ff 50 10                     	callq	*16(%rax)
  215dc1: 4c 8b bc 24 d8 00 00 00      	movq	216(%rsp), %r15
  215dc9: 48 8b 84 24 58 01 00 00      	movq	344(%rsp), %rax
  215dd1: 48 89 84 24 10 06 00 00      	movq	%rax, 1552(%rsp)
  215dd9: 48 89 ac 24 20 06 00 00      	movq	%rbp, 1568(%rsp)
  215de1: 48 89 eb                     	movq	%rbp, %rbx
  215de4: 4c 8b 74 24 10               	movq	16(%rsp), %r14
  215de9: 48 8b 6c 24 18               	movq	24(%rsp), %rbp
  215dee: 44 8b 84 24 68 01 00 00      	movl	360(%rsp), %r8d
  215df6: 4c 8b 8c 24 60 01 00 00      	movq	352(%rsp), %r9
  215dfe: 48 8b 84 24 18 06 00 00      	movq	1560(%rsp), %rax
  215e06: 48 39 d8                     	cmpq	%rbx, %rax
  215e09: 0f 83 c4 d7 ff ff            	jae	0x2135d3 <debug.printSourceAtAddress__anon_4447+0x213>
  215e0f: 48 8d 48 01                  	leaq	1(%rax), %rcx
  215e13: 48 8d 04 80                  	leaq	(%rax,%rax,4), %rax
  215e17: 48 89 8c 24 18 06 00 00      	movq	%rcx, 1560(%rsp)
  215e1f: 48 8b 8c 24 10 06 00 00      	movq	1552(%rsp), %rcx
  215e27: 4c 89 3c c1                  	movq	%r15, (%rcx,%rax,8)
  215e2b: 4c 89 4c c1 08               	movq	%r9, 8(%rcx,%rax,8)
  215e30: 44 88 44 c1 10               	movb	%r8b, 16(%rcx,%rax,8)
  215e35: 8b 94 24 80 01 00 00         	movl	384(%rsp), %edx
  215e3c: 8b b4 24 83 01 00 00         	movl	387(%rsp), %esi
  215e43: 89 54 c1 11                  	movl	%edx, 17(%rcx,%rax,8)
  215e47: 89 74 c1 14                  	movl	%esi, 20(%rcx,%rax,8)
  215e4b: 48 8b b4 24 a0 00 00 00      	movq	160(%rsp), %rsi
  215e53: 4c 89 6c c1 18               	movq	%r13, 24(%rcx,%rax,8)
  215e58: 4c 8d ac 24 20 15 00 00      	leaq	5408(%rsp), %r13
  215e60: 48 89 74 c1 20               	movq	%rsi, 32(%rcx,%rax,8)
  215e65: 48 8b 84 24 90 00 00 00      	movq	144(%rsp), %rax
  215e6d: 48 8b 4c 24 68               	movq	104(%rsp), %rcx
  215e72: 48 39 c8                     	cmpq	%rcx, %rax
  215e75: 48 0f 42 c8                  	cmovbq	%rax, %rcx
  215e79: 48 89 8c 24 98 00 00 00      	movq	%rcx, 152(%rsp)
  215e81: 48 8b 54 24 50               	movq	80(%rsp), %rdx
  215e86: 48 39 d1                     	cmpq	%rdx, %rcx
  215e89: 0f 82 87 f5 ff ff            	jb	0x215416 <debug.printSourceAtAddress__anon_4447+0x2056>
  215e8f: e9 f5 ef ff ff               	jmp	0x214e89 <debug.printSourceAtAddress__anon_4447+0x1ac9>
  215e94: 48 8b 74 24 40               	movq	64(%rsp), %rsi
  215e99: 48 85 f6                     	testq	%rsi, %rsi
  215e9c: 74 29                        	je	0x215ec7 <debug.printSourceAtAddress__anon_4447+0x2b07>
  215e9e: 66 90                        	nop
  215ea0: 48 8b 56 08                  	movq	8(%rsi), %rdx
  215ea4: 48 8b 7c 24 30               	movq	48(%rsp), %rdi
  215ea9: 48 8b 44 24 38               	movq	56(%rsp), %rax
  215eae: 48 8b 1e                     	movq	(%rsi), %rbx
  215eb1: b9 03 00 00 00               	movl	$3, %ecx
  215eb6: 4d 89 e0                     	movq	%r12, %r8
  215eb9: c5 f8 77                     	vzeroupper
  215ebc: ff 50 10                     	callq	*16(%rax)
  215ebf: 48 89 de                     	movq	%rbx, %rsi
  215ec2: 48 85 db                     	testq	%rbx, %rbx
  215ec5: 75 d9                        	jne	0x215ea0 <debug.printSourceAtAddress__anon_4447+0x2ae0>
  215ec7: 48 8b 04 24                  	movq	(%rsp), %rax
  215ecb: 48 8b 8c 24 20 05 00 00      	movq	1312(%rsp), %rcx
  215ed3: 48 8b 00                     	movq	(%rax), %rax
  215ed6: 48 89 8c 24 70 02 00 00      	movq	%rcx, 624(%rsp)
  215ede: 48 8d 8c 24 70 02 00 00      	leaq	624(%rsp), %rcx
  215ee6: 48 89 8c 24 88 00 00 00      	movq	%rcx, 136(%rsp)
  215eee: 48 89 84 24 e0 00 00 00      	movq	%rax, 224(%rsp)
  215ef6: 48 8b 84 24 28 05 00 00      	movq	1320(%rsp), %rax
  215efe: 48 89 84 24 78 02 00 00      	movq	%rax, 632(%rsp)
  215f06: 48 85 c0                     	testq	%rax, %rax
  215f09: 0f 84 8c 0f 00 00            	je	0x216e9b <debug.printSourceAtAddress__anon_4447+0x3adb>
  215f0f: 31 db                        	xorl	%ebx, %ebx
  215f11: 8b 8c 24 28 06 00 00         	movl	1576(%rsp), %ecx
  215f18: 48 8b 34 24                  	movq	(%rsp), %rsi
  215f1c: 48 39 d8                     	cmpq	%rbx, %rax
  215f1f: 48 8d bc 24 58 02 00 00      	leaq	600(%rsp), %rdi
  215f27: 48 8d 94 24 88 00 00 00      	leaq	136(%rsp), %rdx
  215f2f: 4c 8d 84 24 e0 01 00 00      	leaq	480(%rsp), %r8
  215f37: c6 84 24 e0 01 00 00 aa      	movb	$-86, 480(%rsp)
  215f3f: 48 0f 43 c3                  	cmovaeq	%rbx, %rax
  215f43: 48 89 84 24 80 02 00 00      	movq	%rax, 640(%rsp)
  215f4b: c5 f8 77                     	vzeroupper
  215f4e: e8 4d 38 ff ff               	callq	0x2097a0 <dwarf.readUnitLength__anon_5647>
  215f53: 0f b7 84 24 60 02 00 00      	movzwl	608(%rsp), %eax
  215f5b: 66 85 c0                     	testw	%ax, %ax
  215f5e: 0f 85 ed 13 00 00            	jne	0x217351 <debug.printSourceAtAddress__anon_4447+0x3f91>
  215f64: 48 8b 8c 24 58 02 00 00      	movq	600(%rsp), %rcx
  215f6c: 48 85 c9                     	testq	%rcx, %rcx
  215f6f: 0f 84 26 0f 00 00            	je	0x216e9b <debug.printSourceAtAddress__anon_4447+0x3adb>
  215f75: 0f b6 84 24 e0 01 00 00      	movzbl	480(%rsp), %eax
  215f7d: 48 89 9c 24 a0 00 00 00      	movq	%rbx, 160(%rsp)
  215f85: 48 89 44 24 08               	movq	%rax, 8(%rsp)
  215f8a: 48 8d 04 c5 04 00 00 00      	leaq	4(,%rax,8), %rax
  215f92: 48 01 c1                     	addq	%rax, %rcx
  215f95: 48 89 8c 24 a8 00 00 00      	movq	%rcx, 168(%rsp)
  215f9d: 0f 82 7f 19 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  215fa3: 0f b6 ac 24 28 06 00 00      	movzbl	1576(%rsp), %ebp
  215fab: 48 8b 9c 24 88 00 00 00      	movq	136(%rsp), %rbx
  215fb3: 45 31 f6                     	xorl	%r14d, %r14d
  215fb6: 66 c7 84 24 f0 00 00 00 aa aa	movw	$43690, 240(%rsp)       # imm = 0xAAAA
  215fc0: b9 02 00 00 00               	movl	$2, %ecx
  215fc5: 4a 8d 94 34 f0 00 00 00      	leaq	240(%rsp,%r14), %rdx
  215fcd: 4c 89 ef                     	movq	%r13, %rdi
  215fd0: 48 89 de                     	movq	%rbx, %rsi
  215fd3: 4c 29 f1                     	subq	%r14, %rcx
  215fd6: e8 a5 32 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  215fdb: 48 8b 84 24 20 15 00 00      	movq	5408(%rsp), %rax
  215fe3: 48 85 c0                     	testq	%rax, %rax
  215fe6: 0f 84 4e 10 00 00            	je	0x21703a <debug.printSourceAtAddress__anon_4447+0x3c7a>
  215fec: 49 01 c6                     	addq	%rax, %r14
  215fef: 0f 82 2d 19 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  215ff5: 49 83 fe 02                  	cmpq	$2, %r14
  215ff9: 72 c5                        	jb	0x215fc0 <debug.printSourceAtAddress__anon_4447+0x2c00>
  215ffb: 0f b7 84 24 f0 00 00 00      	movzwl	240(%rsp), %eax
  216003: 89 c3                        	movl	%eax, %ebx
  216005: 66 c1 c3 08                  	rolw	$8, %bx
  216009: 40 f6 c5 01                  	testb	$1, %bpl
  21600d: 0f 45 d8                     	cmovnel	%eax, %ebx
  216010: 8d 43 fa                     	leal	-6(%rbx), %eax
  216013: 66 83 f8 fb                  	cmpw	$-5, %ax
  216017: 0f 86 d1 19 00 00            	jbe	0x2179ee <debug.printSourceAtAddress__anon_4447+0x462e>
  21601d: 48 89 9c 24 c8 00 00 00      	movq	%rbx, 200(%rsp)
  216025: 66 83 fb 05                  	cmpw	$5, %bx
  216029: 0f 82 21 01 00 00            	jb	0x216150 <debug.printSourceAtAddress__anon_4447+0x2d90>
  21602f: 48 8b b4 24 88 00 00 00      	movq	136(%rsp), %rsi
  216037: b9 01 00 00 00               	movl	$1, %ecx
  21603c: 4c 89 ef                     	movq	%r13, %rdi
  21603f: 48 8d 94 24 f0 00 00 00      	leaq	240(%rsp), %rdx
  216047: c6 84 24 f0 00 00 00 aa      	movb	$-86, 240(%rsp)
  21604f: e8 2c 32 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  216054: 48 83 bc 24 20 15 00 00 00   	cmpq	$0, 5408(%rsp)
  21605d: 48 8b 6c 24 18               	movq	24(%rsp), %rbp
  216062: 0f 84 bf 1f 00 00            	je	0x218027 <debug.printSourceAtAddress__anon_4447+0x4c67>
  216068: 80 bc 24 f0 00 00 00 01      	cmpb	$1, 240(%rsp)
  216070: 0f 85 ca 1f 00 00            	jne	0x218040 <debug.printSourceAtAddress__anon_4447+0x4c80>
  216076: 48 8b b4 24 88 00 00 00      	movq	136(%rsp), %rsi
  21607e: b9 01 00 00 00               	movl	$1, %ecx
  216083: 4c 89 ef                     	movq	%r13, %rdi
  216086: 48 8d 94 24 f0 00 00 00      	leaq	240(%rsp), %rdx
  21608e: c6 84 24 f0 00 00 00 aa      	movb	$-86, 240(%rsp)
  216096: e8 e5 31 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  21609b: 48 83 bc 24 20 15 00 00 00   	cmpq	$0, 5408(%rsp)
  2160a4: 0f 84 a1 1f 00 00            	je	0x21804b <debug.printSourceAtAddress__anon_4447+0x4c8b>
  2160aa: 80 7c 24 08 00               	cmpb	$0, 8(%rsp)
  2160af: 0f b6 ac 24 f0 00 00 00      	movzbl	240(%rsp), %ebp
  2160b7: 44 0f b6 b4 24 28 06 00 00   	movzbl	1576(%rsp), %r14d
  2160c0: 48 8b 9c 24 88 00 00 00      	movq	136(%rsp), %rbx
  2160c8: 0f 84 b6 01 00 00            	je	0x216284 <debug.printSourceAtAddress__anon_4447+0x2ec4>
  2160ce: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  2160d8: 45 31 ff                     	xorl	%r15d, %r15d
  2160db: 48 89 84 24 f0 00 00 00      	movq	%rax, 240(%rsp)
  2160e3: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
  2160f0: b9 08 00 00 00               	movl	$8, %ecx
  2160f5: 4a 8d 94 3c f0 00 00 00      	leaq	240(%rsp,%r15), %rdx
  2160fd: 4c 89 ef                     	movq	%r13, %rdi
  216100: 48 89 de                     	movq	%rbx, %rsi
  216103: 4c 29 f9                     	subq	%r15, %rcx
  216106: e8 75 31 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  21610b: 48 8b 84 24 20 15 00 00      	movq	5408(%rsp), %rax
  216113: 48 85 c0                     	testq	%rax, %rax
  216116: 0f 84 1e 0f 00 00            	je	0x21703a <debug.printSourceAtAddress__anon_4447+0x3c7a>
  21611c: 49 01 c7                     	addq	%rax, %r15
  21611f: 0f 82 fd 17 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  216125: 49 83 ff 08                  	cmpq	$8, %r15
  216129: 72 c5                        	jb	0x2160f0 <debug.printSourceAtAddress__anon_4447+0x2d30>
  21612b: 48 8b 84 24 f0 00 00 00      	movq	240(%rsp), %rax
  216133: 41 f6 c6 01                  	testb	$1, %r14b
  216137: 48 89 c3                     	movq	%rax, %rbx
  21613a: 48 0f cb                     	bswapq	%rbx
  21613d: 48 0f 45 d8                  	cmovneq	%rax, %rbx
  216141: 40 80 fd 08                  	cmpb	$8, %bpl
  216145: 0f 84 ac 01 00 00            	je	0x2162f7 <debug.printSourceAtAddress__anon_4447+0x2f37>
  21614b: e9 9e 18 00 00               	jmp	0x2179ee <debug.printSourceAtAddress__anon_4447+0x462e>
  216150: 80 7c 24 08 00               	cmpb	$0, 8(%rsp)
  216155: 0f b6 ac 24 28 06 00 00      	movzbl	1576(%rsp), %ebp
  21615d: 48 8b 9c 24 88 00 00 00      	movq	136(%rsp), %rbx
  216165: 74 6c                        	je	0x2161d3 <debug.printSourceAtAddress__anon_4447+0x2e13>
  216167: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  216171: 45 31 f6                     	xorl	%r14d, %r14d
  216174: 48 89 84 24 f0 00 00 00      	movq	%rax, 240(%rsp)
  21617c: 0f 1f 40 00                  	nopl	(%rax)
  216180: b9 08 00 00 00               	movl	$8, %ecx
  216185: 4a 8d 94 34 f0 00 00 00      	leaq	240(%rsp,%r14), %rdx
  21618d: 4c 89 ef                     	movq	%r13, %rdi
  216190: 48 89 de                     	movq	%rbx, %rsi
  216193: 4c 29 f1                     	subq	%r14, %rcx
  216196: e8 e5 30 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  21619b: 48 8b 84 24 20 15 00 00      	movq	5408(%rsp), %rax
  2161a3: 48 85 c0                     	testq	%rax, %rax
  2161a6: 0f 84 8e 0e 00 00            	je	0x21703a <debug.printSourceAtAddress__anon_4447+0x3c7a>
  2161ac: 49 01 c6                     	addq	%rax, %r14
  2161af: 0f 82 6d 17 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  2161b5: 49 83 fe 08                  	cmpq	$8, %r14
  2161b9: 72 c5                        	jb	0x216180 <debug.printSourceAtAddress__anon_4447+0x2dc0>
  2161bb: 48 8b 84 24 f0 00 00 00      	movq	240(%rsp), %rax
  2161c3: 40 f6 c5 01                  	testb	$1, %bpl
  2161c7: 48 89 c3                     	movq	%rax, %rbx
  2161ca: 48 0f cb                     	bswapq	%rbx
  2161cd: 48 0f 45 d8                  	cmovneq	%rax, %rbx
  2161d1: eb 6a                        	jmp	0x21623d <debug.printSourceAtAddress__anon_4447+0x2e7d>
  2161d3: 45 31 f6                     	xorl	%r14d, %r14d
  2161d6: c7 84 24 f0 00 00 00 aa aa aa aa     	movl	$2863311530, 240(%rsp) # imm = 0xAAAAAAAA
  2161e1: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
  2161f0: b9 04 00 00 00               	movl	$4, %ecx
  2161f5: 4a 8d 94 34 f0 00 00 00      	leaq	240(%rsp,%r14), %rdx
  2161fd: 4c 89 ef                     	movq	%r13, %rdi
  216200: 48 89 de                     	movq	%rbx, %rsi
  216203: 4c 29 f1                     	subq	%r14, %rcx
  216206: e8 75 30 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  21620b: 48 8b 84 24 20 15 00 00      	movq	5408(%rsp), %rax
  216213: 48 85 c0                     	testq	%rax, %rax
  216216: 0f 84 1e 0e 00 00            	je	0x21703a <debug.printSourceAtAddress__anon_4447+0x3c7a>
  21621c: 49 01 c6                     	addq	%rax, %r14
  21621f: 0f 82 fd 16 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  216225: 49 83 fe 04                  	cmpq	$4, %r14
  216229: 72 c5                        	jb	0x2161f0 <debug.printSourceAtAddress__anon_4447+0x2e30>
  21622b: 8b 84 24 f0 00 00 00         	movl	240(%rsp), %eax
  216232: 40 f6 c5 01                  	testb	$1, %bpl
  216236: 89 c3                        	movl	%eax, %ebx
  216238: 0f cb                        	bswapl	%ebx
  21623a: 0f 45 d8                     	cmovnel	%eax, %ebx
  21623d: 48 8b b4 24 88 00 00 00      	movq	136(%rsp), %rsi
  216245: b9 01 00 00 00               	movl	$1, %ecx
  21624a: 4c 89 ef                     	movq	%r13, %rdi
  21624d: 48 8d 94 24 f0 00 00 00      	leaq	240(%rsp), %rdx
  216255: c6 84 24 f0 00 00 00 aa      	movb	$-86, 240(%rsp)
  21625d: e8 1e 30 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  216262: 48 83 bc 24 20 15 00 00 00   	cmpq	$0, 5408(%rsp)
  21626b: 0f 84 ec 1d 00 00            	je	0x21805d <debug.printSourceAtAddress__anon_4447+0x4c9d>
  216271: 0f b6 ac 24 f0 00 00 00      	movzbl	240(%rsp), %ebp
  216279: 40 80 fd 08                  	cmpb	$8, %bpl
  21627d: 74 78                        	je	0x2162f7 <debug.printSourceAtAddress__anon_4447+0x2f37>
  21627f: e9 6a 17 00 00               	jmp	0x2179ee <debug.printSourceAtAddress__anon_4447+0x462e>
  216284: 45 31 ff                     	xorl	%r15d, %r15d
  216287: c7 84 24 f0 00 00 00 aa aa aa aa     	movl	$2863311530, 240(%rsp) # imm = 0xAAAAAAAA
  216292: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)
  2162a0: b9 04 00 00 00               	movl	$4, %ecx
  2162a5: 4a 8d 94 3c f0 00 00 00      	leaq	240(%rsp,%r15), %rdx
  2162ad: 4c 89 ef                     	movq	%r13, %rdi
  2162b0: 48 89 de                     	movq	%rbx, %rsi
  2162b3: 4c 29 f9                     	subq	%r15, %rcx
  2162b6: e8 c5 2f 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2162bb: 48 8b 84 24 20 15 00 00      	movq	5408(%rsp), %rax
  2162c3: 48 85 c0                     	testq	%rax, %rax
  2162c6: 0f 84 6e 0d 00 00            	je	0x21703a <debug.printSourceAtAddress__anon_4447+0x3c7a>
  2162cc: 49 01 c7                     	addq	%rax, %r15
  2162cf: 0f 82 4d 16 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  2162d5: 49 83 ff 04                  	cmpq	$4, %r15
  2162d9: 72 c5                        	jb	0x2162a0 <debug.printSourceAtAddress__anon_4447+0x2ee0>
  2162db: 8b 84 24 f0 00 00 00         	movl	240(%rsp), %eax
  2162e2: 41 f6 c6 01                  	testb	$1, %r14b
  2162e6: 89 c3                        	movl	%eax, %ebx
  2162e8: 0f cb                        	bswapl	%ebx
  2162ea: 0f 45 d8                     	cmovnel	%eax, %ebx
  2162ed: 40 80 fd 08                  	cmpb	$8, %bpl
  2162f1: 0f 85 f7 16 00 00            	jne	0x2179ee <debug.printSourceAtAddress__anon_4447+0x462e>
  2162f7: 48 8b 34 24                  	movq	(%rsp), %rsi
  2162fb: 48 8b 4c 24 20               	movq	32(%rsp), %rcx
  216300: 4c 8b b4 24 80 02 00 00      	movq	640(%rsp), %r14
  216308: 48 8d bc 24 b0 00 00 00      	leaq	176(%rsp), %rdi
  216310: 48 8d 94 24 20 05 00 00      	leaq	1312(%rsp), %rdx
  216318: 49 89 d8                     	movq	%rbx, %r8
  21631b: e8 70 eb fe ff               	callq	0x204e90 <dwarf.DwarfInfo.getAbbrevTable>
  216320: 0f b7 84 24 b8 00 00 00      	movzwl	184(%rsp), %eax
  216328: 48 8b 6c 24 18               	movq	24(%rsp), %rbp
  21632d: 66 85 c0                     	testw	%ax, %ax
  216330: 0f 85 1b 10 00 00            	jne	0x217351 <debug.printSourceAtAddress__anon_4447+0x3f91>
  216336: 48 8b 84 24 78 02 00 00      	movq	632(%rsp), %rax
  21633e: 48 8b 4c 24 20               	movq	32(%rsp), %rcx
  216343: 4c 8b bc 24 b0 00 00 00      	movq	176(%rsp), %r15
  21634b: be 48 00 00 00               	movl	$72, %esi
  216350: ba 03 00 00 00               	movl	$3, %edx
  216355: 4c 39 f0                     	cmpq	%r14, %rax
  216358: 4c 0f 42 f0                  	cmovbq	%rax, %r14
  21635c: 4c 89 b4 24 80 02 00 00      	movq	%r14, 640(%rsp)
  216364: 48 8b 39                     	movq	(%rcx), %rdi
  216367: 48 8b 41 08                  	movq	8(%rcx), %rax
  21636b: 4c 89 e1                     	movq	%r12, %rcx
  21636e: ff 10                        	callq	*(%rax)
  216370: 48 85 c0                     	testq	%rax, %rax
  216373: 0f 84 9c 18 00 00            	je	0x217c15 <debug.printSourceAtAddress__anon_4447+0x4855>
  216379: c5 fc 28 05 bf 9e fe ff      	vmovaps	-90433(%rip), %ymm0     # 0x200240 <zig-graph+0x200240>
  216381: 48 89 c1                     	movq	%rax, %rcx
  216384: 48 b8 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rax # imm = 0xAAAAAAAAAAAAAAAA
  21638e: 48 89 41 40                  	movq	%rax, 64(%rcx)
  216392: 48 89 4c 24 50               	movq	%rcx, 80(%rsp)
  216397: c5 fc 11 41 20               	vmovups	%ymm0, 32(%rcx)
  21639c: c5 fc 11 01                  	vmovups	%ymm0, (%rcx)
  2163a0: f6 c1 07                     	testb	$7, %cl
  2163a3: 0f 85 f4 1d 00 00            	jne	0x21819d <debug.printSourceAtAddress__anon_4447+0x4ddd>
  2163a9: 48 8b b4 24 88 00 00 00      	movq	136(%rsp), %rsi
  2163b1: b9 01 00 00 00               	movl	$1, %ecx
  2163b6: 48 8d bc 24 f0 00 00 00      	leaq	240(%rsp), %rdi
  2163be: 48 8d 54 24 70               	leaq	112(%rsp), %rdx
  2163c3: c6 44 24 70 aa               	movb	$-86, 112(%rsp)
  2163c8: c5 f8 77                     	vzeroupper
  2163cb: e8 b0 2e 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2163d0: 48 83 bc 24 f0 00 00 00 00   	cmpq	$0, 240(%rsp)
  2163d9: 0f 84 03 17 00 00            	je	0x217ae2 <debug.printSourceAtAddress__anon_4447+0x4722>
  2163df: 0f b6 44 24 70               	movzbl	112(%rsp), %eax
  2163e4: 41 89 c6                     	movl	%eax, %r14d
  2163e7: 41 83 e6 7f                  	andl	$127, %r14d
  2163eb: 84 c0                        	testb	%al, %al
  2163ed: 0f 89 b9 02 00 00            	jns	0x2166ac <debug.printSourceAtAddress__anon_4447+0x32ec>
  2163f3: 48 8b b4 24 88 00 00 00      	movq	136(%rsp), %rsi
  2163fb: b9 01 00 00 00               	movl	$1, %ecx
  216400: 48 8d bc 24 f0 00 00 00      	leaq	240(%rsp), %rdi
  216408: 48 8d 54 24 70               	leaq	112(%rsp), %rdx
  21640d: c6 44 24 70 aa               	movb	$-86, 112(%rsp)
  216412: e8 69 2e 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  216417: 48 83 bc 24 f0 00 00 00 00   	cmpq	$0, 240(%rsp)
  216420: 0f 84 bc 16 00 00            	je	0x217ae2 <debug.printSourceAtAddress__anon_4447+0x4722>
  216426: 0f b6 44 24 70               	movzbl	112(%rsp), %eax
  21642b: 89 c1                        	movl	%eax, %ecx
  21642d: 83 e1 7f                     	andl	$127, %ecx
  216430: 48 c1 e1 07                  	shlq	$7, %rcx
  216434: 49 09 ce                     	orq	%rcx, %r14
  216437: 84 c0                        	testb	%al, %al
  216439: 0f 89 6d 02 00 00            	jns	0x2166ac <debug.printSourceAtAddress__anon_4447+0x32ec>
  21643f: 48 8b b4 24 88 00 00 00      	movq	136(%rsp), %rsi
  216447: b9 01 00 00 00               	movl	$1, %ecx
  21644c: 48 8d bc 24 f0 00 00 00      	leaq	240(%rsp), %rdi
  216454: 48 8d 54 24 70               	leaq	112(%rsp), %rdx
  216459: c6 44 24 70 aa               	movb	$-86, 112(%rsp)
  21645e: e8 1d 2e 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  216463: 48 83 bc 24 f0 00 00 00 00   	cmpq	$0, 240(%rsp)
  21646c: 0f 84 70 16 00 00            	je	0x217ae2 <debug.printSourceAtAddress__anon_4447+0x4722>
  216472: 0f b6 44 24 70               	movzbl	112(%rsp), %eax
  216477: 89 c1                        	movl	%eax, %ecx
  216479: 83 e1 7f                     	andl	$127, %ecx
  21647c: 48 c1 e1 0e                  	shlq	$14, %rcx
  216480: 49 09 ce                     	orq	%rcx, %r14
  216483: 84 c0                        	testb	%al, %al
  216485: 0f 89 21 02 00 00            	jns	0x2166ac <debug.printSourceAtAddress__anon_4447+0x32ec>
  21648b: 48 8b b4 24 88 00 00 00      	movq	136(%rsp), %rsi
  216493: b9 01 00 00 00               	movl	$1, %ecx
  216498: 48 8d bc 24 f0 00 00 00      	leaq	240(%rsp), %rdi
  2164a0: 48 8d 54 24 70               	leaq	112(%rsp), %rdx
  2164a5: c6 44 24 70 aa               	movb	$-86, 112(%rsp)
  2164aa: e8 d1 2d 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2164af: 48 83 bc 24 f0 00 00 00 00   	cmpq	$0, 240(%rsp)
  2164b8: 0f 84 24 16 00 00            	je	0x217ae2 <debug.printSourceAtAddress__anon_4447+0x4722>
  2164be: 0f b6 44 24 70               	movzbl	112(%rsp), %eax
  2164c3: 89 c1                        	movl	%eax, %ecx
  2164c5: 83 e1 7f                     	andl	$127, %ecx
  2164c8: 48 c1 e1 15                  	shlq	$21, %rcx
  2164cc: 49 09 ce                     	orq	%rcx, %r14
  2164cf: 84 c0                        	testb	%al, %al
  2164d1: 0f 89 d5 01 00 00            	jns	0x2166ac <debug.printSourceAtAddress__anon_4447+0x32ec>
  2164d7: 48 8b b4 24 88 00 00 00      	movq	136(%rsp), %rsi
  2164df: b9 01 00 00 00               	movl	$1, %ecx
  2164e4: 48 8d bc 24 f0 00 00 00      	leaq	240(%rsp), %rdi
  2164ec: 48 8d 54 24 70               	leaq	112(%rsp), %rdx
  2164f1: c6 44 24 70 aa               	movb	$-86, 112(%rsp)
  2164f6: e8 85 2d 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2164fb: 48 83 bc 24 f0 00 00 00 00   	cmpq	$0, 240(%rsp)
  216504: 0f 84 d8 15 00 00            	je	0x217ae2 <debug.printSourceAtAddress__anon_4447+0x4722>
  21650a: 0f b6 44 24 70               	movzbl	112(%rsp), %eax
  21650f: 89 c1                        	movl	%eax, %ecx
  216511: 83 e1 7f                     	andl	$127, %ecx
  216514: 48 c1 e1 1c                  	shlq	$28, %rcx
  216518: 49 09 ce                     	orq	%rcx, %r14
  21651b: 84 c0                        	testb	%al, %al
  21651d: 0f 89 89 01 00 00            	jns	0x2166ac <debug.printSourceAtAddress__anon_4447+0x32ec>
  216523: 48 8b b4 24 88 00 00 00      	movq	136(%rsp), %rsi
  21652b: b9 01 00 00 00               	movl	$1, %ecx
  216530: 48 8d bc 24 f0 00 00 00      	leaq	240(%rsp), %rdi
  216538: 48 8d 54 24 70               	leaq	112(%rsp), %rdx
  21653d: c6 44 24 70 aa               	movb	$-86, 112(%rsp)
  216542: e8 39 2d 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  216547: 48 83 bc 24 f0 00 00 00 00   	cmpq	$0, 240(%rsp)
  216550: 0f 84 8c 15 00 00            	je	0x217ae2 <debug.printSourceAtAddress__anon_4447+0x4722>
  216556: 0f b6 44 24 70               	movzbl	112(%rsp), %eax
  21655b: 89 c1                        	movl	%eax, %ecx
  21655d: 83 e1 7f                     	andl	$127, %ecx
  216560: 48 c1 e1 23                  	shlq	$35, %rcx
  216564: 49 09 ce                     	orq	%rcx, %r14
  216567: 84 c0                        	testb	%al, %al
  216569: 0f 89 3d 01 00 00            	jns	0x2166ac <debug.printSourceAtAddress__anon_4447+0x32ec>
  21656f: 48 8b b4 24 88 00 00 00      	movq	136(%rsp), %rsi
  216577: b9 01 00 00 00               	movl	$1, %ecx
  21657c: 48 8d bc 24 f0 00 00 00      	leaq	240(%rsp), %rdi
  216584: 48 8d 54 24 70               	leaq	112(%rsp), %rdx
  216589: c6 44 24 70 aa               	movb	$-86, 112(%rsp)
  21658e: e8 ed 2c 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  216593: 48 83 bc 24 f0 00 00 00 00   	cmpq	$0, 240(%rsp)
  21659c: 0f 84 40 15 00 00            	je	0x217ae2 <debug.printSourceAtAddress__anon_4447+0x4722>
  2165a2: 0f b6 44 24 70               	movzbl	112(%rsp), %eax
  2165a7: 89 c1                        	movl	%eax, %ecx
  2165a9: 83 e1 7f                     	andl	$127, %ecx
  2165ac: 48 c1 e1 2a                  	shlq	$42, %rcx
  2165b0: 49 09 ce                     	orq	%rcx, %r14
  2165b3: 84 c0                        	testb	%al, %al
  2165b5: 0f 89 f1 00 00 00            	jns	0x2166ac <debug.printSourceAtAddress__anon_4447+0x32ec>
  2165bb: 48 8b b4 24 88 00 00 00      	movq	136(%rsp), %rsi
  2165c3: b9 01 00 00 00               	movl	$1, %ecx
  2165c8: 48 8d bc 24 f0 00 00 00      	leaq	240(%rsp), %rdi
  2165d0: 48 8d 54 24 70               	leaq	112(%rsp), %rdx
  2165d5: c6 44 24 70 aa               	movb	$-86, 112(%rsp)
  2165da: e8 a1 2c 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  2165df: 48 83 bc 24 f0 00 00 00 00   	cmpq	$0, 240(%rsp)
  2165e8: 0f 84 f4 14 00 00            	je	0x217ae2 <debug.printSourceAtAddress__anon_4447+0x4722>
  2165ee: 0f b6 44 24 70               	movzbl	112(%rsp), %eax
  2165f3: 89 c1                        	movl	%eax, %ecx
  2165f5: 83 e1 7f                     	andl	$127, %ecx
  2165f8: 48 c1 e1 31                  	shlq	$49, %rcx
  2165fc: 49 09 ce                     	orq	%rcx, %r14
  2165ff: 84 c0                        	testb	%al, %al
  216601: 0f 89 a5 00 00 00            	jns	0x2166ac <debug.printSourceAtAddress__anon_4447+0x32ec>
  216607: 48 8b b4 24 88 00 00 00      	movq	136(%rsp), %rsi
  21660f: b9 01 00 00 00               	movl	$1, %ecx
  216614: 48 8d bc 24 f0 00 00 00      	leaq	240(%rsp), %rdi
  21661c: 48 8d 54 24 70               	leaq	112(%rsp), %rdx
  216621: c6 44 24 70 aa               	movb	$-86, 112(%rsp)
  216626: e8 55 2c 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  21662b: 48 83 bc 24 f0 00 00 00 00   	cmpq	$0, 240(%rsp)
  216634: 0f 84 a8 14 00 00            	je	0x217ae2 <debug.printSourceAtAddress__anon_4447+0x4722>
  21663a: 0f b6 44 24 70               	movzbl	112(%rsp), %eax
  21663f: 89 c1                        	movl	%eax, %ecx
  216641: 83 e1 7f                     	andl	$127, %ecx
  216644: 48 c1 e1 38                  	shlq	$56, %rcx
  216648: 49 09 ce                     	orq	%rcx, %r14
  21664b: 84 c0                        	testb	%al, %al
  21664d: 79 53                        	jns	0x2166a2 <debug.printSourceAtAddress__anon_4447+0x32e2>
  21664f: 48 8b b4 24 88 00 00 00      	movq	136(%rsp), %rsi
  216657: b9 01 00 00 00               	movl	$1, %ecx
  21665c: 48 8d bc 24 f0 00 00 00      	leaq	240(%rsp), %rdi
  216664: 48 8d 54 24 70               	leaq	112(%rsp), %rdx
  216669: c6 44 24 70 aa               	movb	$-86, 112(%rsp)
  21666e: e8 0d 2c 00 00               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  216673: 48 83 bc 24 f0 00 00 00 00   	cmpq	$0, 240(%rsp)
  21667c: 0f 84 60 14 00 00            	je	0x217ae2 <debug.printSourceAtAddress__anon_4447+0x4722>
  216682: 0f b6 44 24 70               	movzbl	112(%rsp), %eax
  216687: 66 bb 29 00                  	movw	$41, %bx
  21668b: a8 7e                        	testb	$126, %al
  21668d: 0f 85 7b 0c 00 00            	jne	0x21730e <debug.printSourceAtAddress__anon_4447+0x3f4e>
  216693: 84 c0                        	testb	%al, %al
  216695: 0f 88 73 0c 00 00            	js	0x21730e <debug.printSourceAtAddress__anon_4447+0x3f4e>
  21669b: 48 c1 e0 3f                  	shlq	$63, %rax
  21669f: 49 09 c6                     	orq	%rax, %r14
  2166a2: 48 8b 6c 24 18               	movq	24(%rsp), %rbp
  2166a7: 4c 8b 64 24 28               	movq	40(%rsp), %r12
  2166ac: 4d 85 f6                     	testq	%r14, %r14
  2166af: 0f 84 7d 15 00 00            	je	0x217c32 <debug.printSourceAtAddress__anon_4447+0x4872>
  2166b5: 49 8b 47 08                  	movq	8(%r15), %rax
  2166b9: 48 85 c0                     	testq	%rax, %rax
  2166bc: 0f 84 48 0c 00 00            	je	0x21730a <debug.printSourceAtAddress__anon_4447+0x3f4a>
  2166c2: 49 8b 1f                     	movq	(%r15), %rbx
  2166c5: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
  2166d0: 4c 39 33                     	cmpq	%r14, (%rbx)
  2166d3: 74 0e                        	je	0x2166e3 <debug.printSourceAtAddress__anon_4447+0x3323>
  2166d5: 48 83 c3 40                  	addq	$64, %rbx
  2166d9: 48 ff c8                     	decq	%rax
  2166dc: 75 f2                        	jne	0x2166d0 <debug.printSourceAtAddress__anon_4447+0x3310>
  2166de: e9 27 0c 00 00               	jmp	0x21730a <debug.printSourceAtAddress__anon_4447+0x3f4a>
  2166e3: 48 8b 54 24 20               	movq	32(%rsp), %rdx
  2166e8: 48 8d 84 24 00 01 00 00      	leaq	256(%rsp), %rax
  2166f0: 48 8d b4 24 48 15 00 00      	leaq	5448(%rsp), %rsi
  2166f8: 48 8b 3c 24                  	movq	(%rsp), %rdi
  2166fc: c5 f8 10 02                  	vmovups	(%rdx), %xmm0
  216700: c5 f8 29 84 24 f0 00 00 00   	vmovaps	%xmm0, 240(%rsp)
  216709: c5 f8 57 c0                  	vxorps	%xmm0, %xmm0, %xmm0
  21670d: c5 f8 11 00                  	vmovups	%xmm0, (%rax)
  216711: c5 f8 10 84 24 f0 00 00 00   	vmovups	240(%rsp), %xmm0
  21671a: c5 f8 11 84 24 20 15 00 00   	vmovups	%xmm0, 5408(%rsp)
  216723: c5 f8 10 84 24 00 01 00 00   	vmovups	256(%rsp), %xmm0
  21672c: c5 f8 11 84 24 30 15 00 00   	vmovups	%xmm0, 5424(%rsp)
  216735: c5 f8 10 05 d3 ad fe ff      	vmovups	-86573(%rip), %xmm0     # 0x201510 <os.abort__anon_4125+0x98>
  21673d: 48 8b 43 08                  	movq	8(%rbx), %rax
  216741: 48 89 84 24 40 15 00 00      	movq	%rax, 5440(%rsp)
  216749: 0f b6 43 38                  	movzbl	56(%rbx), %eax
  21674d: 88 84 24 60 15 00 00         	movb	%al, 5472(%rsp)
  216754: c5 f8 11 06                  	vmovups	%xmm0, (%rsi)
  216758: 48 c7 46 10 00 00 00 00      	movq	$0, 16(%rsi)
  216760: 4c 8b 73 18                  	movq	24(%rbx), %r14
  216764: 4c 89 f1                     	movq	%r14, %rcx
  216767: e8 d4 2b 00 00               	callq	0x219340 <array_list.ArrayListAlignedUnmanaged(dwarf.Die.Attr,null).ensureTotalCapacity>
  21676c: 66 85 c0                     	testw	%ax, %ax
  21676f: 0f 85 3e 15 00 00            	jne	0x217cb3 <debug.printSourceAtAddress__anon_4447+0x48f3>
  216775: 4c 89 b4 24 50 15 00 00      	movq	%r14, 5456(%rsp)
  21677d: 48 8b 43 18                  	movq	24(%rbx), %rax
  216781: 48 89 44 24 68               	movq	%rax, 104(%rsp)
  216786: 48 85 c0                     	testq	%rax, %rax
  216789: 0f 84 0c 01 00 00            	je	0x21689b <debug.printSourceAtAddress__anon_4447+0x34db>
  21678f: 48 8b 5b 10                  	movq	16(%rbx), %rbx
  216793: 45 31 ed                     	xorl	%r13d, %r13d
  216796: 31 ed                        	xorl	%ebp, %ebp
  216798: 48 83 c3 10                  	addq	$16, %rbx
  21679c: eb 22                        	jmp	0x2167c0 <debug.printSourceAtAddress__anon_4447+0x3400>
  21679e: 66 90                        	nop
  2167a0: 4e 89 7c 28 08               	movq	%r15, 8(%rax,%r13)
  2167a5: 4c 8b 64 24 28               	movq	40(%rsp), %r12
  2167aa: 48 ff c5                     	incq	%rbp
  2167ad: 48 83 c3 18                  	addq	$24, %rbx
  2167b1: 49 83 c5 20                  	addq	$32, %r13
  2167b5: 48 39 6c 24 68               	cmpq	%rbp, 104(%rsp)
  2167ba: 0f 84 db 00 00 00            	je	0x21689b <debug.printSourceAtAddress__anon_4447+0x34db>
  2167c0: 48 3b ac 24 50 15 00 00      	cmpq	5456(%rsp), %rbp
  2167c8: 0f 83 de 18 00 00            	jae	0x2180ac <debug.printSourceAtAddress__anon_4447+0x4cec>
  2167ce: 4c 8b a4 24 48 15 00 00      	movq	5448(%rsp), %r12
  2167d6: 48 8b 43 f0                  	movq	-16(%rbx), %rax
  2167da: 4c 8b 73 f8                  	movq	-8(%rbx), %r14
  2167de: 4c 8b 3b                     	movq	(%rbx), %r15
  2167e1: 4b 89 04 2c                  	movq	%rax, (%r12,%r13)
  2167e5: 48 8d 84 24 20 15 00 00      	leaq	5408(%rsp), %rax
  2167ed: 44 8b 8c 24 28 06 00 00      	movl	1576(%rsp), %r9d
  2167f5: 48 89 84 24 c0 02 00 00      	movq	%rax, 704(%rsp)
  2167fd: 48 c7 84 24 c8 02 00 00 10 18 20 00  	movq	$2103312, 712(%rsp) # imm = 0x201810
  216809: 48 83 ec 08                  	subq	$8, %rsp
  21680d: 0f b6 44 24 10               	movzbl	16(%rsp), %eax
  216812: 48 8b 74 24 08               	movq	8(%rsp), %rsi
  216817: 48 8d bc 24 18 03 00 00      	leaq	792(%rsp), %rdi
  21681f: 48 8d 94 24 c8 02 00 00      	leaq	712(%rsp), %rdx
  216827: 48 8d 8c 24 90 00 00 00      	leaq	144(%rsp), %rcx
  21682f: 4d 89 f0                     	movq	%r14, %r8
  216832: 50                           	pushq	%rax
  216833: e8 38 31 ff ff               	callq	0x209970 <dwarf.parseFormValue__anon_5650>
  216838: 48 83 c4 10                  	addq	$16, %rsp
  21683c: 0f b7 84 24 28 03 00 00      	movzwl	808(%rsp), %eax
  216844: 66 85 c0                     	testw	%ax, %ax
  216847: 0f 85 cc 0a 00 00            	jne	0x217319 <debug.printSourceAtAddress__anon_4447+0x3f59>
  21684d: 48 8b 84 24 20 03 00 00      	movq	800(%rsp), %rax
  216855: 4b 89 44 2c 18               	movq	%rax, 24(%r12,%r13)
  21685a: c5 f8 10 84 24 10 03 00 00   	vmovups	784(%rsp), %xmm0
  216863: c4 81 78 11 44 2c 08         	vmovups	%xmm0, 8(%r12,%r13)
  21686a: 49 83 fe 21                  	cmpq	$33, %r14
  21686e: 0f 85 31 ff ff ff            	jne	0x2167a5 <debug.printSourceAtAddress__anon_4447+0x33e5>
  216874: 48 3b ac 24 50 15 00 00      	cmpq	5456(%rsp), %rbp
  21687c: 0f 83 2a 18 00 00            	jae	0x2180ac <debug.printSourceAtAddress__anon_4447+0x4cec>
  216882: 48 8b 84 24 48 15 00 00      	movq	5448(%rsp), %rax
  21688a: 42 80 7c 28 18 03            	cmpb	$3, 24(%rax,%r13)
  216890: 0f 84 0a ff ff ff            	je	0x2167a0 <debug.printSourceAtAddress__anon_4447+0x33e0>
  216896: e9 65 1b 00 00               	jmp	0x218400 <debug.printSourceAtAddress__anon_4447+0x5040>
  21689b: c5 fc 10 84 24 20 15 00 00   	vmovups	5408(%rsp), %ymm0
  2168a4: c5 fc 10 8c 24 40 15 00 00   	vmovups	5440(%rsp), %ymm1
  2168ad: 48 8b 84 24 60 15 00 00      	movq	5472(%rsp), %rax
  2168b5: 48 8b 5c 24 50               	movq	80(%rsp), %rbx
  2168ba: 48 89 84 24 f0 03 00 00      	movq	%rax, 1008(%rsp)
  2168c2: c5 fc 11 8c 24 d0 03 00 00   	vmovups	%ymm1, 976(%rsp)
  2168cb: c5 fc 11 84 24 b0 03 00 00   	vmovups	%ymm0, 944(%rsp)
  2168d4: c5 fc 11 4b 20               	vmovups	%ymm1, 32(%rbx)
  2168d9: 48 89 43 40                  	movq	%rax, 64(%rbx)
  2168dd: c5 fc 11 03                  	vmovups	%ymm0, (%rbx)
  2168e1: 48 83 7b 20 11               	cmpq	$17, 32(%rbx)
  2168e6: 0f 85 1b 14 00 00            	jne	0x217d07 <debug.printSourceAtAddress__anon_4447+0x4947>
  2168ec: 48 8b 84 24 c8 00 00 00      	movq	200(%rsp), %rax
  2168f4: c5 f8 57 c0                  	vxorps	%xmm0, %xmm0, %xmm0
  2168f8: 48 8b 6c 24 18               	movq	24(%rsp), %rbp
  2168fd: 66 89 84 24 30 02 00 00      	movw	%ax, 560(%rsp)
  216905: 48 8b 44 24 08               	movq	8(%rsp), %rax
  21690a: 88 84 24 32 02 00 00         	movb	%al, 562(%rsp)
  216911: 48 8d 84 24 f8 01 00 00      	leaq	504(%rsp), %rax
  216919: c5 f8 11 00                  	vmovups	%xmm0, (%rax)
  21691d: 48 c7 40 10 00 00 00 00      	movq	$0, 16(%rax)
  216925: 48 89 9c 24 f0 01 00 00      	movq	%rbx, 496(%rsp)
  21692d: 48 8b 4b 30                  	movq	48(%rbx), %rcx
  216931: 48 85 c9                     	testq	%rcx, %rcx
  216934: 74 43                        	je	0x216979 <debug.printSourceAtAddress__anon_4447+0x35b9>
  216936: 48 8b 43 28                  	movq	40(%rbx), %rax
  21693a: 48 8b 9c 24 a0 00 00 00      	movq	160(%rsp), %rbx
  216942: 48 89 ce                     	movq	%rcx, %rsi
  216945: 4c 8d ac 24 20 15 00 00      	leaq	5408(%rsp), %r13
  21694d: 48 83 c0 18                  	addq	$24, %rax
  216951: 48 89 c2                     	movq	%rax, %rdx
  216954: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
  216960: 48 83 7a e8 72               	cmpq	$114, -24(%rdx)
  216965: 74 3b                        	je	0x2169a2 <debug.printSourceAtAddress__anon_4447+0x35e2>
  216967: 48 83 c2 20                  	addq	$32, %rdx
  21696b: 48 ff ce                     	decq	%rsi
  21696e: 75 f0                        	jne	0x216960 <debug.printSourceAtAddress__anon_4447+0x35a0>
  216970: 4c 8b 74 24 10               	movq	16(%rsp), %r14
  216975: 31 d2                        	xorl	%edx, %edx
  216977: eb 4d                        	jmp	0x2169c6 <debug.printSourceAtAddress__anon_4447+0x3606>
  216979: 4c 8b 74 24 10               	movq	16(%rsp), %r14
  21697e: 48 8b 9c 24 a0 00 00 00      	movq	160(%rsp), %rbx
  216986: c5 f8 11 40 18               	vmovups	%xmm0, 24(%rax)
  21698b: 48 c7 40 28 00 00 00 00      	movq	$0, 40(%rax)
  216993: 31 c0                        	xorl	%eax, %eax
  216995: 4c 8d ac 24 20 15 00 00      	leaq	5408(%rsp), %r13
  21699d: e9 04 01 00 00               	jmp	0x216aa6 <debug.printSourceAtAddress__anon_4447+0x36e6>
  2169a2: 0f b6 32                     	movzbl	(%rdx), %esi
  2169a5: 4c 8b 74 24 10               	movq	16(%rsp), %r14
  2169aa: 83 fe 06                     	cmpl	$6, %esi
  2169ad: 74 13                        	je	0x2169c2 <debug.printSourceAtAddress__anon_4447+0x3602>
  2169af: 83 fe 03                     	cmpl	$3, %esi
  2169b2: 0f 85 2e 16 00 00            	jne	0x217fe6 <debug.printSourceAtAddress__anon_4447+0x4c26>
  2169b8: 80 7a f8 01                  	cmpb	$1, -8(%rdx)
  2169bc: 0f 84 18 16 00 00            	je	0x217fda <debug.printSourceAtAddress__anon_4447+0x4c1a>
  2169c2: 48 8b 52 f0                  	movq	-16(%rdx), %rdx
  2169c6: 48 89 94 24 10 02 00 00      	movq	%rdx, 528(%rsp)
  2169ce: 48 89 ce                     	movq	%rcx, %rsi
  2169d1: 48 89 c2                     	movq	%rax, %rdx
  2169d4: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
  2169e0: 48 83 7a e8 73               	cmpq	$115, -24(%rdx)
  2169e5: 74 0d                        	je	0x2169f4 <debug.printSourceAtAddress__anon_4447+0x3634>
  2169e7: 48 83 c2 20                  	addq	$32, %rdx
  2169eb: 48 ff ce                     	decq	%rsi
  2169ee: 75 f0                        	jne	0x2169e0 <debug.printSourceAtAddress__anon_4447+0x3620>
  2169f0: 31 d2                        	xorl	%edx, %edx
  2169f2: eb 1f                        	jmp	0x216a13 <debug.printSourceAtAddress__anon_4447+0x3653>
  2169f4: 0f b6 32                     	movzbl	(%rdx), %esi
  2169f7: 83 fe 06                     	cmpl	$6, %esi
  2169fa: 74 13                        	je	0x216a0f <debug.printSourceAtAddress__anon_4447+0x364f>
  2169fc: 83 fe 03                     	cmpl	$3, %esi
  2169ff: 0f 85 e1 15 00 00            	jne	0x217fe6 <debug.printSourceAtAddress__anon_4447+0x4c26>
  216a05: 80 7a f8 01                  	cmpb	$1, -8(%rdx)
  216a09: 0f 84 cb 15 00 00            	je	0x217fda <debug.printSourceAtAddress__anon_4447+0x4c1a>
  216a0f: 48 8b 52 f0                  	movq	-16(%rdx), %rdx
  216a13: 48 89 94 24 18 02 00 00      	movq	%rdx, 536(%rsp)
  216a1b: 48 89 ce                     	movq	%rcx, %rsi
  216a1e: 48 89 c2                     	movq	%rax, %rdx
  216a21: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
  216a30: 48 83 7a e8 74               	cmpq	$116, -24(%rdx)
  216a35: 74 0d                        	je	0x216a44 <debug.printSourceAtAddress__anon_4447+0x3684>
  216a37: 48 83 c2 20                  	addq	$32, %rdx
  216a3b: 48 ff ce                     	decq	%rsi
  216a3e: 75 f0                        	jne	0x216a30 <debug.printSourceAtAddress__anon_4447+0x3670>
  216a40: 31 d2                        	xorl	%edx, %edx
  216a42: eb 1f                        	jmp	0x216a63 <debug.printSourceAtAddress__anon_4447+0x36a3>
  216a44: 0f b6 32                     	movzbl	(%rdx), %esi
  216a47: 83 fe 06                     	cmpl	$6, %esi
  216a4a: 74 13                        	je	0x216a5f <debug.printSourceAtAddress__anon_4447+0x369f>
  216a4c: 83 fe 03                     	cmpl	$3, %esi
  216a4f: 0f 85 91 15 00 00            	jne	0x217fe6 <debug.printSourceAtAddress__anon_4447+0x4c26>
  216a55: 80 7a f8 01                  	cmpb	$1, -8(%rdx)
  216a59: 0f 84 7b 15 00 00            	je	0x217fda <debug.printSourceAtAddress__anon_4447+0x4c1a>
  216a5f: 48 8b 52 f0                  	movq	-16(%rdx), %rdx
  216a63: 48 89 94 24 20 02 00 00      	movq	%rdx, 544(%rsp)
  216a6b: 0f 1f 44 00 00               	nopl	(%rax,%rax)
  216a70: 48 81 78 e8 8c 00 00 00      	cmpq	$140, -24(%rax)
  216a78: 74 0d                        	je	0x216a87 <debug.printSourceAtAddress__anon_4447+0x36c7>
  216a7a: 48 83 c0 20                  	addq	$32, %rax
  216a7e: 48 ff c9                     	decq	%rcx
  216a81: 75 ed                        	jne	0x216a70 <debug.printSourceAtAddress__anon_4447+0x36b0>
  216a83: 31 c0                        	xorl	%eax, %eax
  216a85: eb 1f                        	jmp	0x216aa6 <debug.printSourceAtAddress__anon_4447+0x36e6>
  216a87: 0f b6 08                     	movzbl	(%rax), %ecx
  216a8a: 83 f9 06                     	cmpl	$6, %ecx
  216a8d: 74 13                        	je	0x216aa2 <debug.printSourceAtAddress__anon_4447+0x36e2>
  216a8f: 83 f9 03                     	cmpl	$3, %ecx
  216a92: 0f 85 4e 15 00 00            	jne	0x217fe6 <debug.printSourceAtAddress__anon_4447+0x4c26>
  216a98: 80 78 f8 01                  	cmpb	$1, -8(%rax)
  216a9c: 0f 84 38 15 00 00            	je	0x217fda <debug.printSourceAtAddress__anon_4447+0x4c1a>
  216aa2: 48 8b 40 f0                  	movq	-16(%rax), %rax
  216aa6: 48 8b 34 24                  	movq	(%rsp), %rsi
  216aaa: 48 8b 54 24 50               	movq	80(%rsp), %rdx
  216aaf: 48 8d 7c 24 30               	leaq	48(%rsp), %rdi
  216ab4: 48 8d 8c 24 20 05 00 00      	leaq	1312(%rsp), %rcx
  216abc: 4c 8d 84 24 f0 01 00 00      	leaq	496(%rsp), %r8
  216ac4: 48 89 84 24 28 02 00 00      	movq	%rax, 552(%rsp)
  216acc: c5 f8 77                     	vzeroupper
  216acf: e8 ac 2a ff ff               	callq	0x209580 <dwarf.Die.getAttrAddr>
  216ad4: 0f b7 44 24 38               	movzwl	56(%rsp), %eax
  216ad9: 83 f8 18                     	cmpl	$24, %eax
  216adc: 74 6f                        	je	0x216b4d <debug.printSourceAtAddress__anon_4447+0x378d>
  216ade: c5 f8 57 c0                  	vxorps	%xmm0, %xmm0, %xmm0
  216ae2: 48 c7 c7 ff ff ff ff         	movq	$-1, %rdi
  216ae9: 85 c0                        	testl	%eax, %eax
  216aeb: 0f 85 c5 15 00 00            	jne	0x2180b6 <debug.printSourceAtAddress__anon_4447+0x4cf6>
  216af1: 4c 8b 74 24 50               	movq	80(%rsp), %r14
  216af6: 49 8b 56 30                  	movq	48(%r14), %rdx
  216afa: 48 85 d2                     	testq	%rdx, %rdx
  216afd: 74 21                        	je	0x216b20 <debug.printSourceAtAddress__anon_4447+0x3760>
  216aff: 49 8b 4e 28                  	movq	40(%r14), %rcx
  216b03: 48 8b 44 24 30               	movq	48(%rsp), %rax
  216b08: 48 83 c1 18                  	addq	$24, %rcx
  216b0c: 0f 1f 40 00                  	nopl	(%rax)
  216b10: 48 83 79 e8 12               	cmpq	$18, -24(%rcx)
  216b15: 74 79                        	je	0x216b90 <debug.printSourceAtAddress__anon_4447+0x37d0>
  216b17: 48 83 c1 20                  	addq	$32, %rcx
  216b1b: 48 ff ca                     	decq	%rdx
  216b1e: 75 f0                        	jne	0x216b10 <debug.printSourceAtAddress__anon_4447+0x3750>
  216b20: 48 8d 84 24 f8 01 00 00      	leaq	504(%rsp), %rax
  216b28: c5 f8 11 00                  	vmovups	%xmm0, (%rax)
  216b2c: 48 c7 40 10 00 00 00 00      	movq	$0, 16(%rax)
  216b34: 48 8b 84 24 00 06 00 00      	movq	1536(%rsp), %rax
  216b3c: 48 89 c1                     	movq	%rax, %rcx
  216b3f: 48 ff c1                     	incq	%rcx
  216b42: 0f 85 9b 00 00 00            	jne	0x216be3 <debug.printSourceAtAddress__anon_4447+0x3823>
  216b48: e9 d5 0d 00 00               	jmp	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  216b4d: 48 8b 94 24 e0 00 00 00      	movq	224(%rsp), %rdx
  216b55: 48 8b 0c 24                  	movq	(%rsp), %rcx
  216b59: 48 8d 84 24 f8 01 00 00      	leaq	504(%rsp), %rax
  216b61: c5 f8 57 c0                  	vxorps	%xmm0, %xmm0, %xmm0
  216b65: 48 c7 c7 ff ff ff ff         	movq	$-1, %rdi
  216b6c: c5 f8 11 00                  	vmovups	%xmm0, (%rax)
  216b70: 48 c7 40 10 00 00 00 00      	movq	$0, 16(%rax)
  216b78: 48 89 11                     	movq	%rdx, (%rcx)
  216b7b: 48 8b 84 24 00 06 00 00      	movq	1536(%rsp), %rax
  216b83: 48 89 c1                     	movq	%rax, %rcx
  216b86: 48 ff c1                     	incq	%rcx
  216b89: 75 58                        	jne	0x216be3 <debug.printSourceAtAddress__anon_4447+0x3823>
  216b8b: e9 92 0d 00 00               	jmp	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  216b90: 48 8b 51 f0                  	movq	-16(%rcx), %rdx
  216b94: 0f b6 31                     	movzbl	(%rcx), %esi
  216b97: 85 f6                        	testl	%esi, %esi
  216b99: 74 1c                        	je	0x216bb7 <debug.printSourceAtAddress__anon_4447+0x37f7>
  216b9b: 83 fe 03                     	cmpl	$3, %esi
  216b9e: 0f 85 1f 18 00 00            	jne	0x2183c3 <debug.printSourceAtAddress__anon_4447+0x5003>
  216ba4: f6 41 f8 01                  	testb	$1, -8(%rcx)
  216ba8: 0f 85 1b 18 00 00            	jne	0x2183c9 <debug.printSourceAtAddress__anon_4447+0x5009>
  216bae: 48 01 c2                     	addq	%rax, %rdx
  216bb1: 0f 82 6b 0d 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  216bb7: c6 84 24 08 02 00 00 01      	movb	$1, 520(%rsp)
  216bbf: 48 89 84 24 f8 01 00 00      	movq	%rax, 504(%rsp)
  216bc7: 48 89 94 24 00 02 00 00      	movq	%rdx, 512(%rsp)
  216bcf: 48 8b 84 24 00 06 00 00      	movq	1536(%rsp), %rax
  216bd7: 48 89 c1                     	movq	%rax, %rcx
  216bda: 48 ff c1                     	incq	%rcx
  216bdd: 0f 84 3f 0d 00 00            	je	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  216be3: 4c 8b b4 24 08 06 00 00      	movq	1544(%rsp), %r14
  216beb: 49 39 ce                     	cmpq	%rcx, %r14
  216bee: 0f 83 3d 02 00 00            	jae	0x216e31 <debug.printSourceAtAddress__anon_4447+0x3a71>
  216bf4: 4c 89 f5                     	movq	%r14, %rbp
  216bf7: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
  216c00: 48 89 ea                     	movq	%rbp, %rdx
  216c03: 48 d1 ea                     	shrq	%rdx
  216c06: 48 83 c2 08                  	addq	$8, %rdx
  216c0a: 48 01 d5                     	addq	%rdx, %rbp
  216c0d: 48 0f 42 ef                  	cmovbq	%rdi, %rbp
  216c11: 48 39 cd                     	cmpq	%rcx, %rbp
  216c14: 72 ea                        	jb	0x216c00 <debug.printSourceAtAddress__anon_4447+0x3840>
  216c16: 49 39 ee                     	cmpq	%rbp, %r14
  216c19: 0f 83 8e 00 00 00            	jae	0x216cad <debug.printSourceAtAddress__anon_4447+0x38ed>
  216c1f: 48 8b 4c 24 20               	movq	32(%rsp), %rcx
  216c24: 48 8b 84 24 f8 05 00 00      	movq	1528(%rsp), %rax
  216c2c: 48 8b 39                     	movq	(%rcx), %rdi
  216c2f: 4c 8b 51 08                  	movq	8(%rcx), %r10
  216c33: 4c 89 ac 24 f8 00 00 00      	movq	%r13, 248(%rsp)
  216c3b: 48 c7 84 24 00 01 00 00 20 00 00 00  	movq	$32, 256(%rsp)
  216c47: 48 89 44 24 08               	movq	%rax, 8(%rsp)
  216c4c: 48 c7 84 24 f0 00 00 00 00 00 00 00  	movq	$0, 240(%rsp)
  216c58: 4d 85 f6                     	testq	%r14, %r14
  216c5b: 74 5a                        	je	0x216cb7 <debug.printSourceAtAddress__anon_4447+0x38f7>
  216c5d: 4c 89 f0                     	movq	%r14, %rax
  216c60: be 48 00 00 00               	movl	$72, %esi
  216c65: 48 f7 e6                     	mulq	%rsi
  216c68: 0f 80 b4 0c 00 00            	jo	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  216c6e: 48 89 c1                     	movq	%rax, %rcx
  216c71: 48 89 e8                     	movq	%rbp, %rax
  216c74: 48 f7 e6                     	mulq	%rsi
  216c77: 0f 80 cd 16 00 00            	jo	0x21834a <debug.printSourceAtAddress__anon_4447+0x4f8a>
  216c7d: 48 8b 74 24 08               	movq	8(%rsp), %rsi
  216c82: 48 89 ca                     	movq	%rcx, %rdx
  216c85: b9 03 00 00 00               	movl	$3, %ecx
  216c8a: 49 89 c0                     	movq	%rax, %r8
  216c8d: 4d 89 e1                     	movq	%r12, %r9
  216c90: 49 89 c5                     	movq	%rax, %r13
  216c93: 41 ff 52 08                  	callq	*8(%r10)
  216c97: a8 01                        	testb	$1, %al
  216c99: 0f 85 72 01 00 00            	jne	0x216e11 <debug.printSourceAtAddress__anon_4447+0x3a51>
  216c9f: 48 8b 44 24 20               	movq	32(%rsp), %rax
  216ca4: 48 8b 38                     	movq	(%rax), %rdi
  216ca7: 4c 8b 50 08                  	movq	8(%rax), %r10
  216cab: eb 1e                        	jmp	0x216ccb <debug.printSourceAtAddress__anon_4447+0x390b>
  216cad: 48 8b 6c 24 18               	movq	24(%rsp), %rbp
  216cb2: e9 7a 01 00 00               	jmp	0x216e31 <debug.printSourceAtAddress__anon_4447+0x3a71>
  216cb7: 48 89 e8                     	movq	%rbp, %rax
  216cba: b9 48 00 00 00               	movl	$72, %ecx
  216cbf: 48 f7 e1                     	mulq	%rcx
  216cc2: 0f 80 8f 16 00 00            	jo	0x218357 <debug.printSourceAtAddress__anon_4447+0x4f97>
  216cc8: 49 89 c5                     	movq	%rax, %r13
  216ccb: 4c 89 ee                     	movq	%r13, %rsi
  216cce: ba 03 00 00 00               	movl	$3, %edx
  216cd3: 4c 89 e1                     	movq	%r12, %rcx
  216cd6: 41 ff 12                     	callq	*(%r10)
  216cd9: 48 85 c0                     	testq	%rax, %rax
  216cdc: 0f 84 7e 16 00 00            	je	0x218360 <debug.printSourceAtAddress__anon_4447+0x4fa0>
  216ce2: 48 89 c7                     	movq	%rax, %rdi
  216ce5: be aa 00 00 00               	movl	$170, %esi
  216cea: 4c 89 ea                     	movq	%r13, %rdx
  216ced: 48 89 c3                     	movq	%rax, %rbx
  216cf0: e8 eb 56 00 00               	callq	0x21c3e0 <memset>
  216cf5: 4d 85 ed                     	testq	%r13, %r13
  216cf8: 74 0b                        	je	0x216d05 <debug.printSourceAtAddress__anon_4447+0x3945>
  216cfa: 89 d8                        	movl	%ebx, %eax
  216cfc: 83 e0 07                     	andl	$7, %eax
  216cff: 0f 85 98 14 00 00            	jne	0x21819d <debug.printSourceAtAddress__anon_4447+0x4ddd>
  216d05: 4d 85 ed                     	testq	%r13, %r13
  216d08: 74 3f                        	je	0x216d49 <debug.printSourceAtAddress__anon_4447+0x3989>
  216d0a: 48 b9 39 8e e3 38 8e e3 38 8e	movabsq	$-8198552921648689607, %rcx # imm = 0x8E38E38E38E38E39
  216d14: 4c 89 ea                     	movq	%r13, %rdx
  216d17: 48 b8 8f e3 38 8e e3 38 8e e3	movabsq	$-2049638230412172401, %rax # imm = 0xE38E38E38E38E38F
  216d21: 4c 0f af e9                  	imulq	%rcx, %r13
  216d25: c4 e2 d3 f6 e8               	mulxq	%rax, %rbp, %rbp
  216d2a: 48 b9 8f e3 38 8e e3 38 8e 03	movabsq	$256204778801521551, %rcx # imm = 0x38E38E38E38E38F
  216d34: c4 c3 fb f0 c5 03            	rorxq	$3, %r13, %rax
  216d3a: 48 39 c8                     	cmpq	%rcx, %rax
  216d3d: 0f 83 f9 16 00 00            	jae	0x21843c <debug.printSourceAtAddress__anon_4447+0x507c>
  216d43: 48 c1 ed 06                  	shrq	$6, %rbp
  216d47: eb 0c                        	jmp	0x216d55 <debug.printSourceAtAddress__anon_4447+0x3995>
  216d49: 48 bb aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %rbx # imm = 0xAAAAAAAAAAAAAAAA
  216d53: 31 ed                        	xorl	%ebp, %ebp
  216d55: 48 8b 84 24 00 06 00 00      	movq	1536(%rsp), %rax
  216d5d: 48 39 e8                     	cmpq	%rbp, %rax
  216d60: 0f 87 46 13 00 00            	ja	0x2180ac <debug.printSourceAtAddress__anon_4447+0x4cec>
  216d66: 48 8b b4 24 f8 05 00 00      	movq	1528(%rsp), %rsi
  216d6e: 48 c1 e0 03                  	shlq	$3, %rax
  216d72: 48 8d 14 c0                  	leaq	(%rax,%rax,8), %rdx
  216d76: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  216d7a: 48 39 c3                     	cmpq	%rax, %rbx
  216d7d: 73 0d                        	jae	0x216d8c <debug.printSourceAtAddress__anon_4447+0x39cc>
  216d7f: 48 8d 04 13                  	leaq	(%rbx,%rdx), %rax
  216d83: 48 39 c6                     	cmpq	%rax, %rsi
  216d86: 0f 82 54 13 00 00            	jb	0x2180e0 <debug.printSourceAtAddress__anon_4447+0x4d20>
  216d8c: 48 89 df                     	movq	%rbx, %rdi
  216d8f: 49 89 df                     	movq	%rbx, %r15
  216d92: e8 49 55 00 00               	callq	0x21c2e0 <memcpy>
  216d97: 48 8b 4c 24 08               	movq	8(%rsp), %rcx
  216d9c: 4a 8d 04 f5 00 00 00 00      	leaq	(,%r14,8), %rax
  216da4: 4d 85 f6                     	testq	%r14, %r14
  216da7: 48 8d 1c c0                  	leaq	(%rax,%rax,8), %rbx
  216dab: b8 08 00 00 00               	movl	$8, %eax
  216db0: 49 0f 44 de                  	cmoveq	%r14, %rbx
  216db4: 48 0f 44 c8                  	cmoveq	%rax, %rcx
  216db8: 48 89 4c 24 08               	movq	%rcx, 8(%rsp)
  216dbd: 48 85 db                     	testq	%rbx, %rbx
  216dc0: 74 3f                        	je	0x216e01 <debug.printSourceAtAddress__anon_4447+0x3a41>
  216dc2: 48 8b 44 24 20               	movq	32(%rsp), %rax
  216dc7: 4c 8b 6c 24 08               	movq	8(%rsp), %r13
  216dcc: be aa 00 00 00               	movl	$170, %esi
  216dd1: 48 89 da                     	movq	%rbx, %rdx
  216dd4: 4c 8b 30                     	movq	(%rax), %r14
  216dd7: 48 8b 40 08                  	movq	8(%rax), %rax
  216ddb: 4c 89 ef                     	movq	%r13, %rdi
  216dde: 48 89 44 24 68               	movq	%rax, 104(%rsp)
  216de3: e8 f8 55 00 00               	callq	0x21c3e0 <memset>
  216de8: 48 8b 44 24 68               	movq	104(%rsp), %rax
  216ded: 4c 89 f7                     	movq	%r14, %rdi
  216df0: 4c 89 ee                     	movq	%r13, %rsi
  216df3: 48 89 da                     	movq	%rbx, %rdx
  216df6: b9 03 00 00 00               	movl	$3, %ecx
  216dfb: 4d 89 e0                     	movq	%r12, %r8
  216dfe: ff 50 10                     	callq	*16(%rax)
  216e01: 48 8b 9c 24 a0 00 00 00      	movq	160(%rsp), %rbx
  216e09: 4c 89 bc 24 f8 05 00 00      	movq	%r15, 1528(%rsp)
  216e11: 48 89 ac 24 08 06 00 00      	movq	%rbp, 1544(%rsp)
  216e19: 49 89 ee                     	movq	%rbp, %r14
  216e1c: 48 8b 6c 24 18               	movq	24(%rsp), %rbp
  216e21: 4c 8d ac 24 20 15 00 00      	leaq	5408(%rsp), %r13
  216e29: 48 8b 84 24 00 06 00 00      	movq	1536(%rsp), %rax
  216e31: 4c 39 f0                     	cmpq	%r14, %rax
  216e34: 0f 83 99 c7 ff ff            	jae	0x2135d3 <debug.printSourceAtAddress__anon_4447+0x213>
  216e3a: 48 8d 48 01                  	leaq	1(%rax), %rcx
  216e3e: 48 8b 94 24 30 02 00 00      	movq	560(%rsp), %rdx
  216e46: 48 8d 04 c0                  	leaq	(%rax,%rax,8), %rax
  216e4a: 48 03 9c 24 a8 00 00 00      	addq	168(%rsp), %rbx
  216e52: 48 89 8c 24 00 06 00 00      	movq	%rcx, 1536(%rsp)
  216e5a: 48 8b 8c 24 f8 05 00 00      	movq	1528(%rsp), %rcx
  216e62: 48 89 54 c1 40               	movq	%rdx, 64(%rcx,%rax,8)
  216e67: c5 fc 10 84 24 f0 01 00 00   	vmovups	496(%rsp), %ymm0
  216e70: c5 fc 10 8c 24 10 02 00 00   	vmovups	528(%rsp), %ymm1
  216e79: c5 fc 11 4c c1 20            	vmovups	%ymm1, 32(%rcx,%rax,8)
  216e7f: c5 fc 11 04 c1               	vmovups	%ymm0, (%rcx,%rax,8)
  216e84: 0f 82 98 0a 00 00            	jb	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  216e8a: 48 8b 84 24 78 02 00 00      	movq	632(%rsp), %rax
  216e92: 48 39 c3                     	cmpq	%rax, %rbx
  216e95: 0f 82 76 f0 ff ff            	jb	0x215f11 <debug.printSourceAtAddress__anon_4447+0x2b51>
  216e9b: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  216ea0: e9 4c 08 00 00               	jmp	0x2176f1 <debug.printSourceAtAddress__anon_4447+0x4331>
  216ea5: 48 8b 6c 24 18               	movq	24(%rsp), %rbp
  216eaa: 0f b7 c1                     	movzwl	%cx, %eax
  216ead: 83 c0 f7                     	addl	$-9, %eax
  216eb0: 83 f8 0d                     	cmpl	$13, %eax
  216eb3: 0f 87 00 02 00 00            	ja	0x2170b9 <debug.printSourceAtAddress__anon_4447+0x3cf9>
  216eb9: 66 b9 09 00                  	movw	$9, %cx
  216ebd: ff 24 c5 80 0d 20 00         	jmpq	*2100608(,%rax,8)
  216ec4: 66 b9 07 00                  	movw	$7, %cx
  216ec8: e9 fc 01 00 00               	jmp	0x2170c9 <debug.printSourceAtAddress__anon_4447+0x3d09>
  216ecd: 48 8b 85 00 01 00 00         	movq	256(%rbp), %rax
  216ed4: 48 85 c0                     	testq	%rax, %rax
  216ed7: 0f 84 df 02 00 00            	je	0x2171bc <debug.printSourceAtAddress__anon_4447+0x3dfc>
  216edd: 48 8b 8d f8 00 00 00         	movq	248(%rbp), %rcx
  216ee4: 48 8b 5c 24 58               	movq	88(%rsp), %rbx
  216ee9: 45 31 e4                     	xorl	%r12d, %r12d
  216eec: 48 83 c1 20                  	addq	$32, %rcx
  216ef0: eb 1b                        	jmp	0x216f0d <debug.printSourceAtAddress__anon_4447+0x3b4d>
  216ef2: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)
  216f00: 48 83 c1 28                  	addq	$40, %rcx
  216f04: 48 ff c8                     	decq	%rax
  216f07: 0f 84 b7 02 00 00            	je	0x2171c4 <debug.printSourceAtAddress__anon_4447+0x3e04>
  216f0d: 80 79 f0 00                  	cmpb	$0, -16(%rcx)
  216f11: 74 ed                        	je	0x216f00 <debug.printSourceAtAddress__anon_4447+0x3b40>
  216f13: 48 8b 54 24 68               	movq	104(%rsp), %rdx
  216f18: 48 39 51 e0                  	cmpq	%rdx, -32(%rcx)
  216f1c: 77 e2                        	ja	0x216f00 <debug.printSourceAtAddress__anon_4447+0x3b40>
  216f1e: 48 8b 54 24 68               	movq	104(%rsp), %rdx
  216f23: 48 39 51 e8                  	cmpq	%rdx, -24(%rcx)
  216f27: 76 d7                        	jbe	0x216f00 <debug.printSourceAtAddress__anon_4447+0x3b40>
  216f29: 4c 8b 61 f8                  	movq	-8(%rcx), %r12
  216f2d: 4c 8b 29                     	movq	(%rcx), %r13
  216f30: e9 92 02 00 00               	jmp	0x2171c7 <debug.printSourceAtAddress__anon_4447+0x3e07>
  216f35: 48 8b 1c 24                  	movq	(%rsp), %rbx
  216f39: 48 89 df                     	movq	%rbx, %rdi
  216f3c: e8 0f 4e 00 00               	callq	0x21bd50 <builtin.returnError>
  216f41: 48 89 df                     	movq	%rbx, %rdi
  216f44: e8 07 4e 00 00               	callq	0x21bd50 <builtin.returnError>
  216f49: 48 89 df                     	movq	%rbx, %rdi
  216f4c: e8 ff 4d 00 00               	callq	0x21bd50 <builtin.returnError>
  216f51: 66 bb 15 00                  	movw	$21, %bx
  216f55: 4c 8b 74 24 10               	movq	16(%rsp), %r14
  216f5a: e9 e0 0f 00 00               	jmp	0x217f3f <debug.printSourceAtAddress__anon_4447+0x4b7f>
  216f5f: 48 8b 1c 24                  	movq	(%rsp), %rbx
  216f63: 48 89 df                     	movq	%rbx, %rdi
  216f66: e8 e5 4d 00 00               	callq	0x21bd50 <builtin.returnError>
  216f6b: 48 89 df                     	movq	%rbx, %rdi
  216f6e: e8 dd 4d 00 00               	callq	0x21bd50 <builtin.returnError>
  216f73: 48 8b 84 24 d0 00 00 00      	movq	208(%rsp), %rax
  216f7b: 48 8b 0c 24                  	movq	(%rsp), %rcx
  216f7f: c5 f8 57 c0                  	vxorps	%xmm0, %xmm0, %xmm0
  216f83: c7 84 24 f0 00 00 00 00 00 00 00     	movl	$0, 240(%rsp)
  216f8e: c7 84 24 f3 00 00 00 00 00 00 00     	movl	$0, 243(%rsp)
  216f99: bd b8 23 20 00               	movl	$2106296, %ebp          # imm = 0x2023B8
  216f9e: 41 be 03 00 00 00            	movl	$3, %r14d
  216fa4: 41 b7 01                     	movb	$1, %r15b
  216fa7: 31 d2                        	xorl	%edx, %edx
  216fa9: 41 bd 03 00 00 00            	movl	$3, %r13d
  216faf: 41 b8 b8 23 20 00            	movl	$2106296, %r8d          # imm = 0x2023B8
  216fb5: c5 fc 11 84 24 20 15 00 00   	vmovups	%ymm0, 5408(%rsp)
  216fbe: 48 89 01                     	movq	%rax, (%rcx)
  216fc1: 31 c0                        	xorl	%eax, %eax
  216fc3: e9 4e dd ff ff               	jmp	0x214d16 <debug.printSourceAtAddress__anon_4447+0x1956>
  216fc8: 48 8b 1c 24                  	movq	(%rsp), %rbx
  216fcc: 89 d5                        	movl	%edx, %ebp
  216fce: 48 89 df                     	movq	%rbx, %rdi
  216fd1: c5 f8 77                     	vzeroupper
  216fd4: e8 77 4d 00 00               	callq	0x21bd50 <builtin.returnError>
  216fd9: 89 e8                        	movl	%ebp, %eax
  216fdb: 66 83 f8 18                  	cmpw	$24, %ax
  216fdf: 0f 85 2e 09 00 00            	jne	0x217913 <debug.printSourceAtAddress__anon_4447+0x4553>
  216fe5: 48 83 ec 08                  	subq	$8, %rsp
  216fe9: 48 8b b4 24 98 01 00 00      	movq	408(%rsp), %rsi
  216ff1: 48 8b 4c 24 18               	movq	24(%rsp), %rcx
  216ff6: ba a8 15 20 00               	movl	$2102696, %edx          # imm = 0x2015A8
  216ffb: 41 b8 b8 23 20 00            	movl	$2106296, %r8d          # imm = 0x2023B8
  217001: 41 b9 03 00 00 00            	movl	$3, %r9d
  217007: 48 89 df                     	movq	%rbx, %rdi
  21700a: ff b4 24 90 01 00 00         	pushq	400(%rsp)
  217011: 6a 03                        	pushq	$3
  217013: 68 b8 23 20 00               	pushq	$2106296                # imm = 0x2023B8
  217018: e8 33 4c ff ff               	callq	0x20bc50 <debug.printLineInfo__anon_5656>
  21701d: 48 83 c4 20                  	addq	$32, %rsp
  217021: 66 85 c0                     	testw	%ax, %ax
  217024: 0f 85 df 08 00 00            	jne	0x217909 <debug.printSourceAtAddress__anon_4447+0x4549>
  21702a: 48 8b 84 24 d0 00 00 00      	movq	208(%rsp), %rax
  217032: 48 89 03                     	movq	%rax, (%rbx)
  217035: e9 6c 0f 00 00               	jmp	0x217fa6 <debug.printSourceAtAddress__anon_4447+0x4be6>
  21703a: 48 8b 1c 24                  	movq	(%rsp), %rbx
  21703e: 48 89 df                     	movq	%rbx, %rdi
  217041: e8 0a 4d 00 00               	callq	0x21bd50 <builtin.returnError>
  217046: 48 89 df                     	movq	%rbx, %rdi
  217049: e8 02 4d 00 00               	callq	0x21bd50 <builtin.returnError>
  21704e: 48 89 df                     	movq	%rbx, %rdi
  217051: e8 fa 4c 00 00               	callq	0x21bd50 <builtin.returnError>
  217056: 48 8b 6c 24 18               	movq	24(%rsp), %rbp
  21705b: 66 b8 33 00                  	movw	$51, %ax
  21705f: e9 ed 02 00 00               	jmp	0x217351 <debug.printSourceAtAddress__anon_4447+0x3f91>
  217064: 66 b8 18 00                  	movw	$24, %ax
  217068: 48 8b 3c 24                  	movq	(%rsp), %rdi
  21706c: 89 44 24 08                  	movl	%eax, 8(%rsp)
  217070: c5 f8 77                     	vzeroupper
  217073: e8 d8 4c 00 00               	callq	0x21bd50 <builtin.returnError>
  217078: 48 8b 74 24 40               	movq	64(%rsp), %rsi
  21707d: 4c 8b 74 24 10               	movq	16(%rsp), %r14
  217082: 48 85 f6                     	testq	%rsi, %rsi
  217085: 0f 84 6b 0e 00 00            	je	0x217ef6 <debug.printSourceAtAddress__anon_4447+0x4b36>
  21708b: 0f 1f 44 00 00               	nopl	(%rax,%rax)
  217090: 48 8b 56 08                  	movq	8(%rsi), %rdx
  217094: 48 8b 7c 24 30               	movq	48(%rsp), %rdi
  217099: 48 8b 44 24 38               	movq	56(%rsp), %rax
  21709e: 48 8b 1e                     	movq	(%rsi), %rbx
  2170a1: b9 03 00 00 00               	movl	$3, %ecx
  2170a6: 4d 89 e0                     	movq	%r12, %r8
  2170a9: ff 50 10                     	callq	*16(%rax)
  2170ac: 48 89 de                     	movq	%rbx, %rsi
  2170af: 48 85 db                     	testq	%rbx, %rbx
  2170b2: 75 dc                        	jne	0x217090 <debug.printSourceAtAddress__anon_4447+0x3cd0>
  2170b4: e9 3d 0e 00 00               	jmp	0x217ef6 <debug.printSourceAtAddress__anon_4447+0x4b36>
  2170b9: 48 8b 3c 24                  	movq	(%rsp), %rdi
  2170bd: c5 f8 77                     	vzeroupper
  2170c0: e8 8b 4c 00 00               	callq	0x21bd50 <builtin.returnError>
  2170c5: 66 b9 0f 00                  	movw	$15, %cx
  2170c9: 4c 8b 3c 24                  	movq	(%rsp), %r15
  2170cd: 41 89 cd                     	movl	%ecx, %r13d
  2170d0: 4c 89 ff                     	movq	%r15, %rdi
  2170d3: c5 f8 77                     	vzeroupper
  2170d6: e8 75 4c 00 00               	callq	0x21bd50 <builtin.returnError>
  2170db: 4c 89 ff                     	movq	%r15, %rdi
  2170de: e8 6d 4c 00 00               	callq	0x21bd50 <builtin.returnError>
  2170e3: 4c 89 ff                     	movq	%r15, %rdi
  2170e6: e8 65 4c 00 00               	callq	0x21bd50 <builtin.returnError>
  2170eb: 48 63 3b                     	movslq	(%rbx), %rdi
  2170ee: b8 03 00 00 00               	movl	$3, %eax
  2170f3: 0f 05                        	syscall
  2170f5: 48 3d 01 f0 ff ff            	cmpq	$-4095, %rax            # imm = 0xF001
  2170fb: 72 0e                        	jb	0x21710b <debug.printSourceAtAddress__anon_4447+0x3d4b>
  2170fd: 0f b7 c0                     	movzwl	%ax, %eax
  217100: 3d f7 ff 00 00               	cmpl	$65527, %eax            # imm = 0xFFF7
  217105: 0f 84 c8 c4 ff ff            	je	0x2135d3 <debug.printSourceAtAddress__anon_4447+0x213>
  21710b: 48 8b 3c 24                  	movq	(%rsp), %rdi
  21710f: e8 3c 4c 00 00               	callq	0x21bd50 <builtin.returnError>
  217114: 44 89 eb                     	movl	%r13d, %ebx
  217117: e9 f0 0d 00 00               	jmp	0x217f0c <debug.printSourceAtAddress__anon_4447+0x4b4c>
  21711c: 48 8b 1c 24                  	movq	(%rsp), %rbx
  217120: 48 89 df                     	movq	%rbx, %rdi
  217123: e8 28 4c 00 00               	callq	0x21bd50 <builtin.returnError>
  217128: 48 89 df                     	movq	%rbx, %rdi
  21712b: e8 20 4c 00 00               	callq	0x21bd50 <builtin.returnError>
  217130: 4c 8b 74 24 10               	movq	16(%rsp), %r14
  217135: 66 b8 33 00                  	movw	$51, %ax
  217139: e9 9d 03 00 00               	jmp	0x2174db <debug.printSourceAtAddress__anon_4447+0x411b>
  21713e: 48 8b 1c 24                  	movq	(%rsp), %rbx
  217142: 48 89 df                     	movq	%rbx, %rdi
  217145: e8 06 4c 00 00               	callq	0x21bd50 <builtin.returnError>
  21714a: 48 89 df                     	movq	%rbx, %rdi
  21714d: e8 fe 4b 00 00               	callq	0x21bd50 <builtin.returnError>
  217152: 4c 8b 74 24 10               	movq	16(%rsp), %r14
  217157: 66 bb 1f 00                  	movw	$31, %bx
  21715b: e9 65 02 00 00               	jmp	0x2173c5 <debug.printSourceAtAddress__anon_4447+0x4005>
  217160: 66 bb 31 00                  	movw	$49, %bx
  217164: e9 a3 0d 00 00               	jmp	0x217f0c <debug.printSourceAtAddress__anon_4447+0x4b4c>
  217169: 48 8b 1c 24                  	movq	(%rsp), %rbx
  21716d: 48 89 df                     	movq	%rbx, %rdi
  217170: e8 db 4b 00 00               	callq	0x21bd50 <builtin.returnError>
  217175: 48 89 df                     	movq	%rbx, %rdi
  217178: e8 d3 4b 00 00               	callq	0x21bd50 <builtin.returnError>
  21717d: 48 89 df                     	movq	%rbx, %rdi
  217180: e8 cb 4b 00 00               	callq	0x21bd50 <builtin.returnError>
  217185: 48 8b 74 24 40               	movq	64(%rsp), %rsi
  21718a: 66 b8 33 00                  	movw	$51, %ax
  21718e: 89 44 24 08                  	movl	%eax, 8(%rsp)
  217192: 48 85 f6                     	testq	%rsi, %rsi
  217195: 0f 85 ea 02 00 00            	jne	0x217485 <debug.printSourceAtAddress__anon_4447+0x40c5>
  21719b: 4c 8b 74 24 10               	movq	16(%rsp), %r14
  2171a0: 48 8b 6c 24 18               	movq	24(%rsp), %rbp
  2171a5: e9 23 05 00 00               	jmp	0x2176cd <debug.printSourceAtAddress__anon_4447+0x430d>
  2171aa: 66 bb 32 00                  	movw	$50, %bx
  2171ae: 83 f8 02                     	cmpl	$2, %eax
  2171b1: 0f 85 55 0d 00 00            	jne	0x217f0c <debug.printSourceAtAddress__anon_4447+0x4b4c>
  2171b7: e9 17 c4 ff ff               	jmp	0x2135d3 <debug.printSourceAtAddress__anon_4447+0x213>
  2171bc: 48 8b 5c 24 58               	movq	88(%rsp), %rbx
  2171c1: 45 31 e4                     	xorl	%r12d, %r12d
  2171c4: 45 31 ed                     	xorl	%r13d, %r13d
  2171c7: 48 8b 13                     	movq	(%rbx), %rdx
  2171ca: 4c 8b 4d 28                  	movq	40(%rbp), %r9
  2171ce: 48 8b 34 24                  	movq	(%rsp), %rsi
  2171d2: 48 8b 8c 24 a8 00 00 00      	movq	168(%rsp), %rcx
  2171da: 4d 85 e4                     	testq	%r12, %r12
  2171dd: 41 be 03 00 00 00            	movl	$3, %r14d
  2171e3: b8 b8 23 20 00               	movl	$2106296, %eax          # imm = 0x2023B8
  2171e8: 48 8d bc 24 10 04 00 00      	leaq	1040(%rsp), %rdi
  2171f0: 41 b8 03 00 00 00            	movl	$3, %r8d
  2171f6: 4d 0f 44 ee                  	cmoveq	%r14, %r13
  2171fa: 4c 0f 44 e0                  	cmoveq	%rax, %r12
  2171fe: 53                           	pushq	%rbx
  2171ff: ff 75 30                     	pushq	48(%rbp)
  217202: e8 49 20 ff ff               	callq	0x209250 <dwarf.Die.getAttrString>
  217207: 48 83 c4 10                  	addq	$16, %rsp
  21720b: 0f b7 84 24 20 04 00 00      	movzwl	1056(%rsp), %eax
  217213: 83 f8 34                     	cmpl	$52, %eax
  217216: 74 1f                        	je	0x217237 <debug.printSourceAtAddress__anon_4447+0x3e77>
  217218: 83 f8 18                     	cmpl	$24, %eax
  21721b: 74 1a                        	je	0x217237 <debug.printSourceAtAddress__anon_4447+0x3e77>
  21721d: 85 c0                        	testl	%eax, %eax
  21721f: 0f 85 32 12 00 00            	jne	0x218457 <debug.printSourceAtAddress__anon_4447+0x5097>
  217225: 48 8b ac 24 10 04 00 00      	movq	1040(%rsp), %rbp
  21722d: 4c 8b b4 24 18 04 00 00      	movq	1048(%rsp), %r14
  217235: eb 14                        	jmp	0x21724b <debug.printSourceAtAddress__anon_4447+0x3e8b>
  217237: 48 8b 84 24 d0 00 00 00      	movq	208(%rsp), %rax
  21723f: 48 8b 0c 24                  	movq	(%rsp), %rcx
  217243: bd b8 23 20 00               	movl	$2106296, %ebp          # imm = 0x2023B8
  217248: 48 89 01                     	movq	%rax, (%rcx)
  21724b: 48 8b 34 24                  	movq	(%rsp), %rsi
  21724f: 48 8b 94 24 a8 00 00 00      	movq	168(%rsp), %rdx
  217257: 48 8b 4c 24 20               	movq	32(%rsp), %rcx
  21725c: 4c 8b 4c 24 68               	movq	104(%rsp), %r9
  217261: 48 8d bc 24 20 05 00 00      	leaq	1312(%rsp), %rdi
  217269: 49 89 d8                     	movq	%rbx, %r8
  21726c: e8 5f 63 ff ff               	callq	0x20d5d0 <dwarf.DwarfInfo.getLineNumberInfo>
  217271: 0f b7 84 24 40 05 00 00      	movzwl	1344(%rsp), %eax
  217279: 83 f8 34                     	cmpl	$52, %eax
  21727c: 74 2e                        	je	0x2172ac <debug.printSourceAtAddress__anon_4447+0x3eec>
  21727e: 83 f8 18                     	cmpl	$24, %eax
  217281: 74 29                        	je	0x2172ac <debug.printSourceAtAddress__anon_4447+0x3eec>
  217283: 85 c0                        	testl	%eax, %eax
  217285: 0f 85 4e 07 00 00            	jne	0x2179d9 <debug.printSourceAtAddress__anon_4447+0x4619>
  21728b: c5 fc 10 84 24 20 05 00 00   	vmovups	1312(%rsp), %ymm0
  217294: 4d 89 e0                     	movq	%r12, %r8
  217297: b0 01                        	movb	$1, %al
  217299: 31 d2                        	xorl	%edx, %edx
  21729b: 45 31 ff                     	xorl	%r15d, %r15d
  21729e: c5 fc 11 84 24 20 15 00 00   	vmovups	%ymm0, 5408(%rsp)
  2172a7: e9 6a da ff ff               	jmp	0x214d16 <debug.printSourceAtAddress__anon_4447+0x1956>
  2172ac: 48 8b 84 24 d0 00 00 00      	movq	208(%rsp), %rax
  2172b4: 48 8b 0c 24                  	movq	(%rsp), %rcx
  2172b8: c5 f8 57 c0                  	vxorps	%xmm0, %xmm0, %xmm0
  2172bc: c7 84 24 f0 00 00 00 00 00 00 00     	movl	$0, 240(%rsp)
  2172c7: c7 84 24 f3 00 00 00 00 00 00 00     	movl	$0, 243(%rsp)
  2172d2: 41 b7 01                     	movb	$1, %r15b
  2172d5: 31 d2                        	xorl	%edx, %edx
  2172d7: 4d 89 e0                     	movq	%r12, %r8
  2172da: c5 fc 11 84 24 20 15 00 00   	vmovups	%ymm0, 5408(%rsp)
  2172e3: 48 89 01                     	movq	%rax, (%rcx)
  2172e6: 31 c0                        	xorl	%eax, %eax
  2172e8: e9 29 da ff ff               	jmp	0x214d16 <debug.printSourceAtAddress__anon_4447+0x1956>
  2172ed: 66 bb 18 00                  	movw	$24, %bx
  2172f1: c6 84 24 28 06 00 00 01      	movb	$1, 1576(%rsp)
  2172f9: eb 05                        	jmp	0x217300 <debug.printSourceAtAddress__anon_4447+0x3f40>
  2172fb: 4c 8b 74 24 10               	movq	16(%rsp), %r14
  217300: 48 8b 6c 24 18               	movq	24(%rsp), %rbp
  217305: e9 02 0c 00 00               	jmp	0x217f0c <debug.printSourceAtAddress__anon_4447+0x4b4c>
  21730a: 66 bb 34 00                  	movw	$52, %bx
  21730e: 48 8b 3c 24                  	movq	(%rsp), %rdi
  217312: e8 39 4a 00 00               	callq	0x21bd50 <builtin.returnError>
  217317: 89 d8                        	movl	%ebx, %eax
  217319: 48 8b 3c 24                  	movq	(%rsp), %rdi
  21731d: 89 c3                        	movl	%eax, %ebx
  21731f: e8 2c 4a 00 00               	callq	0x21bd50 <builtin.returnError>
  217324: 48 8b 44 24 20               	movq	32(%rsp), %rax
  217329: 4c 8b 64 24 28               	movq	40(%rsp), %r12
  21732e: 48 8b 74 24 50               	movq	80(%rsp), %rsi
  217333: ba 48 00 00 00               	movl	$72, %edx
  217338: b9 03 00 00 00               	movl	$3, %ecx
  21733d: 48 8b 38                     	movq	(%rax), %rdi
  217340: 48 8b 40 08                  	movq	8(%rax), %rax
  217344: 4d 89 e0                     	movq	%r12, %r8
  217347: ff 50 10                     	callq	*16(%rax)
  21734a: 48 8b 6c 24 18               	movq	24(%rsp), %rbp
  21734f: 89 d8                        	movl	%ebx, %eax
  217351: 48 8b 3c 24                  	movq	(%rsp), %rdi
  217355: 89 44 24 08                  	movl	%eax, 8(%rsp)
  217359: e8 f2 49 00 00               	callq	0x21bd50 <builtin.returnError>
  21735e: 4c 8b 74 24 10               	movq	16(%rsp), %r14
  217363: e9 97 0b 00 00               	jmp	0x217eff <debug.printSourceAtAddress__anon_4447+0x4b3f>
  217368: 48 8b 3c 24                  	movq	(%rsp), %rdi
  21736c: e8 df 49 00 00               	callq	0x21bd50 <builtin.returnError>
  217371: 4c 8b 64 24 28               	movq	40(%rsp), %r12
  217376: 89 ac 24 a0 01 00 00         	movl	%ebp, 416(%rsp)
  21737d: 66 85 db                     	testw	%bx, %bx
  217380: 0f 84 00 c7 ff ff            	je	0x213a86 <debug.printSourceAtAddress__anon_4447+0x6c6>
  217386: 48 8b 3c 24                  	movq	(%rsp), %rdi
  21738a: e8 c1 49 00 00               	callq	0x21bd50 <builtin.returnError>
  21738f: 4c 8b 74 24 10               	movq	16(%rsp), %r14
  217394: 4c 8b 64 24 18               	movq	24(%rsp), %r12
  217399: 66 83 fb 1d                  	cmpw	$29, %bx
  21739d: 75 26                        	jne	0x2173c5 <debug.printSourceAtAddress__anon_4447+0x4005>
  21739f: 48 8b 44 24 20               	movq	32(%rsp), %rax
  2173a4: 4c 8b 44 24 28               	movq	40(%rsp), %r8
  2173a9: ba 28 01 00 00               	movl	$296, %edx              # imm = 0x128
  2173ae: 4c 89 e6                     	movq	%r12, %rsi
  2173b1: b9 03 00 00 00               	movl	$3, %ecx
  2173b6: 48 8b 38                     	movq	(%rax), %rdi
  2173b9: 48 8b 40 08                  	movq	8(%rax), %rax
  2173bd: ff 50 10                     	callq	*16(%rax)
  2173c0: e9 98 c4 ff ff               	jmp	0x21385d <debug.printSourceAtAddress__anon_4447+0x49d>
  2173c5: 48 8b 44 24 20               	movq	32(%rsp), %rax
  2173ca: 4c 8b 44 24 28               	movq	40(%rsp), %r8
  2173cf: ba 28 01 00 00               	movl	$296, %edx              # imm = 0x128
  2173d4: 4c 89 e6                     	movq	%r12, %rsi
  2173d7: b9 03 00 00 00               	movl	$3, %ecx
  2173dc: 48 8b 38                     	movq	(%rax), %rdi
  2173df: 48 8b 40 08                  	movq	8(%rax), %rax
  2173e3: ff 50 10                     	callq	*16(%rax)
  2173e6: 48 8b 3c 24                  	movq	(%rsp), %rdi
  2173ea: e9 4b 0b 00 00               	jmp	0x217f3a <debug.printSourceAtAddress__anon_4447+0x4b7a>
  2173ef: 66 b8 18 00                  	movw	$24, %ax
  2173f3: 48 8b 3c 24                  	movq	(%rsp), %rdi
  2173f7: 89 44 24 08                  	movl	%eax, 8(%rsp)
  2173fb: c5 f8 77                     	vzeroupper
  2173fe: e8 4d 49 00 00               	callq	0x21bd50 <builtin.returnError>
  217403: 48 8b 74 24 40               	movq	64(%rsp), %rsi
  217408: 4c 8b 74 24 10               	movq	16(%rsp), %r14
  21740d: 48 85 f6                     	testq	%rsi, %rsi
  217410: 0f 84 e0 0a 00 00            	je	0x217ef6 <debug.printSourceAtAddress__anon_4447+0x4b36>
  217416: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
  217420: 48 8b 56 08                  	movq	8(%rsi), %rdx
  217424: 48 8b 7c 24 30               	movq	48(%rsp), %rdi
  217429: 48 8b 44 24 38               	movq	56(%rsp), %rax
  21742e: 48 8b 1e                     	movq	(%rsi), %rbx
  217431: b9 03 00 00 00               	movl	$3, %ecx
  217436: 4d 89 e0                     	movq	%r12, %r8
  217439: ff 50 10                     	callq	*16(%rax)
  21743c: 48 89 de                     	movq	%rbx, %rsi
  21743f: 48 85 db                     	testq	%rbx, %rbx
  217442: 75 dc                        	jne	0x217420 <debug.printSourceAtAddress__anon_4447+0x4060>
  217444: e9 ad 0a 00 00               	jmp	0x217ef6 <debug.printSourceAtAddress__anon_4447+0x4b36>
  217449: 48 8b 74 24 40               	movq	64(%rsp), %rsi
  21744e: 48 8b 6c 24 18               	movq	24(%rsp), %rbp
  217453: 48 85 f6                     	testq	%rsi, %rsi
  217456: 0f 84 6b ea ff ff            	je	0x215ec7 <debug.printSourceAtAddress__anon_4447+0x2b07>
  21745c: 48 8b 56 08                  	movq	8(%rsi), %rdx
  217460: 48 8b 7c 24 30               	movq	48(%rsp), %rdi
  217465: 48 8b 44 24 38               	movq	56(%rsp), %rax
  21746a: 48 8b 1e                     	movq	(%rsi), %rbx
  21746d: b9 03 00 00 00               	movl	$3, %ecx
  217472: 4d 89 e0                     	movq	%r12, %r8
  217475: ff 50 10                     	callq	*16(%rax)
  217478: 48 89 de                     	movq	%rbx, %rsi
  21747b: 48 85 db                     	testq	%rbx, %rbx
  21747e: 75 dc                        	jne	0x21745c <debug.printSourceAtAddress__anon_4447+0x409c>
  217480: e9 42 ea ff ff               	jmp	0x215ec7 <debug.printSourceAtAddress__anon_4447+0x2b07>
  217485: 4c 8b 74 24 10               	movq	16(%rsp), %r14
  21748a: 48 8b 6c 24 18               	movq	24(%rsp), %rbp
  21748f: 90                           	nop
  217490: 48 8b 56 08                  	movq	8(%rsi), %rdx
  217494: 48 8b 7c 24 30               	movq	48(%rsp), %rdi
  217499: 48 8b 44 24 38               	movq	56(%rsp), %rax
  21749e: 48 8b 1e                     	movq	(%rsi), %rbx
  2174a1: b9 03 00 00 00               	movl	$3, %ecx
  2174a6: 4d 89 e0                     	movq	%r12, %r8
  2174a9: ff 50 10                     	callq	*16(%rax)
  2174ac: 48 89 de                     	movq	%rbx, %rsi
  2174af: 48 85 db                     	testq	%rbx, %rbx
  2174b2: 75 dc                        	jne	0x217490 <debug.printSourceAtAddress__anon_4447+0x40d0>
  2174b4: e9 14 02 00 00               	jmp	0x2176cd <debug.printSourceAtAddress__anon_4447+0x430d>
  2174b9: 48 8b 1c 24                  	movq	(%rsp), %rbx
  2174bd: 48 89 df                     	movq	%rbx, %rdi
  2174c0: e8 8b 48 00 00               	callq	0x21bd50 <builtin.returnError>
  2174c5: 48 89 df                     	movq	%rbx, %rdi
  2174c8: e8 83 48 00 00               	callq	0x21bd50 <builtin.returnError>
  2174cd: 66 b8 33 00                  	movw	$51, %ax
  2174d1: 4c 8b 74 24 10               	movq	16(%rsp), %r14
  2174d6: 48 8b 6c 24 18               	movq	24(%rsp), %rbp
  2174db: 89 44 24 08                  	movl	%eax, 8(%rsp)
  2174df: 48 8b 1c 24                  	movq	(%rsp), %rbx
  2174e3: 48 89 df                     	movq	%rbx, %rdi
  2174e6: e8 65 48 00 00               	callq	0x21bd50 <builtin.returnError>
  2174eb: 48 89 df                     	movq	%rbx, %rdi
  2174ee: e8 5d 48 00 00               	callq	0x21bd50 <builtin.returnError>
  2174f3: 48 8b 74 24 40               	movq	64(%rsp), %rsi
  2174f8: 48 85 f6                     	testq	%rsi, %rsi
  2174fb: 0f 84 cc 01 00 00            	je	0x2176cd <debug.printSourceAtAddress__anon_4447+0x430d>
  217501: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
  217510: 48 8b 56 08                  	movq	8(%rsi), %rdx
  217514: 48 8b 7c 24 30               	movq	48(%rsp), %rdi
  217519: 48 8b 44 24 38               	movq	56(%rsp), %rax
  21751e: 48 8b 1e                     	movq	(%rsi), %rbx
  217521: b9 03 00 00 00               	movl	$3, %ecx
  217526: 4d 89 e0                     	movq	%r12, %r8
  217529: ff 50 10                     	callq	*16(%rax)
  21752c: 48 89 de                     	movq	%rbx, %rsi
  21752f: 48 85 db                     	testq	%rbx, %rbx
  217532: 75 dc                        	jne	0x217510 <debug.printSourceAtAddress__anon_4447+0x4150>
  217534: e9 94 01 00 00               	jmp	0x2176cd <debug.printSourceAtAddress__anon_4447+0x430d>
  217539: 48 8b 1c 24                  	movq	(%rsp), %rbx
  21753d: 48 89 df                     	movq	%rbx, %rdi
  217540: e8 0b 48 00 00               	callq	0x21bd50 <builtin.returnError>
  217545: 48 89 df                     	movq	%rbx, %rdi
  217548: e8 03 48 00 00               	callq	0x21bd50 <builtin.returnError>
  21754d: 48 89 df                     	movq	%rbx, %rdi
  217550: e8 fb 47 00 00               	callq	0x21bd50 <builtin.returnError>
  217555: 48 8b 74 24 40               	movq	64(%rsp), %rsi
  21755a: 66 b8 33 00                  	movw	$51, %ax
  21755e: 89 44 24 08                  	movl	%eax, 8(%rsp)
  217562: 48 85 f6                     	testq	%rsi, %rsi
  217565: 0f 84 5d 01 00 00            	je	0x2176c8 <debug.printSourceAtAddress__anon_4447+0x4308>
  21756b: 4c 8b 74 24 10               	movq	16(%rsp), %r14
  217570: 48 8b 56 08                  	movq	8(%rsi), %rdx
  217574: 48 8b 7c 24 30               	movq	48(%rsp), %rdi
  217579: 48 8b 44 24 38               	movq	56(%rsp), %rax
  21757e: 48 8b 1e                     	movq	(%rsi), %rbx
  217581: b9 03 00 00 00               	movl	$3, %ecx
  217586: 4d 89 e0                     	movq	%r12, %r8
  217589: ff 50 10                     	callq	*16(%rax)
  21758c: 48 89 de                     	movq	%rbx, %rsi
  21758f: 48 85 db                     	testq	%rbx, %rbx
  217592: 75 dc                        	jne	0x217570 <debug.printSourceAtAddress__anon_4447+0x41b0>
  217594: e9 34 01 00 00               	jmp	0x2176cd <debug.printSourceAtAddress__anon_4447+0x430d>
  217599: 48 8b 74 24 40               	movq	64(%rsp), %rsi
  21759e: 89 44 24 08                  	movl	%eax, 8(%rsp)
  2175a2: 48 85 f6                     	testq	%rsi, %rsi
  2175a5: 0f 84 22 01 00 00            	je	0x2176cd <debug.printSourceAtAddress__anon_4447+0x430d>
  2175ab: 0f 1f 44 00 00               	nopl	(%rax,%rax)
  2175b0: 48 8b 56 08                  	movq	8(%rsi), %rdx
  2175b4: 48 8b 7c 24 30               	movq	48(%rsp), %rdi
  2175b9: 48 8b 44 24 38               	movq	56(%rsp), %rax
  2175be: 48 8b 1e                     	movq	(%rsi), %rbx
  2175c1: b9 03 00 00 00               	movl	$3, %ecx
  2175c6: 4d 89 e0                     	movq	%r12, %r8
  2175c9: ff 50 10                     	callq	*16(%rax)
  2175cc: 48 89 de                     	movq	%rbx, %rsi
  2175cf: 48 85 db                     	testq	%rbx, %rbx
  2175d2: 75 dc                        	jne	0x2175b0 <debug.printSourceAtAddress__anon_4447+0x41f0>
  2175d4: e9 b9 0a 00 00               	jmp	0x218092 <debug.printSourceAtAddress__anon_4447+0x4cd2>
  2175d9: 48 8b 1c 24                  	movq	(%rsp), %rbx
  2175dd: 48 89 df                     	movq	%rbx, %rdi
  2175e0: e8 6b 47 00 00               	callq	0x21bd50 <builtin.returnError>
  2175e5: 48 89 df                     	movq	%rbx, %rdi
  2175e8: e8 63 47 00 00               	callq	0x21bd50 <builtin.returnError>
  2175ed: 48 89 df                     	movq	%rbx, %rdi
  2175f0: e8 5b 47 00 00               	callq	0x21bd50 <builtin.returnError>
  2175f5: 48 8b 74 24 40               	movq	64(%rsp), %rsi
  2175fa: 66 b8 33 00                  	movw	$51, %ax
  2175fe: 89 44 24 08                  	movl	%eax, 8(%rsp)
  217602: 48 85 f6                     	testq	%rsi, %rsi
  217605: 0f 84 bd 00 00 00            	je	0x2176c8 <debug.printSourceAtAddress__anon_4447+0x4308>
  21760b: 4c 8b 74 24 10               	movq	16(%rsp), %r14
  217610: 48 8b 56 08                  	movq	8(%rsi), %rdx
  217614: 48 8b 7c 24 30               	movq	48(%rsp), %rdi
  217619: 48 8b 44 24 38               	movq	56(%rsp), %rax
  21761e: 48 8b 1e                     	movq	(%rsi), %rbx
  217621: b9 03 00 00 00               	movl	$3, %ecx
  217626: 4d 89 e0                     	movq	%r12, %r8
  217629: ff 50 10                     	callq	*16(%rax)
  21762c: 48 89 de                     	movq	%rbx, %rsi
  21762f: 48 85 db                     	testq	%rbx, %rbx
  217632: 75 dc                        	jne	0x217610 <debug.printSourceAtAddress__anon_4447+0x4250>
  217634: e9 94 00 00 00               	jmp	0x2176cd <debug.printSourceAtAddress__anon_4447+0x430d>
  217639: 48 8b 1c 24                  	movq	(%rsp), %rbx
  21763d: 48 89 df                     	movq	%rbx, %rdi
  217640: e8 0b 47 00 00               	callq	0x21bd50 <builtin.returnError>
  217645: 48 89 df                     	movq	%rbx, %rdi
  217648: e8 03 47 00 00               	callq	0x21bd50 <builtin.returnError>
  21764d: 48 89 df                     	movq	%rbx, %rdi
  217650: e8 fb 46 00 00               	callq	0x21bd50 <builtin.returnError>
  217655: 48 8b 74 24 40               	movq	64(%rsp), %rsi
  21765a: 66 b8 33 00                  	movw	$51, %ax
  21765e: 89 44 24 08                  	movl	%eax, 8(%rsp)
  217662: 48 85 f6                     	testq	%rsi, %rsi
  217665: 74 61                        	je	0x2176c8 <debug.printSourceAtAddress__anon_4447+0x4308>
  217667: 4c 8b 74 24 10               	movq	16(%rsp), %r14
  21766c: 0f 1f 40 00                  	nopl	(%rax)
  217670: 48 8b 56 08                  	movq	8(%rsi), %rdx
  217674: 48 8b 7c 24 30               	movq	48(%rsp), %rdi
  217679: 48 8b 44 24 38               	movq	56(%rsp), %rax
  21767e: 48 8b 1e                     	movq	(%rsi), %rbx
  217681: b9 03 00 00 00               	movl	$3, %ecx
  217686: 4d 89 e0                     	movq	%r12, %r8
  217689: ff 50 10                     	callq	*16(%rax)
  21768c: 48 89 de                     	movq	%rbx, %rsi
  21768f: 48 85 db                     	testq	%rbx, %rbx
  217692: 75 dc                        	jne	0x217670 <debug.printSourceAtAddress__anon_4447+0x42b0>
  217694: eb 37                        	jmp	0x2176cd <debug.printSourceAtAddress__anon_4447+0x430d>
  217696: 48 8b 1c 24                  	movq	(%rsp), %rbx
  21769a: 48 89 df                     	movq	%rbx, %rdi
  21769d: e8 ae 46 00 00               	callq	0x21bd50 <builtin.returnError>
  2176a2: 48 89 df                     	movq	%rbx, %rdi
  2176a5: e8 a6 46 00 00               	callq	0x21bd50 <builtin.returnError>
  2176aa: 48 89 df                     	movq	%rbx, %rdi
  2176ad: e8 9e 46 00 00               	callq	0x21bd50 <builtin.returnError>
  2176b2: 48 8b 74 24 40               	movq	64(%rsp), %rsi
  2176b7: 66 b8 33 00                  	movw	$51, %ax
  2176bb: 89 44 24 08                  	movl	%eax, 8(%rsp)
  2176bf: 48 85 f6                     	testq	%rsi, %rsi
  2176c2: 0f 85 11 02 00 00            	jne	0x2178d9 <debug.printSourceAtAddress__anon_4447+0x4519>
  2176c8: 4c 8b 74 24 10               	movq	16(%rsp), %r14
  2176cd: 48 8b 3c 24                  	movq	(%rsp), %rdi
  2176d1: e8 7a 46 00 00               	callq	0x21bd50 <builtin.returnError>
  2176d6: 48 8b 3c 24                  	movq	(%rsp), %rdi
  2176da: e8 71 46 00 00               	callq	0x21bd50 <builtin.returnError>
  2176df: 8b 5c 24 08                  	movl	8(%rsp), %ebx
  2176e3: 4c 8b 6c 24 60               	movq	96(%rsp), %r13
  2176e8: 66 85 db                     	testw	%bx, %bx
  2176eb: 0f 85 1b 08 00 00            	jne	0x217f0c <debug.printSourceAtAddress__anon_4447+0x4b4c>
  2176f1: 4c 8d b4 24 10 04 00 00      	leaq	1040(%rsp), %r14
  2176f9: 48 8d 9c 24 20 05 00 00      	leaq	1312(%rsp), %rbx
  217701: ba 10 01 00 00               	movl	$272, %edx              # imm = 0x110
  217706: 4c 89 f7                     	movq	%r14, %rdi
  217709: 48 89 de                     	movq	%rbx, %rsi
  21770c: c5 f8 77                     	vzeroupper
  21770f: e8 cc 4b 00 00               	callq	0x21c2e0 <memcpy>
  217714: 48 89 ef                     	movq	%rbp, %rdi
  217717: ba 10 01 00 00               	movl	$272, %edx              # imm = 0x110
  21771c: 4c 89 f6                     	movq	%r14, %rsi
  21771f: 48 83 c7 08                  	addq	$8, %rdi
  217723: e8 b8 4b 00 00               	callq	0x21c2e0 <memcpy>
  217728: 4c 8b b4 24 b8 02 00 00      	movq	696(%rsp), %r14
  217730: 48 8b 44 24 58               	movq	88(%rsp), %rax
  217735: 48 8b b4 24 d8 01 00 00      	movq	472(%rsp), %rsi
  21773d: 4c 89 ad 18 01 00 00         	movq	%r13, 280(%rbp)
  217744: 4c 89 f7                     	movq	%r14, %rdi
  217747: 48 89 85 20 01 00 00         	movq	%rax, 288(%rbp)
  21774e: 48 89 75 00                  	movq	%rsi, (%rbp)
  217752: e8 a9 39 00 00               	callq	0x21b100 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).containsAdapted__anon_6985>
  217757: a8 01                        	testb	$1, %al
  217759: 0f 85 74 be ff ff            	jne	0x2135d3 <debug.printSourceAtAddress__anon_4447+0x213>
  21775f: 48 8b 44 24 20               	movq	32(%rsp), %rax
  217764: 83 78 1c 00                  	cmpl	$0, 28(%rax)
  217768: 74 3b                        	je	0x2177a5 <debug.printSourceAtAddress__anon_4447+0x43e5>
  21776a: 48 8b b4 24 d8 01 00 00      	movq	472(%rsp), %rsi
  217772: 4c 89 f7                     	movq	%r14, %rdi
  217775: 48 89 ea                     	movq	%rbp, %rdx
  217778: e8 f3 32 00 00               	callq	0x21aa70 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).putAssumeCapacityNoClobberContext>
  21777d: 48 8b 84 24 d0 00 00 00      	movq	208(%rsp), %rax
  217785: 48 8b 0c 24                  	movq	(%rsp), %rcx
  217789: 48 89 01                     	movq	%rax, (%rcx)
  21778c: 48 8b 44 24 10               	movq	16(%rsp), %rax
  217791: 48 2b 45 00                  	subq	(%rbp), %rax
  217795: 48 89 44 24 68               	movq	%rax, 104(%rsp)
  21779a: 0f 83 6a c0 ff ff            	jae	0x21380a <debug.printSourceAtAddress__anon_4447+0x44a>
  2177a0: e9 7d 01 00 00               	jmp	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  2177a5: 4c 89 f7                     	movq	%r14, %rdi
  2177a8: e8 23 39 00 00               	callq	0x21b0d0 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).capacity>
  2177ad: 48 8b 4c 24 20               	movq	32(%rsp), %rcx
  2177b2: 89 c0                        	movl	%eax, %eax
  2177b4: 48 c1 e0 04                  	shlq	$4, %rax
  2177b8: 48 8d 14 80                  	leaq	(%rax,%rax,4), %rdx
  2177bc: 48 b8 5d 8f c2 f5 28 5c 8f 02	movabsq	$184467440737095517, %rax # imm = 0x28F5C28F5C28F5D
  2177c6: c4 e2 fb f6 c0               	mulxq	%rax, %rax, %rax
  2177cb: 8b 49 1c                     	movl	28(%rcx), %ecx
  2177ce: 48 39 c8                     	cmpq	%rcx, %rax
  2177d1: 0f 82 fc bd ff ff            	jb	0x2135d3 <debug.printSourceAtAddress__anon_4447+0x213>
  2177d7: 29 c8                        	subl	%ecx, %eax
  2177d9: ff c0                        	incl	%eax
  2177db: 0f 84 41 01 00 00            	je	0x217922 <debug.printSourceAtAddress__anon_4447+0x4562>
  2177e1: 89 c0                        	movl	%eax, %eax
  2177e3: 48 89 9c 24 28 15 00 00      	movq	%rbx, 5416(%rsp)
  2177eb: 48 c7 84 24 30 15 00 00 20 00 00 00  	movq	$32, 5424(%rsp)
  2177f7: 48 c7 84 24 20 15 00 00 00 00 00 00  	movq	$0, 5408(%rsp)
  217803: 48 6b d0 64                  	imulq	$100, %rax, %rdx
  217807: 48 b8 34 33 33 33 33 33 33 03	movabsq	$230584300921369396, %rax # imm = 0x333333333333334
  217811: c4 e2 c3 f6 f8               	mulxq	%rax, %rdi, %rdi
  217816: ff c7                        	incl	%edi
  217818: e8 c3 3a 00 00               	callq	0x21b2e0 <math.ceilPowerOfTwoPromote__anon_7212>
  21781d: 48 c1 e0 1f                  	shlq	$31, %rax
  217821: 48 c1 f8 1f                  	sarq	$31, %rax
  217825: 0f 88 22 0c 00 00            	js	0x21844d <debug.printSourceAtAddress__anon_4447+0x508d>
  21782b: 48 8b 4c 24 20               	movq	32(%rsp), %rcx
  217830: 48 8b 3c 24                  	movq	(%rsp), %rdi
  217834: 4c 89 f6                     	movq	%r14, %rsi
  217837: 48 8d 51 20                  	leaq	32(%rcx), %rdx
  21783b: 89 c1                        	movl	%eax, %ecx
  21783d: e8 7e 47 00 00               	callq	0x21bfc0 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).grow>
  217842: 66 85 c0                     	testw	%ax, %ax
  217845: 0f 84 1f ff ff ff            	je	0x21776a <debug.printSourceAtAddress__anon_4447+0x43aa>
  21784b: 4c 8b 34 24                  	movq	(%rsp), %r14
  21784f: 89 c3                        	movl	%eax, %ebx
  217851: 4c 89 f7                     	movq	%r14, %rdi
  217854: e8 f7 44 00 00               	callq	0x21bd50 <builtin.returnError>
  217859: 4c 89 f7                     	movq	%r14, %rdi
  21785c: e8 ef 44 00 00               	callq	0x21bd50 <builtin.returnError>
  217861: 4c 89 f7                     	movq	%r14, %rdi
  217864: e8 e7 44 00 00               	callq	0x21bd50 <builtin.returnError>
  217869: 48 8b 44 24 20               	movq	32(%rsp), %rax
  21786e: ba 28 01 00 00               	movl	$296, %edx              # imm = 0x128
  217873: 48 89 ee                     	movq	%rbp, %rsi
  217876: b9 03 00 00 00               	movl	$3, %ecx
  21787b: 4d 89 e0                     	movq	%r12, %r8
  21787e: 48 8b 38                     	movq	(%rax), %rdi
  217881: 48 8b 40 08                  	movq	8(%rax), %rax
  217885: ff 50 10                     	callq	*16(%rax)
  217888: 4c 89 f7                     	movq	%r14, %rdi
  21788b: e8 c0 44 00 00               	callq	0x21bd50 <builtin.returnError>
  217890: e9 c0 f6 ff ff               	jmp	0x216f55 <debug.printSourceAtAddress__anon_4447+0x3b95>
  217895: 48 8b 74 24 40               	movq	64(%rsp), %rsi
  21789a: 4c 8b 74 24 10               	movq	16(%rsp), %r14
  21789f: 89 44 24 08                  	movl	%eax, 8(%rsp)
  2178a3: 48 85 f6                     	testq	%rsi, %rsi
  2178a6: 0f 84 21 fe ff ff            	je	0x2176cd <debug.printSourceAtAddress__anon_4447+0x430d>
  2178ac: 0f 1f 40 00                  	nopl	(%rax)
  2178b0: 48 8b 56 08                  	movq	8(%rsi), %rdx
  2178b4: 48 8b 7c 24 30               	movq	48(%rsp), %rdi
  2178b9: 48 8b 44 24 38               	movq	56(%rsp), %rax
  2178be: 48 8b 1e                     	movq	(%rsi), %rbx
  2178c1: b9 03 00 00 00               	movl	$3, %ecx
  2178c6: 4d 89 e0                     	movq	%r12, %r8
  2178c9: ff 50 10                     	callq	*16(%rax)
  2178cc: 48 89 de                     	movq	%rbx, %rsi
  2178cf: 48 85 db                     	testq	%rbx, %rbx
  2178d2: 75 dc                        	jne	0x2178b0 <debug.printSourceAtAddress__anon_4447+0x44f0>
  2178d4: e9 b9 07 00 00               	jmp	0x218092 <debug.printSourceAtAddress__anon_4447+0x4cd2>
  2178d9: 4c 8b 74 24 10               	movq	16(%rsp), %r14
  2178de: 66 90                        	nop
  2178e0: 48 8b 56 08                  	movq	8(%rsi), %rdx
  2178e4: 48 8b 7c 24 30               	movq	48(%rsp), %rdi
  2178e9: 48 8b 44 24 38               	movq	56(%rsp), %rax
  2178ee: 48 8b 1e                     	movq	(%rsi), %rbx
  2178f1: b9 03 00 00 00               	movl	$3, %ecx
  2178f6: 4d 89 e0                     	movq	%r12, %r8
  2178f9: ff 50 10                     	callq	*16(%rax)
  2178fc: 48 89 de                     	movq	%rbx, %rsi
  2178ff: 48 85 db                     	testq	%rbx, %rbx
  217902: 75 dc                        	jne	0x2178e0 <debug.printSourceAtAddress__anon_4447+0x4520>
  217904: e9 c4 fd ff ff               	jmp	0x2176cd <debug.printSourceAtAddress__anon_4447+0x430d>
  217909: 48 89 df                     	movq	%rbx, %rdi
  21790c: 89 c5                        	movl	%eax, %ebp
  21790e: e8 3d 44 00 00               	callq	0x21bd50 <builtin.returnError>
  217913: 48 89 df                     	movq	%rbx, %rdi
  217916: e8 35 44 00 00               	callq	0x21bd50 <builtin.returnError>
  21791b: 89 e8                        	movl	%ebp, %eax
  21791d: e9 86 06 00 00               	jmp	0x217fa8 <debug.printSourceAtAddress__anon_4447+0x4be8>
  217922: bf 59 1d 20 00               	movl	$2104665, %edi          # imm = 0x201D59
  217927: be 10 00 00 00               	movl	$16, %esi
  21792c: 31 c9                        	xorl	%ecx, %ecx
  21792e: c5 f8 77                     	vzeroupper
  217931: e8 da 39 00 00               	callq	0x21b310 <builtin.default_panic>
  217936: 48 8b 74 24 40               	movq	64(%rsp), %rsi
  21793b: 4c 8d ac 24 20 15 00 00      	leaq	5408(%rsp), %r13
  217943: 89 44 24 08                  	movl	%eax, 8(%rsp)
  217947: 48 85 f6                     	testq	%rsi, %rsi
  21794a: 0f 84 42 07 00 00            	je	0x218092 <debug.printSourceAtAddress__anon_4447+0x4cd2>
  217950: 48 8b 56 08                  	movq	8(%rsi), %rdx
  217954: 48 8b 7c 24 30               	movq	48(%rsp), %rdi
  217959: 48 8b 44 24 38               	movq	56(%rsp), %rax
  21795e: 48 8b 1e                     	movq	(%rsi), %rbx
  217961: b9 03 00 00 00               	movl	$3, %ecx
  217966: 4d 89 e0                     	movq	%r12, %r8
  217969: ff 50 10                     	callq	*16(%rax)
  21796c: 48 89 de                     	movq	%rbx, %rsi
  21796f: 48 85 db                     	testq	%rbx, %rbx
  217972: 75 dc                        	jne	0x217950 <debug.printSourceAtAddress__anon_4447+0x4590>
  217974: e9 19 07 00 00               	jmp	0x218092 <debug.printSourceAtAddress__anon_4447+0x4cd2>
  217979: 48 8b 1c 24                  	movq	(%rsp), %rbx
  21797d: 48 89 df                     	movq	%rbx, %rdi
  217980: e8 cb 43 00 00               	callq	0x21bd50 <builtin.returnError>
  217985: 48 89 df                     	movq	%rbx, %rdi
  217988: e8 c3 43 00 00               	callq	0x21bd50 <builtin.returnError>
  21798d: 48 89 df                     	movq	%rbx, %rdi
  217990: e8 bb 43 00 00               	callq	0x21bd50 <builtin.returnError>
  217995: 48 8b 74 24 40               	movq	64(%rsp), %rsi
  21799a: 66 b8 15 00                  	movw	$21, %ax
  21799e: 4c 89 fd                     	movq	%r15, %rbp
  2179a1: 89 44 24 08                  	movl	%eax, 8(%rsp)
  2179a5: 48 85 f6                     	testq	%rsi, %rsi
  2179a8: 0f 84 48 05 00 00            	je	0x217ef6 <debug.printSourceAtAddress__anon_4447+0x4b36>
  2179ae: 66 90                        	nop
  2179b0: 48 8b 56 08                  	movq	8(%rsi), %rdx
  2179b4: 48 8b 7c 24 30               	movq	48(%rsp), %rdi
  2179b9: 48 8b 44 24 38               	movq	56(%rsp), %rax
  2179be: 48 8b 1e                     	movq	(%rsi), %rbx
  2179c1: b9 03 00 00 00               	movl	$3, %ecx
  2179c6: 4d 89 e0                     	movq	%r12, %r8
  2179c9: ff 50 10                     	callq	*16(%rax)
  2179cc: 48 89 de                     	movq	%rbx, %rsi
  2179cf: 48 85 db                     	testq	%rbx, %rbx
  2179d2: 75 dc                        	jne	0x2179b0 <debug.printSourceAtAddress__anon_4447+0x45f0>
  2179d4: e9 1d 05 00 00               	jmp	0x217ef6 <debug.printSourceAtAddress__anon_4447+0x4b36>
  2179d9: 48 8b 3c 24                  	movq	(%rsp), %rdi
  2179dd: 89 c3                        	movl	%eax, %ebx
  2179df: e8 6c 43 00 00               	callq	0x21bd50 <builtin.returnError>
  2179e4: 4d 89 e0                     	movq	%r12, %r8
  2179e7: 89 da                        	movl	%ebx, %edx
  2179e9: e9 28 d3 ff ff               	jmp	0x214d16 <debug.printSourceAtAddress__anon_4447+0x1956>
  2179ee: 48 8b 3c 24                  	movq	(%rsp), %rdi
  2179f2: e8 59 43 00 00               	callq	0x21bd50 <builtin.returnError>
  2179f7: e9 36 03 00 00               	jmp	0x217d32 <debug.printSourceAtAddress__anon_4447+0x4972>
  2179fc: 66 b8 34 00                  	movw	$52, %ax
  217a00: e9 63 f6 ff ff               	jmp	0x217068 <debug.printSourceAtAddress__anon_4447+0x3ca8>
  217a05: 48 8b 3c 24                  	movq	(%rsp), %rdi
  217a09: c5 f8 77                     	vzeroupper
  217a0c: e8 3f 43 00 00               	callq	0x21bd50 <builtin.returnError>
  217a11: 48 8b 74 24 40               	movq	64(%rsp), %rsi
  217a16: 66 b8 34 00                  	movw	$52, %ax
  217a1a: 89 44 24 08                  	movl	%eax, 8(%rsp)
  217a1e: 48 85 f6                     	testq	%rsi, %rsi
  217a21: 0f 84 ca 04 00 00            	je	0x217ef1 <debug.printSourceAtAddress__anon_4447+0x4b31>
  217a27: 4c 8b 74 24 10               	movq	16(%rsp), %r14
  217a2c: 48 8b 56 08                  	movq	8(%rsi), %rdx
  217a30: 48 8b 7c 24 30               	movq	48(%rsp), %rdi
  217a35: 48 8b 44 24 38               	movq	56(%rsp), %rax
  217a3a: 48 8b 1e                     	movq	(%rsi), %rbx
  217a3d: b9 03 00 00 00               	movl	$3, %ecx
  217a42: 4d 89 e0                     	movq	%r12, %r8
  217a45: ff 50 10                     	callq	*16(%rax)
  217a48: 48 89 de                     	movq	%rbx, %rsi
  217a4b: 48 85 db                     	testq	%rbx, %rbx
  217a4e: 75 dc                        	jne	0x217a2c <debug.printSourceAtAddress__anon_4447+0x466c>
  217a50: e9 a1 04 00 00               	jmp	0x217ef6 <debug.printSourceAtAddress__anon_4447+0x4b36>
  217a55: 48 8b 74 24 40               	movq	64(%rsp), %rsi
  217a5a: 89 44 24 08                  	movl	%eax, 8(%rsp)
  217a5e: 48 85 f6                     	testq	%rsi, %rsi
  217a61: 0f 84 61 fc ff ff            	je	0x2176c8 <debug.printSourceAtAddress__anon_4447+0x4308>
  217a67: 4c 8b 74 24 10               	movq	16(%rsp), %r14
  217a6c: 48 8b 56 08                  	movq	8(%rsi), %rdx
  217a70: 48 8b 7c 24 30               	movq	48(%rsp), %rdi
  217a75: 48 8b 44 24 38               	movq	56(%rsp), %rax
  217a7a: 48 8b 1e                     	movq	(%rsi), %rbx
  217a7d: b9 03 00 00 00               	movl	$3, %ecx
  217a82: 4d 89 e0                     	movq	%r12, %r8
  217a85: ff 50 10                     	callq	*16(%rax)
  217a88: 48 89 de                     	movq	%rbx, %rsi
  217a8b: 48 85 db                     	testq	%rbx, %rbx
  217a8e: 75 dc                        	jne	0x217a6c <debug.printSourceAtAddress__anon_4447+0x46ac>
  217a90: e9 fd 05 00 00               	jmp	0x218092 <debug.printSourceAtAddress__anon_4447+0x4cd2>
  217a95: 48 8b 3c 24                  	movq	(%rsp), %rdi
  217a99: e8 b2 42 00 00               	callq	0x21bd50 <builtin.returnError>
  217a9e: 48 8b 74 24 40               	movq	64(%rsp), %rsi
  217aa3: 66 b8 34 00                  	movw	$52, %ax
  217aa7: 89 44 24 08                  	movl	%eax, 8(%rsp)
  217aab: 48 85 f6                     	testq	%rsi, %rsi
  217aae: 0f 84 3d 04 00 00            	je	0x217ef1 <debug.printSourceAtAddress__anon_4447+0x4b31>
  217ab4: 4c 8b 74 24 10               	movq	16(%rsp), %r14
  217ab9: 48 8b 56 08                  	movq	8(%rsi), %rdx
  217abd: 48 8b 7c 24 30               	movq	48(%rsp), %rdi
  217ac2: 48 8b 44 24 38               	movq	56(%rsp), %rax
  217ac7: 48 8b 1e                     	movq	(%rsi), %rbx
  217aca: b9 03 00 00 00               	movl	$3, %ecx
  217acf: 4d 89 e0                     	movq	%r12, %r8
  217ad2: ff 50 10                     	callq	*16(%rax)
  217ad5: 48 89 de                     	movq	%rbx, %rsi
  217ad8: 48 85 db                     	testq	%rbx, %rbx
  217adb: 75 dc                        	jne	0x217ab9 <debug.printSourceAtAddress__anon_4447+0x46f9>
  217add: e9 14 04 00 00               	jmp	0x217ef6 <debug.printSourceAtAddress__anon_4447+0x4b36>
  217ae2: 48 8b 3c 24                  	movq	(%rsp), %rdi
  217ae6: e8 65 42 00 00               	callq	0x21bd50 <builtin.returnError>
  217aeb: 66 bb 33 00                  	movw	$51, %bx
  217aef: e9 1a f8 ff ff               	jmp	0x21730e <debug.printSourceAtAddress__anon_4447+0x3f4e>
  217af4: 48 8b 3c 24                  	movq	(%rsp), %rdi
  217af8: e8 53 42 00 00               	callq	0x21bd50 <builtin.returnError>
  217afd: 48 8b 74 24 40               	movq	64(%rsp), %rsi
  217b02: 66 b8 34 00                  	movw	$52, %ax
  217b06: 89 44 24 08                  	movl	%eax, 8(%rsp)
  217b0a: 48 85 f6                     	testq	%rsi, %rsi
  217b0d: 0f 84 98 03 00 00            	je	0x217eab <debug.printSourceAtAddress__anon_4447+0x4aeb>
  217b13: 48 8b 6c 24 18               	movq	24(%rsp), %rbp
  217b18: 48 8b 56 08                  	movq	8(%rsi), %rdx
  217b1c: 48 8b 7c 24 30               	movq	48(%rsp), %rdi
  217b21: 48 8b 44 24 38               	movq	56(%rsp), %rax
  217b26: 48 8b 1e                     	movq	(%rsi), %rbx
  217b29: b9 03 00 00 00               	movl	$3, %ecx
  217b2e: 4d 89 e0                     	movq	%r12, %r8
  217b31: ff 50 10                     	callq	*16(%rax)
  217b34: 48 89 de                     	movq	%rbx, %rsi
  217b37: 48 85 db                     	testq	%rbx, %rbx
  217b3a: 75 dc                        	jne	0x217b18 <debug.printSourceAtAddress__anon_4447+0x4758>
  217b3c: e9 b5 03 00 00               	jmp	0x217ef6 <debug.printSourceAtAddress__anon_4447+0x4b36>
  217b41: 48 8b 3c 24                  	movq	(%rsp), %rdi
  217b45: e8 06 42 00 00               	callq	0x21bd50 <builtin.returnError>
  217b4a: 48 8b 74 24 40               	movq	64(%rsp), %rsi
  217b4f: 66 b8 34 00                  	movw	$52, %ax
  217b53: 89 44 24 08                  	movl	%eax, 8(%rsp)
  217b57: 48 85 f6                     	testq	%rsi, %rsi
  217b5a: 0f 84 91 03 00 00            	je	0x217ef1 <debug.printSourceAtAddress__anon_4447+0x4b31>
  217b60: 4c 8b 74 24 10               	movq	16(%rsp), %r14
  217b65: 48 8b 56 08                  	movq	8(%rsi), %rdx
  217b69: 48 8b 7c 24 30               	movq	48(%rsp), %rdi
  217b6e: 48 8b 44 24 38               	movq	56(%rsp), %rax
  217b73: 48 8b 1e                     	movq	(%rsi), %rbx
  217b76: b9 03 00 00 00               	movl	$3, %ecx
  217b7b: 4d 89 e0                     	movq	%r12, %r8
  217b7e: ff 50 10                     	callq	*16(%rax)
  217b81: 48 89 de                     	movq	%rbx, %rsi
  217b84: 48 85 db                     	testq	%rbx, %rbx
  217b87: 75 dc                        	jne	0x217b65 <debug.printSourceAtAddress__anon_4447+0x47a5>
  217b89: e9 68 03 00 00               	jmp	0x217ef6 <debug.printSourceAtAddress__anon_4447+0x4b36>
  217b8e: 48 8b 74 24 40               	movq	64(%rsp), %rsi
  217b93: 89 44 24 08                  	movl	%eax, 8(%rsp)
  217b97: 48 85 f6                     	testq	%rsi, %rsi
  217b9a: 0f 84 28 fb ff ff            	je	0x2176c8 <debug.printSourceAtAddress__anon_4447+0x4308>
  217ba0: 4c 8b 74 24 10               	movq	16(%rsp), %r14
  217ba5: 48 8b 56 08                  	movq	8(%rsi), %rdx
  217ba9: 48 8b 7c 24 30               	movq	48(%rsp), %rdi
  217bae: 48 8b 44 24 38               	movq	56(%rsp), %rax
  217bb3: 48 8b 1e                     	movq	(%rsi), %rbx
  217bb6: b9 03 00 00 00               	movl	$3, %ecx
  217bbb: 4d 89 e0                     	movq	%r12, %r8
  217bbe: ff 50 10                     	callq	*16(%rax)
  217bc1: 48 89 de                     	movq	%rbx, %rsi
  217bc4: 48 85 db                     	testq	%rbx, %rbx
  217bc7: 75 dc                        	jne	0x217ba5 <debug.printSourceAtAddress__anon_4447+0x47e5>
  217bc9: e9 c4 04 00 00               	jmp	0x218092 <debug.printSourceAtAddress__anon_4447+0x4cd2>
  217bce: 48 8b 3c 24                  	movq	(%rsp), %rdi
  217bd2: e8 79 41 00 00               	callq	0x21bd50 <builtin.returnError>
  217bd7: 48 8b 1c 24                  	movq	(%rsp), %rbx
  217bdb: 48 89 df                     	movq	%rbx, %rdi
  217bde: e8 6d 41 00 00               	callq	0x21bd50 <builtin.returnError>
  217be3: 48 89 df                     	movq	%rbx, %rdi
  217be6: e8 65 41 00 00               	callq	0x21bd50 <builtin.returnError>
  217beb: e9 73 f3 ff ff               	jmp	0x216f63 <debug.printSourceAtAddress__anon_4447+0x3ba3>
  217bf0: 48 8b 3c 24                  	movq	(%rsp), %rdi
  217bf4: 89 c3                        	movl	%eax, %ebx
  217bf6: e8 55 41 00 00               	callq	0x21bd50 <builtin.returnError>
  217bfb: 89 d8                        	movl	%ebx, %eax
  217bfd: 66 83 f8 34                  	cmpw	$52, %ax
  217c01: 0f 84 6c f3 ff ff            	je	0x216f73 <debug.printSourceAtAddress__anon_4447+0x3bb3>
  217c07: e9 fd d0 ff ff               	jmp	0x214d09 <debug.printSourceAtAddress__anon_4447+0x1949>
  217c0c: 66 b8 34 00                  	movw	$52, %ax
  217c10: e9 bc f8 ff ff               	jmp	0x2174d1 <debug.printSourceAtAddress__anon_4447+0x4111>
  217c15: 48 8b 1c 24                  	movq	(%rsp), %rbx
  217c19: 48 89 df                     	movq	%rbx, %rdi
  217c1c: e8 2f 41 00 00               	callq	0x21bd50 <builtin.returnError>
  217c21: 48 89 df                     	movq	%rbx, %rdi
  217c24: e8 27 41 00 00               	callq	0x21bd50 <builtin.returnError>
  217c29: 66 b8 15 00                  	movw	$21, %ax
  217c2d: e9 1f f7 ff ff               	jmp	0x217351 <debug.printSourceAtAddress__anon_4447+0x3f91>
  217c32: 48 8b 3c 24                  	movq	(%rsp), %rdi
  217c36: e9 bd 03 00 00               	jmp	0x217ff8 <debug.printSourceAtAddress__anon_4447+0x4c38>
  217c3b: 66 b8 34 00                  	movw	$52, %ax
  217c3f: e9 af f7 ff ff               	jmp	0x2173f3 <debug.printSourceAtAddress__anon_4447+0x4033>
  217c44: 48 8b 3c 24                  	movq	(%rsp), %rdi
  217c48: c5 f8 77                     	vzeroupper
  217c4b: e8 00 41 00 00               	callq	0x21bd50 <builtin.returnError>
  217c50: 48 8b 74 24 40               	movq	64(%rsp), %rsi
  217c55: 66 b8 34 00                  	movw	$52, %ax
  217c59: 89 44 24 08                  	movl	%eax, 8(%rsp)
  217c5d: 48 85 f6                     	testq	%rsi, %rsi
  217c60: 0f 84 8b 02 00 00            	je	0x217ef1 <debug.printSourceAtAddress__anon_4447+0x4b31>
  217c66: 4c 8b 74 24 10               	movq	16(%rsp), %r14
  217c6b: 48 8b 56 08                  	movq	8(%rsi), %rdx
  217c6f: 48 8b 7c 24 30               	movq	48(%rsp), %rdi
  217c74: 48 8b 44 24 38               	movq	56(%rsp), %rax
  217c79: 48 8b 1e                     	movq	(%rsi), %rbx
  217c7c: b9 03 00 00 00               	movl	$3, %ecx
  217c81: 4d 89 e0                     	movq	%r12, %r8
  217c84: ff 50 10                     	callq	*16(%rax)
  217c87: 48 89 de                     	movq	%rbx, %rsi
  217c8a: 48 85 db                     	testq	%rbx, %rbx
  217c8d: 75 dc                        	jne	0x217c6b <debug.printSourceAtAddress__anon_4447+0x48ab>
  217c8f: e9 62 02 00 00               	jmp	0x217ef6 <debug.printSourceAtAddress__anon_4447+0x4b36>
  217c94: 48 8b 74 24 40               	movq	64(%rsp), %rsi
  217c99: 89 44 24 08                  	movl	%eax, 8(%rsp)
  217c9d: 48 85 f6                     	testq	%rsi, %rsi
  217ca0: 0f 85 c0 03 00 00            	jne	0x218066 <debug.printSourceAtAddress__anon_4447+0x4ca6>
  217ca6: 4c 8b 74 24 10               	movq	16(%rsp), %r14
  217cab: 4c 89 fd                     	movq	%r15, %rbp
  217cae: e9 1a fa ff ff               	jmp	0x2176cd <debug.printSourceAtAddress__anon_4447+0x430d>
  217cb3: 89 c3                        	movl	%eax, %ebx
  217cb5: e9 54 f6 ff ff               	jmp	0x21730e <debug.printSourceAtAddress__anon_4447+0x3f4e>
  217cba: 48 8b 3c 24                  	movq	(%rsp), %rdi
  217cbe: e8 8d 40 00 00               	callq	0x21bd50 <builtin.returnError>
  217cc3: 48 8b 74 24 40               	movq	64(%rsp), %rsi
  217cc8: 66 b8 34 00                  	movw	$52, %ax
  217ccc: 89 44 24 08                  	movl	%eax, 8(%rsp)
  217cd0: 48 85 f6                     	testq	%rsi, %rsi
  217cd3: 0f 84 18 02 00 00            	je	0x217ef1 <debug.printSourceAtAddress__anon_4447+0x4b31>
  217cd9: 4c 8b 74 24 10               	movq	16(%rsp), %r14
  217cde: 48 8b 56 08                  	movq	8(%rsi), %rdx
  217ce2: 48 8b 7c 24 30               	movq	48(%rsp), %rdi
  217ce7: 48 8b 44 24 38               	movq	56(%rsp), %rax
  217cec: 48 8b 1e                     	movq	(%rsi), %rbx
  217cef: b9 03 00 00 00               	movl	$3, %ecx
  217cf4: 4d 89 e0                     	movq	%r12, %r8
  217cf7: ff 50 10                     	callq	*16(%rax)
  217cfa: 48 89 de                     	movq	%rbx, %rsi
  217cfd: 48 85 db                     	testq	%rbx, %rbx
  217d00: 75 dc                        	jne	0x217cde <debug.printSourceAtAddress__anon_4447+0x491e>
  217d02: e9 ef 01 00 00               	jmp	0x217ef6 <debug.printSourceAtAddress__anon_4447+0x4b36>
  217d07: 48 8b 3c 24                  	movq	(%rsp), %rdi
  217d0b: c5 f8 77                     	vzeroupper
  217d0e: e8 3d 40 00 00               	callq	0x21bd50 <builtin.returnError>
  217d13: 48 8b 44 24 20               	movq	32(%rsp), %rax
  217d18: ba 48 00 00 00               	movl	$72, %edx
  217d1d: 48 89 de                     	movq	%rbx, %rsi
  217d20: b9 03 00 00 00               	movl	$3, %ecx
  217d25: 4d 89 e0                     	movq	%r12, %r8
  217d28: 48 8b 38                     	movq	(%rax), %rdi
  217d2b: 48 8b 40 08                  	movq	8(%rax), %rax
  217d2f: ff 50 10                     	callq	*16(%rax)
  217d32: 48 8b 6c 24 18               	movq	24(%rsp), %rbp
  217d37: e9 e2 02 00 00               	jmp	0x21801e <debug.printSourceAtAddress__anon_4447+0x4c5e>
  217d3c: 48 8d bc 24 b0 00 00 00      	leaq	176(%rsp), %rdi
  217d44: e8 07 40 00 00               	callq	0x21bd50 <builtin.returnError>
  217d49: 48 8b 3c 24                  	movq	(%rsp), %rdi
  217d4d: e8 fe 3f 00 00               	callq	0x21bd50 <builtin.returnError>
  217d52: 48 8b 6c 24 18               	movq	24(%rsp), %rbp
  217d57: 48 8b 1c 24                  	movq	(%rsp), %rbx
  217d5b: 48 89 df                     	movq	%rbx, %rdi
  217d5e: e8 ed 3f 00 00               	callq	0x21bd50 <builtin.returnError>
  217d63: 48 89 df                     	movq	%rbx, %rdi
  217d66: e8 e5 3f 00 00               	callq	0x21bd50 <builtin.returnError>
  217d6b: 48 89 df                     	movq	%rbx, %rdi
  217d6e: e8 dd 3f 00 00               	callq	0x21bd50 <builtin.returnError>
  217d73: 48 89 df                     	movq	%rbx, %rdi
  217d76: e8 d5 3f 00 00               	callq	0x21bd50 <builtin.returnError>
  217d7b: 48 89 df                     	movq	%rbx, %rdi
  217d7e: e8 cd 3f 00 00               	callq	0x21bd50 <builtin.returnError>
  217d83: 48 89 df                     	movq	%rbx, %rdi
  217d86: e8 c5 3f 00 00               	callq	0x21bd50 <builtin.returnError>
  217d8b: 48 8b 74 24 40               	movq	64(%rsp), %rsi
  217d90: 66 b8 15 00                  	movw	$21, %ax
  217d94: 89 44 24 08                  	movl	%eax, 8(%rsp)
  217d98: 48 85 f6                     	testq	%rsi, %rsi
  217d9b: 0f 84 50 01 00 00            	je	0x217ef1 <debug.printSourceAtAddress__anon_4447+0x4b31>
  217da1: 4c 8b 74 24 10               	movq	16(%rsp), %r14
  217da6: 48 8b 56 08                  	movq	8(%rsi), %rdx
  217daa: 48 8b 7c 24 30               	movq	48(%rsp), %rdi
  217daf: 48 8b 44 24 38               	movq	56(%rsp), %rax
  217db4: 48 8b 1e                     	movq	(%rsi), %rbx
  217db7: b9 03 00 00 00               	movl	$3, %ecx
  217dbc: 4d 89 e0                     	movq	%r12, %r8
  217dbf: ff 50 10                     	callq	*16(%rax)
  217dc2: 48 89 de                     	movq	%rbx, %rsi
  217dc5: 48 85 db                     	testq	%rbx, %rbx
  217dc8: 75 dc                        	jne	0x217da6 <debug.printSourceAtAddress__anon_4447+0x49e6>
  217dca: e9 27 01 00 00               	jmp	0x217ef6 <debug.printSourceAtAddress__anon_4447+0x4b36>
  217dcf: 48 8b 1c 24                  	movq	(%rsp), %rbx
  217dd3: 48 89 df                     	movq	%rbx, %rdi
  217dd6: e8 75 3f 00 00               	callq	0x21bd50 <builtin.returnError>
  217ddb: 48 89 df                     	movq	%rbx, %rdi
  217dde: e8 6d 3f 00 00               	callq	0x21bd50 <builtin.returnError>
  217de3: 48 89 df                     	movq	%rbx, %rdi
  217de6: e8 65 3f 00 00               	callq	0x21bd50 <builtin.returnError>
  217deb: 48 8b 74 24 40               	movq	64(%rsp), %rsi
  217df0: 66 b8 33 00                  	movw	$51, %ax
  217df4: 89 44 24 08                  	movl	%eax, 8(%rsp)
  217df8: 48 85 f6                     	testq	%rsi, %rsi
  217dfb: 74 24                        	je	0x217e21 <debug.printSourceAtAddress__anon_4447+0x4a61>
  217dfd: 48 8b 56 08                  	movq	8(%rsi), %rdx
  217e01: 48 8b 7c 24 30               	movq	48(%rsp), %rdi
  217e06: 48 8b 44 24 38               	movq	56(%rsp), %rax
  217e0b: 48 8b 1e                     	movq	(%rsi), %rbx
  217e0e: b9 03 00 00 00               	movl	$3, %ecx
  217e13: 4d 89 e0                     	movq	%r12, %r8
  217e16: ff 50 10                     	callq	*16(%rax)
  217e19: 48 89 de                     	movq	%rbx, %rsi
  217e1c: 48 85 db                     	testq	%rbx, %rbx
  217e1f: 75 dc                        	jne	0x217dfd <debug.printSourceAtAddress__anon_4447+0x4a3d>
  217e21: 48 8b 6c 24 18               	movq	24(%rsp), %rbp
  217e26: e9 a2 f8 ff ff               	jmp	0x2176cd <debug.printSourceAtAddress__anon_4447+0x430d>
  217e2b: 48 8b 3c 24                  	movq	(%rsp), %rdi
  217e2f: e8 1c 3f 00 00               	callq	0x21bd50 <builtin.returnError>
  217e34: 48 8b 74 24 40               	movq	64(%rsp), %rsi
  217e39: 66 b8 34 00                  	movw	$52, %ax
  217e3d: 89 44 24 08                  	movl	%eax, 8(%rsp)
  217e41: 48 85 f6                     	testq	%rsi, %rsi
  217e44: 74 65                        	je	0x217eab <debug.printSourceAtAddress__anon_4447+0x4aeb>
  217e46: 48 8b 56 08                  	movq	8(%rsi), %rdx
  217e4a: 48 8b 7c 24 30               	movq	48(%rsp), %rdi
  217e4f: 48 8b 44 24 38               	movq	56(%rsp), %rax
  217e54: 48 8b 1e                     	movq	(%rsi), %rbx
  217e57: b9 03 00 00 00               	movl	$3, %ecx
  217e5c: 4d 89 e0                     	movq	%r12, %r8
  217e5f: ff 50 10                     	callq	*16(%rax)
  217e62: 48 89 de                     	movq	%rbx, %rsi
  217e65: 48 85 db                     	testq	%rbx, %rbx
  217e68: 75 dc                        	jne	0x217e46 <debug.printSourceAtAddress__anon_4447+0x4a86>
  217e6a: eb 3f                        	jmp	0x217eab <debug.printSourceAtAddress__anon_4447+0x4aeb>
  217e6c: 48 8b 3c 24                  	movq	(%rsp), %rdi
  217e70: e8 db 3e 00 00               	callq	0x21bd50 <builtin.returnError>
  217e75: 48 8b 74 24 40               	movq	64(%rsp), %rsi
  217e7a: 66 b8 33 00                  	movw	$51, %ax
  217e7e: 89 44 24 08                  	movl	%eax, 8(%rsp)
  217e82: 48 85 f6                     	testq	%rsi, %rsi
  217e85: 74 24                        	je	0x217eab <debug.printSourceAtAddress__anon_4447+0x4aeb>
  217e87: 48 8b 56 08                  	movq	8(%rsi), %rdx
  217e8b: 48 8b 7c 24 30               	movq	48(%rsp), %rdi
  217e90: 48 8b 44 24 38               	movq	56(%rsp), %rax
  217e95: 48 8b 1e                     	movq	(%rsi), %rbx
  217e98: b9 03 00 00 00               	movl	$3, %ecx
  217e9d: 4d 89 e0                     	movq	%r12, %r8
  217ea0: ff 50 10                     	callq	*16(%rax)
  217ea3: 48 89 de                     	movq	%rbx, %rsi
  217ea6: 48 85 db                     	testq	%rbx, %rbx
  217ea9: 75 dc                        	jne	0x217e87 <debug.printSourceAtAddress__anon_4447+0x4ac7>
  217eab: 48 8b 6c 24 18               	movq	24(%rsp), %rbp
  217eb0: eb 44                        	jmp	0x217ef6 <debug.printSourceAtAddress__anon_4447+0x4b36>
  217eb2: 48 8b 3c 24                  	movq	(%rsp), %rdi
  217eb6: e8 95 3e 00 00               	callq	0x21bd50 <builtin.returnError>
  217ebb: 48 8b 74 24 40               	movq	64(%rsp), %rsi
  217ec0: 66 b8 33 00                  	movw	$51, %ax
  217ec4: 89 44 24 08                  	movl	%eax, 8(%rsp)
  217ec8: 48 85 f6                     	testq	%rsi, %rsi
  217ecb: 74 24                        	je	0x217ef1 <debug.printSourceAtAddress__anon_4447+0x4b31>
  217ecd: 48 8b 56 08                  	movq	8(%rsi), %rdx
  217ed1: 48 8b 7c 24 30               	movq	48(%rsp), %rdi
  217ed6: 48 8b 44 24 38               	movq	56(%rsp), %rax
  217edb: 48 8b 1e                     	movq	(%rsi), %rbx
  217ede: b9 03 00 00 00               	movl	$3, %ecx
  217ee3: 4d 89 e0                     	movq	%r12, %r8
  217ee6: ff 50 10                     	callq	*16(%rax)
  217ee9: 48 89 de                     	movq	%rbx, %rsi
  217eec: 48 85 db                     	testq	%rbx, %rbx
  217eef: 75 dc                        	jne	0x217ecd <debug.printSourceAtAddress__anon_4447+0x4b0d>
  217ef1: 4c 8b 74 24 10               	movq	16(%rsp), %r14
  217ef6: 48 8b 3c 24                  	movq	(%rsp), %rdi
  217efa: e8 51 3e 00 00               	callq	0x21bd50 <builtin.returnError>
  217eff: 48 8b 3c 24                  	movq	(%rsp), %rdi
  217f03: e8 48 3e 00 00               	callq	0x21bd50 <builtin.returnError>
  217f08: 8b 5c 24 08                  	movl	8(%rsp), %ebx
  217f0c: 4c 8b 3c 24                  	movq	(%rsp), %r15
  217f10: 4c 89 ff                     	movq	%r15, %rdi
  217f13: e8 38 3e 00 00               	callq	0x21bd50 <builtin.returnError>
  217f18: 48 8b 44 24 20               	movq	32(%rsp), %rax
  217f1d: ba 28 01 00 00               	movl	$296, %edx              # imm = 0x128
  217f22: 48 89 ee                     	movq	%rbp, %rsi
  217f25: b9 03 00 00 00               	movl	$3, %ecx
  217f2a: 4d 89 e0                     	movq	%r12, %r8
  217f2d: 48 8b 38                     	movq	(%rax), %rdi
  217f30: 48 8b 40 08                  	movq	8(%rax), %rax
  217f34: ff 50 10                     	callq	*16(%rax)
  217f37: 4c 89 ff                     	movq	%r15, %rdi
  217f3a: e8 11 3e 00 00               	callq	0x21bd50 <builtin.returnError>
  217f3f: 48 8b 3c 24                  	movq	(%rsp), %rdi
  217f43: e8 08 3e 00 00               	callq	0x21bd50 <builtin.returnError>
  217f48: 66 83 fb 18                  	cmpw	$24, %bx
  217f4c: 74 08                        	je	0x217f56 <debug.printSourceAtAddress__anon_4447+0x4b96>
  217f4e: 0f b7 c3                     	movzwl	%bx, %eax
  217f51: 83 f8 34                     	cmpl	$52, %eax
  217f54: 75 64                        	jne	0x217fba <debug.printSourceAtAddress__anon_4447+0x4bfa>
  217f56: 48 83 ec 08                  	subq	$8, %rsp
  217f5a: 48 8b 7c 24 08               	movq	8(%rsp), %rdi
  217f5f: 48 8b b4 24 98 01 00 00      	movq	408(%rsp), %rsi
  217f67: ba a8 15 20 00               	movl	$2102696, %edx          # imm = 0x2015A8
  217f6c: 41 b8 b8 23 20 00            	movl	$2106296, %r8d          # imm = 0x2023B8
  217f72: 41 b9 03 00 00 00            	movl	$3, %r9d
  217f78: 4c 89 f1                     	movq	%r14, %rcx
  217f7b: ff b4 24 90 01 00 00         	pushq	400(%rsp)
  217f82: 6a 03                        	pushq	$3
  217f84: 68 b8 23 20 00               	pushq	$2106296                # imm = 0x2023B8
  217f89: e8 c2 3c ff ff               	callq	0x20bc50 <debug.printLineInfo__anon_5656>
  217f8e: 48 83 c4 20                  	addq	$32, %rsp
  217f92: 66 85 c0                     	testw	%ax, %ax
  217f95: 75 29                        	jne	0x217fc0 <debug.printSourceAtAddress__anon_4447+0x4c00>
  217f97: 48 8b 84 24 d0 00 00 00      	movq	208(%rsp), %rax
  217f9f: 48 8b 0c 24                  	movq	(%rsp), %rcx
  217fa3: 48 89 01                     	movq	%rax, (%rcx)
  217fa6: 31 c0                        	xorl	%eax, %eax
  217fa8: 48 81 c4 28 25 00 00         	addq	$9512, %rsp             # imm = 0x2528
  217faf: 5b                           	popq	%rbx
  217fb0: 41 5c                        	popq	%r12
  217fb2: 41 5d                        	popq	%r13
  217fb4: 41 5e                        	popq	%r14
  217fb6: 41 5f                        	popq	%r15
  217fb8: 5d                           	popq	%rbp
  217fb9: c3                           	retq
  217fba: 48 8b 3c 24                  	movq	(%rsp), %rdi
  217fbe: eb 11                        	jmp	0x217fd1 <debug.printSourceAtAddress__anon_4447+0x4c11>
  217fc0: 4c 8b 34 24                  	movq	(%rsp), %r14
  217fc4: 89 c3                        	movl	%eax, %ebx
  217fc6: 4c 89 f7                     	movq	%r14, %rdi
  217fc9: e8 82 3d 00 00               	callq	0x21bd50 <builtin.returnError>
  217fce: 4c 89 f7                     	movq	%r14, %rdi
  217fd1: e8 7a 3d 00 00               	callq	0x21bd50 <builtin.returnError>
  217fd6: 89 d8                        	movl	%ebx, %eax
  217fd8: eb ce                        	jmp	0x217fa8 <debug.printSourceAtAddress__anon_4447+0x4be8>
  217fda: 48 8b 3c 24                  	movq	(%rsp), %rdi
  217fde: c5 f8 77                     	vzeroupper
  217fe1: e8 6a 3d 00 00               	callq	0x21bd50 <builtin.returnError>
  217fe6: 48 8b 1c 24                  	movq	(%rsp), %rbx
  217fea: 48 89 df                     	movq	%rbx, %rdi
  217fed: c5 f8 77                     	vzeroupper
  217ff0: e8 5b 3d 00 00               	callq	0x21bd50 <builtin.returnError>
  217ff5: 48 89 df                     	movq	%rbx, %rdi
  217ff8: e8 53 3d 00 00               	callq	0x21bd50 <builtin.returnError>
  217ffd: 48 8b 44 24 20               	movq	32(%rsp), %rax
  218002: 48 8b 74 24 50               	movq	80(%rsp), %rsi
  218007: ba 48 00 00 00               	movl	$72, %edx
  21800c: 48 8b 38                     	movq	(%rax), %rdi
  21800f: 48 8b 40 08                  	movq	8(%rax), %rax
  218013: b9 03 00 00 00               	movl	$3, %ecx
  218018: 4d 89 e0                     	movq	%r12, %r8
  21801b: ff 50 10                     	callq	*16(%rax)
  21801e: 66 b8 34 00                  	movw	$52, %ax
  218022: e9 2a f3 ff ff               	jmp	0x217351 <debug.printSourceAtAddress__anon_4447+0x3f91>
  218027: 48 8b 1c 24                  	movq	(%rsp), %rbx
  21802b: 48 89 df                     	movq	%rbx, %rdi
  21802e: e8 1d 3d 00 00               	callq	0x21bd50 <builtin.returnError>
  218033: 48 89 df                     	movq	%rbx, %rdi
  218036: e8 15 3d 00 00               	callq	0x21bd50 <builtin.returnError>
  21803b: 48 89 df                     	movq	%rbx, %rdi
  21803e: eb 0f                        	jmp	0x21804f <debug.printSourceAtAddress__anon_4447+0x4c8f>
  218040: 48 8b 3c 24                  	movq	(%rsp), %rdi
  218044: e8 07 3d 00 00               	callq	0x21bd50 <builtin.returnError>
  218049: eb d3                        	jmp	0x21801e <debug.printSourceAtAddress__anon_4447+0x4c5e>
  21804b: 48 8b 3c 24                  	movq	(%rsp), %rdi
  21804f: e8 fc 3c 00 00               	callq	0x21bd50 <builtin.returnError>
  218054: 66 b8 33 00                  	movw	$51, %ax
  218058: e9 f4 f2 ff ff               	jmp	0x217351 <debug.printSourceAtAddress__anon_4447+0x3f91>
  21805d: 48 8b 3c 24                  	movq	(%rsp), %rdi
  218061: e9 eb ef ff ff               	jmp	0x217051 <debug.printSourceAtAddress__anon_4447+0x3c91>
  218066: 4c 8b 74 24 10               	movq	16(%rsp), %r14
  21806b: 4c 89 fd                     	movq	%r15, %rbp
  21806e: 48 8b 56 08                  	movq	8(%rsi), %rdx
  218072: 48 8b 7c 24 30               	movq	48(%rsp), %rdi
  218077: 48 8b 44 24 38               	movq	56(%rsp), %rax
  21807c: 48 8b 1e                     	movq	(%rsi), %rbx
  21807f: b9 03 00 00 00               	movl	$3, %ecx
  218084: 4d 89 e0                     	movq	%r12, %r8
  218087: ff 50 10                     	callq	*16(%rax)
  21808a: 48 89 de                     	movq	%rbx, %rsi
  21808d: 48 85 db                     	testq	%rbx, %rbx
  218090: 75 dc                        	jne	0x21806e <debug.printSourceAtAddress__anon_4447+0x4cae>
  218092: 48 8b 3c 24                  	movq	(%rsp), %rdi
  218096: e8 b5 3c 00 00               	callq	0x21bd50 <builtin.returnError>
  21809b: 66 83 7c 24 08 00            	cmpw	$0, 8(%rsp)
  2180a1: 0f 84 20 de ff ff            	je	0x215ec7 <debug.printSourceAtAddress__anon_4447+0x2b07>
  2180a7: e9 53 fe ff ff               	jmp	0x217eff <debug.printSourceAtAddress__anon_4447+0x4b3f>
  2180ac: bf 9c 1e 20 00               	movl	$2104988, %edi          # imm = 0x201E9C
  2180b1: e9 ec 00 00 00               	jmp	0x2181a2 <debug.printSourceAtAddress__anon_4447+0x4de2>
  2180b6: 48 8b 54 24 20               	movq	32(%rsp), %rdx
  2180bb: 89 44 24 08                  	movl	%eax, 8(%rsp)
  2180bf: 48 8b 74 24 50               	movq	80(%rsp), %rsi
  2180c4: b9 03 00 00 00               	movl	$3, %ecx
  2180c9: 4d 89 e0                     	movq	%r12, %r8
  2180cc: 48 8b 3a                     	movq	(%rdx), %rdi
  2180cf: 48 8b 42 08                  	movq	8(%rdx), %rax
  2180d3: ba 48 00 00 00               	movl	$72, %edx
  2180d8: ff 50 10                     	callq	*16(%rax)
  2180db: e9 ed f5 ff ff               	jmp	0x2176cd <debug.printSourceAtAddress__anon_4447+0x430d>
  2180e0: bf b0 1e 20 00               	movl	$2105008, %edi          # imm = 0x201EB0
  2180e5: be 17 00 00 00               	movl	$23, %esi
  2180ea: 31 c9                        	xorl	%ecx, %ecx
  2180ec: e8 1f 32 00 00               	callq	0x21b310 <builtin.default_panic>
  2180f1: bf 48 1e 20 00               	movl	$2104904, %edi          # imm = 0x201E48
  2180f6: be 28 00 00 00               	movl	$40, %esi
  2180fb: 31 c9                        	xorl	%ecx, %ecx
  2180fd: e8 0e 32 00 00               	callq	0x21b310 <builtin.default_panic>
  218102: 48 8b 3c 24                  	movq	(%rsp), %rdi
  218106: e8 45 3c 00 00               	callq	0x21bd50 <builtin.returnError>
  21810b: 48 8b 74 24 40               	movq	64(%rsp), %rsi
  218110: 66 b8 34 00                  	movw	$52, %ax
  218114: 89 44 24 08                  	movl	%eax, 8(%rsp)
  218118: 48 85 f6                     	testq	%rsi, %rsi
  21811b: 0f 84 d5 fd ff ff            	je	0x217ef6 <debug.printSourceAtAddress__anon_4447+0x4b36>
  218121: 48 8b 56 08                  	movq	8(%rsi), %rdx
  218125: 48 8b 7c 24 30               	movq	48(%rsp), %rdi
  21812a: 48 8b 44 24 38               	movq	56(%rsp), %rax
  21812f: 48 8b 1e                     	movq	(%rsi), %rbx
  218132: b9 03 00 00 00               	movl	$3, %ecx
  218137: 4d 89 e0                     	movq	%r12, %r8
  21813a: ff 50 10                     	callq	*16(%rax)
  21813d: 48 89 de                     	movq	%rbx, %rsi
  218140: 48 85 db                     	testq	%rbx, %rbx
  218143: 75 dc                        	jne	0x218121 <debug.printSourceAtAddress__anon_4447+0x4d61>
  218145: e9 ac fd ff ff               	jmp	0x217ef6 <debug.printSourceAtAddress__anon_4447+0x4b36>
  21814a: 48 8b 1c 24                  	movq	(%rsp), %rbx
  21814e: 48 89 df                     	movq	%rbx, %rdi
  218151: e8 fa 3b 00 00               	callq	0x21bd50 <builtin.returnError>
  218156: 48 89 df                     	movq	%rbx, %rdi
  218159: e8 f2 3b 00 00               	callq	0x21bd50 <builtin.returnError>
  21815e: 48 8b 74 24 40               	movq	64(%rsp), %rsi
  218163: 66 b8 34 00                  	movw	$52, %ax
  218167: 89 44 24 08                  	movl	%eax, 8(%rsp)
  21816b: 48 85 f6                     	testq	%rsi, %rsi
  21816e: 0f 84 82 fd ff ff            	je	0x217ef6 <debug.printSourceAtAddress__anon_4447+0x4b36>
  218174: 48 8b 56 08                  	movq	8(%rsi), %rdx
  218178: 48 8b 7c 24 30               	movq	48(%rsp), %rdi
  21817d: 48 8b 44 24 38               	movq	56(%rsp), %rax
  218182: 48 8b 1e                     	movq	(%rsi), %rbx
  218185: b9 03 00 00 00               	movl	$3, %ecx
  21818a: 4d 89 e0                     	movq	%r12, %r8
  21818d: ff 50 10                     	callq	*16(%rax)
  218190: 48 89 de                     	movq	%rbx, %rsi
  218193: 48 85 db                     	testq	%rbx, %rbx
  218196: 75 dc                        	jne	0x218174 <debug.printSourceAtAddress__anon_4447+0x4db4>
  218198: e9 59 fd ff ff               	jmp	0x217ef6 <debug.printSourceAtAddress__anon_4447+0x4b36>
  21819d: bf c7 1d 20 00               	movl	$2104775, %edi          # imm = 0x201DC7
  2181a2: be 13 00 00 00               	movl	$19, %esi
  2181a7: 31 c9                        	xorl	%ecx, %ecx
  2181a9: c5 f8 77                     	vzeroupper
  2181ac: e8 5f 31 00 00               	callq	0x21b310 <builtin.default_panic>
  2181b1: 48 8b 3c 24                  	movq	(%rsp), %rdi
  2181b5: c5 f8 77                     	vzeroupper
  2181b8: e8 93 3b 00 00               	callq	0x21bd50 <builtin.returnError>
  2181bd: 48 8b 1c 24                  	movq	(%rsp), %rbx
  2181c1: 48 89 df                     	movq	%rbx, %rdi
  2181c4: c5 f8 77                     	vzeroupper
  2181c7: e8 84 3b 00 00               	callq	0x21bd50 <builtin.returnError>
  2181cc: 48 89 df                     	movq	%rbx, %rdi
  2181cf: e8 7c 3b 00 00               	callq	0x21bd50 <builtin.returnError>
  2181d4: 48 8b 74 24 40               	movq	64(%rsp), %rsi
  2181d9: 66 b8 34 00                  	movw	$52, %ax
  2181dd: 89 44 24 08                  	movl	%eax, 8(%rsp)
  2181e1: 48 85 f6                     	testq	%rsi, %rsi
  2181e4: 0f 84 e3 f4 ff ff            	je	0x2176cd <debug.printSourceAtAddress__anon_4447+0x430d>
  2181ea: 48 8b 56 08                  	movq	8(%rsi), %rdx
  2181ee: 48 8b 7c 24 30               	movq	48(%rsp), %rdi
  2181f3: 48 8b 44 24 38               	movq	56(%rsp), %rax
  2181f8: 48 8b 1e                     	movq	(%rsi), %rbx
  2181fb: b9 03 00 00 00               	movl	$3, %ecx
  218200: 4d 89 e0                     	movq	%r12, %r8
  218203: ff 50 10                     	callq	*16(%rax)
  218206: 48 89 de                     	movq	%rbx, %rsi
  218209: 48 85 db                     	testq	%rbx, %rbx
  21820c: 75 dc                        	jne	0x2181ea <debug.printSourceAtAddress__anon_4447+0x4e2a>
  21820e: e9 ba f4 ff ff               	jmp	0x2176cd <debug.printSourceAtAddress__anon_4447+0x430d>
  218213: 48 8b 3c 24                  	movq	(%rsp), %rdi
  218217: c5 f8 77                     	vzeroupper
  21821a: e8 31 3b 00 00               	callq	0x21bd50 <builtin.returnError>
  21821f: 48 8b 1c 24                  	movq	(%rsp), %rbx
  218223: 48 89 df                     	movq	%rbx, %rdi
  218226: c5 f8 77                     	vzeroupper
  218229: e8 22 3b 00 00               	callq	0x21bd50 <builtin.returnError>
  21822e: 48 89 df                     	movq	%rbx, %rdi
  218231: e8 1a 3b 00 00               	callq	0x21bd50 <builtin.returnError>
  218236: 48 8b 74 24 40               	movq	64(%rsp), %rsi
  21823b: 66 b8 34 00                  	movw	$52, %ax
  21823f: 89 44 24 08                  	movl	%eax, 8(%rsp)
  218243: 48 85 f6                     	testq	%rsi, %rsi
  218246: 0f 84 81 f4 ff ff            	je	0x2176cd <debug.printSourceAtAddress__anon_4447+0x430d>
  21824c: 48 8b 56 08                  	movq	8(%rsi), %rdx
  218250: 48 8b 7c 24 30               	movq	48(%rsp), %rdi
  218255: 48 8b 44 24 38               	movq	56(%rsp), %rax
  21825a: 48 8b 1e                     	movq	(%rsi), %rbx
  21825d: b9 03 00 00 00               	movl	$3, %ecx
  218262: 4d 89 e0                     	movq	%r12, %r8
  218265: ff 50 10                     	callq	*16(%rax)
  218268: 48 89 de                     	movq	%rbx, %rsi
  21826b: 48 85 db                     	testq	%rbx, %rbx
  21826e: 75 dc                        	jne	0x21824c <debug.printSourceAtAddress__anon_4447+0x4e8c>
  218270: e9 58 f4 ff ff               	jmp	0x2176cd <debug.printSourceAtAddress__anon_4447+0x430d>
  218275: 48 8b 3c 24                  	movq	(%rsp), %rdi
  218279: c5 f8 77                     	vzeroupper
  21827c: e8 cf 3a 00 00               	callq	0x21bd50 <builtin.returnError>
  218281: 48 8b 1c 24                  	movq	(%rsp), %rbx
  218285: 48 89 df                     	movq	%rbx, %rdi
  218288: c5 f8 77                     	vzeroupper
  21828b: e8 c0 3a 00 00               	callq	0x21bd50 <builtin.returnError>
  218290: 48 89 df                     	movq	%rbx, %rdi
  218293: e8 b8 3a 00 00               	callq	0x21bd50 <builtin.returnError>
  218298: 48 8b 74 24 40               	movq	64(%rsp), %rsi
  21829d: 66 b8 34 00                  	movw	$52, %ax
  2182a1: 89 44 24 08                  	movl	%eax, 8(%rsp)
  2182a5: 48 85 f6                     	testq	%rsi, %rsi
  2182a8: 0f 84 1f f4 ff ff            	je	0x2176cd <debug.printSourceAtAddress__anon_4447+0x430d>
  2182ae: 48 8b 56 08                  	movq	8(%rsi), %rdx
  2182b2: 48 8b 7c 24 30               	movq	48(%rsp), %rdi
  2182b7: 48 8b 44 24 38               	movq	56(%rsp), %rax
  2182bc: 48 8b 1e                     	movq	(%rsi), %rbx
  2182bf: b9 03 00 00 00               	movl	$3, %ecx
  2182c4: 4d 89 e0                     	movq	%r12, %r8
  2182c7: ff 50 10                     	callq	*16(%rax)
  2182ca: 48 89 de                     	movq	%rbx, %rsi
  2182cd: 48 85 db                     	testq	%rbx, %rbx
  2182d0: 75 dc                        	jne	0x2182ae <debug.printSourceAtAddress__anon_4447+0x4eee>
  2182d2: e9 f6 f3 ff ff               	jmp	0x2176cd <debug.printSourceAtAddress__anon_4447+0x430d>
  2182d7: 48 8b 3c 24                  	movq	(%rsp), %rdi
  2182db: c5 f8 77                     	vzeroupper
  2182de: e8 6d 3a 00 00               	callq	0x21bd50 <builtin.returnError>
  2182e3: 48 8b 1c 24                  	movq	(%rsp), %rbx
  2182e7: 48 89 df                     	movq	%rbx, %rdi
  2182ea: c5 f8 77                     	vzeroupper
  2182ed: e8 5e 3a 00 00               	callq	0x21bd50 <builtin.returnError>
  2182f2: 48 89 df                     	movq	%rbx, %rdi
  2182f5: e8 56 3a 00 00               	callq	0x21bd50 <builtin.returnError>
  2182fa: 48 8b 74 24 40               	movq	64(%rsp), %rsi
  2182ff: 66 b8 34 00                  	movw	$52, %ax
  218303: 89 44 24 08                  	movl	%eax, 8(%rsp)
  218307: 48 85 f6                     	testq	%rsi, %rsi
  21830a: 0f 84 bd f3 ff ff            	je	0x2176cd <debug.printSourceAtAddress__anon_4447+0x430d>
  218310: 48 8b 56 08                  	movq	8(%rsi), %rdx
  218314: 48 8b 7c 24 30               	movq	48(%rsp), %rdi
  218319: 48 8b 44 24 38               	movq	56(%rsp), %rax
  21831e: 48 8b 1e                     	movq	(%rsi), %rbx
  218321: b9 03 00 00 00               	movl	$3, %ecx
  218326: 4d 89 e0                     	movq	%r12, %r8
  218329: ff 50 10                     	callq	*16(%rax)
  21832c: 48 89 de                     	movq	%rbx, %rsi
  21832f: 48 85 db                     	testq	%rbx, %rbx
  218332: 75 dc                        	jne	0x218310 <debug.printSourceAtAddress__anon_4447+0x4f50>
  218334: e9 94 f3 ff ff               	jmp	0x2176cd <debug.printSourceAtAddress__anon_4447+0x430d>
  218339: bf 2a 20 20 00               	movl	$2105386, %edi          # imm = 0x20202A
  21833e: be 1e 00 00 00               	movl	$30, %esi
  218343: 31 c9                        	xorl	%ecx, %ecx
  218345: e8 c6 2f 00 00               	callq	0x21b310 <builtin.default_panic>
  21834a: 48 8d bc 24 f0 00 00 00      	leaq	240(%rsp), %rdi
  218352: e8 f9 39 00 00               	callq	0x21bd50 <builtin.returnError>
  218357: 48 8b 3c 24                  	movq	(%rsp), %rdi
  21835b: e8 f0 39 00 00               	callq	0x21bd50 <builtin.returnError>
  218360: 48 8b 1c 24                  	movq	(%rsp), %rbx
  218364: 48 89 df                     	movq	%rbx, %rdi
  218367: e8 e4 39 00 00               	callq	0x21bd50 <builtin.returnError>
  21836c: 48 89 df                     	movq	%rbx, %rdi
  21836f: e8 dc 39 00 00               	callq	0x21bd50 <builtin.returnError>
  218374: 48 89 df                     	movq	%rbx, %rdi
  218377: e8 d4 39 00 00               	callq	0x21bd50 <builtin.returnError>
  21837c: 48 89 df                     	movq	%rbx, %rdi
  21837f: e8 cc 39 00 00               	callq	0x21bd50 <builtin.returnError>
  218384: 48 89 df                     	movq	%rbx, %rdi
  218387: e8 c4 39 00 00               	callq	0x21bd50 <builtin.returnError>
  21838c: 48 89 df                     	movq	%rbx, %rdi
  21838f: e8 bc 39 00 00               	callq	0x21bd50 <builtin.returnError>
  218394: 48 8b 44 24 20               	movq	32(%rsp), %rax
  218399: 48 8b 74 24 50               	movq	80(%rsp), %rsi
  21839e: ba 48 00 00 00               	movl	$72, %edx
  2183a3: b9 03 00 00 00               	movl	$3, %ecx
  2183a8: 4d 89 e0                     	movq	%r12, %r8
  2183ab: 48 8b 38                     	movq	(%rax), %rdi
  2183ae: 48 8b 40 08                  	movq	8(%rax), %rax
  2183b2: ff 50 10                     	callq	*16(%rax)
  2183b5: 48 8b 6c 24 18               	movq	24(%rsp), %rbp
  2183ba: 66 b8 15 00                  	movw	$21, %ax
  2183be: e9 8e ef ff ff               	jmp	0x217351 <debug.printSourceAtAddress__anon_4447+0x3f91>
  2183c3: 48 8b 3c 24                  	movq	(%rsp), %rdi
  2183c7: eb 0f                        	jmp	0x2183d8 <debug.printSourceAtAddress__anon_4447+0x5018>
  2183c9: 48 8b 1c 24                  	movq	(%rsp), %rbx
  2183cd: 48 89 df                     	movq	%rbx, %rdi
  2183d0: e8 7b 39 00 00               	callq	0x21bd50 <builtin.returnError>
  2183d5: 48 89 df                     	movq	%rbx, %rdi
  2183d8: e8 73 39 00 00               	callq	0x21bd50 <builtin.returnError>
  2183dd: 48 8b 44 24 20               	movq	32(%rsp), %rax
  2183e2: ba 48 00 00 00               	movl	$72, %edx
  2183e7: 4c 89 f6                     	movq	%r14, %rsi
  2183ea: e9 1d fc ff ff               	jmp	0x21800c <debug.printSourceAtAddress__anon_4447+0x4c4c>
  2183ef: bf 34 1d 20 00               	movl	$2104628, %edi          # imm = 0x201D34
  2183f4: be 24 00 00 00               	movl	$36, %esi
  2183f9: 31 c9                        	xorl	%ecx, %ecx
  2183fb: e8 10 2f 00 00               	callq	0x21b310 <builtin.default_panic>
  218400: bf 6c 22 20 00               	movl	$2105964, %edi          # imm = 0x20226C
  218405: be 1e 00 00 00               	movl	$30, %esi
  21840a: 31 c9                        	xorl	%ecx, %ecx
  21840c: e8 ff 2e 00 00               	callq	0x21b310 <builtin.default_panic>
  218411: bf 72 21 20 00               	movl	$2105714, %edi          # imm = 0x202172
  218416: be 19 00 00 00               	movl	$25, %esi
  21841b: 31 c9                        	xorl	%ecx, %ecx
  21841d: e8 ee 2e 00 00               	callq	0x21b310 <builtin.default_panic>
  218422: 48 8b 3c 24                  	movq	(%rsp), %rdi
  218426: e8 25 39 00 00               	callq	0x21bd50 <builtin.returnError>
  21842b: bf e3 1e 20 00               	movl	$2105059, %edi          # imm = 0x201EE3
  218430: be 17 00 00 00               	movl	$23, %esi
  218435: 31 c9                        	xorl	%ecx, %ecx
  218437: e8 d4 2e 00 00               	callq	0x21b310 <builtin.default_panic>
  21843c: bf 1e 1f 20 00               	movl	$2105118, %edi          # imm = 0x201F1E
  218441: be 21 00 00 00               	movl	$33, %esi
  218446: 31 c9                        	xorl	%ecx, %ecx
  218448: e8 c3 2e 00 00               	callq	0x21b310 <builtin.default_panic>
  21844d: 48 8d bc 24 20 15 00 00      	leaq	5408(%rsp), %rdi
  218455: eb cf                        	jmp	0x218426 <debug.printSourceAtAddress__anon_4447+0x5066>
  218457: bf 5a 21 20 00               	movl	$2105690, %edi          # imm = 0x20215A
  21845c: be 17 00 00 00               	movl	$23, %esi
  218461: 31 c9                        	xorl	%ecx, %ecx
  218463: e8 a8 2e 00 00               	callq	0x21b310 <builtin.default_panic>
  218468: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)

0000000000218470 <debug.handleSegfaultPosix>:
  218470: 55                           	pushq	%rbp
  218471: 41 56                        	pushq	%r14
  218473: 53                           	pushq	%rbx
  218474: 48 81 ec c0 01 00 00         	subq	$448, %rsp              # imm = 0x1C0
  21847b: c5 f8 57 c0                  	vxorps	%xmm0, %xmm0, %xmm0
  21847f: 48 89 d3                     	movq	%rdx, %rbx
  218482: 49 89 f6                     	movq	%rsi, %r14
  218485: 89 fd                        	movl	%edi, %ebp
  218487: 48 8d 84 24 c0 00 00 00      	leaq	192(%rsp), %rax
  21848f: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  218494: 48 8d 54 24 20               	leaq	32(%rsp), %rdx
  218499: be 0b 00 00 00               	movl	$11, %esi
  21849e: 48 89 44 24 10               	movq	%rax, 16(%rsp)
  2184a3: 48 c7 44 24 18 20 00 00 00   	movq	$32, 24(%rsp)
  2184ac: c5 fc 11 84 24 80 00 00 00   	vmovups	%ymm0, 128(%rsp)
  2184b5: 48 c7 44 24 08 00 00 00 00   	movq	$0, 8(%rsp)
  2184be: c5 fc 11 44 24 20            	vmovups	%ymm0, 32(%rsp)
  2184c4: c5 fc 11 44 24 40            	vmovups	%ymm0, 64(%rsp)
  2184ca: c5 fc 11 44 24 60            	vmovups	%ymm0, 96(%rsp)
  2184d0: c5 fc 11 84 24 98 00 00 00   	vmovups	%ymm0, 152(%rsp)
  2184d9: c5 f8 77                     	vzeroupper
  2184dc: e8 af bc fe ff               	callq	0x204190 <os.sigaction>
  2184e1: 66 85 c0                     	testw	%ax, %ax
  2184e4: 75 4b                        	jne	0x218531 <debug.handleSegfaultPosix+0xc1>
  2184e6: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  2184eb: 48 8d 54 24 20               	leaq	32(%rsp), %rdx
  2184f0: be 04 00 00 00               	movl	$4, %esi
  2184f5: e8 96 bc fe ff               	callq	0x204190 <os.sigaction>
  2184fa: 66 85 c0                     	testw	%ax, %ax
  2184fd: 75 32                        	jne	0x218531 <debug.handleSegfaultPosix+0xc1>
  2184ff: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  218504: 48 8d 54 24 20               	leaq	32(%rsp), %rdx
  218509: be 07 00 00 00               	movl	$7, %esi
  21850e: e8 7d bc fe ff               	callq	0x204190 <os.sigaction>
  218513: 66 85 c0                     	testw	%ax, %ax
  218516: 75 19                        	jne	0x218531 <debug.handleSegfaultPosix+0xc1>
  218518: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  21851d: 48 8d 54 24 20               	leaq	32(%rsp), %rdx
  218522: be 08 00 00 00               	movl	$8, %esi
  218527: e8 64 bc fe ff               	callq	0x204190 <os.sigaction>
  21852c: 66 85 c0                     	testw	%ax, %ax
  21852f: 74 0a                        	je	0x21853b <debug.handleSegfaultPosix+0xcb>
  218531: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  218536: e8 15 38 00 00               	callq	0x21bd50 <builtin.returnError>
  21853b: 64 48 83 3c 25 f0 ff ff ff 00	cmpq	$0, %fs:-16
  218545: 4d 8b 76 10                  	movq	16(%r14), %r14
  218549: 75 5b                        	jne	0x2185a6 <debug.handleSegfaultPosix+0x136>
  21854b: 64 48 c7 04 25 f0 ff ff ff 01 00 00 00       	movq	$1, %fs:-16
  218558: f0                           	lock
  218559: fe 05 d1 6a 00 00            	incb	27345(%rip)             # 0x21f030 <debug.panicking>
  21855f: f0                           	lock
  218560: 0f ba 2d cc 6a 00 00 00      	btsl	$0, 27340(%rip)         # 0x21f034 <debug.panic_mutex>
  218568: 73 0a                        	jae	0x218574 <debug.handleSegfaultPosix+0x104>
  21856a: bf 34 f0 21 00               	movl	$2224180, %edi          # imm = 0x21F034
  21856f: e8 1c 3a 00 00               	callq	0x21bf90 <Thread.Mutex.FutexImpl.lockSlow>
  218574: 89 ef                        	movl	%ebp, %edi
  218576: 4c 89 f6                     	movq	%r14, %rsi
  218579: 48 89 da                     	movq	%rbx, %rdx
  21857c: e8 0f 14 00 00               	callq	0x219990 <debug.dumpSegfaultInfoPosix>
  218581: 31 c0                        	xorl	%eax, %eax
  218583: 87 05 ab 6a 00 00            	xchgl	%eax, 27307(%rip)       # 0x21f034 <debug.panic_mutex>
  218589: 45 31 c0                     	xorl	%r8d, %r8d
  21858c: 83 f8 03                     	cmpl	$3, %eax
  21858f: 74 24                        	je	0x2185b5 <debug.handleSegfaultPosix+0x145>
  218591: 85 c0                        	testl	%eax, %eax
  218593: 75 59                        	jne	0x2185ee <debug.handleSegfaultPosix+0x17e>
  218595: bf 32 22 20 00               	movl	$2105906, %edi          # imm = 0x202232
  21859a: be 18 00 00 00               	movl	$24, %esi
  21859f: 31 c9                        	xorl	%ecx, %ecx
  2185a1: e8 6a 2d 00 00               	callq	0x21b310 <builtin.default_panic>
  2185a6: 89 ef                        	movl	%ebp, %edi
  2185a8: 4c 89 f6                     	movq	%r14, %rsi
  2185ab: 48 89 da                     	movq	%rbx, %rdx
  2185ae: e8 dd 13 00 00               	callq	0x219990 <debug.dumpSegfaultInfoPosix>
  2185b3: eb 42                        	jmp	0x2185f7 <debug.handleSegfaultPosix+0x187>
  2185b5: b8 ca 00 00 00               	movl	$202, %eax
  2185ba: bf 34 f0 21 00               	movl	$2224180, %edi          # imm = 0x21F034
  2185bf: be 81 00 00 00               	movl	$129, %esi
  2185c4: ba 01 00 00 00               	movl	$1, %edx
  2185c9: 0f 05                        	syscall
  2185cb: 89 c1                        	movl	%eax, %ecx
  2185cd: f7 d9                        	negl	%ecx
  2185cf: 48 3d 01 f0 ff ff            	cmpq	$-4095, %rax            # imm = 0xF001
  2185d5: 44 0f 43 c1                  	cmovael	%ecx, %r8d
  2185d9: 66 41 83 f8 16               	cmpw	$22, %r8w
  2185de: 77 b5                        	ja	0x218595 <debug.handleSegfaultPosix+0x125>
  2185e0: 41 0f b7 c0                  	movzwl	%r8w, %eax
  2185e4: b9 01 40 40 00               	movl	$4210689, %ecx          # imm = 0x404001
  2185e9: 0f a3 c1                     	btl	%eax, %ecx
  2185ec: 73 a7                        	jae	0x218595 <debug.handleSegfaultPosix+0x125>
  2185ee: f0                           	lock
  2185ef: fe 0d 3b 6a 00 00            	decb	27195(%rip)             # 0x21f030 <debug.panicking>
  2185f5: 75 05                        	jne	0x2185fc <debug.handleSegfaultPosix+0x18c>
  2185f7: e8 e4 35 00 00               	callq	0x21bbe0 <os.abort>
  2185fc: 45 31 c0                     	xorl	%r8d, %r8d
  2185ff: 48 8d bc 24 c0 00 00 00      	leaq	192(%rsp), %rdi
  218607: 41 b9 11 08 40 00            	movl	$4196369, %r9d          # imm = 0x400811
  21860d: be 80 00 00 00               	movl	$128, %esi
  218612: c7 84 24 c0 00 00 00 00 00 00 00     	movl	$0, 192(%rsp)
  21861d: 0f 1f 00                     	nopl	(%rax)
  218620: b8 ca 00 00 00               	movl	$202, %eax
  218625: 31 d2                        	xorl	%edx, %edx
  218627: 45 31 d2                     	xorl	%r10d, %r10d
  21862a: 0f 05                        	syscall
  21862c: 89 c1                        	movl	%eax, %ecx
  21862e: f7 d9                        	negl	%ecx
  218630: 48 3d 01 f0 ff ff            	cmpq	$-4095, %rax            # imm = 0xF001
  218636: 41 0f 42 c8                  	cmovbl	%r8d, %ecx
  21863a: 0f b7 c1                     	movzwl	%cx, %eax
  21863d: 66 83 f8 16                  	cmpw	$22, %ax
  218641: 77 0f                        	ja	0x218652 <debug.handleSegfaultPosix+0x1e2>
  218643: 41 0f a3 c1                  	btl	%eax, %r9d
  218647: 72 d7                        	jb	0x218620 <debug.handleSegfaultPosix+0x1b0>
  218649: 83 f8 0e                     	cmpl	$14, %eax
  21864c: 0f 84 43 ff ff ff            	je	0x218595 <debug.handleSegfaultPosix+0x125>
  218652: 83 f8 6e                     	cmpl	$110, %eax
  218655: bf 32 22 20 00               	movl	$2105906, %edi          # imm = 0x202232
  21865a: be 18 00 00 00               	movl	$24, %esi
  21865f: 31 c9                        	xorl	%ecx, %ecx
  218661: e8 aa 2c 00 00               	callq	0x21b310 <builtin.default_panic>
  218666: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)

0000000000218670 <os.noopSigHandler>:
  218670: c3                           	retq
  218671: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)

0000000000218680 <fmt.formatBuf__anon_6100>:
  218680: 55                           	pushq	%rbp
  218681: 41 57                        	pushq	%r15
  218683: 41 56                        	pushq	%r14
  218685: 41 55                        	pushq	%r13
  218687: 41 54                        	pushq	%r12
  218689: 53                           	pushq	%rbx
  21868a: 48 81 ec 48 01 00 00         	subq	$328, %rsp              # imm = 0x148
  218691: 80 79 18 00                  	cmpb	$0, 24(%rcx)
  218695: 4d 89 c5                     	movq	%r8, %r13
  218698: 49 89 d6                     	movq	%rdx, %r14
  21869b: 48 89 f3                     	movq	%rsi, %rbx
  21869e: 48 89 3c 24                  	movq	%rdi, (%rsp)
  2186a2: 0f 84 ed 02 00 00            	je	0x218995 <fmt.formatBuf__anon_6100+0x315>
  2186a8: 4c 8b 61 10                  	movq	16(%rcx), %r12
  2186ac: 48 89 4c 24 28               	movq	%rcx, 40(%rsp)
  2186b1: 4d 85 f6                     	testq	%r14, %r14
  2186b4: 0f 84 3b 03 00 00            	je	0x2189f5 <fmt.formatBuf__anon_6100+0x375>
  2186ba: 48 8b 04 24                  	movq	(%rsp), %rax
  2186be: 0f b6 0d 21 9f fe ff         	movzbl	-90335(%rip), %ecx      # 0x2025e6 <debug.DebugInfo.lookupModuleDl__struct_4995.callback__anon_5004+0xf>
  2186c5: 0f b6 15 1e 9f fe ff         	movzbl	-90338(%rip), %edx      # 0x2025ea <debug.DebugInfo.lookupModuleDl__struct_4995.callback__anon_5004+0x13>
  2186cc: 0f b6 35 07 9f fe ff         	movzbl	-90361(%rip), %esi      # 0x2025da <debug.DebugInfo.lookupModuleDl__struct_4995.callback__anon_5004+0x3>
  2186d3: 45 31 c9                     	xorl	%r9d, %r9d
  2186d6: 49 b8 80 80 80 80 80 80 80 80	movabsq	$-9187201950435737472, %r8 # imm = 0x8080808080808080
  2186e0: 31 ff                        	xorl	%edi, %edi
  2186e2: 48 8b 00                     	movq	(%rax), %rax
  2186e5: 48 89 44 24 08               	movq	%rax, 8(%rsp)
  2186ea: 0f b6 05 f1 9e fe ff         	movzbl	-90383(%rip), %eax      # 0x2025e2 <debug.DebugInfo.lookupModuleDl__struct_4995.callback__anon_5004+0xb>
  2186f1: eb 19                        	jmp	0x21870c <fmt.formatBuf__anon_6100+0x8c>
  2186f3: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
  218700: 4d 89 ca                     	movq	%r9, %r10
  218703: 4d 39 f2                     	cmpq	%r14, %r10
  218706: 0f 83 1c 02 00 00            	jae	0x218928 <fmt.formatBuf__anon_6100+0x2a8>
  21870c: 4d 89 ca                     	movq	%r9, %r10
  21870f: 49 83 c2 08                  	addq	$8, %r10
  218713: 0f 82 ec 07 00 00            	jb	0x218f05 <fmt.formatBuf__anon_6100+0x885>
  218719: 4d 39 f2                     	cmpq	%r14, %r10
  21871c: 77 23                        	ja	0x218741 <fmt.formatBuf__anon_6100+0xc1>
  21871e: 4d 39 f1                     	cmpq	%r14, %r9
  218721: 0f 87 f2 07 00 00            	ja	0x218f19 <fmt.formatBuf__anon_6100+0x899>
  218727: 4d 89 f3                     	movq	%r14, %r11
  21872a: 4d 29 cb                     	subq	%r9, %r11
  21872d: 49 83 fb 07                  	cmpq	$7, %r11
  218731: 0f 86 f6 07 00 00            	jbe	0x218f2d <fmt.formatBuf__anon_6100+0x8ad>
  218737: 4e 85 04 0b                  	testq	%r8, (%rbx,%r9)
  21873b: 0f 84 d1 00 00 00            	je	0x218812 <fmt.formatBuf__anon_6100+0x192>
  218741: 4d 39 f1                     	cmpq	%r14, %r9
  218744: 73 ba                        	jae	0x218700 <fmt.formatBuf__anon_6100+0x80>
  218746: 46 0f b6 1c 0b               	movzbl	(%rbx,%r9), %r11d
  21874b: 49 89 df                     	movq	%rbx, %r15
  21874e: 41 89 f2                     	movl	%esi, %r10d
  218751: 45 84 db                     	testb	%r11b, %r11b
  218754: 79 3a                        	jns	0x218790 <fmt.formatBuf__anon_6100+0x110>
  218756: 44 89 db                     	movl	%r11d, %ebx
  218759: 41 89 d2                     	movl	%edx, %r10d
  21875c: 80 e3 e0                     	andb	$-32, %bl
  21875f: 80 fb c0                     	cmpb	$-64, %bl
  218762: 74 2c                        	je	0x218790 <fmt.formatBuf__anon_6100+0x110>
  218764: 44 89 db                     	movl	%r11d, %ebx
  218767: 41 89 ca                     	movl	%ecx, %r10d
  21876a: 80 e3 f0                     	andb	$-16, %bl
  21876d: 80 fb e0                     	cmpb	$-32, %bl
  218770: 74 1e                        	je	0x218790 <fmt.formatBuf__anon_6100+0x110>
  218772: 44 89 db                     	movl	%r11d, %ebx
  218775: 41 89 c2                     	movl	%eax, %r10d
  218778: 80 e3 f8                     	andb	$-8, %bl
  21877b: 80 fb f0                     	cmpb	$-16, %bl
  21877e: 0f 85 81 01 00 00            	jne	0x218905 <fmt.formatBuf__anon_6100+0x285>
  218784: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
  218790: 41 80 e2 07                  	andb	$7, %r10b
  218794: 41 0f b6 da                  	movzbl	%r10b, %ebx
  218798: 4d 8d 14 19                  	leaq	(%r9,%rbx), %r10
  21879c: 4d 39 f2                     	cmpq	%r14, %r10
  21879f: 0f 87 69 01 00 00            	ja	0x21890e <fmt.formatBuf__anon_6100+0x28e>
  2187a5: 80 fb 01                     	cmpb	$1, %bl
  2187a8: 75 26                        	jne	0x2187d0 <fmt.formatBuf__anon_6100+0x150>
  2187aa: 48 ff c7                     	incq	%rdi
  2187ad: 0f 84 52 07 00 00            	je	0x218f05 <fmt.formatBuf__anon_6100+0x885>
  2187b3: 4d 89 d1                     	movq	%r10, %r9
  2187b6: 4c 89 fb                     	movq	%r15, %rbx
  2187b9: 4d 39 f2                     	cmpq	%r14, %r10
  2187bc: 0f 82 4a ff ff ff            	jb	0x21870c <fmt.formatBuf__anon_6100+0x8c>
  2187c2: e9 61 01 00 00               	jmp	0x218928 <fmt.formatBuf__anon_6100+0x2a8>
  2187c7: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
  2187d0: 48 ff cb                     	decq	%rbx
  2187d3: 48 83 fb 03                  	cmpq	$3, %rbx
  2187d7: 0f 87 61 07 00 00            	ja	0x218f3e <fmt.formatBuf__anon_6100+0x8be>
  2187dd: ff 24 dd 38 0e 20 00         	jmpq	*2100792(,%rbx,8)
  2187e4: 44 89 db                     	movl	%r11d, %ebx
  2187e7: 80 e3 e0                     	andb	$-32, %bl
  2187ea: 80 fb c0                     	cmpb	$-64, %bl
  2187ed: 0f 85 4b 07 00 00            	jne	0x218f3e <fmt.formatBuf__anon_6100+0x8be>
  2187f3: 47 0f b6 4c 0f 01            	movzbl	1(%r15,%r9), %r9d
  2187f9: 41 80 e1 c0                  	andb	$-64, %r9b
  2187fd: 41 80 f9 80                  	cmpb	$-128, %r9b
  218801: 0f 85 f5 00 00 00            	jne	0x2188fc <fmt.formatBuf__anon_6100+0x27c>
  218807: 41 80 e3 1e                  	andb	$30, %r11b
  21880b: 75 9d                        	jne	0x2187aa <fmt.formatBuf__anon_6100+0x12a>
  21880d: e9 ea 00 00 00               	jmp	0x2188fc <fmt.formatBuf__anon_6100+0x27c>
  218812: 48 83 c7 08                  	addq	$8, %rdi
  218816: 4d 89 d1                     	movq	%r10, %r9
  218819: 0f 83 ed fe ff ff            	jae	0x21870c <fmt.formatBuf__anon_6100+0x8c>
  21881f: e9 e1 06 00 00               	jmp	0x218f05 <fmt.formatBuf__anon_6100+0x885>
  218824: 44 89 db                     	movl	%r11d, %ebx
  218827: 80 e3 f0                     	andb	$-16, %bl
  21882a: 80 fb e0                     	cmpb	$-32, %bl
  21882d: 0f 85 0b 07 00 00            	jne	0x218f3e <fmt.formatBuf__anon_6100+0x8be>
  218833: 43 0f b6 5c 0f 01            	movzbl	1(%r15,%r9), %ebx
  218839: 89 dd                        	movl	%ebx, %ebp
  21883b: 40 80 e5 c0                  	andb	$-64, %bpl
  21883f: 40 80 fd 80                  	cmpb	$-128, %bpl
  218843: 0f 85 b3 00 00 00            	jne	0x2188fc <fmt.formatBuf__anon_6100+0x27c>
  218849: 47 0f b6 4c 0f 02            	movzbl	2(%r15,%r9), %r9d
  21884f: 41 80 e1 c0                  	andb	$-64, %r9b
  218853: 41 80 f9 80                  	cmpb	$-128, %r9b
  218857: 0f 85 9f 00 00 00            	jne	0x2188fc <fmt.formatBuf__anon_6100+0x27c>
  21885d: 41 80 e3 0f                  	andb	$15, %r11b
  218861: 80 e3 3f                     	andb	$63, %bl
  218864: 45 0f b6 db                  	movzbl	%r11b, %r11d
  218868: 44 0f b6 cb                  	movzbl	%bl, %r9d
  21886c: 41 c1 e3 0c                  	shll	$12, %r11d
  218870: 41 c1 e1 06                  	shll	$6, %r9d
  218874: 45 09 d9                     	orl	%r11d, %r9d
  218877: 41 81 f9 00 08 00 00         	cmpl	$2048, %r9d             # imm = 0x800
  21887e: 72 7c                        	jb	0x2188fc <fmt.formatBuf__anon_6100+0x27c>
  218880: 41 81 e1 00 f8 00 00         	andl	$63488, %r9d            # imm = 0xF800
  218887: 41 81 f9 00 d8 00 00         	cmpl	$55296, %r9d            # imm = 0xD800
  21888e: 0f 85 16 ff ff ff            	jne	0x2187aa <fmt.formatBuf__anon_6100+0x12a>
  218894: eb 66                        	jmp	0x2188fc <fmt.formatBuf__anon_6100+0x27c>
  218896: 44 89 db                     	movl	%r11d, %ebx
  218899: 80 e3 f8                     	andb	$-8, %bl
  21889c: 80 fb f0                     	cmpb	$-16, %bl
  21889f: 0f 85 99 06 00 00            	jne	0x218f3e <fmt.formatBuf__anon_6100+0x8be>
  2188a5: 43 0f b6 5c 0f 01            	movzbl	1(%r15,%r9), %ebx
  2188ab: 89 dd                        	movl	%ebx, %ebp
  2188ad: 40 80 e5 c0                  	andb	$-64, %bpl
  2188b1: 40 80 fd 80                  	cmpb	$-128, %bpl
  2188b5: 75 45                        	jne	0x2188fc <fmt.formatBuf__anon_6100+0x27c>
  2188b7: 43 0f b6 6c 0f 02            	movzbl	2(%r15,%r9), %ebp
  2188bd: 40 80 e5 c0                  	andb	$-64, %bpl
  2188c1: 40 80 fd 80                  	cmpb	$-128, %bpl
  2188c5: 75 35                        	jne	0x2188fc <fmt.formatBuf__anon_6100+0x27c>
  2188c7: 47 0f b6 4c 0f 03            	movzbl	3(%r15,%r9), %r9d
  2188cd: 41 80 e1 c0                  	andb	$-64, %r9b
  2188d1: 41 80 f9 80                  	cmpb	$-128, %r9b
  2188d5: 75 25                        	jne	0x2188fc <fmt.formatBuf__anon_6100+0x27c>
  2188d7: 80 e3 30                     	andb	$48, %bl
  2188da: 45 0f b6 cb                  	movzbl	%r11b, %r9d
  2188de: 44 0f b6 db                  	movzbl	%bl, %r11d
  2188e2: 41 c1 e1 1d                  	shll	$29, %r9d
  2188e6: 41 c1 e3 17                  	shll	$23, %r11d
  2188ea: 47 8d 8c 19 00 00 00 78      	leal	2013265920(%r9,%r11), %r9d
  2188f2: 41 c1 f9 0b                  	sarl	$11, %r9d
  2188f6: 0f 88 ae fe ff ff            	js	0x2187aa <fmt.formatBuf__anon_6100+0x12a>
  2188fc: 48 8b 3c 24                  	movq	(%rsp), %rdi
  218900: e8 4b 34 00 00               	callq	0x21bd50 <builtin.returnError>
  218905: 48 8b 3c 24                  	movq	(%rsp), %rdi
  218909: e8 42 34 00 00               	callq	0x21bd50 <builtin.returnError>
  21890e: 48 8b 1c 24                  	movq	(%rsp), %rbx
  218912: 48 89 df                     	movq	%rbx, %rdi
  218915: e8 36 34 00 00               	callq	0x21bd50 <builtin.returnError>
  21891a: 48 8b 44 24 08               	movq	8(%rsp), %rax
  21891f: 4c 89 f7                     	movq	%r14, %rdi
  218922: 48 89 03                     	movq	%rax, (%rbx)
  218925: 4c 89 fb                     	movq	%r15, %rbx
  218928: 48 8b 4c 24 28               	movq	40(%rsp), %rcx
  21892d: 4c 89 e2                     	movq	%r12, %rdx
  218930: 31 c0                        	xorl	%eax, %eax
  218932: 48 29 fa                     	subq	%rdi, %rdx
  218935: 48 0f 43 c2                  	cmovaeq	%rdx, %rax
  218939: 48 89 44 24 08               	movq	%rax, 8(%rsp)
  21893e: 0f 87 c2 00 00 00            	ja	0x218a06 <fmt.formatBuf__anon_6100+0x386>
  218944: 45 8b 65 00                  	movl	(%r13), %r12d
  218948: 45 31 ff                     	xorl	%r15d, %r15d
  21894b: 4c 8d 6c 24 40               	leaq	64(%rsp), %r13
  218950: 4d 39 f7                     	cmpq	%r14, %r15
  218953: 0f 87 c0 05 00 00            	ja	0x218f19 <fmt.formatBuf__anon_6100+0x899>
  218959: 48 8b 34 24                  	movq	(%rsp), %rsi
  21895d: 4d 89 f0                     	movq	%r14, %r8
  218960: 4a 8d 0c 3b                  	leaq	(%rbx,%r15), %rcx
  218964: 4c 89 ef                     	movq	%r13, %rdi
  218967: 44 89 e2                     	movl	%r12d, %edx
  21896a: 4d 29 f8                     	subq	%r15, %r8
  21896d: e8 1e b9 fe ff               	callq	0x204290 <fs.file.File.write>
  218972: 0f b7 6c 24 48               	movzwl	72(%rsp), %ebp
  218977: 66 85 ed                     	testw	%bp, %bp
  21897a: 0f 85 7f 05 00 00            	jne	0x218eff <fmt.formatBuf__anon_6100+0x87f>
  218980: 4c 03 7c 24 40               	addq	64(%rsp), %r15
  218985: 0f 82 7a 05 00 00            	jb	0x218f05 <fmt.formatBuf__anon_6100+0x885>
  21898b: 4d 39 f7                     	cmpq	%r14, %r15
  21898e: 75 c0                        	jne	0x218950 <fmt.formatBuf__anon_6100+0x2d0>
  218990: e9 2b 05 00 00               	jmp	0x218ec0 <fmt.formatBuf__anon_6100+0x840>
  218995: 4d 85 f6                     	testq	%r14, %r14
  218998: 0f 84 22 05 00 00            	je	0x218ec0 <fmt.formatBuf__anon_6100+0x840>
  21899e: 45 8b 65 00                  	movl	(%r13), %r12d
  2189a2: 45 31 ff                     	xorl	%r15d, %r15d
  2189a5: 4c 8d 6c 24 40               	leaq	64(%rsp), %r13
  2189aa: 66 0f 1f 44 00 00            	nopw	(%rax,%rax)
  2189b0: 4d 39 f7                     	cmpq	%r14, %r15
  2189b3: 0f 87 60 05 00 00            	ja	0x218f19 <fmt.formatBuf__anon_6100+0x899>
  2189b9: 48 8b 34 24                  	movq	(%rsp), %rsi
  2189bd: 4d 89 f0                     	movq	%r14, %r8
  2189c0: 4a 8d 0c 3b                  	leaq	(%rbx,%r15), %rcx
  2189c4: 4c 89 ef                     	movq	%r13, %rdi
  2189c7: 44 89 e2                     	movl	%r12d, %edx
  2189ca: 4d 29 f8                     	subq	%r15, %r8
  2189cd: e8 be b8 fe ff               	callq	0x204290 <fs.file.File.write>
  2189d2: 0f b7 6c 24 48               	movzwl	72(%rsp), %ebp
  2189d7: 66 85 ed                     	testw	%bp, %bp
  2189da: 0f 85 1f 05 00 00            	jne	0x218eff <fmt.formatBuf__anon_6100+0x87f>
  2189e0: 4c 03 7c 24 40               	addq	64(%rsp), %r15
  2189e5: 0f 82 1a 05 00 00            	jb	0x218f05 <fmt.formatBuf__anon_6100+0x885>
  2189eb: 4d 39 f7                     	cmpq	%r14, %r15
  2189ee: 75 c0                        	jne	0x2189b0 <fmt.formatBuf__anon_6100+0x330>
  2189f0: e9 cb 04 00 00               	jmp	0x218ec0 <fmt.formatBuf__anon_6100+0x840>
  2189f5: 4c 89 e2                     	movq	%r12, %rdx
  2189f8: 4c 89 64 24 08               	movq	%r12, 8(%rsp)
  2189fd: 4d 85 e4                     	testq	%r12, %r12
  218a00: 0f 84 ba 04 00 00            	je	0x218ec0 <fmt.formatBuf__anon_6100+0x840>
  218a06: 0f b6 41 20                  	movzbl	32(%rcx), %eax
  218a0a: 85 c0                        	testl	%eax, %eax
  218a0c: 0f 84 56 01 00 00            	je	0x218b68 <fmt.formatBuf__anon_6100+0x4e8>
  218a12: 83 f8 01                     	cmpl	$1, %eax
  218a15: 0f 84 76 02 00 00            	je	0x218c91 <fmt.formatBuf__anon_6100+0x611>
  218a1b: 83 f8 02                     	cmpl	$2, %eax
  218a1e: 0f 85 2b 05 00 00            	jne	0x218f4f <fmt.formatBuf__anon_6100+0x8cf>
  218a24: c4 e2 7d 78 41 21            	vpbroadcastb	33(%rcx), %ymm0
  218a2a: 45 8b 65 00                  	movl	(%r13), %r12d
  218a2e: c5 fe 7f 84 24 20 01 00 00   	vmovdqu	%ymm0, 288(%rsp)
  218a37: c5 fe 7f 84 24 00 01 00 00   	vmovdqu	%ymm0, 256(%rsp)
  218a40: c5 fe 7f 84 24 e0 00 00 00   	vmovdqu	%ymm0, 224(%rsp)
  218a49: c5 fe 7f 84 24 c0 00 00 00   	vmovdqu	%ymm0, 192(%rsp)
  218a52: c5 fe 7f 84 24 a0 00 00 00   	vmovdqu	%ymm0, 160(%rsp)
  218a5b: c5 fe 7f 84 24 80 00 00 00   	vmovdqu	%ymm0, 128(%rsp)
  218a64: c5 fe 7f 44 24 60            	vmovdqu	%ymm0, 96(%rsp)
  218a6a: c5 fe 7f 44 24 40            	vmovdqu	%ymm0, 64(%rsp)
  218a70: 48 85 d2                     	testq	%rdx, %rdx
  218a73: 0f 84 95 00 00 00            	je	0x218b0e <fmt.formatBuf__anon_6100+0x48e>
  218a79: 4c 89 6c 24 10               	movq	%r13, 16(%rsp)
  218a7e: 4c 8d 6c 24 18               	leaq	24(%rsp), %r13
  218a83: 48 89 5c 24 30               	movq	%rbx, 48(%rsp)
  218a88: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
  218a90: 48 81 fa 00 01 00 00         	cmpq	$256, %rdx              # imm = 0x100
  218a97: 41 bf 00 01 00 00            	movl	$256, %r15d             # imm = 0x100
  218a9d: 48 89 54 24 08               	movq	%rdx, 8(%rsp)
  218aa2: 4c 0f 42 fa                  	cmovbq	%rdx, %r15
  218aa6: 31 db                        	xorl	%ebx, %ebx
  218aa8: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
  218ab0: 4d 89 f8                     	movq	%r15, %r8
  218ab3: 49 29 d8                     	subq	%rbx, %r8
  218ab6: 0f 82 5d 04 00 00            	jb	0x218f19 <fmt.formatBuf__anon_6100+0x899>
  218abc: 48 8b 34 24                  	movq	(%rsp), %rsi
  218ac0: 48 8d 4c 1c 40               	leaq	64(%rsp,%rbx), %rcx
  218ac5: 4c 89 ef                     	movq	%r13, %rdi
  218ac8: 44 89 e2                     	movl	%r12d, %edx
  218acb: c5 f8 77                     	vzeroupper
  218ace: e8 bd b7 fe ff               	callq	0x204290 <fs.file.File.write>
  218ad3: 0f b7 6c 24 20               	movzwl	32(%rsp), %ebp
  218ad8: 66 85 ed                     	testw	%bp, %bp
  218adb: 0f 85 e3 03 00 00            	jne	0x218ec4 <fmt.formatBuf__anon_6100+0x844>
  218ae1: 48 03 5c 24 18               	addq	24(%rsp), %rbx
  218ae6: 0f 82 19 04 00 00            	jb	0x218f05 <fmt.formatBuf__anon_6100+0x885>
  218aec: 4c 39 fb                     	cmpq	%r15, %rbx
  218aef: 75 bf                        	jne	0x218ab0 <fmt.formatBuf__anon_6100+0x430>
  218af1: 48 8b 54 24 08               	movq	8(%rsp), %rdx
  218af6: 4c 29 fa                     	subq	%r15, %rdx
  218af9: 0f 82 06 04 00 00            	jb	0x218f05 <fmt.formatBuf__anon_6100+0x885>
  218aff: 75 8f                        	jne	0x218a90 <fmt.formatBuf__anon_6100+0x410>
  218b01: 48 8b 44 24 10               	movq	16(%rsp), %rax
  218b06: 48 8b 5c 24 30               	movq	48(%rsp), %rbx
  218b0b: 44 8b 20                     	movl	(%rax), %r12d
  218b0e: 4d 85 f6                     	testq	%r14, %r14
  218b11: 0f 84 a9 03 00 00            	je	0x218ec0 <fmt.formatBuf__anon_6100+0x840>
  218b17: 45 31 ff                     	xorl	%r15d, %r15d
  218b1a: 4c 8d 6c 24 40               	leaq	64(%rsp), %r13
  218b1f: 90                           	nop
  218b20: 4d 39 f7                     	cmpq	%r14, %r15
  218b23: 0f 87 f0 03 00 00            	ja	0x218f19 <fmt.formatBuf__anon_6100+0x899>
  218b29: 48 8b 34 24                  	movq	(%rsp), %rsi
  218b2d: 4d 89 f0                     	movq	%r14, %r8
  218b30: 4a 8d 0c 3b                  	leaq	(%rbx,%r15), %rcx
  218b34: 4c 89 ef                     	movq	%r13, %rdi
  218b37: 44 89 e2                     	movl	%r12d, %edx
  218b3a: 4d 29 f8                     	subq	%r15, %r8
  218b3d: c5 f8 77                     	vzeroupper
  218b40: e8 4b b7 fe ff               	callq	0x204290 <fs.file.File.write>
  218b45: 0f b7 6c 24 48               	movzwl	72(%rsp), %ebp
  218b4a: 66 85 ed                     	testw	%bp, %bp
  218b4d: 0f 85 ac 03 00 00            	jne	0x218eff <fmt.formatBuf__anon_6100+0x87f>
  218b53: 4c 03 7c 24 40               	addq	64(%rsp), %r15
  218b58: 0f 82 a7 03 00 00            	jb	0x218f05 <fmt.formatBuf__anon_6100+0x885>
  218b5e: 4d 39 f7                     	cmpq	%r14, %r15
  218b61: 75 bd                        	jne	0x218b20 <fmt.formatBuf__anon_6100+0x4a0>
  218b63: e9 58 03 00 00               	jmp	0x218ec0 <fmt.formatBuf__anon_6100+0x840>
  218b68: 45 8b 65 00                  	movl	(%r13), %r12d
  218b6c: 4d 85 f6                     	testq	%r14, %r14
  218b6f: 74 57                        	je	0x218bc8 <fmt.formatBuf__anon_6100+0x548>
  218b71: 4c 89 6c 24 10               	movq	%r13, 16(%rsp)
  218b76: 45 31 ff                     	xorl	%r15d, %r15d
  218b79: 4c 8d 6c 24 40               	leaq	64(%rsp), %r13
  218b7e: 66 90                        	nop
  218b80: 4d 39 f7                     	cmpq	%r14, %r15
  218b83: 0f 87 90 03 00 00            	ja	0x218f19 <fmt.formatBuf__anon_6100+0x899>
  218b89: 48 8b 34 24                  	movq	(%rsp), %rsi
  218b8d: 4d 89 f0                     	movq	%r14, %r8
  218b90: 4a 8d 0c 3b                  	leaq	(%rbx,%r15), %rcx
  218b94: 4c 89 ef                     	movq	%r13, %rdi
  218b97: 44 89 e2                     	movl	%r12d, %edx
  218b9a: 4d 29 f8                     	subq	%r15, %r8
  218b9d: e8 ee b6 fe ff               	callq	0x204290 <fs.file.File.write>
  218ba2: 0f b7 6c 24 48               	movzwl	72(%rsp), %ebp
  218ba7: 66 85 ed                     	testw	%bp, %bp
  218baa: 0f 85 4f 03 00 00            	jne	0x218eff <fmt.formatBuf__anon_6100+0x87f>
  218bb0: 4c 03 7c 24 40               	addq	64(%rsp), %r15
  218bb5: 0f 82 4a 03 00 00            	jb	0x218f05 <fmt.formatBuf__anon_6100+0x885>
  218bbb: 4d 39 f7                     	cmpq	%r14, %r15
  218bbe: 75 c0                        	jne	0x218b80 <fmt.formatBuf__anon_6100+0x500>
  218bc0: 48 8b 44 24 10               	movq	16(%rsp), %rax
  218bc5: 44 8b 20                     	movl	(%rax), %r12d
  218bc8: 48 8b 44 24 28               	movq	40(%rsp), %rax
  218bcd: 48 8b 5c 24 08               	movq	8(%rsp), %rbx
  218bd2: 4c 8d 74 24 18               	leaq	24(%rsp), %r14
  218bd7: c4 e2 7d 78 40 21            	vpbroadcastb	33(%rax), %ymm0
  218bdd: c5 fe 7f 84 24 20 01 00 00   	vmovdqu	%ymm0, 288(%rsp)
  218be6: c5 fe 7f 84 24 00 01 00 00   	vmovdqu	%ymm0, 256(%rsp)
  218bef: c5 fe 7f 84 24 e0 00 00 00   	vmovdqu	%ymm0, 224(%rsp)
  218bf8: c5 fe 7f 84 24 c0 00 00 00   	vmovdqu	%ymm0, 192(%rsp)
  218c01: c5 fe 7f 84 24 a0 00 00 00   	vmovdqu	%ymm0, 160(%rsp)
  218c0a: c5 fe 7f 84 24 80 00 00 00   	vmovdqu	%ymm0, 128(%rsp)
  218c13: c5 fe 7f 44 24 60            	vmovdqu	%ymm0, 96(%rsp)
  218c19: c5 fe 7f 44 24 40            	vmovdqu	%ymm0, 64(%rsp)
  218c1f: 90                           	nop
  218c20: 48 81 fb 00 01 00 00         	cmpq	$256, %rbx              # imm = 0x100
  218c27: 41 bf 00 01 00 00            	movl	$256, %r15d             # imm = 0x100
  218c2d: 4c 0f 42 fb                  	cmovbq	%rbx, %r15
  218c31: 4d 85 ff                     	testq	%r15, %r15
  218c34: 74 4b                        	je	0x218c81 <fmt.formatBuf__anon_6100+0x601>
  218c36: 45 31 ed                     	xorl	%r13d, %r13d
  218c39: 0f 1f 80 00 00 00 00         	nopl	(%rax)
  218c40: 4d 89 f8                     	movq	%r15, %r8
  218c43: 4d 29 e8                     	subq	%r13, %r8
  218c46: 0f 82 cd 02 00 00            	jb	0x218f19 <fmt.formatBuf__anon_6100+0x899>
  218c4c: 48 8b 34 24                  	movq	(%rsp), %rsi
  218c50: 4a 8d 4c 2c 40               	leaq	64(%rsp,%r13), %rcx
  218c55: 4c 89 f7                     	movq	%r14, %rdi
  218c58: 44 89 e2                     	movl	%r12d, %edx
  218c5b: c5 f8 77                     	vzeroupper
  218c5e: e8 2d b6 fe ff               	callq	0x204290 <fs.file.File.write>
  218c63: 0f b7 6c 24 20               	movzwl	32(%rsp), %ebp
  218c68: 66 85 ed                     	testw	%bp, %bp
  218c6b: 0f 85 53 02 00 00            	jne	0x218ec4 <fmt.formatBuf__anon_6100+0x844>
  218c71: 4c 03 6c 24 18               	addq	24(%rsp), %r13
  218c76: 0f 82 89 02 00 00            	jb	0x218f05 <fmt.formatBuf__anon_6100+0x885>
  218c7c: 4d 39 fd                     	cmpq	%r15, %r13
  218c7f: 75 bf                        	jne	0x218c40 <fmt.formatBuf__anon_6100+0x5c0>
  218c81: 4c 29 fb                     	subq	%r15, %rbx
  218c84: 0f 82 7b 02 00 00            	jb	0x218f05 <fmt.formatBuf__anon_6100+0x885>
  218c8a: 75 94                        	jne	0x218c20 <fmt.formatBuf__anon_6100+0x5a0>
  218c8c: e9 2f 02 00 00               	jmp	0x218ec0 <fmt.formatBuf__anon_6100+0x840>
  218c91: 48 8b 4c 24 08               	movq	8(%rsp), %rcx
  218c96: 48 89 c8                     	movq	%rcx, %rax
  218c99: 48 ff c0                     	incq	%rax
  218c9c: 48 89 44 24 38               	movq	%rax, 56(%rsp)
  218ca1: 0f 84 5e 02 00 00            	je	0x218f05 <fmt.formatBuf__anon_6100+0x885>
  218ca7: 48 8b 44 24 28               	movq	40(%rsp), %rax
  218cac: 45 8b 65 00                  	movl	(%r13), %r12d
  218cb0: 4c 89 6c 24 10               	movq	%r13, 16(%rsp)
  218cb5: c4 e2 7d 78 40 21            	vpbroadcastb	33(%rax), %ymm0
  218cbb: c5 fe 7f 84 24 20 01 00 00   	vmovdqu	%ymm0, 288(%rsp)
  218cc4: c5 fe 7f 84 24 00 01 00 00   	vmovdqu	%ymm0, 256(%rsp)
  218ccd: c5 fe 7f 84 24 e0 00 00 00   	vmovdqu	%ymm0, 224(%rsp)
  218cd6: c5 fe 7f 84 24 c0 00 00 00   	vmovdqu	%ymm0, 192(%rsp)
  218cdf: c5 fe 7f 84 24 a0 00 00 00   	vmovdqu	%ymm0, 160(%rsp)
  218ce8: c5 fe 7f 84 24 80 00 00 00   	vmovdqu	%ymm0, 128(%rsp)
  218cf1: c5 fe 7f 44 24 60            	vmovdqu	%ymm0, 96(%rsp)
  218cf7: c5 fe 7f 44 24 40            	vmovdqu	%ymm0, 64(%rsp)
  218cfd: 48 83 f9 02                  	cmpq	$2, %rcx
  218d01: 0f 82 98 00 00 00            	jb	0x218d9f <fmt.formatBuf__anon_6100+0x71f>
  218d07: 48 d1 e9                     	shrq	%rcx
  218d0a: 4c 8d 6c 24 18               	leaq	24(%rsp), %r13
  218d0f: 48 89 5c 24 30               	movq	%rbx, 48(%rsp)
  218d14: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
  218d20: 48 81 f9 00 01 00 00         	cmpq	$256, %rcx              # imm = 0x100
  218d27: 41 bf 00 01 00 00            	movl	$256, %r15d             # imm = 0x100
  218d2d: 48 89 4c 24 08               	movq	%rcx, 8(%rsp)
  218d32: 4c 0f 42 f9                  	cmovbq	%rcx, %r15
  218d36: 31 db                        	xorl	%ebx, %ebx
  218d38: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
  218d40: 4d 89 f8                     	movq	%r15, %r8
  218d43: 49 29 d8                     	subq	%rbx, %r8
  218d46: 0f 82 cd 01 00 00            	jb	0x218f19 <fmt.formatBuf__anon_6100+0x899>
  218d4c: 48 8b 34 24                  	movq	(%rsp), %rsi
  218d50: 48 8d 4c 1c 40               	leaq	64(%rsp,%rbx), %rcx
  218d55: 4c 89 ef                     	movq	%r13, %rdi
  218d58: 44 89 e2                     	movl	%r12d, %edx
  218d5b: c5 f8 77                     	vzeroupper
  218d5e: e8 2d b5 fe ff               	callq	0x204290 <fs.file.File.write>
  218d63: 0f b7 6c 24 20               	movzwl	32(%rsp), %ebp
  218d68: 66 85 ed                     	testw	%bp, %bp
  218d6b: 0f 85 53 01 00 00            	jne	0x218ec4 <fmt.formatBuf__anon_6100+0x844>
  218d71: 48 03 5c 24 18               	addq	24(%rsp), %rbx
  218d76: 0f 82 89 01 00 00            	jb	0x218f05 <fmt.formatBuf__anon_6100+0x885>
  218d7c: 4c 39 fb                     	cmpq	%r15, %rbx
  218d7f: 75 bf                        	jne	0x218d40 <fmt.formatBuf__anon_6100+0x6c0>
  218d81: 48 8b 4c 24 08               	movq	8(%rsp), %rcx
  218d86: 4c 29 f9                     	subq	%r15, %rcx
  218d89: 0f 82 76 01 00 00            	jb	0x218f05 <fmt.formatBuf__anon_6100+0x885>
  218d8f: 75 8f                        	jne	0x218d20 <fmt.formatBuf__anon_6100+0x6a0>
  218d91: 4c 8b 6c 24 10               	movq	16(%rsp), %r13
  218d96: 48 8b 5c 24 30               	movq	48(%rsp), %rbx
  218d9b: 45 8b 65 00                  	movl	(%r13), %r12d
  218d9f: 4d 85 f6                     	testq	%r14, %r14
  218da2: 74 57                        	je	0x218dfb <fmt.formatBuf__anon_6100+0x77b>
  218da4: 45 31 ff                     	xorl	%r15d, %r15d
  218da7: 4c 8d 6c 24 40               	leaq	64(%rsp), %r13
  218dac: 0f 1f 40 00                  	nopl	(%rax)
  218db0: 4d 39 f7                     	cmpq	%r14, %r15
  218db3: 0f 87 60 01 00 00            	ja	0x218f19 <fmt.formatBuf__anon_6100+0x899>
  218db9: 48 8b 34 24                  	movq	(%rsp), %rsi
  218dbd: 4d 89 f0                     	movq	%r14, %r8
  218dc0: 4a 8d 0c 3b                  	leaq	(%rbx,%r15), %rcx
  218dc4: 4c 89 ef                     	movq	%r13, %rdi
  218dc7: 44 89 e2                     	movl	%r12d, %edx
  218dca: 4d 29 f8                     	subq	%r15, %r8
  218dcd: c5 f8 77                     	vzeroupper
  218dd0: e8 bb b4 fe ff               	callq	0x204290 <fs.file.File.write>
  218dd5: 0f b7 6c 24 48               	movzwl	72(%rsp), %ebp
  218dda: 66 85 ed                     	testw	%bp, %bp
  218ddd: 0f 85 1c 01 00 00            	jne	0x218eff <fmt.formatBuf__anon_6100+0x87f>
  218de3: 4c 03 7c 24 40               	addq	64(%rsp), %r15
  218de8: 0f 82 17 01 00 00            	jb	0x218f05 <fmt.formatBuf__anon_6100+0x885>
  218dee: 4d 39 f7                     	cmpq	%r14, %r15
  218df1: 75 bd                        	jne	0x218db0 <fmt.formatBuf__anon_6100+0x730>
  218df3: 48 8b 44 24 10               	movq	16(%rsp), %rax
  218df8: 44 8b 20                     	movl	(%rax), %r12d
  218dfb: 48 8b 44 24 28               	movq	40(%rsp), %rax
  218e00: 4c 8b 6c 24 38               	movq	56(%rsp), %r13
  218e05: c4 e2 7d 78 40 21            	vpbroadcastb	33(%rax), %ymm0
  218e0b: c5 fe 7f 84 24 20 01 00 00   	vmovdqu	%ymm0, 288(%rsp)
  218e14: c5 fe 7f 84 24 00 01 00 00   	vmovdqu	%ymm0, 256(%rsp)
  218e1d: c5 fe 7f 84 24 e0 00 00 00   	vmovdqu	%ymm0, 224(%rsp)
  218e26: c5 fe 7f 84 24 c0 00 00 00   	vmovdqu	%ymm0, 192(%rsp)
  218e2f: c5 fe 7f 84 24 a0 00 00 00   	vmovdqu	%ymm0, 160(%rsp)
  218e38: c5 fe 7f 84 24 80 00 00 00   	vmovdqu	%ymm0, 128(%rsp)
  218e41: c5 fe 7f 44 24 60            	vmovdqu	%ymm0, 96(%rsp)
  218e47: c5 fe 7f 44 24 40            	vmovdqu	%ymm0, 64(%rsp)
  218e4d: 49 83 fd 02                  	cmpq	$2, %r13
  218e51: 72 6d                        	jb	0x218ec0 <fmt.formatBuf__anon_6100+0x840>
  218e53: 49 d1 ed                     	shrq	%r13
  218e56: 4c 8d 74 24 18               	leaq	24(%rsp), %r14
  218e5b: 0f 1f 44 00 00               	nopl	(%rax,%rax)
  218e60: 49 81 fd 00 01 00 00         	cmpq	$256, %r13              # imm = 0x100
  218e67: 41 bf 00 01 00 00            	movl	$256, %r15d             # imm = 0x100
  218e6d: 4d 0f 42 fd                  	cmovbq	%r13, %r15
  218e71: 4d 85 ff                     	testq	%r15, %r15
  218e74: 74 43                        	je	0x218eb9 <fmt.formatBuf__anon_6100+0x839>
  218e76: 31 db                        	xorl	%ebx, %ebx
  218e78: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
  218e80: 4d 89 f8                     	movq	%r15, %r8
  218e83: 49 29 d8                     	subq	%rbx, %r8
  218e86: 0f 82 8d 00 00 00            	jb	0x218f19 <fmt.formatBuf__anon_6100+0x899>
  218e8c: 48 8b 34 24                  	movq	(%rsp), %rsi
  218e90: 48 8d 4c 1c 40               	leaq	64(%rsp,%rbx), %rcx
  218e95: 4c 89 f7                     	movq	%r14, %rdi
  218e98: 44 89 e2                     	movl	%r12d, %edx
  218e9b: c5 f8 77                     	vzeroupper
  218e9e: e8 ed b3 fe ff               	callq	0x204290 <fs.file.File.write>
  218ea3: 0f b7 6c 24 20               	movzwl	32(%rsp), %ebp
  218ea8: 66 85 ed                     	testw	%bp, %bp
  218eab: 75 17                        	jne	0x218ec4 <fmt.formatBuf__anon_6100+0x844>
  218ead: 48 03 5c 24 18               	addq	24(%rsp), %rbx
  218eb2: 72 51                        	jb	0x218f05 <fmt.formatBuf__anon_6100+0x885>
  218eb4: 4c 39 fb                     	cmpq	%r15, %rbx
  218eb7: 75 c7                        	jne	0x218e80 <fmt.formatBuf__anon_6100+0x800>
  218eb9: 4d 29 fd                     	subq	%r15, %r13
  218ebc: 72 47                        	jb	0x218f05 <fmt.formatBuf__anon_6100+0x885>
  218ebe: 75 a0                        	jne	0x218e60 <fmt.formatBuf__anon_6100+0x7e0>
  218ec0: 31 ed                        	xorl	%ebp, %ebp
  218ec2: eb 24                        	jmp	0x218ee8 <fmt.formatBuf__anon_6100+0x868>
  218ec4: 48 8b 1c 24                  	movq	(%rsp), %rbx
  218ec8: 48 89 df                     	movq	%rbx, %rdi
  218ecb: e8 80 2e 00 00               	callq	0x21bd50 <builtin.returnError>
  218ed0: 48 89 df                     	movq	%rbx, %rdi
  218ed3: e8 78 2e 00 00               	callq	0x21bd50 <builtin.returnError>
  218ed8: 48 89 df                     	movq	%rbx, %rdi
  218edb: e8 70 2e 00 00               	callq	0x21bd50 <builtin.returnError>
  218ee0: 48 89 df                     	movq	%rbx, %rdi
  218ee3: e8 68 2e 00 00               	callq	0x21bd50 <builtin.returnError>
  218ee8: 89 e8                        	movl	%ebp, %eax
  218eea: 48 81 c4 48 01 00 00         	addq	$328, %rsp              # imm = 0x148
  218ef1: 5b                           	popq	%rbx
  218ef2: 41 5c                        	popq	%r12
  218ef4: 41 5d                        	popq	%r13
  218ef6: 41 5e                        	popq	%r14
  218ef8: 41 5f                        	popq	%r15
  218efa: 5d                           	popq	%rbp
  218efb: c5 f8 77                     	vzeroupper
  218efe: c3                           	retq
  218eff: 48 8b 1c 24                  	movq	(%rsp), %rbx
  218f03: eb cb                        	jmp	0x218ed0 <fmt.formatBuf__anon_6100+0x850>
  218f05: bf 59 1d 20 00               	movl	$2104665, %edi          # imm = 0x201D59
  218f0a: be 10 00 00 00               	movl	$16, %esi
  218f0f: 31 c9                        	xorl	%ecx, %ecx
  218f11: c5 f8 77                     	vzeroupper
  218f14: e8 f7 23 00 00               	callq	0x21b310 <builtin.default_panic>
  218f19: bf 34 1d 20 00               	movl	$2104628, %edi          # imm = 0x201D34
  218f1e: be 24 00 00 00               	movl	$36, %esi
  218f23: 31 c9                        	xorl	%ecx, %ecx
  218f25: c5 f8 77                     	vzeroupper
  218f28: e8 e3 23 00 00               	callq	0x21b310 <builtin.default_panic>
  218f2d: bf 9c 1e 20 00               	movl	$2104988, %edi          # imm = 0x201E9C
  218f32: be 13 00 00 00               	movl	$19, %esi
  218f37: 31 c9                        	xorl	%ecx, %ecx
  218f39: e8 d2 23 00 00               	callq	0x21b310 <builtin.default_panic>
  218f3e: bf 32 22 20 00               	movl	$2105906, %edi          # imm = 0x202232
  218f43: be 18 00 00 00               	movl	$24, %esi
  218f48: 31 c9                        	xorl	%ecx, %ecx
  218f4a: e8 c1 23 00 00               	callq	0x21b310 <builtin.default_panic>
  218f4f: bf 5a 21 20 00               	movl	$2105690, %edi          # imm = 0x20215A
  218f54: be 17 00 00 00               	movl	$23, %esi
  218f59: 31 c9                        	xorl	%ecx, %ecx
  218f5b: e8 b0 23 00 00               	callq	0x21b310 <builtin.default_panic>

0000000000218f60 <fs.file.File.supportsAnsiEscapeCodes>:
  218f60: 53                           	pushq	%rbx
  218f61: 48 83 ec 10                  	subq	$16, %rsp
  218f65: 49 89 f8                     	movq	%rdi, %r8
  218f68: 48 63 3f                     	movslq	(%rdi), %rdi
  218f6b: 49 b9 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %r9 # imm = 0xAAAAAAAAAAAAAAAA
  218f75: 48 8d 54 24 08               	leaq	8(%rsp), %rdx
  218f7a: 45 31 d2                     	xorl	%r10d, %r10d
  218f7d: be 13 54 00 00               	movl	$21523, %esi            # imm = 0x5413
  218f82: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)
  218f90: 4c 89 4c 24 08               	movq	%r9, 8(%rsp)
  218f95: b8 10 00 00 00               	movl	$16, %eax
  218f9a: 0f 05                        	syscall
  218f9c: 89 c1                        	movl	%eax, %ecx
  218f9e: f7 d9                        	negl	%ecx
  218fa0: 48 3d 01 f0 ff ff            	cmpq	$-4095, %rax            # imm = 0xF001
  218fa6: 41 0f 42 ca                  	cmovbl	%r10d, %ecx
  218faa: 66 83 f9 04                  	cmpw	$4, %cx
  218fae: 74 e0                        	je	0x218f90 <fs.file.File.supportsAnsiEscapeCodes+0x30>
  218fb0: 0f b7 c1                     	movzwl	%cx, %eax
  218fb3: 85 c0                        	testl	%eax, %eax
  218fb5: 75 5d                        	jne	0x219014 <fs.file.File.supportsAnsiEscapeCodes+0xb4>
  218fb7: 41 8b 00                     	movl	(%r8), %eax
  218fba: b3 01                        	movb	$1, %bl
  218fbc: ff c8                        	decl	%eax
  218fbe: 83 f8 01                     	cmpl	$1, %eax
  218fc1: 77 49                        	ja	0x21900c <fs.file.File.supportsAnsiEscapeCodes+0xac>
  218fc3: bf ae 23 20 00               	movl	$2106286, %edi          # imm = 0x2023AE
  218fc8: be 04 00 00 00               	movl	$4, %esi
  218fcd: e8 be 14 00 00               	callq	0x21a490 <os.getenv>
  218fd2: 48 85 c0                     	testq	%rax, %rax
  218fd5: 74 35                        	je	0x21900c <fs.file.File.supportsAnsiEscapeCodes+0xac>
  218fd7: 48 83 fa 04                  	cmpq	$4, %rdx
  218fdb: 75 2f                        	jne	0x21900c <fs.file.File.supportsAnsiEscapeCodes+0xac>
  218fdd: 48 3d 71 23 20 00            	cmpq	$2106225, %rax          # imm = 0x202371
  218fe3: 74 2f                        	je	0x219014 <fs.file.File.supportsAnsiEscapeCodes+0xb4>
  218fe5: 31 c9                        	xorl	%ecx, %ecx
  218fe7: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
  218ff0: 0f b6 14 08                  	movzbl	(%rax,%rcx), %edx
  218ff4: 3a 91 71 23 20 00            	cmpb	2106225(%rcx), %dl
  218ffa: 0f 95 c3                     	setne	%bl
  218ffd: 75 0d                        	jne	0x21900c <fs.file.File.supportsAnsiEscapeCodes+0xac>
  218fff: 48 8d 51 01                  	leaq	1(%rcx), %rdx
  219003: 48 83 f9 03                  	cmpq	$3, %rcx
  219007: 48 89 d1                     	movq	%rdx, %rcx
  21900a: 75 e4                        	jne	0x218ff0 <fs.file.File.supportsAnsiEscapeCodes+0x90>
  21900c: 89 d8                        	movl	%ebx, %eax
  21900e: 48 83 c4 10                  	addq	$16, %rsp
  219012: 5b                           	popq	%rbx
  219013: c3                           	retq
  219014: 31 db                        	xorl	%ebx, %ebx
  219016: 89 d8                        	movl	%ebx, %eax
  219018: 48 83 c4 10                  	addq	$16, %rsp
  21901c: 5b                           	popq	%rbx
  21901d: c3                           	retq
  21901e: 66 90                        	nop

0000000000219020 <fs.Dir.openFileZ>:
  219020: 55                           	pushq	%rbp
  219021: 41 57                        	pushq	%r15
  219023: 41 56                        	pushq	%r14
  219025: 41 54                        	pushq	%r12
  219027: 53                           	pushq	%rbx
  219028: 49 89 c9                     	movq	%rcx, %r9
  21902b: 89 d0                        	movl	%edx, %eax
  21902d: 41 0f b6 50 03               	movzbl	3(%r8), %edx
  219032: 41 0f b6 08                  	movzbl	(%r8), %ecx
  219036: 49 89 f6                     	movq	%rsi, %r14
  219039: 48 89 fb                     	movq	%rdi, %rbx
  21903c: 48 85 c9                     	testq	%rcx, %rcx
  21903f: 74 1a                        	je	0x21905b <fs.Dir.openFileZ+0x3b>
  219041: 83 f9 01                     	cmpl	$1, %ecx
  219044: 74 10                        	je	0x219056 <fs.Dir.openFileZ+0x36>
  219046: 83 f9 02                     	cmpl	$2, %ecx
  219049: 0f 85 d8 01 00 00            	jne	0x219227 <fs.Dir.openFileZ+0x207>
  21904f: b9 02 00 00 00               	movl	$2, %ecx
  219054: eb 05                        	jmp	0x21905b <fs.Dir.openFileZ+0x3b>
  219056: b9 01 00 00 00               	movl	$1, %ecx
  21905b: 48 83 f2 01                  	xorq	$1, %rdx
  21905f: 48 63 f8                     	movslq	%eax, %rdi
  219062: 45 31 e4                     	xorl	%r12d, %r12d
  219065: 48 c1 e2 08                  	shlq	$8, %rdx
  219069: 48 81 ca 00 00 08 00         	orq	$524288, %rdx           # imm = 0x80000
  219070: 48 09 ca                     	orq	%rcx, %rdx
  219073: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
  219080: b8 01 01 00 00               	movl	$257, %eax              # imm = 0x101
  219085: 4c 89 ce                     	movq	%r9, %rsi
  219088: 45 31 d2                     	xorl	%r10d, %r10d
  21908b: 0f 05                        	syscall
  21908d: 49 89 c7                     	movq	%rax, %r15
  219090: f7 d8                        	negl	%eax
  219092: 49 81 ff 01 f0 ff ff         	cmpq	$-4095, %r15            # imm = 0xF001
  219099: 41 0f 42 c4                  	cmovbl	%r12d, %eax
  21909d: 66 83 f8 04                  	cmpw	$4, %ax
  2190a1: 74 dd                        	je	0x219080 <fs.Dir.openFileZ+0x60>
  2190a3: 0f b7 c0                     	movzwl	%ax, %eax
  2190a6: 83 f8 5f                     	cmpl	$95, %eax
  2190a9: 0f 87 f7 00 00 00            	ja	0x2191a6 <fs.Dir.openFileZ+0x186>
  2190af: 89 c0                        	movl	%eax, %eax
  2190b1: ff 24 c5 58 0e 20 00         	jmpq	*2100824(,%rax,8)
  2190b8: 4c 89 f8                     	movq	%r15, %rax
  2190bb: 48 c1 e8 1f                  	shrq	$31, %rax
  2190bf: 0f 85 73 01 00 00            	jne	0x219238 <fs.Dir.openFileZ+0x218>
  2190c5: 41 0f b6 48 01               	movzbl	1(%r8), %ecx
  2190ca: 84 c9                        	testb	%cl, %cl
  2190cc: 74 64                        	je	0x219132 <fs.Dir.openFileZ+0x112>
  2190ce: 41 0f b6 70 02               	movzbl	2(%r8), %esi
  2190d3: 0f b6 c1                     	movzbl	%cl, %eax
  2190d6: 80 f9 01                     	cmpb	$1, %cl
  2190d9: 74 0e                        	je	0x2190e9 <fs.Dir.openFileZ+0xc9>
  2190db: 83 f8 02                     	cmpl	$2, %eax
  2190de: 0f 85 43 01 00 00            	jne	0x219227 <fs.Dir.openFileZ+0x207>
  2190e4: b8 02 00 00 00               	movl	$2, %eax
  2190e9: 48 c1 e6 02                  	shlq	$2, %rsi
  2190ed: 31 d2                        	xorl	%edx, %edx
  2190ef: 48 09 c6                     	orq	%rax, %rsi
  2190f2: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)
  219100: b8 49 00 00 00               	movl	$73, %eax
  219105: 4c 89 ff                     	movq	%r15, %rdi
  219108: 0f 05                        	syscall
  21910a: 89 c1                        	movl	%eax, %ecx
  21910c: f7 d9                        	negl	%ecx
  21910e: 48 3d 01 f0 ff ff            	cmpq	$-4095, %rax            # imm = 0xF001
  219114: 0f 42 ca                     	cmovbl	%edx, %ecx
  219117: 66 83 f9 04                  	cmpw	$4, %cx
  21911b: 74 e3                        	je	0x219100 <fs.Dir.openFileZ+0xe0>
  21911d: 0f b7 c1                     	movzwl	%cx, %eax
  219120: 83 f8 25                     	cmpl	$37, %eax
  219123: 0f 87 a6 00 00 00            	ja	0x2191cf <fs.Dir.openFileZ+0x1af>
  219129: 89 c0                        	movl	%eax, %eax
  21912b: ff 24 c5 58 11 20 00         	jmpq	*2101592(,%rax,8)
  219132: 66 c7 43 04 00 00            	movw	$0, 4(%rbx)
  219138: 44 89 3b                     	movl	%r15d, (%rbx)
  21913b: e9 86 00 00 00               	jmp	0x2191c6 <fs.Dir.openFileZ+0x1a6>
  219140: 66 bd 07 00                  	movw	$7, %bp
  219144: eb 6c                        	jmp	0x2191b2 <fs.Dir.openFileZ+0x192>
  219146: 66 bd 02 00                  	movw	$2, %bp
  21914a: eb 66                        	jmp	0x2191b2 <fs.Dir.openFileZ+0x192>
  21914c: 66 bd 1d 00                  	movw	$29, %bp
  219150: eb 60                        	jmp	0x2191b2 <fs.Dir.openFileZ+0x192>
  219152: 66 bd 0d 00                  	movw	$13, %bp
  219156: eb 5a                        	jmp	0x2191b2 <fs.Dir.openFileZ+0x192>
  219158: 66 bd 09 00                  	movw	$9, %bp
  21915c: eb 54                        	jmp	0x2191b2 <fs.Dir.openFileZ+0x192>
  21915e: 66 bd 05 00                  	movw	$5, %bp
  219162: eb 4e                        	jmp	0x2191b2 <fs.Dir.openFileZ+0x192>
  219164: 66 bd 1c 00                  	movw	$28, %bp
  219168: eb 48                        	jmp	0x2191b2 <fs.Dir.openFileZ+0x192>
  21916a: 66 bd 24 00                  	movw	$36, %bp
  21916e: eb 42                        	jmp	0x2191b2 <fs.Dir.openFileZ+0x192>
  219170: 66 bd 26 00                  	movw	$38, %bp
  219174: eb 3c                        	jmp	0x2191b2 <fs.Dir.openFileZ+0x192>
  219176: 66 bd 25 00                  	movw	$37, %bp
  21917a: eb 36                        	jmp	0x2191b2 <fs.Dir.openFileZ+0x192>
  21917c: 66 bd 14 00                  	movw	$20, %bp
  219180: eb 30                        	jmp	0x2191b2 <fs.Dir.openFileZ+0x192>
  219182: 66 bd 13 00                  	movw	$19, %bp
  219186: eb 2a                        	jmp	0x2191b2 <fs.Dir.openFileZ+0x192>
  219188: 66 bd 28 00                  	movw	$40, %bp
  21918c: eb 24                        	jmp	0x2191b2 <fs.Dir.openFileZ+0x192>
  21918e: 66 bd 04 00                  	movw	$4, %bp
  219192: eb 1e                        	jmp	0x2191b2 <fs.Dir.openFileZ+0x192>
  219194: 66 bd 1f 00                  	movw	$31, %bp
  219198: eb 18                        	jmp	0x2191b2 <fs.Dir.openFileZ+0x192>
  21919a: 66 bd 23 00                  	movw	$35, %bp
  21919e: eb 12                        	jmp	0x2191b2 <fs.Dir.openFileZ+0x192>
  2191a0: 66 bd 27 00                  	movw	$39, %bp
  2191a4: eb 0c                        	jmp	0x2191b2 <fs.Dir.openFileZ+0x192>
  2191a6: 4c 89 f7                     	movq	%r14, %rdi
  2191a9: e8 a2 2b 00 00               	callq	0x21bd50 <builtin.returnError>
  2191ae: 66 bd 0f 00                  	movw	$15, %bp
  2191b2: 4c 89 f7                     	movq	%r14, %rdi
  2191b5: e8 96 2b 00 00               	callq	0x21bd50 <builtin.returnError>
  2191ba: 4c 89 f7                     	movq	%r14, %rdi
  2191bd: e8 8e 2b 00 00               	callq	0x21bd50 <builtin.returnError>
  2191c2: 66 89 6b 04                  	movw	%bp, 4(%rbx)
  2191c6: 5b                           	popq	%rbx
  2191c7: 41 5c                        	popq	%r12
  2191c9: 41 5e                        	popq	%r14
  2191cb: 41 5f                        	popq	%r15
  2191cd: 5d                           	popq	%rbp
  2191ce: c3                           	retq
  2191cf: 83 f8 5f                     	cmpl	$95, %eax
  2191d2: 75 06                        	jne	0x2191da <fs.Dir.openFileZ+0x1ba>
  2191d4: 66 bd 27 00                  	movw	$39, %bp
  2191d8: eb 18                        	jmp	0x2191f2 <fs.Dir.openFileZ+0x1d2>
  2191da: 4c 89 f7                     	movq	%r14, %rdi
  2191dd: e8 6e 2b 00 00               	callq	0x21bd50 <builtin.returnError>
  2191e2: 66 bd 0f 00                  	movw	$15, %bp
  2191e6: eb 0a                        	jmp	0x2191f2 <fs.Dir.openFileZ+0x1d2>
  2191e8: 66 bd 0d 00                  	movw	$13, %bp
  2191ec: eb 04                        	jmp	0x2191f2 <fs.Dir.openFileZ+0x1d2>
  2191ee: 66 bd 09 00                  	movw	$9, %bp
  2191f2: 4c 89 f7                     	movq	%r14, %rdi
  2191f5: e8 56 2b 00 00               	callq	0x21bd50 <builtin.returnError>
  2191fa: b8 03 00 00 00               	movl	$3, %eax
  2191ff: 4c 89 ff                     	movq	%r15, %rdi
  219202: 0f 05                        	syscall
  219204: 48 3d 01 f0 ff ff            	cmpq	$-4095, %rax            # imm = 0xF001
  21920a: 72 ae                        	jb	0x2191ba <fs.Dir.openFileZ+0x19a>
  21920c: 0f b7 c0                     	movzwl	%ax, %eax
  21920f: 3d f7 ff 00 00               	cmpl	$65527, %eax            # imm = 0xFFF7
  219214: 75 a4                        	jne	0x2191ba <fs.Dir.openFileZ+0x19a>
  219216: bf 32 22 20 00               	movl	$2105906, %edi          # imm = 0x202232
  21921b: be 18 00 00 00               	movl	$24, %esi
  219220: 31 c9                        	xorl	%ecx, %ecx
  219222: e8 e9 20 00 00               	callq	0x21b310 <builtin.default_panic>
  219227: bf 5a 21 20 00               	movl	$2105690, %edi          # imm = 0x20215A
  21922c: be 17 00 00 00               	movl	$23, %esi
  219231: 31 c9                        	xorl	%ecx, %ecx
  219233: e8 d8 20 00 00               	callq	0x21b310 <builtin.default_panic>
  219238: bf 19 1e 20 00               	movl	$2104857, %edi          # imm = 0x201E19
  21923d: be 1b 00 00 00               	movl	$27, %esi
  219242: 31 c9                        	xorl	%ecx, %ecx
  219244: e8 c7 20 00 00               	callq	0x21b310 <builtin.default_panic>
  219249: 0f 1f 80 00 00 00 00         	nopl	(%rax)

0000000000219250 <os.close>:
  219250: 50                           	pushq	%rax
  219251: 48 63 ff                     	movslq	%edi, %rdi
  219254: b8 03 00 00 00               	movl	$3, %eax
  219259: 0f 05                        	syscall
  21925b: 48 3d 01 f0 ff ff            	cmpq	$-4095, %rax            # imm = 0xF001
  219261: 72 0a                        	jb	0x21926d <os.close+0x1d>
  219263: 0f b7 c0                     	movzwl	%ax, %eax
  219266: 3d f7 ff 00 00               	cmpl	$65527, %eax            # imm = 0xFFF7
  21926b: 74 02                        	je	0x21926f <os.close+0x1f>
  21926d: 58                           	popq	%rax
  21926e: c3                           	retq
  21926f: bf 32 22 20 00               	movl	$2105906, %edi          # imm = 0x202232
  219274: be 18 00 00 00               	movl	$24, %esi
  219279: 31 c9                        	xorl	%ecx, %ecx
  21927b: e8 90 20 00 00               	callq	0x21b310 <builtin.default_panic>

0000000000219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>:
  219280: 41 57                        	pushq	%r15
  219282: 41 56                        	pushq	%r14
  219284: 41 54                        	pushq	%r12
  219286: 53                           	pushq	%rbx
  219287: 50                           	pushq	%rax
  219288: 48 8b 46 08                  	movq	8(%rsi), %rax
  21928c: 49 89 f6                     	movq	%rsi, %r14
  21928f: 48 8b 76 10                  	movq	16(%rsi), %rsi
  219293: 49 89 c7                     	movq	%rax, %r15
  219296: 49 29 f7                     	subq	%rsi, %r15
  219299: 72 5b                        	jb	0x2192f6 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read+0x76>
  21929b: 4c 39 f9                     	cmpq	%r15, %rcx
  21929e: 49 89 f4                     	movq	%rsi, %r12
  2192a1: 4c 0f 42 f9                  	cmovbq	%rcx, %r15
  2192a5: 4d 01 fc                     	addq	%r15, %r12
  2192a8: 72 4c                        	jb	0x2192f6 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read+0x76>
  2192aa: 49 39 c4                     	cmpq	%rax, %r12
  2192ad: 77 58                        	ja	0x219307 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read+0x87>
  2192af: 4c 89 e0                     	movq	%r12, %rax
  2192b2: 48 29 f0                     	subq	%rsi, %rax
  2192b5: 49 39 c7                     	cmpq	%rax, %r15
  2192b8: 75 5e                        	jne	0x219318 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read+0x98>
  2192ba: 49 03 36                     	addq	(%r14), %rsi
  2192bd: 48 89 fb                     	movq	%rdi, %rbx
  2192c0: 4a 8d 04 3e                  	leaq	(%rsi,%r15), %rax
  2192c4: 48 39 d0                     	cmpq	%rdx, %rax
  2192c7: 76 09                        	jbe	0x2192d2 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read+0x52>
  2192c9: 4a 8d 04 3a                  	leaq	(%rdx,%r15), %rax
  2192cd: 48 39 c6                     	cmpq	%rax, %rsi
  2192d0: 72 57                        	jb	0x219329 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read+0xa9>
  2192d2: 48 89 d7                     	movq	%rdx, %rdi
  2192d5: 4c 89 fa                     	movq	%r15, %rdx
  2192d8: e8 03 30 00 00               	callq	0x21c2e0 <memcpy>
  2192dd: 4d 89 66 10                  	movq	%r12, 16(%r14)
  2192e1: 4c 89 3b                     	movq	%r15, (%rbx)
  2192e4: 66 c7 43 08 00 00            	movw	$0, 8(%rbx)
  2192ea: 48 83 c4 08                  	addq	$8, %rsp
  2192ee: 5b                           	popq	%rbx
  2192ef: 41 5c                        	popq	%r12
  2192f1: 41 5e                        	popq	%r14
  2192f3: 41 5f                        	popq	%r15
  2192f5: c3                           	retq
  2192f6: bf 59 1d 20 00               	movl	$2104665, %edi          # imm = 0x201D59
  2192fb: be 10 00 00 00               	movl	$16, %esi
  219300: 31 c9                        	xorl	%ecx, %ecx
  219302: e8 09 20 00 00               	callq	0x21b310 <builtin.default_panic>
  219307: bf 9c 1e 20 00               	movl	$2104988, %edi          # imm = 0x201E9C
  21930c: be 13 00 00 00               	movl	$19, %esi
  219311: 31 c9                        	xorl	%ecx, %ecx
  219313: e8 f8 1f 00 00               	callq	0x21b310 <builtin.default_panic>
  219318: bf 48 1e 20 00               	movl	$2104904, %edi          # imm = 0x201E48
  21931d: be 28 00 00 00               	movl	$40, %esi
  219322: 31 c9                        	xorl	%ecx, %ecx
  219324: e8 e7 1f 00 00               	callq	0x21b310 <builtin.default_panic>
  219329: bf b0 1e 20 00               	movl	$2105008, %edi          # imm = 0x201EB0
  21932e: be 17 00 00 00               	movl	$23, %esi
  219333: 31 c9                        	xorl	%ecx, %ecx
  219335: e8 d6 1f 00 00               	callq	0x21b310 <builtin.default_panic>
  21933a: 66 0f 1f 44 00 00            	nopw	(%rax,%rax)

0000000000219340 <array_list.ArrayListAlignedUnmanaged(dwarf.Die.Attr,null).ensureTotalCapacity>:
  219340: 55                           	pushq	%rbp
  219341: 41 57                        	pushq	%r15
  219343: 41 56                        	pushq	%r14
  219345: 41 55                        	pushq	%r13
  219347: 41 54                        	pushq	%r12
  219349: 53                           	pushq	%rbx
  21934a: 48 81 ec 38 01 00 00         	subq	$312, %rsp              # imm = 0x138
  219351: 4c 8b 66 10                  	movq	16(%rsi), %r12
  219355: 49 39 cc                     	cmpq	%rcx, %r12
  219358: 0f 83 af 01 00 00            	jae	0x21950d <array_list.ArrayListAlignedUnmanaged(dwarf.Die.Attr,null).ensureTotalCapacity+0x1cd>
  21935e: 49 89 d6                     	movq	%rdx, %r14
  219361: 48 89 f3                     	movq	%rsi, %rbx
  219364: 49 89 ff                     	movq	%rdi, %r15
  219367: 48 c7 c0 ff ff ff ff         	movq	$-1, %rax
  21936e: 4d 89 e5                     	movq	%r12, %r13
  219371: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
  219380: 4c 89 ea                     	movq	%r13, %rdx
  219383: 48 d1 ea                     	shrq	%rdx
  219386: 48 83 c2 08                  	addq	$8, %rdx
  21938a: 49 01 d5                     	addq	%rdx, %r13
  21938d: 4c 0f 42 e8                  	cmovbq	%rax, %r13
  219391: 49 39 cd                     	cmpq	%rcx, %r13
  219394: 72 ea                        	jb	0x219380 <array_list.ArrayListAlignedUnmanaged(dwarf.Die.Attr,null).ensureTotalCapacity+0x40>
  219396: 4d 39 ec                     	cmpq	%r13, %r12
  219399: 0f 83 6e 01 00 00            	jae	0x21950d <array_list.ArrayListAlignedUnmanaged(dwarf.Die.Attr,null).ensureTotalCapacity+0x1cd>
  21939f: 48 8b 33                     	movq	(%rbx), %rsi
  2193a2: 49 8b 3e                     	movq	(%r14), %rdi
  2193a5: 4d 8b 56 08                  	movq	8(%r14), %r10
  2193a9: 48 8d 44 24 38               	leaq	56(%rsp), %rax
  2193ae: 48 89 44 24 28               	movq	%rax, 40(%rsp)
  2193b3: 48 c7 44 24 30 20 00 00 00   	movq	$32, 48(%rsp)
  2193bc: 48 c7 44 24 20 00 00 00 00   	movq	$0, 32(%rsp)
  2193c5: 48 89 74 24 08               	movq	%rsi, 8(%rsp)
  2193ca: 4d 85 e4                     	testq	%r12, %r12
  2193cd: 74 4b                        	je	0x21941a <array_list.ArrayListAlignedUnmanaged(dwarf.Die.Attr,null).ensureTotalCapacity+0xda>
  2193cf: 48 b8 ff ff ff ff ff ff ff 07	movabsq	$576460752303423487, %rax # imm = 0x7FFFFFFFFFFFFFF
  2193d9: 48 8d 48 01                  	leaq	1(%rax), %rcx
  2193dd: 49 39 cc                     	cmpq	%rcx, %r12
  2193e0: 0f 83 7d 01 00 00            	jae	0x219563 <array_list.ArrayListAlignedUnmanaged(dwarf.Die.Attr,null).ensureTotalCapacity+0x223>
  2193e6: 49 39 c5                     	cmpq	%rax, %r13
  2193e9: 0f 87 32 01 00 00            	ja	0x219521 <array_list.ArrayListAlignedUnmanaged(dwarf.Die.Attr,null).ensureTotalCapacity+0x1e1>
  2193ef: 48 8b ac 24 68 01 00 00      	movq	360(%rsp), %rbp
  2193f7: 4c 89 e2                     	movq	%r12, %rdx
  2193fa: 4d 89 e8                     	movq	%r13, %r8
  2193fd: b9 03 00 00 00               	movl	$3, %ecx
  219402: 48 c1 e2 05                  	shlq	$5, %rdx
  219406: 49 c1 e0 05                  	shlq	$5, %r8
  21940a: 49 89 e9                     	movq	%rbp, %r9
  21940d: 41 ff 52 08                  	callq	*8(%r10)
  219411: a8 01                        	testb	$1, %al
  219413: 74 1a                        	je	0x21942f <array_list.ArrayListAlignedUnmanaged(dwarf.Die.Attr,null).ensureTotalCapacity+0xef>
  219415: e9 ef 00 00 00               	jmp	0x219509 <array_list.ArrayListAlignedUnmanaged(dwarf.Die.Attr,null).ensureTotalCapacity+0x1c9>
  21941a: 4c 89 e8                     	movq	%r13, %rax
  21941d: 48 c1 e8 3b                  	shrq	$59, %rax
  219421: 0f 85 04 01 00 00            	jne	0x21952b <array_list.ArrayListAlignedUnmanaged(dwarf.Die.Attr,null).ensureTotalCapacity+0x1eb>
  219427: 48 8b ac 24 68 01 00 00      	movq	360(%rsp), %rbp
  21942f: 49 8b 3e                     	movq	(%r14), %rdi
  219432: 49 8b 46 08                  	movq	8(%r14), %rax
  219436: 4c 89 7c 24 10               	movq	%r15, 16(%rsp)
  21943b: 4d 89 ef                     	movq	%r13, %r15
  21943e: ba 03 00 00 00               	movl	$3, %edx
  219443: 48 89 e9                     	movq	%rbp, %rcx
  219446: 48 89 6c 24 18               	movq	%rbp, 24(%rsp)
  21944b: 49 c1 e7 05                  	shlq	$5, %r15
  21944f: 4c 89 fe                     	movq	%r15, %rsi
  219452: ff 10                        	callq	*(%rax)
  219454: 48 85 c0                     	testq	%rax, %rax
  219457: 0f 84 db 00 00 00            	je	0x219538 <array_list.ArrayListAlignedUnmanaged(dwarf.Die.Attr,null).ensureTotalCapacity+0x1f8>
  21945d: 48 89 c7                     	movq	%rax, %rdi
  219460: be aa 00 00 00               	movl	$170, %esi
  219465: 4c 89 fa                     	movq	%r15, %rdx
  219468: 48 89 c5                     	movq	%rax, %rbp
  21946b: e8 70 2f 00 00               	callq	0x21c3e0 <memset>
  219470: 40 f6 c5 07                  	testb	$7, %bpl
  219474: 0f 85 fa 00 00 00            	jne	0x219574 <array_list.ArrayListAlignedUnmanaged(dwarf.Die.Attr,null).ensureTotalCapacity+0x234>
  21947a: 48 8b 53 08                  	movq	8(%rbx), %rdx
  21947e: 4c 39 ea                     	cmpq	%r13, %rdx
  219481: 0f 87 f4 00 00 00            	ja	0x21957b <array_list.ArrayListAlignedUnmanaged(dwarf.Die.Attr,null).ensureTotalCapacity+0x23b>
  219487: 48 8b 33                     	movq	(%rbx), %rsi
  21948a: 48 c1 e2 05                  	shlq	$5, %rdx
  21948e: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  219492: 48 39 c5                     	cmpq	%rax, %rbp
  219495: 73 0f                        	jae	0x2194a6 <array_list.ArrayListAlignedUnmanaged(dwarf.Die.Attr,null).ensureTotalCapacity+0x166>
  219497: 48 89 e8                     	movq	%rbp, %rax
  21949a: 48 01 d0                     	addq	%rdx, %rax
  21949d: 48 39 c6                     	cmpq	%rax, %rsi
  2194a0: 0f 82 e6 00 00 00            	jb	0x21958c <array_list.ArrayListAlignedUnmanaged(dwarf.Die.Attr,null).ensureTotalCapacity+0x24c>
  2194a6: 48 89 ef                     	movq	%rbp, %rdi
  2194a9: e8 32 2e 00 00               	callq	0x21c2e0 <memcpy>
  2194ae: 48 8b 7c 24 08               	movq	8(%rsp), %rdi
  2194b3: 4d 89 e7                     	movq	%r12, %r15
  2194b6: b8 08 00 00 00               	movl	$8, %eax
  2194bb: 49 c1 e7 05                  	shlq	$5, %r15
  2194bf: 4d 85 e4                     	testq	%r12, %r12
  2194c2: 4d 0f 44 fc                  	cmoveq	%r12, %r15
  2194c6: 48 0f 44 f8                  	cmoveq	%rax, %rdi
  2194ca: 4d 85 ff                     	testq	%r15, %r15
  2194cd: 74 37                        	je	0x219506 <array_list.ArrayListAlignedUnmanaged(dwarf.Die.Attr,null).ensureTotalCapacity+0x1c6>
  2194cf: 49 8b 46 08                  	movq	8(%r14), %rax
  2194d3: 4d 8b 26                     	movq	(%r14), %r12
  2194d6: be aa 00 00 00               	movl	$170, %esi
  2194db: 4c 89 fa                     	movq	%r15, %rdx
  2194de: 49 89 fe                     	movq	%rdi, %r14
  2194e1: 48 89 44 24 08               	movq	%rax, 8(%rsp)
  2194e6: e8 f5 2e 00 00               	callq	0x21c3e0 <memset>
  2194eb: 4c 8b 44 24 18               	movq	24(%rsp), %r8
  2194f0: 48 8b 44 24 08               	movq	8(%rsp), %rax
  2194f5: 4c 89 e7                     	movq	%r12, %rdi
  2194f8: 4c 89 f6                     	movq	%r14, %rsi
  2194fb: 4c 89 fa                     	movq	%r15, %rdx
  2194fe: b9 03 00 00 00               	movl	$3, %ecx
  219503: ff 50 10                     	callq	*16(%rax)
  219506: 48 89 2b                     	movq	%rbp, (%rbx)
  219509: 4c 89 6b 10                  	movq	%r13, 16(%rbx)
  21950d: 31 c0                        	xorl	%eax, %eax
  21950f: 48 81 c4 38 01 00 00         	addq	$312, %rsp              # imm = 0x138
  219516: 5b                           	popq	%rbx
  219517: 41 5c                        	popq	%r12
  219519: 41 5d                        	popq	%r13
  21951b: 41 5e                        	popq	%r14
  21951d: 41 5f                        	popq	%r15
  21951f: 5d                           	popq	%rbp
  219520: c3                           	retq
  219521: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  219526: e8 25 28 00 00               	callq	0x21bd50 <builtin.returnError>
  21952b: 4c 89 ff                     	movq	%r15, %rdi
  21952e: 4c 89 7c 24 10               	movq	%r15, 16(%rsp)
  219533: e8 18 28 00 00               	callq	0x21bd50 <builtin.returnError>
  219538: 48 8b 5c 24 10               	movq	16(%rsp), %rbx
  21953d: 48 89 df                     	movq	%rbx, %rdi
  219540: e8 0b 28 00 00               	callq	0x21bd50 <builtin.returnError>
  219545: 48 89 df                     	movq	%rbx, %rdi
  219548: e8 03 28 00 00               	callq	0x21bd50 <builtin.returnError>
  21954d: 48 89 df                     	movq	%rbx, %rdi
  219550: e8 fb 27 00 00               	callq	0x21bd50 <builtin.returnError>
  219555: 48 89 df                     	movq	%rbx, %rdi
  219558: e8 f3 27 00 00               	callq	0x21bd50 <builtin.returnError>
  21955d: 66 b8 15 00                  	movw	$21, %ax
  219561: eb ac                        	jmp	0x21950f <array_list.ArrayListAlignedUnmanaged(dwarf.Die.Attr,null).ensureTotalCapacity+0x1cf>
  219563: bf 59 1d 20 00               	movl	$2104665, %edi          # imm = 0x201D59
  219568: be 10 00 00 00               	movl	$16, %esi
  21956d: 31 c9                        	xorl	%ecx, %ecx
  21956f: e8 9c 1d 00 00               	callq	0x21b310 <builtin.default_panic>
  219574: bf c7 1d 20 00               	movl	$2104775, %edi          # imm = 0x201DC7
  219579: eb 05                        	jmp	0x219580 <array_list.ArrayListAlignedUnmanaged(dwarf.Die.Attr,null).ensureTotalCapacity+0x240>
  21957b: bf 9c 1e 20 00               	movl	$2104988, %edi          # imm = 0x201E9C
  219580: be 13 00 00 00               	movl	$19, %esi
  219585: 31 c9                        	xorl	%ecx, %ecx
  219587: e8 84 1d 00 00               	callq	0x21b310 <builtin.default_panic>
  21958c: bf b0 1e 20 00               	movl	$2105008, %edi          # imm = 0x201EB0
  219591: be 17 00 00 00               	movl	$23, %esi
  219596: 31 c9                        	xorl	%ecx, %ecx
  219598: e8 73 1d 00 00               	callq	0x21b310 <builtin.default_panic>
  21959d: 0f 1f 00                     	nopl	(%rax)

00000000002195a0 <dwarf.readAllocBytes__anon_6387>:
  2195a0: 55                           	pushq	%rbp
  2195a1: 41 57                        	pushq	%r15
  2195a3: 41 56                        	pushq	%r14
  2195a5: 41 55                        	pushq	%r13
  2195a7: 41 54                        	pushq	%r12
  2195a9: 53                           	pushq	%rbx
  2195aa: 48 83 ec 18                  	subq	$24, %rsp
  2195ae: 4d 89 c7                     	movq	%r8, %r15
  2195b1: 48 89 cd                     	movq	%rcx, %rbp
  2195b4: 49 89 d4                     	movq	%rdx, %r12
  2195b7: 49 89 f6                     	movq	%rsi, %r14
  2195ba: 48 89 fb                     	movq	%rdi, %rbx
  2195bd: 4d 85 c0                     	testq	%r8, %r8
  2195c0: 74 33                        	je	0x2195f5 <dwarf.readAllocBytes__anon_6387+0x55>
  2195c2: 49 8b 3c 24                  	movq	(%r12), %rdi
  2195c6: 49 8b 44 24 08               	movq	8(%r12), %rax
  2195cb: 48 8b 4c 24 48               	movq	72(%rsp), %rcx
  2195d0: 4c 89 fe                     	movq	%r15, %rsi
  2195d3: 31 d2                        	xorl	%edx, %edx
  2195d5: ff 10                        	callq	*(%rax)
  2195d7: 48 85 c0                     	testq	%rax, %rax
  2195da: 0f 84 9f 00 00 00            	je	0x21967f <dwarf.readAllocBytes__anon_6387+0xdf>
  2195e0: 48 89 c7                     	movq	%rax, %rdi
  2195e3: be aa 00 00 00               	movl	$170, %esi
  2195e8: 4c 89 fa                     	movq	%r15, %rdx
  2195eb: 49 89 c5                     	movq	%rax, %r13
  2195ee: e8 ed 2d 00 00               	callq	0x21c3e0 <memset>
  2195f3: eb 07                        	jmp	0x2195fc <dwarf.readAllocBytes__anon_6387+0x5c>
  2195f5: 49 c7 c5 ff ff ff ff         	movq	$-1, %r13
  2195fc: 48 8b 75 00                  	movq	(%rbp), %rsi
  219600: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  219605: 4c 89 ea                     	movq	%r13, %rdx
  219608: 4c 89 f9                     	movq	%r15, %rcx
  21960b: e8 70 fc ff ff               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  219610: 4c 39 7c 24 08               	cmpq	%r15, 8(%rsp)
  219615: 72 1c                        	jb	0x219633 <dwarf.readAllocBytes__anon_6387+0x93>
  219617: 4c 89 2b                     	movq	%r13, (%rbx)
  21961a: 4c 89 7b 08                  	movq	%r15, 8(%rbx)
  21961e: 66 c7 43 10 00 00            	movw	$0, 16(%rbx)
  219624: 48 83 c4 18                  	addq	$24, %rsp
  219628: 5b                           	popq	%rbx
  219629: 41 5c                        	popq	%r12
  21962b: 41 5d                        	popq	%r13
  21962d: 41 5e                        	popq	%r14
  21962f: 41 5f                        	popq	%r15
  219631: 5d                           	popq	%rbp
  219632: c3                           	retq
  219633: 49 8b 2c 24                  	movq	(%r12), %rbp
  219637: 4d 8b 64 24 08               	movq	8(%r12), %r12
  21963c: 4c 89 ef                     	movq	%r13, %rdi
  21963f: be aa 00 00 00               	movl	$170, %esi
  219644: 4c 89 fa                     	movq	%r15, %rdx
  219647: e8 94 2d 00 00               	callq	0x21c3e0 <memset>
  21964c: 4c 8b 44 24 48               	movq	72(%rsp), %r8
  219651: 48 89 ef                     	movq	%rbp, %rdi
  219654: 4c 89 ee                     	movq	%r13, %rsi
  219657: 4c 89 fa                     	movq	%r15, %rdx
  21965a: 31 c9                        	xorl	%ecx, %ecx
  21965c: 41 ff 54 24 10               	callq	*16(%r12)
  219661: 4c 89 f7                     	movq	%r14, %rdi
  219664: e8 e7 26 00 00               	callq	0x21bd50 <builtin.returnError>
  219669: c5 f8 10 05 cf 81 fe ff      	vmovups	-97841(%rip), %xmm0     # 0x201840 <heap.arena_allocator.ArenaAllocator.allocator__anon_6362+0x30>
  219671: 48 c7 43 10 38 00 00 00      	movq	$56, 16(%rbx)
  219679: c5 f8 11 03                  	vmovups	%xmm0, (%rbx)
  21967d: eb a5                        	jmp	0x219624 <dwarf.readAllocBytes__anon_6387+0x84>
  21967f: 4c 89 f7                     	movq	%r14, %rdi
  219682: e8 c9 26 00 00               	callq	0x21bd50 <builtin.returnError>
  219687: 4c 89 f7                     	movq	%r14, %rdi
  21968a: e8 c1 26 00 00               	callq	0x21bd50 <builtin.returnError>
  21968f: 4c 89 f7                     	movq	%r14, %rdi
  219692: e8 b9 26 00 00               	callq	0x21bd50 <builtin.returnError>
  219697: 66 c7 43 10 15 00            	movw	$21, 16(%rbx)
  21969d: eb 85                        	jmp	0x219624 <dwarf.readAllocBytes__anon_6387+0x84>
  21969f: 90                           	nop

00000000002196a0 <dwarf.readAllocBytes__anon_6399>:
  2196a0: 55                           	pushq	%rbp
  2196a1: 41 57                        	pushq	%r15
  2196a3: 41 56                        	pushq	%r14
  2196a5: 41 55                        	pushq	%r13
  2196a7: 41 54                        	pushq	%r12
  2196a9: 53                           	pushq	%rbx
  2196aa: 48 83 ec 18                  	subq	$24, %rsp
  2196ae: 4d 89 c7                     	movq	%r8, %r15
  2196b1: 48 89 cd                     	movq	%rcx, %rbp
  2196b4: 49 89 d4                     	movq	%rdx, %r12
  2196b7: 49 89 f6                     	movq	%rsi, %r14
  2196ba: 48 89 fb                     	movq	%rdi, %rbx
  2196bd: 4d 85 c0                     	testq	%r8, %r8
  2196c0: 74 33                        	je	0x2196f5 <dwarf.readAllocBytes__anon_6399+0x55>
  2196c2: 49 8b 3c 24                  	movq	(%r12), %rdi
  2196c6: 49 8b 44 24 08               	movq	8(%r12), %rax
  2196cb: 48 8b 4c 24 48               	movq	72(%rsp), %rcx
  2196d0: 4c 89 fe                     	movq	%r15, %rsi
  2196d3: 31 d2                        	xorl	%edx, %edx
  2196d5: ff 10                        	callq	*(%rax)
  2196d7: 48 85 c0                     	testq	%rax, %rax
  2196da: 0f 84 9f 00 00 00            	je	0x21977f <dwarf.readAllocBytes__anon_6399+0xdf>
  2196e0: 48 89 c7                     	movq	%rax, %rdi
  2196e3: be aa 00 00 00               	movl	$170, %esi
  2196e8: 4c 89 fa                     	movq	%r15, %rdx
  2196eb: 49 89 c5                     	movq	%rax, %r13
  2196ee: e8 ed 2c 00 00               	callq	0x21c3e0 <memset>
  2196f3: eb 07                        	jmp	0x2196fc <dwarf.readAllocBytes__anon_6399+0x5c>
  2196f5: 49 c7 c5 ff ff ff ff         	movq	$-1, %r13
  2196fc: 48 8b 75 00                  	movq	(%rbp), %rsi
  219700: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  219705: 4c 89 ea                     	movq	%r13, %rdx
  219708: 4c 89 f9                     	movq	%r15, %rcx
  21970b: e8 70 fb ff ff               	callq	0x219280 <io.fixed_buffer_stream.FixedBufferStream([]const u8).read>
  219710: 4c 39 7c 24 08               	cmpq	%r15, 8(%rsp)
  219715: 72 1c                        	jb	0x219733 <dwarf.readAllocBytes__anon_6399+0x93>
  219717: 4c 89 2b                     	movq	%r13, (%rbx)
  21971a: 4c 89 7b 08                  	movq	%r15, 8(%rbx)
  21971e: 66 c7 43 10 00 00            	movw	$0, 16(%rbx)
  219724: 48 83 c4 18                  	addq	$24, %rsp
  219728: 5b                           	popq	%rbx
  219729: 41 5c                        	popq	%r12
  21972b: 41 5d                        	popq	%r13
  21972d: 41 5e                        	popq	%r14
  21972f: 41 5f                        	popq	%r15
  219731: 5d                           	popq	%rbp
  219732: c3                           	retq
  219733: 49 8b 2c 24                  	movq	(%r12), %rbp
  219737: 4d 8b 64 24 08               	movq	8(%r12), %r12
  21973c: 4c 89 ef                     	movq	%r13, %rdi
  21973f: be aa 00 00 00               	movl	$170, %esi
  219744: 4c 89 fa                     	movq	%r15, %rdx
  219747: e8 94 2c 00 00               	callq	0x21c3e0 <memset>
  21974c: 4c 8b 44 24 48               	movq	72(%rsp), %r8
  219751: 48 89 ef                     	movq	%rbp, %rdi
  219754: 4c 89 ee                     	movq	%r13, %rsi
  219757: 4c 89 fa                     	movq	%r15, %rdx
  21975a: 31 c9                        	xorl	%ecx, %ecx
  21975c: 41 ff 54 24 10               	callq	*16(%r12)
  219761: 4c 89 f7                     	movq	%r14, %rdi
  219764: e8 e7 25 00 00               	callq	0x21bd50 <builtin.returnError>
  219769: c5 f8 10 05 cf 80 fe ff      	vmovups	-98097(%rip), %xmm0     # 0x201840 <heap.arena_allocator.ArenaAllocator.allocator__anon_6362+0x30>
  219771: 48 c7 43 10 38 00 00 00      	movq	$56, 16(%rbx)
  219779: c5 f8 11 03                  	vmovups	%xmm0, (%rbx)
  21977d: eb a5                        	jmp	0x219724 <dwarf.readAllocBytes__anon_6399+0x84>
  21977f: 4c 89 f7                     	movq	%r14, %rdi
  219782: e8 c9 25 00 00               	callq	0x21bd50 <builtin.returnError>
  219787: 4c 89 f7                     	movq	%r14, %rdi
  21978a: e8 c1 25 00 00               	callq	0x21bd50 <builtin.returnError>
  21978f: 4c 89 f7                     	movq	%r14, %rdi
  219792: e8 b9 25 00 00               	callq	0x21bd50 <builtin.returnError>
  219797: 66 c7 43 10 15 00            	movw	$21, 16(%rbx)
  21979d: eb 85                        	jmp	0x219724 <dwarf.readAllocBytes__anon_6399+0x84>
  21979f: 90                           	nop

00000000002197a0 <array_list.ArrayListAligned(dwarf.FileEntry,null).addOne>:
  2197a0: 55                           	pushq	%rbp
  2197a1: 41 57                        	pushq	%r15
  2197a3: 41 56                        	pushq	%r14
  2197a5: 53                           	pushq	%rbx
  2197a6: 50                           	pushq	%rax
  2197a7: 48 8b 42 08                  	movq	8(%rdx), %rax
  2197ab: 48 89 c1                     	movq	%rax, %rcx
  2197ae: 48 ff c1                     	incq	%rcx
  2197b1: 0f 84 83 00 00 00            	je	0x21983a <array_list.ArrayListAligned(dwarf.FileEntry,null).addOne+0x9a>
  2197b7: 49 89 d6                     	movq	%rdx, %r14
  2197ba: 48 8b 52 10                  	movq	16(%rdx), %rdx
  2197be: 48 89 fb                     	movq	%rdi, %rbx
  2197c1: 48 39 ca                     	cmpq	%rcx, %rdx
  2197c4: 73 38                        	jae	0x2197fe <array_list.ArrayListAligned(dwarf.FileEntry,null).addOne+0x5e>
  2197c6: 49 89 f7                     	movq	%rsi, %r15
  2197c9: 48 c7 c0 ff ff ff ff         	movq	$-1, %rax
  2197d0: 48 89 d6                     	movq	%rdx, %rsi
  2197d3: 48 d1 ee                     	shrq	%rsi
  2197d6: 48 83 c6 08                  	addq	$8, %rsi
  2197da: 48 01 f2                     	addq	%rsi, %rdx
  2197dd: 48 0f 42 d0                  	cmovbq	%rax, %rdx
  2197e1: 48 39 ca                     	cmpq	%rcx, %rdx
  2197e4: 72 ea                        	jb	0x2197d0 <array_list.ArrayListAligned(dwarf.FileEntry,null).addOne+0x30>
  2197e6: 4c 89 ff                     	movq	%r15, %rdi
  2197e9: 4c 89 f6                     	movq	%r14, %rsi
  2197ec: e8 ef 14 00 00               	callq	0x21ace0 <array_list.ArrayListAligned(dwarf.FileEntry,null).ensureTotalCapacityPrecise>
  2197f1: 66 85 c0                     	testw	%ax, %ax
  2197f4: 75 30                        	jne	0x219826 <array_list.ArrayListAligned(dwarf.FileEntry,null).addOne+0x86>
  2197f6: 49 8b 46 08                  	movq	8(%r14), %rax
  2197fa: 49 8b 56 10                  	movq	16(%r14), %rdx
  2197fe: 48 39 d0                     	cmpq	%rdx, %rax
  219801: 73 48                        	jae	0x21984b <array_list.ArrayListAligned(dwarf.FileEntry,null).addOne+0xab>
  219803: 48 8d 48 01                  	leaq	1(%rax), %rcx
  219807: 48 6b c0 38                  	imulq	$56, %rax, %rax
  21980b: 31 ed                        	xorl	%ebp, %ebp
  21980d: 49 89 4e 08                  	movq	%rcx, 8(%r14)
  219811: 49 03 06                     	addq	(%r14), %rax
  219814: 48 89 03                     	movq	%rax, (%rbx)
  219817: 66 89 6b 08                  	movw	%bp, 8(%rbx)
  21981b: 48 83 c4 08                  	addq	$8, %rsp
  21981f: 5b                           	popq	%rbx
  219820: 41 5e                        	popq	%r14
  219822: 41 5f                        	popq	%r15
  219824: 5d                           	popq	%rbp
  219825: c3                           	retq
  219826: 4c 89 ff                     	movq	%r15, %rdi
  219829: 89 c5                        	movl	%eax, %ebp
  21982b: e8 20 25 00 00               	callq	0x21bd50 <builtin.returnError>
  219830: 4c 89 ff                     	movq	%r15, %rdi
  219833: e8 18 25 00 00               	callq	0x21bd50 <builtin.returnError>
  219838: eb dd                        	jmp	0x219817 <array_list.ArrayListAligned(dwarf.FileEntry,null).addOne+0x77>
  21983a: bf 59 1d 20 00               	movl	$2104665, %edi          # imm = 0x201D59
  21983f: be 10 00 00 00               	movl	$16, %esi
  219844: 31 c9                        	xorl	%ecx, %ecx
  219846: e8 c5 1a 00 00               	callq	0x21b310 <builtin.default_panic>
  21984b: bf 32 22 20 00               	movl	$2105906, %edi          # imm = 0x202232
  219850: be 18 00 00 00               	movl	$24, %esi
  219855: 31 c9                        	xorl	%ecx, %ecx
  219857: e8 b4 1a 00 00               	callq	0x21b310 <builtin.default_panic>
  21985c: 0f 1f 40 00                  	nopl	(%rax)

0000000000219860 <debug.StackIterator.next_internal>:
  219860: 53                           	pushq	%rbx
  219861: 48 81 ec 30 02 00 00         	subq	$560, %rsp              # imm = 0x230
  219868: 48 8d 44 24 30               	leaq	48(%rsp), %rax
  21986d: 48 89 fb                     	movq	%rdi, %rbx
  219870: 48 89 44 24 08               	movq	%rax, 8(%rsp)
  219875: 48 c7 44 24 10 20 00 00 00   	movq	$32, 16(%rsp)
  21987e: 48 c7 04 24 00 00 00 00      	movq	$0, (%rsp)
  219886: 4c 8b 4e 10                  	movq	16(%rsi), %r9
  21988a: 4d 85 c9                     	testq	%r9, %r9
  21988d: 0f 84 b5 00 00 00            	je	0x219948 <debug.StackIterator.next_internal+0xe8>
  219893: 4c 89 c8                     	movq	%r9, %rax
  219896: 48 83 e0 f8                  	andq	$-8, %rax
  21989a: 4c 39 c8                     	cmpq	%r9, %rax
  21989d: 0f 85 a5 00 00 00            	jne	0x219948 <debug.StackIterator.next_internal+0xe8>
  2198a3: 4c 89 cf                     	movq	%r9, %rdi
  2198a6: 48 8d 84 24 30 01 00 00      	leaq	304(%rsp), %rax
  2198ae: 48 81 e7 00 f0 ff ff         	andq	$-4096, %rdi            # imm = 0xF000
  2198b5: 48 89 44 24 20               	movq	%rax, 32(%rsp)
  2198ba: 48 c7 44 24 28 20 00 00 00   	movq	$32, 40(%rsp)
  2198c3: 48 c7 44 24 18 00 00 00 00   	movq	$0, 24(%rsp)
  2198cc: 0f 84 ac 00 00 00            	je	0x21997e <debug.StackIterator.next_internal+0x11e>
  2198d2: 49 89 f0                     	movq	%rsi, %r8
  2198d5: b8 1a 00 00 00               	movl	$26, %eax
  2198da: be 00 10 00 00               	movl	$4096, %esi             # imm = 0x1000
  2198df: ba 01 00 00 00               	movl	$1, %edx
  2198e4: 0f 05                        	syscall
  2198e6: 89 c2                        	movl	%eax, %edx
  2198e8: 31 c9                        	xorl	%ecx, %ecx
  2198ea: f7 da                        	negl	%edx
  2198ec: 48 3d 01 f0 ff ff            	cmpq	$-4095, %rax            # imm = 0xF001
  2198f2: 0f 43 ca                     	cmovael	%edx, %ecx
  2198f5: 66 85 c9                     	testw	%cx, %cx
  2198f8: 75 37                        	jne	0x219931 <debug.StackIterator.next_internal+0xd1>
  2198fa: 41 f6 c1 07                  	testb	$7, %r9b
  2198fe: 75 6d                        	jne	0x21996d <debug.StackIterator.next_internal+0x10d>
  219900: 49 8b 01                     	movq	(%r9), %rax
  219903: 48 85 c0                     	testq	%rax, %rax
  219906: 74 06                        	je	0x21990e <debug.StackIterator.next_internal+0xae>
  219908: 49 3b 40 10                  	cmpq	16(%r8), %rax
  21990c: 72 3a                        	jb	0x219948 <debug.StackIterator.next_internal+0xe8>
  21990e: 49 83 c1 08                  	addq	$8, %r9
  219912: 72 2c                        	jb	0x219940 <debug.StackIterator.next_internal+0xe0>
  219914: 41 f6 c1 07                  	testb	$7, %r9b
  219918: 75 53                        	jne	0x21996d <debug.StackIterator.next_internal+0x10d>
  21991a: 49 8b 09                     	movq	(%r9), %rcx
  21991d: 49 89 40 10                  	movq	%rax, 16(%r8)
  219921: 48 89 0b                     	movq	%rcx, (%rbx)
  219924: c6 43 08 01                  	movb	$1, 8(%rbx)
  219928: 48 81 c4 30 02 00 00         	addq	$560, %rsp              # imm = 0x230
  21992f: 5b                           	popq	%rbx
  219930: c3                           	retq
  219931: 0f b7 c1                     	movzwl	%cx, %eax
  219934: 83 f8 0c                     	cmpl	$12, %eax
  219937: 75 20                        	jne	0x219959 <debug.StackIterator.next_internal+0xf9>
  219939: 48 8d 7c 24 18               	leaq	24(%rsp), %rdi
  21993e: eb 03                        	jmp	0x219943 <debug.StackIterator.next_internal+0xe3>
  219940: 48 89 e7                     	movq	%rsp, %rdi
  219943: e8 08 24 00 00               	callq	0x21bd50 <builtin.returnError>
  219948: c5 f8 57 c0                  	vxorps	%xmm0, %xmm0, %xmm0
  21994c: c5 f8 11 03                  	vmovups	%xmm0, (%rbx)
  219950: 48 81 c4 30 02 00 00         	addq	$560, %rsp              # imm = 0x230
  219957: 5b                           	popq	%rbx
  219958: c3                           	retq
  219959: 83 f8 16                     	cmpl	$22, %eax
  21995c: bf 32 22 20 00               	movl	$2105906, %edi          # imm = 0x202232
  219961: be 18 00 00 00               	movl	$24, %esi
  219966: 31 c9                        	xorl	%ecx, %ecx
  219968: e8 a3 19 00 00               	callq	0x21b310 <builtin.default_panic>
  21996d: bf c7 1d 20 00               	movl	$2104775, %edi          # imm = 0x201DC7
  219972: be 13 00 00 00               	movl	$19, %esi
  219977: 31 c9                        	xorl	%ecx, %ecx
  219979: e8 92 19 00 00               	callq	0x21b310 <builtin.default_panic>
  21997e: bf 2a 20 20 00               	movl	$2105386, %edi          # imm = 0x20202A
  219983: be 1e 00 00 00               	movl	$30, %esi
  219988: 31 c9                        	xorl	%ecx, %ecx
  21998a: e8 81 19 00 00               	callq	0x21b310 <builtin.default_panic>
  21998f: 90                           	nop

0000000000219990 <debug.dumpSegfaultInfoPosix>:
  219990: 55                           	pushq	%rbp
  219991: 41 57                        	pushq	%r15
  219993: 41 56                        	pushq	%r14
  219995: 41 55                        	pushq	%r13
  219997: 41 54                        	pushq	%r12
  219999: 53                           	pushq	%rbx
  21999a: 48 81 ec 98 02 00 00         	subq	$664, %rsp              # imm = 0x298
  2199a1: 48 8d 84 24 98 01 00 00      	leaq	408(%rsp), %rax
  2199a9: 83 c7 fc                     	addl	$-4, %edi
  2199ac: c7 44 24 08 02 00 00 00      	movl	$2, 8(%rsp)
  2199b4: 48 89 44 24 18               	movq	%rax, 24(%rsp)
  2199b9: 48 c7 44 24 20 20 00 00 00   	movq	$32, 32(%rsp)
  2199c2: 48 c7 44 24 10 00 00 00 00   	movq	$0, 16(%rsp)
  2199cb: 83 ff 07                     	cmpl	$7, %edi
  2199ce: 0f 87 71 08 00 00            	ja	0x21a245 <debug.dumpSegfaultInfoPosix+0x8b5>
  2199d4: 48 89 d3                     	movq	%rdx, %rbx
  2199d7: 49 89 f6                     	movq	%rsi, %r14
  2199da: ff 24 fd 88 12 20 00         	jmpq	*2101896(,%rdi,8)
  2199e1: 45 31 ed                     	xorl	%r13d, %r13d
  2199e4: 4c 8d bc 24 90 00 00 00      	leaq	144(%rsp), %r15
  2199ec: 4c 8d 64 24 10               	leaq	16(%rsp), %r12
  2199f1: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
  219a00: 49 83 fd 22                  	cmpq	$34, %r13
  219a04: 0f 83 f7 07 00 00            	jae	0x21a201 <debug.dumpSegfaultInfoPosix+0x871>
  219a0a: 41 b8 21 00 00 00            	movl	$33, %r8d
  219a10: 49 8d 8d 68 25 20 00         	leaq	2106728(%r13), %rcx
  219a17: 4c 89 ff                     	movq	%r15, %rdi
  219a1a: 4c 89 e6                     	movq	%r12, %rsi
  219a1d: ba 02 00 00 00               	movl	$2, %edx
  219a22: 4d 29 e8                     	subq	%r13, %r8
  219a25: e8 66 a8 fe ff               	callq	0x204290 <fs.file.File.write>
  219a2a: 66 83 bc 24 98 00 00 00 00   	cmpw	$0, 152(%rsp)
  219a33: 0f 85 82 07 00 00            	jne	0x21a1bb <debug.dumpSegfaultInfoPosix+0x82b>
  219a39: 4c 03 ac 24 90 00 00 00      	addq	144(%rsp), %r13
  219a41: 0f 82 cb 07 00 00            	jb	0x21a212 <debug.dumpSegfaultInfoPosix+0x882>
  219a47: 49 83 fd 21                  	cmpq	$33, %r13
  219a4b: 75 b3                        	jne	0x219a00 <debug.dumpSegfaultInfoPosix+0x70>
  219a4d: c5 fc 28 05 eb 67 fe ff      	vmovaps	-104469(%rip), %ymm0    # 0x200240 <zig-graph+0x200240>
  219a55: 31 d2                        	xorl	%edx, %edx
  219a57: 4c 89 f0                     	movq	%r14, %rax
  219a5a: c6 84 24 d0 00 00 00 aa      	movb	$-86, 208(%rsp)
  219a62: c5 fc 11 84 24 b0 00 00 00   	vmovups	%ymm0, 176(%rsp)
  219a6b: c5 fc 11 84 24 90 00 00 00   	vmovups	%ymm0, 144(%rsp)
  219a74: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
  219a80: 44 89 f1                     	movl	%r14d, %ecx
  219a83: 80 e1 0f                     	andb	$15, %cl
  219a86: 8d 71 30                     	leal	48(%rcx), %esi
  219a89: 8d 79 57                     	leal	87(%rcx), %edi
  219a8c: 80 f9 0a                     	cmpb	$10, %cl
  219a8f: 40 0f b6 ce                  	movzbl	%sil, %ecx
  219a93: 40 0f b6 f7                  	movzbl	%dil, %esi
  219a97: 0f 42 f1                     	cmovbl	%ecx, %esi
  219a9a: 48 c1 e8 04                  	shrq	$4, %rax
  219a9e: 40 88 b4 14 d0 00 00 00      	movb	%sil, 208(%rsp,%rdx)
  219aa6: 48 ff ca                     	decq	%rdx
  219aa9: 49 83 fe 0f                  	cmpq	$15, %r14
  219aad: 49 89 c6                     	movq	%rax, %r14
  219ab0: 77 ce                        	ja	0x219a80 <debug.dumpSegfaultInfoPosix+0xf0>
  219ab2: 48 8d b4 14 d1 00 00 00      	leaq	209(%rsp,%rdx), %rsi
  219aba: 48 f7 da                     	negq	%rdx
  219abd: 48 8d 7c 24 10               	leaq	16(%rsp), %rdi
  219ac2: 4c 8d 44 24 08               	leaq	8(%rsp), %r8
  219ac7: b9 88 18 20 00               	movl	$2103432, %ecx          # imm = 0x201888
  219acc: c5 f8 77                     	vzeroupper
  219acf: e8 ac eb ff ff               	callq	0x218680 <fmt.formatBuf__anon_6100>
  219ad4: 66 85 c0                     	testw	%ax, %ax
  219ad7: 0f 85 e5 06 00 00            	jne	0x21a1c2 <debug.dumpSegfaultInfoPosix+0x832>
  219add: 45 31 e4                     	xorl	%r12d, %r12d
  219ae0: 4c 8d b4 24 90 00 00 00      	leaq	144(%rsp), %r14
  219ae8: 4c 8d 7c 24 10               	leaq	16(%rsp), %r15
  219aed: 0f 1f 00                     	nopl	(%rax)
  219af0: 49 83 fc 02                  	cmpq	$2, %r12
  219af4: 0f 83 07 07 00 00            	jae	0x21a201 <debug.dumpSegfaultInfoPosix+0x871>
  219afa: 41 b8 01 00 00 00            	movl	$1, %r8d
  219b00: 49 8d 8c 24 8c 25 20 00      	leaq	2106764(%r12), %rcx
  219b08: 4c 89 f7                     	movq	%r14, %rdi
  219b0b: 4c 89 fe                     	movq	%r15, %rsi
  219b0e: ba 02 00 00 00               	movl	$2, %edx
  219b13: 4d 29 e0                     	subq	%r12, %r8
  219b16: e8 75 a7 fe ff               	callq	0x204290 <fs.file.File.write>
  219b1b: 66 83 bc 24 98 00 00 00 00   	cmpw	$0, 152(%rsp)
  219b24: 0f 85 91 06 00 00            	jne	0x21a1bb <debug.dumpSegfaultInfoPosix+0x82b>
  219b2a: 4c 03 a4 24 90 00 00 00      	addq	144(%rsp), %r12
  219b32: 49 83 fc 01                  	cmpq	$1, %r12
  219b36: 75 b8                        	jne	0x219af0 <debug.dumpSegfaultInfoPosix+0x160>
  219b38: e9 eb 03 00 00               	jmp	0x219f28 <debug.dumpSegfaultInfoPosix+0x598>
  219b3d: 45 31 ed                     	xorl	%r13d, %r13d
  219b40: 4c 8d bc 24 90 00 00 00      	leaq	144(%rsp), %r15
  219b48: 4c 8d 64 24 10               	leaq	16(%rsp), %r12
  219b4d: 0f 1f 00                     	nopl	(%rax)
  219b50: 49 83 fd 23                  	cmpq	$35, %r13
  219b54: 0f 83 a7 06 00 00            	jae	0x21a201 <debug.dumpSegfaultInfoPosix+0x871>
  219b5a: 41 b8 22 00 00 00            	movl	$34, %r8d
  219b60: 49 8d 8d 41 25 20 00         	leaq	2106689(%r13), %rcx
  219b67: 4c 89 ff                     	movq	%r15, %rdi
  219b6a: 4c 89 e6                     	movq	%r12, %rsi
  219b6d: ba 02 00 00 00               	movl	$2, %edx
  219b72: 4d 29 e8                     	subq	%r13, %r8
  219b75: e8 16 a7 fe ff               	callq	0x204290 <fs.file.File.write>
  219b7a: 66 83 bc 24 98 00 00 00 00   	cmpw	$0, 152(%rsp)
  219b83: 0f 85 32 06 00 00            	jne	0x21a1bb <debug.dumpSegfaultInfoPosix+0x82b>
  219b89: 4c 03 ac 24 90 00 00 00      	addq	144(%rsp), %r13
  219b91: 0f 82 7b 06 00 00            	jb	0x21a212 <debug.dumpSegfaultInfoPosix+0x882>
  219b97: 49 83 fd 22                  	cmpq	$34, %r13
  219b9b: 75 b3                        	jne	0x219b50 <debug.dumpSegfaultInfoPosix+0x1c0>
  219b9d: c5 fc 28 05 9b 66 fe ff      	vmovaps	-104805(%rip), %ymm0    # 0x200240 <zig-graph+0x200240>
  219ba5: 31 d2                        	xorl	%edx, %edx
  219ba7: 4c 89 f0                     	movq	%r14, %rax
  219baa: c6 84 24 d0 00 00 00 aa      	movb	$-86, 208(%rsp)
  219bb2: c5 fc 11 84 24 b0 00 00 00   	vmovups	%ymm0, 176(%rsp)
  219bbb: c5 fc 11 84 24 90 00 00 00   	vmovups	%ymm0, 144(%rsp)
  219bc4: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
  219bd0: 44 89 f1                     	movl	%r14d, %ecx
  219bd3: 80 e1 0f                     	andb	$15, %cl
  219bd6: 8d 71 30                     	leal	48(%rcx), %esi
  219bd9: 8d 79 57                     	leal	87(%rcx), %edi
  219bdc: 80 f9 0a                     	cmpb	$10, %cl
  219bdf: 40 0f b6 ce                  	movzbl	%sil, %ecx
  219be3: 40 0f b6 f7                  	movzbl	%dil, %esi
  219be7: 0f 42 f1                     	cmovbl	%ecx, %esi
  219bea: 48 c1 e8 04                  	shrq	$4, %rax
  219bee: 40 88 b4 14 d0 00 00 00      	movb	%sil, 208(%rsp,%rdx)
  219bf6: 48 ff ca                     	decq	%rdx
  219bf9: 49 83 fe 0f                  	cmpq	$15, %r14
  219bfd: 49 89 c6                     	movq	%rax, %r14
  219c00: 77 ce                        	ja	0x219bd0 <debug.dumpSegfaultInfoPosix+0x240>
  219c02: 48 8d b4 14 d1 00 00 00      	leaq	209(%rsp,%rdx), %rsi
  219c0a: 48 f7 da                     	negq	%rdx
  219c0d: 48 8d 7c 24 10               	leaq	16(%rsp), %rdi
  219c12: 4c 8d 44 24 08               	leaq	8(%rsp), %r8
  219c17: b9 88 18 20 00               	movl	$2103432, %ecx          # imm = 0x201888
  219c1c: c5 f8 77                     	vzeroupper
  219c1f: e8 5c ea ff ff               	callq	0x218680 <fmt.formatBuf__anon_6100>
  219c24: 66 85 c0                     	testw	%ax, %ax
  219c27: 0f 85 95 05 00 00            	jne	0x21a1c2 <debug.dumpSegfaultInfoPosix+0x832>
  219c2d: 45 31 e4                     	xorl	%r12d, %r12d
  219c30: 4c 8d b4 24 90 00 00 00      	leaq	144(%rsp), %r14
  219c38: 4c 8d 7c 24 10               	leaq	16(%rsp), %r15
  219c3d: 0f 1f 00                     	nopl	(%rax)
  219c40: 49 83 fc 02                  	cmpq	$2, %r12
  219c44: 0f 83 b7 05 00 00            	jae	0x21a201 <debug.dumpSegfaultInfoPosix+0x871>
  219c4a: 41 b8 01 00 00 00            	movl	$1, %r8d
  219c50: 49 8d 8c 24 66 25 20 00      	leaq	2106726(%r12), %rcx
  219c58: 4c 89 f7                     	movq	%r14, %rdi
  219c5b: 4c 89 fe                     	movq	%r15, %rsi
  219c5e: ba 02 00 00 00               	movl	$2, %edx
  219c63: 4d 29 e0                     	subq	%r12, %r8
  219c66: e8 25 a6 fe ff               	callq	0x204290 <fs.file.File.write>
  219c6b: 66 83 bc 24 98 00 00 00 00   	cmpw	$0, 152(%rsp)
  219c74: 0f 85 41 05 00 00            	jne	0x21a1bb <debug.dumpSegfaultInfoPosix+0x82b>
  219c7a: 4c 03 a4 24 90 00 00 00      	addq	144(%rsp), %r12
  219c82: 49 83 fc 01                  	cmpq	$1, %r12
  219c86: 75 b8                        	jne	0x219c40 <debug.dumpSegfaultInfoPosix+0x2b0>
  219c88: e9 9b 02 00 00               	jmp	0x219f28 <debug.dumpSegfaultInfoPosix+0x598>
  219c8d: 45 31 ed                     	xorl	%r13d, %r13d
  219c90: 4c 8d bc 24 90 00 00 00      	leaq	144(%rsp), %r15
  219c98: 4c 8d 64 24 10               	leaq	16(%rsp), %r12
  219c9d: 0f 1f 00                     	nopl	(%rax)
  219ca0: 49 83 fd 21                  	cmpq	$33, %r13
  219ca4: 0f 83 57 05 00 00            	jae	0x21a201 <debug.dumpSegfaultInfoPosix+0x871>
  219caa: 41 b8 20 00 00 00            	movl	$32, %r8d
  219cb0: 49 8d 8d 00 25 20 00         	leaq	2106624(%r13), %rcx
  219cb7: 4c 89 ff                     	movq	%r15, %rdi
  219cba: 4c 89 e6                     	movq	%r12, %rsi
  219cbd: ba 02 00 00 00               	movl	$2, %edx
  219cc2: 4d 29 e8                     	subq	%r13, %r8
  219cc5: e8 c6 a5 fe ff               	callq	0x204290 <fs.file.File.write>
  219cca: 66 83 bc 24 98 00 00 00 00   	cmpw	$0, 152(%rsp)
  219cd3: 0f 85 e2 04 00 00            	jne	0x21a1bb <debug.dumpSegfaultInfoPosix+0x82b>
  219cd9: 4c 03 ac 24 90 00 00 00      	addq	144(%rsp), %r13
  219ce1: 0f 82 2b 05 00 00            	jb	0x21a212 <debug.dumpSegfaultInfoPosix+0x882>
  219ce7: 49 83 fd 20                  	cmpq	$32, %r13
  219ceb: 75 b3                        	jne	0x219ca0 <debug.dumpSegfaultInfoPosix+0x310>
  219ced: c5 fc 28 05 4b 65 fe ff      	vmovaps	-105141(%rip), %ymm0    # 0x200240 <zig-graph+0x200240>
  219cf5: 31 d2                        	xorl	%edx, %edx
  219cf7: 4c 89 f0                     	movq	%r14, %rax
  219cfa: c6 84 24 d0 00 00 00 aa      	movb	$-86, 208(%rsp)
  219d02: c5 fc 11 84 24 b0 00 00 00   	vmovups	%ymm0, 176(%rsp)
  219d0b: c5 fc 11 84 24 90 00 00 00   	vmovups	%ymm0, 144(%rsp)
  219d14: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
  219d20: 44 89 f1                     	movl	%r14d, %ecx
  219d23: 80 e1 0f                     	andb	$15, %cl
  219d26: 8d 71 30                     	leal	48(%rcx), %esi
  219d29: 8d 79 57                     	leal	87(%rcx), %edi
  219d2c: 80 f9 0a                     	cmpb	$10, %cl
  219d2f: 40 0f b6 ce                  	movzbl	%sil, %ecx
  219d33: 40 0f b6 f7                  	movzbl	%dil, %esi
  219d37: 0f 42 f1                     	cmovbl	%ecx, %esi
  219d3a: 48 c1 e8 04                  	shrq	$4, %rax
  219d3e: 40 88 b4 14 d0 00 00 00      	movb	%sil, 208(%rsp,%rdx)
  219d46: 48 ff ca                     	decq	%rdx
  219d49: 49 83 fe 0f                  	cmpq	$15, %r14
  219d4d: 49 89 c6                     	movq	%rax, %r14
  219d50: 77 ce                        	ja	0x219d20 <debug.dumpSegfaultInfoPosix+0x390>
  219d52: 48 8d b4 14 d1 00 00 00      	leaq	209(%rsp,%rdx), %rsi
  219d5a: 48 f7 da                     	negq	%rdx
  219d5d: 48 8d 7c 24 10               	leaq	16(%rsp), %rdi
  219d62: 4c 8d 44 24 08               	leaq	8(%rsp), %r8
  219d67: b9 88 18 20 00               	movl	$2103432, %ecx          # imm = 0x201888
  219d6c: c5 f8 77                     	vzeroupper
  219d6f: e8 0c e9 ff ff               	callq	0x218680 <fmt.formatBuf__anon_6100>
  219d74: 66 85 c0                     	testw	%ax, %ax
  219d77: 0f 85 45 04 00 00            	jne	0x21a1c2 <debug.dumpSegfaultInfoPosix+0x832>
  219d7d: 45 31 e4                     	xorl	%r12d, %r12d
  219d80: 4c 8d b4 24 90 00 00 00      	leaq	144(%rsp), %r14
  219d88: 4c 8d 7c 24 10               	leaq	16(%rsp), %r15
  219d8d: 0f 1f 00                     	nopl	(%rax)
  219d90: 49 83 fc 02                  	cmpq	$2, %r12
  219d94: 0f 83 67 04 00 00            	jae	0x21a201 <debug.dumpSegfaultInfoPosix+0x871>
  219d9a: 41 b8 01 00 00 00            	movl	$1, %r8d
  219da0: 49 8d 8c 24 23 25 20 00      	leaq	2106659(%r12), %rcx
  219da8: 4c 89 f7                     	movq	%r14, %rdi
  219dab: 4c 89 fe                     	movq	%r15, %rsi
  219dae: ba 02 00 00 00               	movl	$2, %edx
  219db3: 4d 29 e0                     	subq	%r12, %r8
  219db6: e8 d5 a4 fe ff               	callq	0x204290 <fs.file.File.write>
  219dbb: 66 83 bc 24 98 00 00 00 00   	cmpw	$0, 152(%rsp)
  219dc4: 0f 85 f1 03 00 00            	jne	0x21a1bb <debug.dumpSegfaultInfoPosix+0x82b>
  219dca: 4c 03 a4 24 90 00 00 00      	addq	144(%rsp), %r12
  219dd2: 49 83 fc 01                  	cmpq	$1, %r12
  219dd6: 75 b8                        	jne	0x219d90 <debug.dumpSegfaultInfoPosix+0x400>
  219dd8: e9 4b 01 00 00               	jmp	0x219f28 <debug.dumpSegfaultInfoPosix+0x598>
  219ddd: 45 31 ed                     	xorl	%r13d, %r13d
  219de0: 4c 8d bc 24 90 00 00 00      	leaq	144(%rsp), %r15
  219de8: 4c 8d 64 24 10               	leaq	16(%rsp), %r12
  219ded: 0f 1f 00                     	nopl	(%rax)
  219df0: 49 83 fd 18                  	cmpq	$24, %r13
  219df4: 0f 83 07 04 00 00            	jae	0x21a201 <debug.dumpSegfaultInfoPosix+0x871>
  219dfa: 41 b8 17 00 00 00            	movl	$23, %r8d
  219e00: 49 8d 8d 25 25 20 00         	leaq	2106661(%r13), %rcx
  219e07: 4c 89 ff                     	movq	%r15, %rdi
  219e0a: 4c 89 e6                     	movq	%r12, %rsi
  219e0d: ba 02 00 00 00               	movl	$2, %edx
  219e12: 4d 29 e8                     	subq	%r13, %r8
  219e15: e8 76 a4 fe ff               	callq	0x204290 <fs.file.File.write>
  219e1a: 66 83 bc 24 98 00 00 00 00   	cmpw	$0, 152(%rsp)
  219e23: 0f 85 92 03 00 00            	jne	0x21a1bb <debug.dumpSegfaultInfoPosix+0x82b>
  219e29: 4c 03 ac 24 90 00 00 00      	addq	144(%rsp), %r13
  219e31: 0f 82 db 03 00 00            	jb	0x21a212 <debug.dumpSegfaultInfoPosix+0x882>
  219e37: 49 83 fd 17                  	cmpq	$23, %r13
  219e3b: 75 b3                        	jne	0x219df0 <debug.dumpSegfaultInfoPosix+0x460>
  219e3d: c5 fc 28 05 fb 63 fe ff      	vmovaps	-105477(%rip), %ymm0    # 0x200240 <zig-graph+0x200240>
  219e45: 31 d2                        	xorl	%edx, %edx
  219e47: 4c 89 f0                     	movq	%r14, %rax
  219e4a: c6 84 24 d0 00 00 00 aa      	movb	$-86, 208(%rsp)
  219e52: c5 fc 11 84 24 b0 00 00 00   	vmovups	%ymm0, 176(%rsp)
  219e5b: c5 fc 11 84 24 90 00 00 00   	vmovups	%ymm0, 144(%rsp)
  219e64: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
  219e70: 44 89 f1                     	movl	%r14d, %ecx
  219e73: 80 e1 0f                     	andb	$15, %cl
  219e76: 8d 71 30                     	leal	48(%rcx), %esi
  219e79: 8d 79 57                     	leal	87(%rcx), %edi
  219e7c: 80 f9 0a                     	cmpb	$10, %cl
  219e7f: 40 0f b6 ce                  	movzbl	%sil, %ecx
  219e83: 40 0f b6 f7                  	movzbl	%dil, %esi
  219e87: 0f 42 f1                     	cmovbl	%ecx, %esi
  219e8a: 48 c1 e8 04                  	shrq	$4, %rax
  219e8e: 40 88 b4 14 d0 00 00 00      	movb	%sil, 208(%rsp,%rdx)
  219e96: 48 ff ca                     	decq	%rdx
  219e99: 49 83 fe 0f                  	cmpq	$15, %r14
  219e9d: 49 89 c6                     	movq	%rax, %r14
  219ea0: 77 ce                        	ja	0x219e70 <debug.dumpSegfaultInfoPosix+0x4e0>
  219ea2: 48 8d b4 14 d1 00 00 00      	leaq	209(%rsp,%rdx), %rsi
  219eaa: 48 f7 da                     	negq	%rdx
  219ead: 48 8d 7c 24 10               	leaq	16(%rsp), %rdi
  219eb2: 4c 8d 44 24 08               	leaq	8(%rsp), %r8
  219eb7: b9 88 18 20 00               	movl	$2103432, %ecx          # imm = 0x201888
  219ebc: c5 f8 77                     	vzeroupper
  219ebf: e8 bc e7 ff ff               	callq	0x218680 <fmt.formatBuf__anon_6100>
  219ec4: 66 85 c0                     	testw	%ax, %ax
  219ec7: 0f 85 f5 02 00 00            	jne	0x21a1c2 <debug.dumpSegfaultInfoPosix+0x832>
  219ecd: 45 31 e4                     	xorl	%r12d, %r12d
  219ed0: 4c 8d b4 24 90 00 00 00      	leaq	144(%rsp), %r14
  219ed8: 4c 8d 7c 24 10               	leaq	16(%rsp), %r15
  219edd: 0f 1f 00                     	nopl	(%rax)
  219ee0: 49 83 fc 02                  	cmpq	$2, %r12
  219ee4: 0f 83 17 03 00 00            	jae	0x21a201 <debug.dumpSegfaultInfoPosix+0x871>
  219eea: 41 b8 01 00 00 00            	movl	$1, %r8d
  219ef0: 49 8d 8c 24 3f 25 20 00      	leaq	2106687(%r12), %rcx
  219ef8: 4c 89 f7                     	movq	%r14, %rdi
  219efb: 4c 89 fe                     	movq	%r15, %rsi
  219efe: ba 02 00 00 00               	movl	$2, %edx
  219f03: 4d 29 e0                     	subq	%r12, %r8
  219f06: e8 85 a3 fe ff               	callq	0x204290 <fs.file.File.write>
  219f0b: 66 83 bc 24 98 00 00 00 00   	cmpw	$0, 152(%rsp)
  219f14: 0f 85 a1 02 00 00            	jne	0x21a1bb <debug.dumpSegfaultInfoPosix+0x82b>
  219f1a: 4c 03 a4 24 90 00 00 00      	addq	144(%rsp), %r12
  219f22: 49 83 fc 01                  	cmpq	$1, %r12
  219f26: 75 b8                        	jne	0x219ee0 <debug.dumpSegfaultInfoPosix+0x550>
  219f28: f6 c3 07                     	testb	$7, %bl
  219f2b: 0f 85 f2 02 00 00            	jne	0x21a223 <debug.dumpSegfaultInfoPosix+0x893>
  219f31: 48 85 db                     	testq	%rbx, %rbx
  219f34: 0f 84 fa 02 00 00            	je	0x21a234 <debug.dumpSegfaultInfoPosix+0x8a4>
  219f3a: 80 3d f7 81 00 00 00         	cmpb	$0, 33271(%rip)         # 0x222138 <debug.self_debug_info+0x30>
  219f41: 4c 8b 73 78                  	movq	120(%rbx), %r14
  219f45: 48 8b 9b a8 00 00 00         	movq	168(%rbx), %rbx
  219f4c: 48 8d 84 24 90 00 00 00      	leaq	144(%rsp), %rax
  219f54: c7 44 24 28 02 00 00 00      	movl	$2, 40(%rsp)
  219f5c: 48 89 44 24 60               	movq	%rax, 96(%rsp)
  219f61: 48 c7 44 24 68 20 00 00 00   	movq	$32, 104(%rsp)
  219f6a: 48 c7 44 24 58 00 00 00 00   	movq	$0, 88(%rsp)
  219f73: 75 75                        	jne	0x219fea <debug.dumpSegfaultInfoPosix+0x65a>
  219f75: 80 3d c4 81 00 00 00         	cmpb	$0, 33220(%rip)         # 0x222140 <debug.debug_info_allocator.2>
  219f7c: 75 2d                        	jne	0x219fab <debug.dumpSegfaultInfoPosix+0x61b>
  219f7e: c5 f8 10 05 72 78 fe ff      	vmovups	-100238(%rip), %xmm0    # 0x2017f8 <heap.PageAllocator.vtable+0x18>
  219f86: c6 05 b3 81 00 00 01         	movb	$1, 33203(%rip)         # 0x222140 <debug.debug_info_allocator.2>
  219f8d: c5 f8 29 44 24 30            	vmovaps	%xmm0, 48(%rsp)
  219f93: c5 f8 57 c0                  	vxorps	%xmm0, %xmm0, %xmm0
  219f97: c5 f8 29 44 24 40            	vmovaps	%xmm0, 64(%rsp)
  219f9d: c5 fc 10 44 24 30            	vmovups	48(%rsp), %ymm0
  219fa3: c5 fc 11 05 9d 81 00 00      	vmovups	%ymm0, 33181(%rip)      # 0x222148 <debug.debug_info_arena_allocator>
  219fab: c5 f8 57 c0                  	vxorps	%xmm0, %xmm0, %xmm0
  219faf: c5 f8 11 05 61 81 00 00      	vmovups	%xmm0, 33121(%rip)      # 0x222118 <debug.self_debug_info+0x10>
  219fb7: 48 c7 05 46 81 00 00 48 21 22 00     	movq	$2236744, 33094(%rip) # imm = 0x222148
                                                                        # 0x222108 <debug.self_debug_info>
  219fc2: 48 c7 05 43 81 00 00 10 18 20 00     	movq	$2103312, 33091(%rip) # imm = 0x201810
                                                                        # 0x222110 <debug.self_debug_info+0x8>
  219fcd: 48 c7 05 50 81 00 00 48 21 22 00     	movq	$2236744, 33104(%rip) # imm = 0x222148
                                                                        # 0x222128 <debug.self_debug_info+0x20>
  219fd8: 48 c7 05 4d 81 00 00 10 18 20 00     	movq	$2103312, 33101(%rip) # imm = 0x201810
                                                                        # 0x222130 <debug.self_debug_info+0x28>
  219fe3: c6 05 4e 81 00 00 01         	movb	$1, 33102(%rip)         # 0x222138 <debug.self_debug_info+0x30>
  219fea: bf 9e 23 20 00               	movl	$2106270, %edi          # imm = 0x20239E
  219fef: be 0f 00 00 00               	movl	$15, %esi
  219ff4: c5 f8 77                     	vzeroupper
  219ff7: e8 94 04 00 00               	callq	0x21a490 <os.getenv>
  219ffc: 48 85 c0                     	testq	%rax, %rax
  219fff: 74 0d                        	je	0x21a00e <debug.dumpSegfaultInfoPosix+0x67e>
  21a001: 44 0f b6 05 ff 77 fe ff      	movzbl	-100353(%rip), %r8d     # 0x201808 <heap.PageAllocator.vtable+0x28>
  21a009: e9 bd 00 00 00               	jmp	0x21a0cb <debug.dumpSegfaultInfoPosix+0x73b>
  21a00e: bf 95 23 20 00               	movl	$2106261, %edi          # imm = 0x202395
  21a013: be 08 00 00 00               	movl	$8, %esi
  21a018: e8 73 04 00 00               	callq	0x21a490 <os.getenv>
  21a01d: 45 31 c0                     	xorl	%r8d, %r8d
  21a020: 48 85 c0                     	testq	%rax, %rax
  21a023: 0f 85 a2 00 00 00            	jne	0x21a0cb <debug.dumpSegfaultInfoPosix+0x73b>
  21a029: 49 b9 aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %r9 # imm = 0xAAAAAAAAAAAAAAAA
  21a033: 48 8d 54 24 30               	leaq	48(%rsp), %rdx
  21a038: bf 02 00 00 00               	movl	$2, %edi
  21a03d: be 13 54 00 00               	movl	$21523, %esi            # imm = 0x5413
  21a042: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)
  21a050: 4c 89 4c 24 30               	movq	%r9, 48(%rsp)
  21a055: b8 10 00 00 00               	movl	$16, %eax
  21a05a: 0f 05                        	syscall
  21a05c: 89 c1                        	movl	%eax, %ecx
  21a05e: f7 d9                        	negl	%ecx
  21a060: 48 3d 01 f0 ff ff            	cmpq	$-4095, %rax            # imm = 0xF001
  21a066: 41 0f 42 c8                  	cmovbl	%r8d, %ecx
  21a06a: 66 83 f9 04                  	cmpw	$4, %cx
  21a06e: 74 e0                        	je	0x21a050 <debug.dumpSegfaultInfoPosix+0x6c0>
  21a070: 0f b7 c1                     	movzwl	%cx, %eax
  21a073: 85 c0                        	testl	%eax, %eax
  21a075: 75 51                        	jne	0x21a0c8 <debug.dumpSegfaultInfoPosix+0x738>
  21a077: bf ae 23 20 00               	movl	$2106286, %edi          # imm = 0x2023AE
  21a07c: be 04 00 00 00               	movl	$4, %esi
  21a081: e8 0a 04 00 00               	callq	0x21a490 <os.getenv>
  21a086: 48 85 c0                     	testq	%rax, %rax
  21a089: 0f 84 72 ff ff ff            	je	0x21a001 <debug.dumpSegfaultInfoPosix+0x671>
  21a08f: 48 83 fa 04                  	cmpq	$4, %rdx
  21a093: 0f 85 68 ff ff ff            	jne	0x21a001 <debug.dumpSegfaultInfoPosix+0x671>
  21a099: 48 3d 71 23 20 00            	cmpq	$2106225, %rax          # imm = 0x202371
  21a09f: 74 27                        	je	0x21a0c8 <debug.dumpSegfaultInfoPosix+0x738>
  21a0a1: 80 38 64                     	cmpb	$100, (%rax)
  21a0a4: 0f 85 57 ff ff ff            	jne	0x21a001 <debug.dumpSegfaultInfoPosix+0x671>
  21a0aa: 80 78 01 75                  	cmpb	$117, 1(%rax)
  21a0ae: 0f 85 4d ff ff ff            	jne	0x21a001 <debug.dumpSegfaultInfoPosix+0x671>
  21a0b4: 80 78 02 6d                  	cmpb	$109, 2(%rax)
  21a0b8: 0f 85 43 ff ff ff            	jne	0x21a001 <debug.dumpSegfaultInfoPosix+0x671>
  21a0be: 80 78 03 62                  	cmpb	$98, 3(%rax)
  21a0c2: 0f 85 39 ff ff ff            	jne	0x21a001 <debug.dumpSegfaultInfoPosix+0x671>
  21a0c8: 45 31 c0                     	xorl	%r8d, %r8d
  21a0cb: 44 88 44 24 07               	movb	%r8b, 7(%rsp)
  21a0d0: 48 8d 7c 24 58               	leaq	88(%rsp), %rdi
  21a0d5: 48 8d 54 24 28               	leaq	40(%rsp), %rdx
  21a0da: 4c 8d 44 24 07               	leaq	7(%rsp), %r8
  21a0df: be 08 21 22 00               	movl	$2236680, %esi          # imm = 0x222108
  21a0e4: 48 89 d9                     	movq	%rbx, %rcx
  21a0e7: e8 d4 92 ff ff               	callq	0x2133c0 <debug.printSourceAtAddress__anon_4447>
  21a0ec: 66 85 c0                     	testw	%ax, %ax
  21a0ef: 74 12                        	je	0x21a103 <debug.dumpSegfaultInfoPosix+0x773>
  21a0f1: 48 81 c4 98 02 00 00         	addq	$664, %rsp              # imm = 0x298
  21a0f8: 5b                           	popq	%rbx
  21a0f9: 41 5c                        	popq	%r12
  21a0fb: 41 5d                        	popq	%r13
  21a0fd: 41 5e                        	popq	%r14
  21a0ff: 41 5f                        	popq	%r15
  21a101: 5d                           	popq	%rbp
  21a102: c3                           	retq
  21a103: c5 f8 57 c0                  	vxorps	%xmm0, %xmm0, %xmm0
  21a107: 48 8d 5c 24 70               	leaq	112(%rsp), %rbx
  21a10c: 4c 8d 64 24 28               	leaq	40(%rsp), %r12
  21a111: 4c 8d 6c 24 07               	leaq	7(%rsp), %r13
  21a116: 48 8d ac 24 80 00 00 00      	leaq	128(%rsp), %rbp
  21a11e: c5 f8 29 44 24 30            	vmovaps	%xmm0, 48(%rsp)
  21a124: 4c 89 74 24 40               	movq	%r14, 64(%rsp)
  21a129: 4c 8d 74 24 30               	leaq	48(%rsp), %r14
  21a12e: eb 31                        	jmp	0x21a161 <debug.dumpSegfaultInfoPosix+0x7d1>
  21a130: c5 f8 57 c0                  	vxorps	%xmm0, %xmm0, %xmm0
  21a134: c5 f8 29 44 24 30            	vmovaps	%xmm0, 48(%rsp)
  21a13a: 48 83 e9 01                  	subq	$1, %rcx
  21a13e: b8 00 00 00 00               	movl	$0, %eax
  21a143: be 08 21 22 00               	movl	$2236680, %esi          # imm = 0x222108
  21a148: 48 8d 7c 24 58               	leaq	88(%rsp), %rdi
  21a14d: 4c 89 e2                     	movq	%r12, %rdx
  21a150: 4d 89 e8                     	movq	%r13, %r8
  21a153: 48 0f 42 c8                  	cmovbq	%rax, %rcx
  21a157: e8 64 92 ff ff               	callq	0x2133c0 <debug.printSourceAtAddress__anon_4447>
  21a15c: 66 85 c0                     	testw	%ax, %ax
  21a15f: 75 90                        	jne	0x21a0f1 <debug.dumpSegfaultInfoPosix+0x761>
  21a161: 48 89 df                     	movq	%rbx, %rdi
  21a164: 4c 89 f6                     	movq	%r14, %rsi
  21a167: e8 f4 f6 ff ff               	callq	0x219860 <debug.StackIterator.next_internal>
  21a16c: 80 7c 24 78 00               	cmpb	$0, 120(%rsp)
  21a171: 0f 84 7a ff ff ff            	je	0x21a0f1 <debug.dumpSegfaultInfoPosix+0x761>
  21a177: 80 7c 24 38 00               	cmpb	$0, 56(%rsp)
  21a17c: 48 8b 4c 24 70               	movq	112(%rsp), %rcx
  21a181: 74 b7                        	je	0x21a13a <debug.dumpSegfaultInfoPosix+0x7aa>
  21a183: 4c 8b 7c 24 30               	movq	48(%rsp), %r15
  21a188: 4c 39 f9                     	cmpq	%r15, %rcx
  21a18b: 74 a3                        	je	0x21a130 <debug.dumpSegfaultInfoPosix+0x7a0>
  21a18d: 0f 1f 00                     	nopl	(%rax)
  21a190: 48 89 ef                     	movq	%rbp, %rdi
  21a193: 4c 89 f6                     	movq	%r14, %rsi
  21a196: e8 c5 f6 ff ff               	callq	0x219860 <debug.StackIterator.next_internal>
  21a19b: 80 bc 24 88 00 00 00 00      	cmpb	$0, 136(%rsp)
  21a1a3: 0f 84 48 ff ff ff            	je	0x21a0f1 <debug.dumpSegfaultInfoPosix+0x761>
  21a1a9: 4c 39 bc 24 80 00 00 00      	cmpq	%r15, 128(%rsp)
  21a1b1: 75 dd                        	jne	0x21a190 <debug.dumpSegfaultInfoPosix+0x800>
  21a1b3: 4c 89 f9                     	movq	%r15, %rcx
  21a1b6: e9 75 ff ff ff               	jmp	0x21a130 <debug.dumpSegfaultInfoPosix+0x7a0>
  21a1bb: 48 8d 5c 24 10               	leaq	16(%rsp), %rbx
  21a1c0: eb 15                        	jmp	0x21a1d7 <debug.dumpSegfaultInfoPosix+0x847>
  21a1c2: 48 8d 5c 24 10               	leaq	16(%rsp), %rbx
  21a1c7: 48 89 df                     	movq	%rbx, %rdi
  21a1ca: e8 81 1b 00 00               	callq	0x21bd50 <builtin.returnError>
  21a1cf: 48 89 df                     	movq	%rbx, %rdi
  21a1d2: e8 79 1b 00 00               	callq	0x21bd50 <builtin.returnError>
  21a1d7: 48 89 df                     	movq	%rbx, %rdi
  21a1da: e8 71 1b 00 00               	callq	0x21bd50 <builtin.returnError>
  21a1df: 48 89 df                     	movq	%rbx, %rdi
  21a1e2: e8 69 1b 00 00               	callq	0x21bd50 <builtin.returnError>
  21a1e7: 48 8d 5c 24 10               	leaq	16(%rsp), %rbx
  21a1ec: 48 89 df                     	movq	%rbx, %rdi
  21a1ef: e8 5c 1b 00 00               	callq	0x21bd50 <builtin.returnError>
  21a1f4: 48 89 df                     	movq	%rbx, %rdi
  21a1f7: e8 54 1b 00 00               	callq	0x21bd50 <builtin.returnError>
  21a1fc: e8 df 19 00 00               	callq	0x21bbe0 <os.abort>
  21a201: bf 34 1d 20 00               	movl	$2104628, %edi          # imm = 0x201D34
  21a206: be 24 00 00 00               	movl	$36, %esi
  21a20b: 31 c9                        	xorl	%ecx, %ecx
  21a20d: e8 fe 10 00 00               	callq	0x21b310 <builtin.default_panic>
  21a212: bf 59 1d 20 00               	movl	$2104665, %edi          # imm = 0x201D59
  21a217: be 10 00 00 00               	movl	$16, %esi
  21a21c: 31 c9                        	xorl	%ecx, %ecx
  21a21e: e8 ed 10 00 00               	callq	0x21b310 <builtin.default_panic>
  21a223: bf c7 1d 20 00               	movl	$2104775, %edi          # imm = 0x201DC7
  21a228: be 13 00 00 00               	movl	$19, %esi
  21a22d: 31 c9                        	xorl	%ecx, %ecx
  21a22f: e8 dc 10 00 00               	callq	0x21b310 <builtin.default_panic>
  21a234: bf 2a 20 20 00               	movl	$2105386, %edi          # imm = 0x20202A
  21a239: be 1e 00 00 00               	movl	$30, %esi
  21a23e: 31 c9                        	xorl	%ecx, %ecx
  21a240: e8 cb 10 00 00               	callq	0x21b310 <builtin.default_panic>
  21a245: bf 32 22 20 00               	movl	$2105906, %edi          # imm = 0x202232
  21a24a: be 18 00 00 00               	movl	$24, %esi
  21a24f: 31 c9                        	xorl	%ecx, %ecx
  21a251: e8 ba 10 00 00               	callq	0x21b310 <builtin.default_panic>
  21a256: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)

000000000021a260 <os.linux.x86_64.restore_rt>:
  21a260: b8 0f 00 00 00               	movl	$15, %eax
  21a265: 0f 05                        	syscall
  21a267: c3                           	retq
  21a268: bf 32 22 20 00               	movl	$2105906, %edi          # imm = 0x202232
  21a26d: be 18 00 00 00               	movl	$24, %esi
  21a272: 31 c9                        	xorl	%ecx, %ecx
  21a274: e8 97 10 00 00               	callq	0x21b310 <builtin.default_panic>
  21a279: 0f 1f 80 00 00 00 00         	nopl	(%rax)

000000000021a280 <heap.PageAllocator.alloc>:
  21a280: 41 56                        	pushq	%r14
  21a282: 53                           	pushq	%rbx
  21a283: 48 81 ec 38 01 00 00         	subq	$312, %rsp              # imm = 0x138
  21a28a: 48 8d 44 24 38               	leaq	56(%rsp), %rax
  21a28f: 48 89 44 24 10               	movq	%rax, 16(%rsp)
  21a294: 48 c7 44 24 18 20 00 00 00   	movq	$32, 24(%rsp)
  21a29d: 48 c7 44 24 08 00 00 00 00   	movq	$0, 8(%rsp)
  21a2a6: 48 85 f6                     	testq	%rsi, %rsi
  21a2a9: 0f 84 87 00 00 00            	je	0x21a336 <heap.PageAllocator.alloc+0xb6>
  21a2af: 48 89 f3                     	movq	%rsi, %rbx
  21a2b2: 48 81 fe 01 f0 ff ff         	cmpq	$-4095, %rsi            # imm = 0xF001
  21a2b9: 73 45                        	jae	0x21a300 <heap.PageAllocator.alloc+0x80>
  21a2bb: 4c 8b 35 a6 7e 00 00         	movq	32422(%rip), %r14       # 0x222168 <heap.next_mmap_addr_hint>
  21a2c2: 48 81 c3 ff 0f 00 00         	addq	$4095, %rbx             # imm = 0xFFF
  21a2c9: 48 8d 7c 24 20               	leaq	32(%rsp), %rdi
  21a2ce: 48 8d 74 24 08               	leaq	8(%rsp), %rsi
  21a2d3: 41 b8 03 00 00 00            	movl	$3, %r8d
  21a2d9: 41 b9 22 00 00 00            	movl	$34, %r9d
  21a2df: c7 04 24 ff ff ff ff         	movl	$4294967295, (%rsp)     # imm = 0xFFFFFFFF
  21a2e6: 48 81 e3 00 f0 ff ff         	andq	$-4096, %rbx            # imm = 0xF000
  21a2ed: 48 89 d9                     	movq	%rbx, %rcx
  21a2f0: 4c 89 f2                     	movq	%r14, %rdx
  21a2f3: e8 b8 9c fe ff               	callq	0x203fb0 <os.mmap>
  21a2f8: 66 83 7c 24 30 00            	cmpw	$0, 48(%rsp)
  21a2fe: 74 10                        	je	0x21a310 <heap.PageAllocator.alloc+0x90>
  21a300: 31 c9                        	xorl	%ecx, %ecx
  21a302: 48 89 c8                     	movq	%rcx, %rax
  21a305: 48 81 c4 38 01 00 00         	addq	$312, %rsp              # imm = 0x138
  21a30c: 5b                           	popq	%rbx
  21a30d: 41 5e                        	popq	%r14
  21a30f: c3                           	retq
  21a310: 48 8b 4c 24 20               	movq	32(%rsp), %rcx
  21a315: f7 c1 ff 0f 00 00            	testl	$4095, %ecx             # imm = 0xFFF
  21a31b: 75 19                        	jne	0x21a336 <heap.PageAllocator.alloc+0xb6>
  21a31d: 48 01 cb                     	addq	%rcx, %rbx
  21a320: f7 c3 ff 0f 00 00            	testl	$4095, %ebx             # imm = 0xFFF
  21a326: 75 1f                        	jne	0x21a347 <heap.PageAllocator.alloc+0xc7>
  21a328: 4c 89 f0                     	movq	%r14, %rax
  21a32b: f0                           	lock
  21a32c: 48 0f b1 1d 34 7e 00 00      	cmpxchgq	%rbx, 32308(%rip)       # 0x222168 <heap.next_mmap_addr_hint>
  21a334: eb cc                        	jmp	0x21a302 <heap.PageAllocator.alloc+0x82>
  21a336: bf 32 22 20 00               	movl	$2105906, %edi          # imm = 0x202232
  21a33b: be 18 00 00 00               	movl	$24, %esi
  21a340: 31 c9                        	xorl	%ecx, %ecx
  21a342: e8 c9 0f 00 00               	callq	0x21b310 <builtin.default_panic>
  21a347: bf c7 1d 20 00               	movl	$2104775, %edi          # imm = 0x201DC7
  21a34c: be 13 00 00 00               	movl	$19, %esi
  21a351: 31 c9                        	xorl	%ecx, %ecx
  21a353: e8 b8 0f 00 00               	callq	0x21b310 <builtin.default_panic>
  21a358: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)

000000000021a360 <heap.PageAllocator.resize>:
  21a360: 50                           	pushq	%rax
  21a361: 49 81 c0 ff 0f 00 00         	addq	$4095, %r8              # imm = 0xFFF
  21a368: 72 5f                        	jb	0x21a3c9 <heap.PageAllocator.resize+0x69>
  21a36a: 48 81 c2 ff 0f 00 00         	addq	$4095, %rdx             # imm = 0xFFF
  21a371: 72 56                        	jb	0x21a3c9 <heap.PageAllocator.resize+0x69>
  21a373: 49 81 e0 00 f0 ff ff         	andq	$-4096, %r8             # imm = 0xF000
  21a37a: 48 81 e2 00 f0 ff ff         	andq	$-4096, %rdx            # imm = 0xF000
  21a381: 41 b1 01                     	movb	$1, %r9b
  21a384: 49 39 d0                     	cmpq	%rdx, %r8
  21a387: 74 33                        	je	0x21a3bc <heap.PageAllocator.resize+0x5c>
  21a389: 73 36                        	jae	0x21a3c1 <heap.PageAllocator.resize+0x61>
  21a38b: 4c 01 c6                     	addq	%r8, %rsi
  21a38e: f7 c6 ff 0f 00 00            	testl	$4095, %esi             # imm = 0xFFF
  21a394: 75 60                        	jne	0x21a3f6 <heap.PageAllocator.resize+0x96>
  21a396: 4c 29 c2                     	subq	%r8, %rdx
  21a399: 72 2e                        	jb	0x21a3c9 <heap.PageAllocator.resize+0x69>
  21a39b: 48 89 f7                     	movq	%rsi, %rdi
  21a39e: b8 0b 00 00 00               	movl	$11, %eax
  21a3a3: 48 89 d6                     	movq	%rdx, %rsi
  21a3a6: 0f 05                        	syscall
  21a3a8: 89 c2                        	movl	%eax, %edx
  21a3aa: 31 c9                        	xorl	%ecx, %ecx
  21a3ac: f7 da                        	negl	%edx
  21a3ae: 48 3d 01 f0 ff ff            	cmpq	$-4095, %rax            # imm = 0xF001
  21a3b4: 0f 43 ca                     	cmovael	%edx, %ecx
  21a3b7: 66 85 c9                     	testw	%cx, %cx
  21a3ba: 75 1e                        	jne	0x21a3da <heap.PageAllocator.resize+0x7a>
  21a3bc: 44 89 c8                     	movl	%r9d, %eax
  21a3bf: 59                           	popq	%rcx
  21a3c0: c3                           	retq
  21a3c1: 45 31 c9                     	xorl	%r9d, %r9d
  21a3c4: 44 89 c8                     	movl	%r9d, %eax
  21a3c7: 59                           	popq	%rcx
  21a3c8: c3                           	retq
  21a3c9: bf 59 1d 20 00               	movl	$2104665, %edi          # imm = 0x201D59
  21a3ce: be 10 00 00 00               	movl	$16, %esi
  21a3d3: 31 c9                        	xorl	%ecx, %ecx
  21a3d5: e8 36 0f 00 00               	callq	0x21b310 <builtin.default_panic>
  21a3da: 0f b7 c1                     	movzwl	%cx, %eax
  21a3dd: 83 f8 0c                     	cmpl	$12, %eax
  21a3e0: 74 03                        	je	0x21a3e5 <heap.PageAllocator.resize+0x85>
  21a3e2: 83 f8 16                     	cmpl	$22, %eax
  21a3e5: bf 32 22 20 00               	movl	$2105906, %edi          # imm = 0x202232
  21a3ea: be 18 00 00 00               	movl	$24, %esi
  21a3ef: 31 c9                        	xorl	%ecx, %ecx
  21a3f1: e8 1a 0f 00 00               	callq	0x21b310 <builtin.default_panic>
  21a3f6: bf c7 1d 20 00               	movl	$2104775, %edi          # imm = 0x201DC7
  21a3fb: be 13 00 00 00               	movl	$19, %esi
  21a400: 31 c9                        	xorl	%ecx, %ecx
  21a402: e8 09 0f 00 00               	callq	0x21b310 <builtin.default_panic>
  21a407: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)

000000000021a410 <heap.PageAllocator.free>:
  21a410: 50                           	pushq	%rax
  21a411: 48 81 c2 ff 0f 00 00         	addq	$4095, %rdx             # imm = 0xFFF
  21a418: 72 4f                        	jb	0x21a469 <heap.PageAllocator.free+0x59>
  21a41a: 48 89 f0                     	movq	%rsi, %rax
  21a41d: 48 c1 e0 34                  	shlq	$52, %rax
  21a421: 75 57                        	jne	0x21a47a <heap.PageAllocator.free+0x6a>
  21a423: 48 81 e2 00 f0 ff ff         	andq	$-4096, %rdx            # imm = 0xF000
  21a42a: 48 89 f7                     	movq	%rsi, %rdi
  21a42d: b8 0b 00 00 00               	movl	$11, %eax
  21a432: 48 89 d6                     	movq	%rdx, %rsi
  21a435: 0f 05                        	syscall
  21a437: 89 c2                        	movl	%eax, %edx
  21a439: 31 c9                        	xorl	%ecx, %ecx
  21a43b: f7 da                        	negl	%edx
  21a43d: 48 3d 01 f0 ff ff            	cmpq	$-4095, %rax            # imm = 0xF001
  21a443: 0f 43 ca                     	cmovael	%edx, %ecx
  21a446: 66 85 c9                     	testw	%cx, %cx
  21a449: 75 02                        	jne	0x21a44d <heap.PageAllocator.free+0x3d>
  21a44b: 58                           	popq	%rax
  21a44c: c3                           	retq
  21a44d: 0f b7 c1                     	movzwl	%cx, %eax
  21a450: 83 f8 0c                     	cmpl	$12, %eax
  21a453: 74 03                        	je	0x21a458 <heap.PageAllocator.free+0x48>
  21a455: 83 f8 16                     	cmpl	$22, %eax
  21a458: bf 32 22 20 00               	movl	$2105906, %edi          # imm = 0x202232
  21a45d: be 18 00 00 00               	movl	$24, %esi
  21a462: 31 c9                        	xorl	%ecx, %ecx
  21a464: e8 a7 0e 00 00               	callq	0x21b310 <builtin.default_panic>
  21a469: bf 59 1d 20 00               	movl	$2104665, %edi          # imm = 0x201D59
  21a46e: be 10 00 00 00               	movl	$16, %esi
  21a473: 31 c9                        	xorl	%ecx, %ecx
  21a475: e8 96 0e 00 00               	callq	0x21b310 <builtin.default_panic>
  21a47a: bf c7 1d 20 00               	movl	$2104775, %edi          # imm = 0x201DC7
  21a47f: be 13 00 00 00               	movl	$19, %esi
  21a484: 31 c9                        	xorl	%ecx, %ecx
  21a486: e8 85 0e 00 00               	callq	0x21b310 <builtin.default_panic>
  21a48b: 0f 1f 44 00 00               	nopl	(%rax,%rax)

000000000021a490 <os.getenv>:
  21a490: 50                           	pushq	%rax
  21a491: 48 8b 0d 90 4b 00 00         	movq	19344(%rip), %rcx       # 0x21f028 <os.environ.1>
  21a498: 48 85 c9                     	testq	%rcx, %rcx
  21a49b: 0f 84 0c 01 00 00            	je	0x21a5ad <os.getenv+0x11d>
  21a4a1: 48 8b 15 78 4b 00 00         	movq	19320(%rip), %rdx       # 0x21f020 <os.environ.0>
  21a4a8: 48 85 f6                     	testq	%rsi, %rsi
  21a4ab: 0f 84 ac 00 00 00            	je	0x21a55d <os.getenv+0xcd>
  21a4b1: 31 c0                        	xorl	%eax, %eax
  21a4b3: 45 31 c0                     	xorl	%r8d, %r8d
  21a4b6: eb 14                        	jmp	0x21a4cc <os.getenv+0x3c>
  21a4b8: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
  21a4c0: 49 ff c0                     	incq	%r8
  21a4c3: 49 39 c8                     	cmpq	%rcx, %r8
  21a4c6: 0f 84 e3 00 00 00            	je	0x21a5af <os.getenv+0x11f>
  21a4cc: 4e 8b 0c c2                  	movq	(%rdx,%r8,8), %r9
  21a4d0: 45 31 d2                     	xorl	%r10d, %r10d
  21a4d3: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
  21a4e0: 47 0f b6 1c 11               	movzbl	(%r9,%r10), %r11d
  21a4e5: 41 83 fb 3d                  	cmpl	$61, %r11d
  21a4e9: 74 15                        	je	0x21a500 <os.getenv+0x70>
  21a4eb: 45 85 db                     	testl	%r11d, %r11d
  21a4ee: 74 10                        	je	0x21a500 <os.getenv+0x70>
  21a4f0: 49 ff c2                     	incq	%r10
  21a4f3: 75 eb                        	jne	0x21a4e0 <os.getenv+0x50>
  21a4f5: e9 b9 00 00 00               	jmp	0x21a5b3 <os.getenv+0x123>
  21a4fa: 66 0f 1f 44 00 00            	nopw	(%rax,%rax)
  21a500: 4c 39 d6                     	cmpq	%r10, %rsi
  21a503: 75 bb                        	jne	0x21a4c0 <os.getenv+0x30>
  21a505: 49 39 f9                     	cmpq	%rdi, %r9
  21a508: 74 1c                        	je	0x21a526 <os.getenv+0x96>
  21a50a: 45 31 d2                     	xorl	%r10d, %r10d
  21a50d: 0f 1f 00                     	nopl	(%rax)
  21a510: 46 0f b6 1c 17               	movzbl	(%rdi,%r10), %r11d
  21a515: 47 3a 1c 11                  	cmpb	(%r9,%r10), %r11b
  21a519: 75 a5                        	jne	0x21a4c0 <os.getenv+0x30>
  21a51b: 49 ff c2                     	incq	%r10
  21a51e: 4c 39 d6                     	cmpq	%r10, %rsi
  21a521: 75 ed                        	jne	0x21a510 <os.getenv+0x80>
  21a523: 4c 89 cf                     	movq	%r9, %rdi
  21a526: 80 3c 37 00                  	cmpb	$0, (%rdi,%rsi)
  21a52a: 48 89 f2                     	movq	%rsi, %rdx
  21a52d: 74 1c                        	je	0x21a54b <os.getenv+0xbb>
  21a52f: 48 89 f2                     	movq	%rsi, %rdx
  21a532: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)
  21a540: 48 ff c2                     	incq	%rdx
  21a543: 74 6e                        	je	0x21a5b3 <os.getenv+0x123>
  21a545: 80 3c 17 00                  	cmpb	$0, (%rdi,%rdx)
  21a549: 75 f5                        	jne	0x21a540 <os.getenv+0xb0>
  21a54b: 48 ff c6                     	incq	%rsi
  21a54e: 74 63                        	je	0x21a5b3 <os.getenv+0x123>
  21a550: 48 29 f2                     	subq	%rsi, %rdx
  21a553: 72 6f                        	jb	0x21a5c4 <os.getenv+0x134>
  21a555: 48 01 f7                     	addq	%rsi, %rdi
  21a558: 48 89 f8                     	movq	%rdi, %rax
  21a55b: 59                           	popq	%rcx
  21a55c: c3                           	retq
  21a55d: 31 f6                        	xorl	%esi, %esi
  21a55f: 31 c0                        	xorl	%eax, %eax
  21a561: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
  21a570: 48 8b 3c c2                  	movq	(%rdx,%rax,8), %rdi
  21a574: 45 31 c0                     	xorl	%r8d, %r8d
  21a577: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
  21a580: 46 0f b6 0c 07               	movzbl	(%rdi,%r8), %r9d
  21a585: 45 85 c9                     	testl	%r9d, %r9d
  21a588: 74 16                        	je	0x21a5a0 <os.getenv+0x110>
  21a58a: 41 83 f9 3d                  	cmpl	$61, %r9d
  21a58e: 74 10                        	je	0x21a5a0 <os.getenv+0x110>
  21a590: 49 ff c0                     	incq	%r8
  21a593: 75 eb                        	jne	0x21a580 <os.getenv+0xf0>
  21a595: eb 1c                        	jmp	0x21a5b3 <os.getenv+0x123>
  21a597: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
  21a5a0: 4d 85 c0                     	testq	%r8, %r8
  21a5a3: 74 81                        	je	0x21a526 <os.getenv+0x96>
  21a5a5: 48 ff c0                     	incq	%rax
  21a5a8: 48 39 c8                     	cmpq	%rcx, %rax
  21a5ab: 75 c3                        	jne	0x21a570 <os.getenv+0xe0>
  21a5ad: 31 c0                        	xorl	%eax, %eax
  21a5af: 31 d2                        	xorl	%edx, %edx
  21a5b1: 59                           	popq	%rcx
  21a5b2: c3                           	retq
  21a5b3: bf 59 1d 20 00               	movl	$2104665, %edi          # imm = 0x201D59
  21a5b8: be 10 00 00 00               	movl	$16, %esi
  21a5bd: 31 c9                        	xorl	%ecx, %ecx
  21a5bf: e8 4c 0d 00 00               	callq	0x21b310 <builtin.default_panic>
  21a5c4: bf 34 1d 20 00               	movl	$2104628, %edi          # imm = 0x201D34
  21a5c9: be 24 00 00 00               	movl	$36, %esi
  21a5ce: 31 c9                        	xorl	%ecx, %ecx
  21a5d0: e8 3b 0d 00 00               	callq	0x21b310 <builtin.default_panic>
  21a5d5: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)

000000000021a5e0 <heap.arena_allocator.ArenaAllocator.alloc>:
  21a5e0: 55                           	pushq	%rbp
  21a5e1: 41 57                        	pushq	%r15
  21a5e3: 41 56                        	pushq	%r14
  21a5e5: 41 55                        	pushq	%r13
  21a5e7: 41 54                        	pushq	%r12
  21a5e9: 53                           	pushq	%rbx
  21a5ea: 48 83 ec 28                  	subq	$40, %rsp
  21a5ee: 48 89 fb                     	movq	%rdi, %rbx
  21a5f1: 48 89 34 24                  	movq	%rsi, (%rsp)
  21a5f5: f6 c3 07                     	testb	$7, %bl
  21a5f8: 0f 85 a6 02 00 00            	jne	0x21a8a4 <heap.arena_allocator.ArenaAllocator.alloc+0x2c4>
  21a5fe: 80 fa 40                     	cmpb	$64, %dl
  21a601: 0f 83 ae 02 00 00            	jae	0x21a8b5 <heap.arena_allocator.ArenaAllocator.alloc+0x2d5>
  21a607: 4c 8b 7b 10                  	movq	16(%rbx), %r15
  21a60b: b8 01 00 00 00               	movl	$1, %eax
  21a610: c4 62 e9 f7 e8               	shlxq	%rdx, %rax, %r13
  21a615: 4d 85 ff                     	testq	%r15, %r15
  21a618: 75 26                        	jne	0x21a640 <heap.arena_allocator.ArenaAllocator.alloc+0x60>
  21a61a: 48 8b 14 24                  	movq	(%rsp), %rdx
  21a61e: 4c 01 ea                     	addq	%r13, %rdx
  21a621: 0f 82 6c 02 00 00            	jb	0x21a893 <heap.arena_allocator.ArenaAllocator.alloc+0x2b3>
  21a627: 48 89 df                     	movq	%rbx, %rdi
  21a62a: 31 f6                        	xorl	%esi, %esi
  21a62c: 45 31 f6                     	xorl	%r14d, %r14d
  21a62f: e8 9c 02 00 00               	callq	0x21a8d0 <heap.arena_allocator.ArenaAllocator.createNode>
  21a634: 49 89 c7                     	movq	%rax, %r15
  21a637: 48 85 c0                     	testq	%rax, %rax
  21a63a: 0f 84 41 02 00 00            	je	0x21a881 <heap.arena_allocator.ArenaAllocator.alloc+0x2a1>
  21a640: 49 8b 57 08                  	movq	8(%r15), %rdx
  21a644: 48 83 fa 10                  	cmpq	$16, %rdx
  21a648: 0f 82 65 01 00 00            	jb	0x21a7b3 <heap.arena_allocator.ArenaAllocator.alloc+0x1d3>
  21a64e: 4c 89 ee                     	movq	%r13, %rsi
  21a651: 4c 89 e9                     	movq	%r13, %rcx
  21a654: 49 8d 47 08                  	leaq	8(%r15), %rax
  21a658: 49 8d 7d ff                  	leaq	-1(%r13), %rdi
  21a65c: 4d 8d 67 10                  	leaq	16(%r15), %r12
  21a660: 48 f7 de                     	negq	%rsi
  21a663: 48 03 0c 24                  	addq	(%rsp), %rcx
  21a667: 48 89 44 24 08               	movq	%rax, 8(%rsp)
  21a66c: 48 89 7c 24 20               	movq	%rdi, 32(%rsp)
  21a671: 48 89 74 24 18               	movq	%rsi, 24(%rsp)
  21a676: 48 89 4c 24 10               	movq	%rcx, 16(%rsp)
  21a67b: 0f 83 6e 01 00 00            	jae	0x21a7ef <heap.arena_allocator.ArenaAllocator.alloc+0x20f>
  21a681: 4c 8b 73 18                  	movq	24(%rbx), %r14
  21a685: 4c 89 e0                     	movq	%r12, %rax
  21a688: 4c 01 f0                     	addq	%r14, %rax
  21a68b: 0f 82 02 02 00 00            	jb	0x21a893 <heap.arena_allocator.ArenaAllocator.alloc+0x2b3>
  21a691: 48 89 c1                     	movq	%rax, %rcx
  21a694: 48 03 4c 24 20               	addq	32(%rsp), %rcx
  21a699: 0f 82 f4 01 00 00            	jb	0x21a893 <heap.arena_allocator.ArenaAllocator.alloc+0x2b3>
  21a69f: 48 23 4c 24 18               	andq	24(%rsp), %rcx
  21a6a4: 48 29 c1                     	subq	%rax, %rcx
  21a6a7: 0f 82 e6 01 00 00            	jb	0x21a893 <heap.arena_allocator.ArenaAllocator.alloc+0x2b3>
  21a6ad: 49 01 ce                     	addq	%rcx, %r14
  21a6b0: 0f 82 dd 01 00 00            	jb	0x21a893 <heap.arena_allocator.ArenaAllocator.alloc+0x2b3>
  21a6b6: 4d 89 f5                     	movq	%r14, %r13
  21a6b9: 4c 03 2c 24                  	addq	(%rsp), %r13
  21a6bd: 0f 82 d0 01 00 00            	jb	0x21a893 <heap.arena_allocator.ArenaAllocator.alloc+0x2b3>
  21a6c3: 48 8d 42 f0                  	leaq	-16(%rdx), %rax
  21a6c7: 49 39 c5                     	cmpq	%rax, %r13
  21a6ca: 0f 86 aa 01 00 00            	jbe	0x21a87a <heap.arena_allocator.ArenaAllocator.alloc+0x29a>
  21a6d0: 49 83 c5 10                  	addq	$16, %r13
  21a6d4: 0f 82 b9 01 00 00            	jb	0x21a893 <heap.arena_allocator.ArenaAllocator.alloc+0x2b3>
  21a6da: 4c 8b 4c 24 58               	movq	88(%rsp), %r9
  21a6df: 48 8b 3b                     	movq	(%rbx), %rdi
  21a6e2: 48 8b 43 08                  	movq	8(%rbx), %rax
  21a6e6: 4c 89 fe                     	movq	%r15, %rsi
  21a6e9: b9 03 00 00 00               	movl	$3, %ecx
  21a6ee: 4d 89 e8                     	movq	%r13, %r8
  21a6f1: 4c 89 4c 24 10               	movq	%r9, 16(%rsp)
  21a6f6: ff 50 08                     	callq	*8(%rax)
  21a6f9: a8 01                        	testb	$1, %al
  21a6fb: 0f 84 92 01 00 00            	je	0x21a893 <heap.arena_allocator.ArenaAllocator.alloc+0x2b3>
  21a701: 48 8b 44 24 08               	movq	8(%rsp), %rax
  21a706: 4c 89 28                     	movq	%r13, (%rax)
  21a709: 49 83 fd 10                  	cmpq	$16, %r13
  21a70d: 0f 82 a0 00 00 00            	jb	0x21a7b3 <heap.arena_allocator.ArenaAllocator.alloc+0x1d3>
  21a713: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
  21a720: 4c 8b 73 18                  	movq	24(%rbx), %r14
  21a724: 4c 89 e0                     	movq	%r12, %rax
  21a727: 4c 01 f0                     	addq	%r14, %rax
  21a72a: 0f 82 63 01 00 00            	jb	0x21a893 <heap.arena_allocator.ArenaAllocator.alloc+0x2b3>
  21a730: 48 89 c1                     	movq	%rax, %rcx
  21a733: 48 03 4c 24 20               	addq	32(%rsp), %rcx
  21a738: 0f 82 55 01 00 00            	jb	0x21a893 <heap.arena_allocator.ArenaAllocator.alloc+0x2b3>
  21a73e: 48 23 4c 24 18               	andq	24(%rsp), %rcx
  21a743: 48 29 c1                     	subq	%rax, %rcx
  21a746: 0f 82 47 01 00 00            	jb	0x21a893 <heap.arena_allocator.ArenaAllocator.alloc+0x2b3>
  21a74c: 49 01 ce                     	addq	%rcx, %r14
  21a74f: 0f 82 3e 01 00 00            	jb	0x21a893 <heap.arena_allocator.ArenaAllocator.alloc+0x2b3>
  21a755: 4c 89 f5                     	movq	%r14, %rbp
  21a758: 48 03 2c 24                  	addq	(%rsp), %rbp
  21a75c: 0f 82 31 01 00 00            	jb	0x21a893 <heap.arena_allocator.ArenaAllocator.alloc+0x2b3>
  21a762: 49 8d 45 f0                  	leaq	-16(%r13), %rax
  21a766: 48 39 c5                     	cmpq	%rax, %rbp
  21a769: 0f 86 08 01 00 00            	jbe	0x21a877 <heap.arena_allocator.ArenaAllocator.alloc+0x297>
  21a76f: 48 83 c5 10                  	addq	$16, %rbp
  21a773: 0f 82 1a 01 00 00            	jb	0x21a893 <heap.arena_allocator.ArenaAllocator.alloc+0x2b3>
  21a779: 48 8b 3b                     	movq	(%rbx), %rdi
  21a77c: 48 8b 43 08                  	movq	8(%rbx), %rax
  21a780: 4c 8b 4c 24 10               	movq	16(%rsp), %r9
  21a785: 4c 89 fe                     	movq	%r15, %rsi
  21a788: 4c 89 ea                     	movq	%r13, %rdx
  21a78b: b9 03 00 00 00               	movl	$3, %ecx
  21a790: 49 89 e8                     	movq	%rbp, %r8
  21a793: ff 50 08                     	callq	*8(%rax)
  21a796: a8 01                        	testb	$1, %al
  21a798: 0f 84 f5 00 00 00            	je	0x21a893 <heap.arena_allocator.ArenaAllocator.alloc+0x2b3>
  21a79e: 48 8b 44 24 08               	movq	8(%rsp), %rax
  21a7a3: 49 89 ed                     	movq	%rbp, %r13
  21a7a6: 48 89 28                     	movq	%rbp, (%rax)
  21a7a9: 48 83 fd 0f                  	cmpq	$15, %rbp
  21a7ad: 0f 87 6d ff ff ff            	ja	0x21a720 <heap.arena_allocator.ArenaAllocator.alloc+0x140>
  21a7b3: bf 34 1d 20 00               	movl	$2104628, %edi          # imm = 0x201D34
  21a7b8: be 24 00 00 00               	movl	$36, %esi
  21a7bd: 31 c9                        	xorl	%ecx, %ecx
  21a7bf: e8 4c 0b 00 00               	callq	0x21b310 <builtin.default_panic>
  21a7c4: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
  21a7d0: 48 8b 44 24 08               	movq	8(%rsp), %rax
  21a7d5: 4c 89 28                     	movq	%r13, (%rax)
  21a7d8: 49 8b 57 08                  	movq	8(%r15), %rdx
  21a7dc: 49 8d 47 08                  	leaq	8(%r15), %rax
  21a7e0: 4d 8d 67 10                  	leaq	16(%r15), %r12
  21a7e4: 48 89 44 24 08               	movq	%rax, 8(%rsp)
  21a7e9: 48 83 fa 0f                  	cmpq	$15, %rdx
  21a7ed: 76 c4                        	jbe	0x21a7b3 <heap.arena_allocator.ArenaAllocator.alloc+0x1d3>
  21a7ef: 4c 8b 73 18                  	movq	24(%rbx), %r14
  21a7f3: 4c 89 e0                     	movq	%r12, %rax
  21a7f6: 4c 01 f0                     	addq	%r14, %rax
  21a7f9: 0f 82 94 00 00 00            	jb	0x21a893 <heap.arena_allocator.ArenaAllocator.alloc+0x2b3>
  21a7ff: 48 89 c1                     	movq	%rax, %rcx
  21a802: 48 03 4c 24 20               	addq	32(%rsp), %rcx
  21a807: 0f 82 86 00 00 00            	jb	0x21a893 <heap.arena_allocator.ArenaAllocator.alloc+0x2b3>
  21a80d: 48 23 4c 24 18               	andq	24(%rsp), %rcx
  21a812: 48 29 c1                     	subq	%rax, %rcx
  21a815: 72 7c                        	jb	0x21a893 <heap.arena_allocator.ArenaAllocator.alloc+0x2b3>
  21a817: 49 01 ce                     	addq	%rcx, %r14
  21a81a: 72 77                        	jb	0x21a893 <heap.arena_allocator.ArenaAllocator.alloc+0x2b3>
  21a81c: 4d 89 f5                     	movq	%r14, %r13
  21a81f: 4c 03 2c 24                  	addq	(%rsp), %r13
  21a823: 72 6e                        	jb	0x21a893 <heap.arena_allocator.ArenaAllocator.alloc+0x2b3>
  21a825: 48 8d 6a f0                  	leaq	-16(%rdx), %rbp
  21a829: 49 39 ed                     	cmpq	%rbp, %r13
  21a82c: 76 4c                        	jbe	0x21a87a <heap.arena_allocator.ArenaAllocator.alloc+0x29a>
  21a82e: 49 83 c5 10                  	addq	$16, %r13
  21a832: 72 5f                        	jb	0x21a893 <heap.arena_allocator.ArenaAllocator.alloc+0x2b3>
  21a834: 48 8b 3b                     	movq	(%rbx), %rdi
  21a837: 48 8b 43 08                  	movq	8(%rbx), %rax
  21a83b: 4c 8b 4c 24 58               	movq	88(%rsp), %r9
  21a840: 4c 89 fe                     	movq	%r15, %rsi
  21a843: b9 03 00 00 00               	movl	$3, %ecx
  21a848: 4d 89 e8                     	movq	%r13, %r8
  21a84b: ff 50 08                     	callq	*8(%rax)
  21a84e: a8 01                        	testb	$1, %al
  21a850: 0f 85 7a ff ff ff            	jne	0x21a7d0 <heap.arena_allocator.ArenaAllocator.alloc+0x1f0>
  21a856: 48 8b 54 24 10               	movq	16(%rsp), %rdx
  21a85b: 48 89 df                     	movq	%rbx, %rdi
  21a85e: 48 89 ee                     	movq	%rbp, %rsi
  21a861: e8 6a 00 00 00               	callq	0x21a8d0 <heap.arena_allocator.ArenaAllocator.createNode>
  21a866: 49 89 c7                     	movq	%rax, %r15
  21a869: 48 85 c0                     	testq	%rax, %rax
  21a86c: 0f 85 66 ff ff ff            	jne	0x21a7d8 <heap.arena_allocator.ArenaAllocator.alloc+0x1f8>
  21a872: 45 31 f6                     	xorl	%r14d, %r14d
  21a875: eb 0a                        	jmp	0x21a881 <heap.arena_allocator.ArenaAllocator.alloc+0x2a1>
  21a877: 49 89 ed                     	movq	%rbp, %r13
  21a87a: 4d 01 e6                     	addq	%r12, %r14
  21a87d: 4c 89 6b 18                  	movq	%r13, 24(%rbx)
  21a881: 4c 89 f0                     	movq	%r14, %rax
  21a884: 48 83 c4 28                  	addq	$40, %rsp
  21a888: 5b                           	popq	%rbx
  21a889: 41 5c                        	popq	%r12
  21a88b: 41 5d                        	popq	%r13
  21a88d: 41 5e                        	popq	%r14
  21a88f: 41 5f                        	popq	%r15
  21a891: 5d                           	popq	%rbp
  21a892: c3                           	retq
  21a893: bf 59 1d 20 00               	movl	$2104665, %edi          # imm = 0x201D59
  21a898: be 10 00 00 00               	movl	$16, %esi
  21a89d: 31 c9                        	xorl	%ecx, %ecx
  21a89f: e8 6c 0a 00 00               	callq	0x21b310 <builtin.default_panic>
  21a8a4: bf c7 1d 20 00               	movl	$2104775, %edi          # imm = 0x201DC7
  21a8a9: be 13 00 00 00               	movl	$19, %esi
  21a8ae: 31 c9                        	xorl	%ecx, %ecx
  21a8b0: e8 5b 0a 00 00               	callq	0x21b310 <builtin.default_panic>
  21a8b5: bf 19 1e 20 00               	movl	$2104857, %edi          # imm = 0x201E19
  21a8ba: be 1b 00 00 00               	movl	$27, %esi
  21a8bf: 31 c9                        	xorl	%ecx, %ecx
  21a8c1: e8 4a 0a 00 00               	callq	0x21b310 <builtin.default_panic>
  21a8c6: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)

000000000021a8d0 <heap.arena_allocator.ArenaAllocator.createNode>:
  21a8d0: 41 56                        	pushq	%r14
  21a8d2: 53                           	pushq	%rbx
  21a8d3: 50                           	pushq	%rax
  21a8d4: 48 83 c2 20                  	addq	$32, %rdx
  21a8d8: 72 58                        	jb	0x21a932 <heap.arena_allocator.ArenaAllocator.createNode+0x62>
  21a8da: 48 01 d6                     	addq	%rdx, %rsi
  21a8dd: 72 53                        	jb	0x21a932 <heap.arena_allocator.ArenaAllocator.createNode+0x62>
  21a8df: 49 89 f6                     	movq	%rsi, %r14
  21a8e2: 49 d1 ee                     	shrq	%r14
  21a8e5: 49 01 f6                     	addq	%rsi, %r14
  21a8e8: 72 48                        	jb	0x21a932 <heap.arena_allocator.ArenaAllocator.createNode+0x62>
  21a8ea: 48 89 fb                     	movq	%rdi, %rbx
  21a8ed: 48 8b 3f                     	movq	(%rdi), %rdi
  21a8f0: 48 8b 4c 24 18               	movq	24(%rsp), %rcx
  21a8f5: 4c 89 f6                     	movq	%r14, %rsi
  21a8f8: ba 03 00 00 00               	movl	$3, %edx
  21a8fd: 48 8b 43 08                  	movq	8(%rbx), %rax
  21a901: ff 10                        	callq	*(%rax)
  21a903: 48 85 c0                     	testq	%rax, %rax
  21a906: 74 22                        	je	0x21a92a <heap.arena_allocator.ArenaAllocator.createNode+0x5a>
  21a908: a8 07                        	testb	$7, %al
  21a90a: 75 37                        	jne	0x21a943 <heap.arena_allocator.ArenaAllocator.createNode+0x73>
  21a90c: 4c 89 70 08                  	movq	%r14, 8(%rax)
  21a910: 48 c7 00 00 00 00 00         	movq	$0, (%rax)
  21a917: 48 8b 4b 10                  	movq	16(%rbx), %rcx
  21a91b: 48 89 08                     	movq	%rcx, (%rax)
  21a91e: 48 89 43 10                  	movq	%rax, 16(%rbx)
  21a922: 48 c7 43 18 00 00 00 00      	movq	$0, 24(%rbx)
  21a92a: 48 83 c4 08                  	addq	$8, %rsp
  21a92e: 5b                           	popq	%rbx
  21a92f: 41 5e                        	popq	%r14
  21a931: c3                           	retq
  21a932: bf 59 1d 20 00               	movl	$2104665, %edi          # imm = 0x201D59
  21a937: be 10 00 00 00               	movl	$16, %esi
  21a93c: 31 c9                        	xorl	%ecx, %ecx
  21a93e: e8 cd 09 00 00               	callq	0x21b310 <builtin.default_panic>
  21a943: bf c7 1d 20 00               	movl	$2104775, %edi          # imm = 0x201DC7
  21a948: be 13 00 00 00               	movl	$19, %esi
  21a94d: 31 c9                        	xorl	%ecx, %ecx
  21a94f: e8 bc 09 00 00               	callq	0x21b310 <builtin.default_panic>
  21a954: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)

000000000021a960 <heap.arena_allocator.ArenaAllocator.resize>:
  21a960: 50                           	pushq	%rax
  21a961: 40 f6 c7 07                  	testb	$7, %dil
  21a965: 75 74                        	jne	0x21a9db <heap.arena_allocator.ArenaAllocator.resize+0x7b>
  21a967: 4c 8b 4f 10                  	movq	16(%rdi), %r9
  21a96b: 4d 85 c9                     	testq	%r9, %r9
  21a96e: 74 3c                        	je	0x21a9ac <heap.arena_allocator.ArenaAllocator.resize+0x4c>
  21a970: 49 8b 49 08                  	movq	8(%r9), %rcx
  21a974: 48 83 f9 0f                  	cmpq	$15, %rcx
  21a978: 76 72                        	jbe	0x21a9ec <heap.arena_allocator.ArenaAllocator.resize+0x8c>
  21a97a: 48 8b 47 18                  	movq	24(%rdi), %rax
  21a97e: 49 83 c1 10                  	addq	$16, %r9
  21a982: 49 01 c1                     	addq	%rax, %r9
  21a985: 72 43                        	jb	0x21a9ca <heap.arena_allocator.ArenaAllocator.resize+0x6a>
  21a987: 48 01 d6                     	addq	%rdx, %rsi
  21a98a: 72 3e                        	jb	0x21a9ca <heap.arena_allocator.ArenaAllocator.resize+0x6a>
  21a98c: 49 39 f1                     	cmpq	%rsi, %r9
  21a98f: 75 1f                        	jne	0x21a9b0 <heap.arena_allocator.ArenaAllocator.resize+0x50>
  21a991: 48 89 d6                     	movq	%rdx, %rsi
  21a994: 4c 29 c6                     	subq	%r8, %rsi
  21a997: 73 1f                        	jae	0x21a9b8 <heap.arena_allocator.ArenaAllocator.resize+0x58>
  21a999: 48 83 c1 f0                  	addq	$-16, %rcx
  21a99d: 48 29 c1                     	subq	%rax, %rcx
  21a9a0: 72 28                        	jb	0x21a9ca <heap.arena_allocator.ArenaAllocator.resize+0x6a>
  21a9a2: 49 29 d0                     	subq	%rdx, %r8
  21a9a5: 72 23                        	jb	0x21a9ca <heap.arena_allocator.ArenaAllocator.resize+0x6a>
  21a9a7: 4c 39 c1                     	cmpq	%r8, %rcx
  21a9aa: 73 19                        	jae	0x21a9c5 <heap.arena_allocator.ArenaAllocator.resize+0x65>
  21a9ac: 31 c0                        	xorl	%eax, %eax
  21a9ae: 59                           	popq	%rcx
  21a9af: c3                           	retq
  21a9b0: 4c 39 c2                     	cmpq	%r8, %rdx
  21a9b3: 0f 93 c0                     	setae	%al
  21a9b6: 59                           	popq	%rcx
  21a9b7: c3                           	retq
  21a9b8: 48 29 f0                     	subq	%rsi, %rax
  21a9bb: 72 0d                        	jb	0x21a9ca <heap.arena_allocator.ArenaAllocator.resize+0x6a>
  21a9bd: 48 89 47 18                  	movq	%rax, 24(%rdi)
  21a9c1: b0 01                        	movb	$1, %al
  21a9c3: 59                           	popq	%rcx
  21a9c4: c3                           	retq
  21a9c5: 4c 01 c0                     	addq	%r8, %rax
  21a9c8: 73 f3                        	jae	0x21a9bd <heap.arena_allocator.ArenaAllocator.resize+0x5d>
  21a9ca: bf 59 1d 20 00               	movl	$2104665, %edi          # imm = 0x201D59
  21a9cf: be 10 00 00 00               	movl	$16, %esi
  21a9d4: 31 c9                        	xorl	%ecx, %ecx
  21a9d6: e8 35 09 00 00               	callq	0x21b310 <builtin.default_panic>
  21a9db: bf c7 1d 20 00               	movl	$2104775, %edi          # imm = 0x201DC7
  21a9e0: be 13 00 00 00               	movl	$19, %esi
  21a9e5: 31 c9                        	xorl	%ecx, %ecx
  21a9e7: e8 24 09 00 00               	callq	0x21b310 <builtin.default_panic>
  21a9ec: bf 34 1d 20 00               	movl	$2104628, %edi          # imm = 0x201D34
  21a9f1: be 24 00 00 00               	movl	$36, %esi
  21a9f6: 31 c9                        	xorl	%ecx, %ecx
  21a9f8: e8 13 09 00 00               	callq	0x21b310 <builtin.default_panic>
  21a9fd: 0f 1f 00                     	nopl	(%rax)

000000000021aa00 <heap.arena_allocator.ArenaAllocator.free>:
  21aa00: 50                           	pushq	%rax
  21aa01: 40 f6 c7 07                  	testb	$7, %dil
  21aa05: 75 43                        	jne	0x21aa4a <heap.arena_allocator.ArenaAllocator.free+0x4a>
  21aa07: 48 8b 47 10                  	movq	16(%rdi), %rax
  21aa0b: 48 85 c0                     	testq	%rax, %rax
  21aa0e: 74 27                        	je	0x21aa37 <heap.arena_allocator.ArenaAllocator.free+0x37>
  21aa10: 48 83 78 08 0f               	cmpq	$15, 8(%rax)
  21aa15: 76 44                        	jbe	0x21aa5b <heap.arena_allocator.ArenaAllocator.free+0x5b>
  21aa17: 48 8b 4f 18                  	movq	24(%rdi), %rcx
  21aa1b: 48 83 c0 10                  	addq	$16, %rax
  21aa1f: 48 01 c8                     	addq	%rcx, %rax
  21aa22: 72 15                        	jb	0x21aa39 <heap.arena_allocator.ArenaAllocator.free+0x39>
  21aa24: 48 01 d6                     	addq	%rdx, %rsi
  21aa27: 72 10                        	jb	0x21aa39 <heap.arena_allocator.ArenaAllocator.free+0x39>
  21aa29: 48 39 f0                     	cmpq	%rsi, %rax
  21aa2c: 75 09                        	jne	0x21aa37 <heap.arena_allocator.ArenaAllocator.free+0x37>
  21aa2e: 48 29 d1                     	subq	%rdx, %rcx
  21aa31: 72 06                        	jb	0x21aa39 <heap.arena_allocator.ArenaAllocator.free+0x39>
  21aa33: 48 89 4f 18                  	movq	%rcx, 24(%rdi)
  21aa37: 58                           	popq	%rax
  21aa38: c3                           	retq
  21aa39: bf 59 1d 20 00               	movl	$2104665, %edi          # imm = 0x201D59
  21aa3e: be 10 00 00 00               	movl	$16, %esi
  21aa43: 31 c9                        	xorl	%ecx, %ecx
  21aa45: e8 c6 08 00 00               	callq	0x21b310 <builtin.default_panic>
  21aa4a: bf c7 1d 20 00               	movl	$2104775, %edi          # imm = 0x201DC7
  21aa4f: be 13 00 00 00               	movl	$19, %esi
  21aa54: 31 c9                        	xorl	%ecx, %ecx
  21aa56: e8 b5 08 00 00               	callq	0x21b310 <builtin.default_panic>
  21aa5b: bf 34 1d 20 00               	movl	$2104628, %edi          # imm = 0x201D34
  21aa60: be 24 00 00 00               	movl	$36, %esi
  21aa65: 31 c9                        	xorl	%ecx, %ecx
  21aa67: e8 a4 08 00 00               	callq	0x21b310 <builtin.default_panic>
  21aa6c: 0f 1f 40 00                  	nopl	(%rax)

000000000021aa70 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).putAssumeCapacityNoClobberContext>:
  21aa70: 41 57                        	pushq	%r15
  21aa72: 41 56                        	pushq	%r14
  21aa74: 53                           	pushq	%rbx
  21aa75: 49 89 d6                     	movq	%rdx, %r14
  21aa78: 49 89 f7                     	movq	%rsi, %r15
  21aa7b: 48 89 fb                     	movq	%rdi, %rbx
  21aa7e: e8 7d 06 00 00               	callq	0x21b100 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).containsAdapted__anon_6985>
  21aa83: a8 01                        	testb	$1, %al
  21aa85: 0f 85 e2 00 00 00            	jne	0x21ab6d <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).putAssumeCapacityNoClobberContext+0xfd>
  21aa8b: c4 c3 fb f0 c7 20            	rorxq	$32, %r15, %rax
  21aa91: 48 ba 2f 64 bd 78 64 1d 76 a0	movabsq	$-6884282663029611473, %rdx # imm = 0xA0761D6478BD642F
  21aa9b: 48 b9 94 3a c9 64 f6 30 8d fa	movabsq	$-392603757700367724, %rcx # imm = 0xFA8D30F664C93A94
  21aaa5: 48 31 c2                     	xorq	%rax, %rdx
  21aaa8: c4 e2 fb f6 d1               	mulxq	%rcx, %rax, %rdx
  21aaad: 48 8b 0b                     	movq	(%rbx), %rcx
  21aab0: 48 31 c2                     	xorq	%rax, %rdx
  21aab3: 48 b8 4f 12 7d c4 27 4e 8e 1d	movabsq	$2129725606500045391, %rax # imm = 0x1D8E4E27C47D124F
  21aabd: 48 83 f2 08                  	xorq	$8, %rdx
  21aac1: c4 e2 eb f6 c0               	mulxq	%rax, %rdx, %rax
  21aac6: 48 85 c9                     	testq	%rcx, %rcx
  21aac9: 0f 84 8d 00 00 00            	je	0x21ab5c <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).putAssumeCapacityNoClobberContext+0xec>
  21aacf: f6 c1 07                     	testb	$7, %cl
  21aad2: 75 77                        	jne	0x21ab4b <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).putAssumeCapacityNoClobberContext+0xdb>
  21aad4: 8b 71 f8                     	movl	-8(%rcx), %esi
  21aad7: 83 ee 01                     	subl	$1, %esi
  21aada: 0f 82 7c 00 00 00            	jb	0x21ab5c <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).putAssumeCapacityNoClobberContext+0xec>
  21aae0: 48 31 d0                     	xorq	%rdx, %rax
  21aae3: 89 f6                        	movl	%esi, %esi
  21aae5: 48 89 c7                     	movq	%rax, %rdi
  21aae8: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
  21aaf0: 89 fa                        	movl	%edi, %edx
  21aaf2: 21 f2                        	andl	%esi, %edx
  21aaf4: 80 3c 11 00                  	cmpb	$0, (%rcx,%rdx)
  21aaf8: 48 8d 7a 01                  	leaq	1(%rdx), %rdi
  21aafc: 78 f2                        	js	0x21aaf0 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).putAssumeCapacityNoClobberContext+0x80>
  21aafe: 8b 73 0c                     	movl	12(%rbx), %esi
  21ab01: 85 f6                        	testl	%esi, %esi
  21ab03: 74 68                        	je	0x21ab6d <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).putAssumeCapacityNoClobberContext+0xfd>
  21ab05: 48 c1 e8 39                  	shrq	$57, %rax
  21ab09: ff ce                        	decl	%esi
  21ab0b: 0c 80                        	orb	$-128, %al
  21ab0d: 89 73 0c                     	movl	%esi, 12(%rbx)
  21ab10: 88 04 11                     	movb	%al, (%rcx,%rdx)
  21ab13: 48 8b 03                     	movq	(%rbx), %rax
  21ab16: 48 85 c0                     	testq	%rax, %rax
  21ab19: 74 63                        	je	0x21ab7e <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).putAssumeCapacityNoClobberContext+0x10e>
  21ab1b: a8 07                        	testb	$7, %al
  21ab1d: 75 2c                        	jne	0x21ab4b <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).putAssumeCapacityNoClobberContext+0xdb>
  21ab1f: 48 8b 40 f0                  	movq	-16(%rax), %rax
  21ab23: 4c 89 3c d0                  	movq	%r15, (%rax,%rdx,8)
  21ab27: 48 8b 03                     	movq	(%rbx), %rax
  21ab2a: 48 85 c0                     	testq	%rax, %rax
  21ab2d: 74 4f                        	je	0x21ab7e <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).putAssumeCapacityNoClobberContext+0x10e>
  21ab2f: a8 07                        	testb	$7, %al
  21ab31: 75 18                        	jne	0x21ab4b <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).putAssumeCapacityNoClobberContext+0xdb>
  21ab33: 48 8b 40 e8                  	movq	-24(%rax), %rax
  21ab37: 4c 89 34 d0                  	movq	%r14, (%rax,%rdx,8)
  21ab3b: 8b 43 08                     	movl	8(%rbx), %eax
  21ab3e: ff c0                        	incl	%eax
  21ab40: 74 1a                        	je	0x21ab5c <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).putAssumeCapacityNoClobberContext+0xec>
  21ab42: 89 43 08                     	movl	%eax, 8(%rbx)
  21ab45: 5b                           	popq	%rbx
  21ab46: 41 5e                        	popq	%r14
  21ab48: 41 5f                        	popq	%r15
  21ab4a: c3                           	retq
  21ab4b: bf c7 1d 20 00               	movl	$2104775, %edi          # imm = 0x201DC7
  21ab50: be 13 00 00 00               	movl	$19, %esi
  21ab55: 31 c9                        	xorl	%ecx, %ecx
  21ab57: e8 b4 07 00 00               	callq	0x21b310 <builtin.default_panic>
  21ab5c: bf 59 1d 20 00               	movl	$2104665, %edi          # imm = 0x201D59
  21ab61: be 10 00 00 00               	movl	$16, %esi
  21ab66: 31 c9                        	xorl	%ecx, %ecx
  21ab68: e8 a3 07 00 00               	callq	0x21b310 <builtin.default_panic>
  21ab6d: bf 32 22 20 00               	movl	$2105906, %edi          # imm = 0x202232
  21ab72: be 18 00 00 00               	movl	$24, %esi
  21ab77: 31 c9                        	xorl	%ecx, %ecx
  21ab79: e8 92 07 00 00               	callq	0x21b310 <builtin.default_panic>
  21ab7e: bf 72 21 20 00               	movl	$2105714, %edi          # imm = 0x202172
  21ab83: be 19 00 00 00               	movl	$25, %esi
  21ab88: 31 c9                        	xorl	%ecx, %ecx
  21ab8a: e8 81 07 00 00               	callq	0x21b310 <builtin.default_panic>
  21ab8f: 90                           	nop

000000000021ab90 <fmt.formatValue__anon_6746>:
  21ab90: 55                           	pushq	%rbp
  21ab91: 53                           	pushq	%rbx
  21ab92: 48 83 ec 48                  	subq	$72, %rsp
  21ab96: c5 fc 28 05 a2 56 fe ff      	vmovaps	-108894(%rip), %ymm0    # 0x200240 <zig-graph+0x200240>
  21ab9e: 49 89 c8                     	movq	%rcx, %r8
  21aba1: 48 89 d1                     	movq	%rdx, %rcx
  21aba4: 48 89 fb                     	movq	%rdi, %rbx
  21aba7: b8 41 00 00 00               	movl	$65, %eax
  21abac: c6 44 24 40 aa               	movb	$-86, 64(%rsp)
  21abb1: c5 fc 11 44 24 20            	vmovups	%ymm0, 32(%rsp)
  21abb7: c5 fc 11 04 24               	vmovups	%ymm0, (%rsp)
  21abbc: 48 83 fe 64                  	cmpq	$100, %rsi
  21abc0: 72 7d                        	jb	0x21ac3f <fmt.formatValue__anon_6746+0xaf>
  21abc2: bf 41 00 00 00               	movl	$65, %edi
  21abc7: 49 b9 c3 f5 28 5c 8f c2 f5 28	movabsq	$2951479051793528259, %r9 # imm = 0x28F5C28F5C28F5C3
  21abd1: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
  21abe0: 48 89 f8                     	movq	%rdi, %rax
  21abe3: 48 83 e8 02                  	subq	$2, %rax
  21abe7: 0f 82 b4 00 00 00            	jb	0x21aca1 <fmt.formatValue__anon_6746+0x111>
  21abed: 48 89 f2                     	movq	%rsi, %rdx
  21abf0: 49 89 f3                     	movq	%rsi, %r11
  21abf3: 48 83 c7 fe                  	addq	$-2, %rdi
  21abf7: 48 c1 ea 02                  	shrq	$2, %rdx
  21abfb: c4 c2 eb f6 d1               	mulxq	%r9, %rdx, %rdx
  21ac00: 48 c1 ea 02                  	shrq	$2, %rdx
  21ac04: 4c 6b d2 64                  	imulq	$100, %rdx, %r10
  21ac08: 4d 29 d3                     	subq	%r10, %r11
  21ac0b: 47 0f b7 94 1b c4 23 20 00   	movzwl	2106308(%r11,%r11), %r10d
  21ac14: 66 44 89 14 04               	movw	%r10w, (%rsp,%rax)
  21ac19: 48 81 fe 0f 27 00 00         	cmpq	$9999, %rsi             # imm = 0x270F
  21ac20: 48 89 d6                     	movq	%rdx, %rsi
  21ac23: 77 bb                        	ja	0x21abe0 <fmt.formatValue__anon_6746+0x50>
  21ac25: 48 83 fa 09                  	cmpq	$9, %rdx
  21ac29: 77 1d                        	ja	0x21ac48 <fmt.formatValue__anon_6746+0xb8>
  21ac2b: 48 83 e8 01                  	subq	$1, %rax
  21ac2f: 72 70                        	jb	0x21aca1 <fmt.formatValue__anon_6746+0x111>
  21ac31: 48 83 f8 41                  	cmpq	$65, %rax
  21ac35: 73 7e                        	jae	0x21acb5 <fmt.formatValue__anon_6746+0x125>
  21ac37: 80 c2 30                     	addb	$48, %dl
  21ac3a: 88 14 04                     	movb	%dl, (%rsp,%rax)
  21ac3d: eb 21                        	jmp	0x21ac60 <fmt.formatValue__anon_6746+0xd0>
  21ac3f: 48 89 f2                     	movq	%rsi, %rdx
  21ac42: 48 83 fa 09                  	cmpq	$9, %rdx
  21ac46: 76 e3                        	jbe	0x21ac2b <fmt.formatValue__anon_6746+0x9b>
  21ac48: 48 83 e8 02                  	subq	$2, %rax
  21ac4c: 72 53                        	jb	0x21aca1 <fmt.formatValue__anon_6746+0x111>
  21ac4e: 48 83 f8 42                  	cmpq	$66, %rax
  21ac52: 73 75                        	jae	0x21acc9 <fmt.formatValue__anon_6746+0x139>
  21ac54: 0f b7 94 12 c4 23 20 00      	movzwl	2106308(%rdx,%rdx), %edx
  21ac5c: 66 89 14 04                  	movw	%dx, (%rsp,%rax)
  21ac60: ba 41 00 00 00               	movl	$65, %edx
  21ac65: 48 8d 34 04                  	leaq	(%rsp,%rax), %rsi
  21ac69: 48 89 df                     	movq	%rbx, %rdi
  21ac6c: 48 29 c2                     	subq	%rax, %rdx
  21ac6f: c5 f8 77                     	vzeroupper
  21ac72: e8 09 da ff ff               	callq	0x218680 <fmt.formatBuf__anon_6100>
  21ac77: 89 c5                        	movl	%eax, %ebp
  21ac79: 66 85 c0                     	testw	%ax, %ax
  21ac7c: 75 09                        	jne	0x21ac87 <fmt.formatValue__anon_6746+0xf7>
  21ac7e: 89 e8                        	movl	%ebp, %eax
  21ac80: 48 83 c4 48                  	addq	$72, %rsp
  21ac84: 5b                           	popq	%rbx
  21ac85: 5d                           	popq	%rbp
  21ac86: c3                           	retq
  21ac87: 48 89 df                     	movq	%rbx, %rdi
  21ac8a: e8 c1 10 00 00               	callq	0x21bd50 <builtin.returnError>
  21ac8f: 48 89 df                     	movq	%rbx, %rdi
  21ac92: e8 b9 10 00 00               	callq	0x21bd50 <builtin.returnError>
  21ac97: 48 89 df                     	movq	%rbx, %rdi
  21ac9a: e8 b1 10 00 00               	callq	0x21bd50 <builtin.returnError>
  21ac9f: eb dd                        	jmp	0x21ac7e <fmt.formatValue__anon_6746+0xee>
  21aca1: bf 59 1d 20 00               	movl	$2104665, %edi          # imm = 0x201D59
  21aca6: be 10 00 00 00               	movl	$16, %esi
  21acab: 31 c9                        	xorl	%ecx, %ecx
  21acad: c5 f8 77                     	vzeroupper
  21acb0: e8 5b 06 00 00               	callq	0x21b310 <builtin.default_panic>
  21acb5: bf 9c 1e 20 00               	movl	$2104988, %edi          # imm = 0x201E9C
  21acba: be 13 00 00 00               	movl	$19, %esi
  21acbf: 31 c9                        	xorl	%ecx, %ecx
  21acc1: c5 f8 77                     	vzeroupper
  21acc4: e8 47 06 00 00               	callq	0x21b310 <builtin.default_panic>
  21acc9: bf 34 1d 20 00               	movl	$2104628, %edi          # imm = 0x201D34
  21acce: be 24 00 00 00               	movl	$36, %esi
  21acd3: 31 c9                        	xorl	%ecx, %ecx
  21acd5: c5 f8 77                     	vzeroupper
  21acd8: e8 33 06 00 00               	callq	0x21b310 <builtin.default_panic>
  21acdd: 0f 1f 00                     	nopl	(%rax)

000000000021ace0 <array_list.ArrayListAligned(dwarf.FileEntry,null).ensureTotalCapacityPrecise>:
  21ace0: 55                           	pushq	%rbp
  21ace1: 41 57                        	pushq	%r15
  21ace3: 41 56                        	pushq	%r14
  21ace5: 41 55                        	pushq	%r13
  21ace7: 41 54                        	pushq	%r12
  21ace9: 53                           	pushq	%rbx
  21acea: 48 81 ec 28 01 00 00         	subq	$296, %rsp              # imm = 0x128
  21acf1: 4c 8b 7e 10                  	movq	16(%rsi), %r15
  21acf5: 49 39 d7                     	cmpq	%rdx, %r15
  21acf8: 0f 83 ad 01 00 00            	jae	0x21aeab <array_list.ArrayListAligned(dwarf.FileEntry,null).ensureTotalCapacityPrecise+0x1cb>
  21acfe: 48 89 f3                     	movq	%rsi, %rbx
  21ad01: 48 8b 36                     	movq	(%rsi), %rsi
  21ad04: 48 8d 44 24 28               	leaq	40(%rsp), %rax
  21ad09: 49 89 d5                     	movq	%rdx, %r13
  21ad0c: 48 89 fd                     	movq	%rdi, %rbp
  21ad0f: 48 89 44 24 18               	movq	%rax, 24(%rsp)
  21ad14: 48 c7 44 24 20 20 00 00 00   	movq	$32, 32(%rsp)
  21ad1d: 48 c7 44 24 10 00 00 00 00   	movq	$0, 16(%rsp)
  21ad26: 48 89 74 24 08               	movq	%rsi, 8(%rsp)
  21ad2b: 4d 85 ff                     	testq	%r15, %r15
  21ad2e: 74 54                        	je	0x21ad84 <array_list.ArrayListAligned(dwarf.FileEntry,null).ensureTotalCapacityPrecise+0xa4>
  21ad30: bf 38 00 00 00               	movl	$56, %edi
  21ad35: 4c 89 f8                     	movq	%r15, %rax
  21ad38: 48 f7 e7                     	mulq	%rdi
  21ad3b: 0f 80 ce 01 00 00            	jo	0x21af0f <array_list.ArrayListAligned(dwarf.FileEntry,null).ensureTotalCapacityPrecise+0x22f>
  21ad41: 48 89 c1                     	movq	%rax, %rcx
  21ad44: 4c 89 e8                     	movq	%r13, %rax
  21ad47: 48 f7 e7                     	mulq	%rdi
  21ad4a: 0f 80 8f 01 00 00            	jo	0x21aedf <array_list.ArrayListAligned(dwarf.FileEntry,null).ensureTotalCapacityPrecise+0x1ff>
  21ad50: 4c 8b b4 24 58 01 00 00      	movq	344(%rsp), %r14
  21ad58: 49 89 c4                     	movq	%rax, %r12
  21ad5b: 48 8b 7b 18                  	movq	24(%rbx), %rdi
  21ad5f: 48 8b 43 20                  	movq	32(%rbx), %rax
  21ad63: 48 89 ca                     	movq	%rcx, %rdx
  21ad66: b9 03 00 00 00               	movl	$3, %ecx
  21ad6b: 4d 89 e0                     	movq	%r12, %r8
  21ad6e: 4d 89 f1                     	movq	%r14, %r9
  21ad71: ff 50 08                     	callq	*8(%rax)
  21ad74: 4c 89 f1                     	movq	%r14, %rcx
  21ad77: a8 01                        	testb	$1, %al
  21ad79: 74 25                        	je	0x21ada0 <array_list.ArrayListAligned(dwarf.FileEntry,null).ensureTotalCapacityPrecise+0xc0>
  21ad7b: 4c 89 6b 10                  	movq	%r13, 16(%rbx)
  21ad7f: e9 27 01 00 00               	jmp	0x21aeab <array_list.ArrayListAligned(dwarf.FileEntry,null).ensureTotalCapacityPrecise+0x1cb>
  21ad84: b9 38 00 00 00               	movl	$56, %ecx
  21ad89: 4c 89 e8                     	movq	%r13, %rax
  21ad8c: 48 f7 e1                     	mulq	%rcx
  21ad8f: 0f 80 54 01 00 00            	jo	0x21aee9 <array_list.ArrayListAligned(dwarf.FileEntry,null).ensureTotalCapacityPrecise+0x209>
  21ad95: 48 8b 8c 24 58 01 00 00      	movq	344(%rsp), %rcx
  21ad9d: 49 89 c4                     	movq	%rax, %r12
  21ada0: 48 8b 7b 18                  	movq	24(%rbx), %rdi
  21ada4: 48 8b 43 20                  	movq	32(%rbx), %rax
  21ada8: 4c 89 e6                     	movq	%r12, %rsi
  21adab: ba 03 00 00 00               	movl	$3, %edx
  21adb0: 48 89 0c 24                  	movq	%rcx, (%rsp)
  21adb4: ff 10                        	callq	*(%rax)
  21adb6: 48 85 c0                     	testq	%rax, %rax
  21adb9: 0f 84 32 01 00 00            	je	0x21aef1 <array_list.ArrayListAligned(dwarf.FileEntry,null).ensureTotalCapacityPrecise+0x211>
  21adbf: 48 89 c7                     	movq	%rax, %rdi
  21adc2: be aa 00 00 00               	movl	$170, %esi
  21adc7: 4c 89 e2                     	movq	%r12, %rdx
  21adca: 49 89 c5                     	movq	%rax, %r13
  21adcd: e8 0e 16 00 00               	callq	0x21c3e0 <memset>
  21add2: 4d 85 e4                     	testq	%r12, %r12
  21add5: 74 0c                        	je	0x21ade3 <array_list.ArrayListAligned(dwarf.FileEntry,null).ensureTotalCapacityPrecise+0x103>
  21add7: 44 89 e8                     	movl	%r13d, %eax
  21adda: 83 e0 07                     	andl	$7, %eax
  21addd: 0f 85 3d 01 00 00            	jne	0x21af20 <array_list.ArrayListAligned(dwarf.FileEntry,null).ensureTotalCapacityPrecise+0x240>
  21ade3: 4d 85 e4                     	testq	%r12, %r12
  21ade6: 0f 84 d3 00 00 00            	je	0x21aebf <array_list.ArrayListAligned(dwarf.FileEntry,null).ensureTotalCapacityPrecise+0x1df>
  21adec: 48 b8 b7 6d db b6 6d db b6 6d	movabsq	$7905747460161236407, %rax # imm = 0x6DB6DB6DB6DB6DB7
  21adf6: 4c 89 e2                     	movq	%r12, %rdx
  21adf9: 48 b9 93 24 49 92 24 49 92 24	movabsq	$2635249153387078803, %rcx # imm = 0x2492492492492493
  21ae03: 49 0f af c4                  	imulq	%r12, %rax
  21ae07: 48 c1 ea 03                  	shrq	$3, %rdx
  21ae0b: c4 e2 d3 f6 e9               	mulxq	%rcx, %rbp, %rbp
  21ae10: 48 b9 93 24 49 92 24 49 92 04	movabsq	$329406144173384851, %rcx # imm = 0x492492492492493
  21ae1a: c4 e3 fb f0 c0 03            	rorxq	$3, %rax, %rax
  21ae20: 48 39 c8                     	cmpq	%rcx, %rax
  21ae23: 0f 83 19 01 00 00            	jae	0x21af42 <array_list.ArrayListAligned(dwarf.FileEntry,null).ensureTotalCapacityPrecise+0x262>
  21ae29: 48 8b 43 08                  	movq	8(%rbx), %rax
  21ae2d: 48 39 e8                     	cmpq	%rbp, %rax
  21ae30: 0f 87 a2 00 00 00            	ja	0x21aed8 <array_list.ArrayListAligned(dwarf.FileEntry,null).ensureTotalCapacityPrecise+0x1f8>
  21ae36: 48 8b 33                     	movq	(%rbx), %rsi
  21ae39: 48 6b d0 38                  	imulq	$56, %rax, %rdx
  21ae3d: 48 8d 04 16                  	leaq	(%rsi,%rdx), %rax
  21ae41: 49 39 c5                     	cmpq	%rax, %r13
  21ae44: 73 0e                        	jae	0x21ae54 <array_list.ArrayListAligned(dwarf.FileEntry,null).ensureTotalCapacityPrecise+0x174>
  21ae46: 49 8d 44 15 00               	leaq	(%r13,%rdx), %rax
  21ae4b: 48 39 c6                     	cmpq	%rax, %rsi
  21ae4e: 0f 82 dd 00 00 00            	jb	0x21af31 <array_list.ArrayListAligned(dwarf.FileEntry,null).ensureTotalCapacityPrecise+0x251>
  21ae54: 4c 89 ef                     	movq	%r13, %rdi
  21ae57: e8 84 14 00 00               	callq	0x21c2e0 <memcpy>
  21ae5c: 4d 6b e7 38                  	imulq	$56, %r15, %r12
  21ae60: 4c 8b 74 24 08               	movq	8(%rsp), %r14
  21ae65: 4d 85 ff                     	testq	%r15, %r15
  21ae68: b8 08 00 00 00               	movl	$8, %eax
  21ae6d: 4c 0f 44 f0                  	cmoveq	%rax, %r14
  21ae71: 4d 0f 44 e7                  	cmoveq	%r15, %r12
  21ae75: 4d 85 e4                     	testq	%r12, %r12
  21ae78: 74 2a                        	je	0x21aea4 <array_list.ArrayListAligned(dwarf.FileEntry,null).ensureTotalCapacityPrecise+0x1c4>
  21ae7a: 4c 89 f7                     	movq	%r14, %rdi
  21ae7d: be aa 00 00 00               	movl	$170, %esi
  21ae82: 4c 89 e2                     	movq	%r12, %rdx
  21ae85: e8 56 15 00 00               	callq	0x21c3e0 <memset>
  21ae8a: 48 8b 7b 18                  	movq	24(%rbx), %rdi
  21ae8e: 48 8b 43 20                  	movq	32(%rbx), %rax
  21ae92: 4c 8b 04 24                  	movq	(%rsp), %r8
  21ae96: 4c 89 f6                     	movq	%r14, %rsi
  21ae99: 4c 89 e2                     	movq	%r12, %rdx
  21ae9c: b9 03 00 00 00               	movl	$3, %ecx
  21aea1: ff 50 10                     	callq	*16(%rax)
  21aea4: 4c 89 2b                     	movq	%r13, (%rbx)
  21aea7: 48 89 6b 10                  	movq	%rbp, 16(%rbx)
  21aeab: 31 c0                        	xorl	%eax, %eax
  21aead: 48 81 c4 28 01 00 00         	addq	$296, %rsp              # imm = 0x128
  21aeb4: 5b                           	popq	%rbx
  21aeb5: 41 5c                        	popq	%r12
  21aeb7: 41 5d                        	popq	%r13
  21aeb9: 41 5e                        	popq	%r14
  21aebb: 41 5f                        	popq	%r15
  21aebd: 5d                           	popq	%rbp
  21aebe: c3                           	retq
  21aebf: 31 ed                        	xorl	%ebp, %ebp
  21aec1: 49 bd aa aa aa aa aa aa aa aa	movabsq	$-6148914691236517206, %r13 # imm = 0xAAAAAAAAAAAAAAAA
  21aecb: 48 8b 43 08                  	movq	8(%rbx), %rax
  21aecf: 48 39 e8                     	cmpq	%rbp, %rax
  21aed2: 0f 86 5e ff ff ff            	jbe	0x21ae36 <array_list.ArrayListAligned(dwarf.FileEntry,null).ensureTotalCapacityPrecise+0x156>
  21aed8: bf 9c 1e 20 00               	movl	$2104988, %edi          # imm = 0x201E9C
  21aedd: eb 46                        	jmp	0x21af25 <array_list.ArrayListAligned(dwarf.FileEntry,null).ensureTotalCapacityPrecise+0x245>
  21aedf: 48 8d 7c 24 10               	leaq	16(%rsp), %rdi
  21aee4: e8 67 0e 00 00               	callq	0x21bd50 <builtin.returnError>
  21aee9: 48 89 ef                     	movq	%rbp, %rdi
  21aeec: e8 5f 0e 00 00               	callq	0x21bd50 <builtin.returnError>
  21aef1: 48 89 ef                     	movq	%rbp, %rdi
  21aef4: e8 57 0e 00 00               	callq	0x21bd50 <builtin.returnError>
  21aef9: 48 89 ef                     	movq	%rbp, %rdi
  21aefc: e8 4f 0e 00 00               	callq	0x21bd50 <builtin.returnError>
  21af01: 48 89 ef                     	movq	%rbp, %rdi
  21af04: e8 47 0e 00 00               	callq	0x21bd50 <builtin.returnError>
  21af09: 66 b8 15 00                  	movw	$21, %ax
  21af0d: eb 9e                        	jmp	0x21aead <array_list.ArrayListAligned(dwarf.FileEntry,null).ensureTotalCapacityPrecise+0x1cd>
  21af0f: bf 59 1d 20 00               	movl	$2104665, %edi          # imm = 0x201D59
  21af14: be 10 00 00 00               	movl	$16, %esi
  21af19: 31 c9                        	xorl	%ecx, %ecx
  21af1b: e8 f0 03 00 00               	callq	0x21b310 <builtin.default_panic>
  21af20: bf c7 1d 20 00               	movl	$2104775, %edi          # imm = 0x201DC7
  21af25: be 13 00 00 00               	movl	$19, %esi
  21af2a: 31 c9                        	xorl	%ecx, %ecx
  21af2c: e8 df 03 00 00               	callq	0x21b310 <builtin.default_panic>
  21af31: bf b0 1e 20 00               	movl	$2105008, %edi          # imm = 0x201EB0
  21af36: be 17 00 00 00               	movl	$23, %esi
  21af3b: 31 c9                        	xorl	%ecx, %ecx
  21af3d: e8 ce 03 00 00               	callq	0x21b310 <builtin.default_panic>
  21af42: bf 1e 1f 20 00               	movl	$2105118, %edi          # imm = 0x201F1E
  21af47: be 21 00 00 00               	movl	$33, %esi
  21af4c: 31 c9                        	xorl	%ecx, %ecx
  21af4e: e8 bd 03 00 00               	callq	0x21b310 <builtin.default_panic>
  21af53: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)

000000000021af60 <io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeAll>:
  21af60: 55                           	pushq	%rbp
  21af61: 41 57                        	pushq	%r15
  21af63: 41 56                        	pushq	%r14
  21af65: 41 55                        	pushq	%r13
  21af67: 41 54                        	pushq	%r12
  21af69: 53                           	pushq	%rbx
  21af6a: 50                           	pushq	%rax
  21af6b: 48 85 c9                     	testq	%rcx, %rcx
  21af6e: 0f 84 dd 00 00 00            	je	0x21b051 <io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeAll+0xf1>
  21af74: 49 89 ce                     	movq	%rcx, %r14
  21af77: 49 89 d7                     	movq	%rdx, %r15
  21af7a: 49 89 f4                     	movq	%rsi, %r12
  21af7d: 31 ed                        	xorl	%ebp, %ebp
  21af7f: 48 89 3c 24                  	movq	%rdi, (%rsp)
  21af83: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
  21af90: 4c 39 f5                     	cmpq	%r14, %rbp
  21af93: 0f 87 fc 00 00 00            	ja	0x21b095 <io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeAll+0x135>
  21af99: 4c 89 f0                     	movq	%r14, %rax
  21af9c: 48 29 e8                     	subq	%rbp, %rax
  21af9f: 0f 84 9b 00 00 00            	je	0x21b040 <io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeAll+0xe0>
  21afa5: 49 8b 1c 24                  	movq	(%r12), %rbx
  21afa9: 48 8b 4b 08                  	movq	8(%rbx), %rcx
  21afad: 48 8b 7b 10                  	movq	16(%rbx), %rdi
  21afb1: 48 39 f9                     	cmpq	%rdi, %rcx
  21afb4: 0f 86 a8 00 00 00            	jbe	0x21b062 <io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeAll+0x102>
  21afba: 48 89 fa                     	movq	%rdi, %rdx
  21afbd: 48 01 c2                     	addq	%rax, %rdx
  21afc0: 0f 82 be 00 00 00            	jb	0x21b084 <io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeAll+0x124>
  21afc6: 49 89 c5                     	movq	%rax, %r13
  21afc9: 48 39 ca                     	cmpq	%rcx, %rdx
  21afcc: 76 0c                        	jbe	0x21afda <io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeAll+0x7a>
  21afce: 49 89 cd                     	movq	%rcx, %r13
  21afd1: 49 29 fd                     	subq	%rdi, %r13
  21afd4: 0f 82 aa 00 00 00            	jb	0x21b084 <io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeAll+0x124>
  21afda: 48 29 f9                     	subq	%rdi, %rcx
  21afdd: 0f 82 b2 00 00 00            	jb	0x21b095 <io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeAll+0x135>
  21afe3: 49 39 cd                     	cmpq	%rcx, %r13
  21afe6: 0f 87 ba 00 00 00            	ja	0x21b0a6 <io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeAll+0x146>
  21afec: 49 39 c5                     	cmpq	%rax, %r13
  21afef: 0f 87 b1 00 00 00            	ja	0x21b0a6 <io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeAll+0x146>
  21aff5: 48 03 3b                     	addq	(%rbx), %rdi
  21aff8: 49 8d 34 2f                  	leaq	(%r15,%rbp), %rsi
  21affc: 4a 8d 04 2e                  	leaq	(%rsi,%r13), %rax
  21b000: 48 39 c7                     	cmpq	%rax, %rdi
  21b003: 73 0d                        	jae	0x21b012 <io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeAll+0xb2>
  21b005: 4a 8d 04 2f                  	leaq	(%rdi,%r13), %rax
  21b009: 48 39 f0                     	cmpq	%rsi, %rax
  21b00c: 0f 87 a5 00 00 00            	ja	0x21b0b7 <io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeAll+0x157>
  21b012: 4c 89 ea                     	movq	%r13, %rdx
  21b015: e8 c6 12 00 00               	callq	0x21c2e0 <memcpy>
  21b01a: 48 8b 43 10                  	movq	16(%rbx), %rax
  21b01e: 4c 01 e8                     	addq	%r13, %rax
  21b021: 72 61                        	jb	0x21b084 <io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeAll+0x124>
  21b023: 48 89 43 10                  	movq	%rax, 16(%rbx)
  21b027: 4d 85 ed                     	testq	%r13, %r13
  21b02a: 74 36                        	je	0x21b062 <io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeAll+0x102>
  21b02c: 4c 01 ed                     	addq	%r13, %rbp
  21b02f: 73 17                        	jae	0x21b048 <io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeAll+0xe8>
  21b031: eb 51                        	jmp	0x21b084 <io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeAll+0x124>
  21b033: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
  21b040: 45 31 ed                     	xorl	%r13d, %r13d
  21b043: 4c 01 ed                     	addq	%r13, %rbp
  21b046: 72 3c                        	jb	0x21b084 <io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeAll+0x124>
  21b048: 4c 39 f5                     	cmpq	%r14, %rbp
  21b04b: 0f 85 3f ff ff ff            	jne	0x21af90 <io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeAll+0x30>
  21b051: 31 c0                        	xorl	%eax, %eax
  21b053: 48 83 c4 08                  	addq	$8, %rsp
  21b057: 5b                           	popq	%rbx
  21b058: 41 5c                        	popq	%r12
  21b05a: 41 5d                        	popq	%r13
  21b05c: 41 5e                        	popq	%r14
  21b05e: 41 5f                        	popq	%r15
  21b060: 5d                           	popq	%rbp
  21b061: c3                           	retq
  21b062: 48 8b 1c 24                  	movq	(%rsp), %rbx
  21b066: 48 89 df                     	movq	%rbx, %rdi
  21b069: e8 e2 0c 00 00               	callq	0x21bd50 <builtin.returnError>
  21b06e: 48 89 df                     	movq	%rbx, %rdi
  21b071: e8 da 0c 00 00               	callq	0x21bd50 <builtin.returnError>
  21b076: 48 89 df                     	movq	%rbx, %rdi
  21b079: e8 d2 0c 00 00               	callq	0x21bd50 <builtin.returnError>
  21b07e: 66 b8 04 00                  	movw	$4, %ax
  21b082: eb cf                        	jmp	0x21b053 <io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeAll+0xf3>
  21b084: bf 59 1d 20 00               	movl	$2104665, %edi          # imm = 0x201D59
  21b089: be 10 00 00 00               	movl	$16, %esi
  21b08e: 31 c9                        	xorl	%ecx, %ecx
  21b090: e8 7b 02 00 00               	callq	0x21b310 <builtin.default_panic>
  21b095: bf 34 1d 20 00               	movl	$2104628, %edi          # imm = 0x201D34
  21b09a: be 24 00 00 00               	movl	$36, %esi
  21b09f: 31 c9                        	xorl	%ecx, %ecx
  21b0a1: e8 6a 02 00 00               	callq	0x21b310 <builtin.default_panic>
  21b0a6: bf 9c 1e 20 00               	movl	$2104988, %edi          # imm = 0x201E9C
  21b0ab: be 13 00 00 00               	movl	$19, %esi
  21b0b0: 31 c9                        	xorl	%ecx, %ecx
  21b0b2: e8 59 02 00 00               	callq	0x21b310 <builtin.default_panic>
  21b0b7: bf b0 1e 20 00               	movl	$2105008, %edi          # imm = 0x201EB0
  21b0bc: be 17 00 00 00               	movl	$23, %esi
  21b0c1: 31 c9                        	xorl	%ecx, %ecx
  21b0c3: e8 48 02 00 00               	callq	0x21b310 <builtin.default_panic>
  21b0c8: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)

000000000021b0d0 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).capacity>:
  21b0d0: 50                           	pushq	%rax
  21b0d1: 48 8b 07                     	movq	(%rdi), %rax
  21b0d4: 48 85 c0                     	testq	%rax, %rax
  21b0d7: 74 09                        	je	0x21b0e2 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).capacity+0x12>
  21b0d9: a8 07                        	testb	$7, %al
  21b0db: 75 09                        	jne	0x21b0e6 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).capacity+0x16>
  21b0dd: 8b 40 f8                     	movl	-8(%rax), %eax
  21b0e0: 59                           	popq	%rcx
  21b0e1: c3                           	retq
  21b0e2: 31 c0                        	xorl	%eax, %eax
  21b0e4: 59                           	popq	%rcx
  21b0e5: c3                           	retq
  21b0e6: bf c7 1d 20 00               	movl	$2104775, %edi          # imm = 0x201DC7
  21b0eb: be 13 00 00 00               	movl	$19, %esi
  21b0f0: 31 c9                        	xorl	%ecx, %ecx
  21b0f2: e8 19 02 00 00               	callq	0x21b310 <builtin.default_panic>
  21b0f7: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)

000000000021b100 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).containsAdapted__anon_6985>:
  21b100: 48 83 ec 18                  	subq	$24, %rsp
  21b104: 83 7f 08 00                  	cmpl	$0, 8(%rdi)
  21b108: b8 80 02 20 00               	movl	$2097792, %eax          # imm = 0x200280
  21b10d: 0f 84 b1 00 00 00            	je	0x21b1c4 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).containsAdapted__anon_6985+0xc4>
  21b113: 48 8b 0f                     	movq	(%rdi), %rcx
  21b116: c4 e3 fb f0 fe 20            	rorxq	$32, %rsi, %rdi
  21b11c: 48 ba 2f 64 bd 78 64 1d 76 a0	movabsq	$-6884282663029611473, %rdx # imm = 0xA0761D6478BD642F
  21b126: 49 b8 94 3a c9 64 f6 30 8d fa	movabsq	$-392603757700367724, %r8 # imm = 0xFA8D30F664C93A94
  21b130: 48 31 fa                     	xorq	%rdi, %rdx
  21b133: c4 c2 c3 f6 d0               	mulxq	%r8, %rdi, %rdx
  21b138: 48 31 fa                     	xorq	%rdi, %rdx
  21b13b: 48 bf 4f 12 7d c4 27 4e 8e 1d	movabsq	$2129725606500045391, %rdi # imm = 0x1D8E4E27C47D124F
  21b145: 48 83 f2 08                  	xorq	$8, %rdx
  21b149: c4 e2 bb f6 d7               	mulxq	%rdi, %r8, %rdx
  21b14e: 48 85 c9                     	testq	%rcx, %rcx
  21b151: 0f 84 8f 00 00 00            	je	0x21b1e6 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).containsAdapted__anon_6985+0xe6>
  21b157: f6 c1 07                     	testb	$7, %cl
  21b15a: 0f 85 97 00 00 00            	jne	0x21b1f7 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).containsAdapted__anon_6985+0xf7>
  21b160: 8b 79 f8                     	movl	-8(%rcx), %edi
  21b163: 83 ef 01                     	subl	$1, %edi
  21b166: 72 7e                        	jb	0x21b1e6 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).containsAdapted__anon_6985+0xe6>
  21b168: 4c 31 c2                     	xorq	%r8, %rdx
  21b16b: 41 89 d0                     	movl	%edx, %r8d
  21b16e: 41 21 f8                     	andl	%edi, %r8d
  21b171: 46 0f b6 14 01               	movzbl	(%rcx,%r8), %r10d
  21b176: 45 84 d2                     	testb	%r10b, %r10b
  21b179: 74 49                        	je	0x21b1c4 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).containsAdapted__anon_6985+0xc4>
  21b17b: 48 c1 ea 39                  	shrq	$57, %rdx
  21b17f: 41 89 f9                     	movl	%edi, %r9d
  21b182: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)
  21b190: 45 84 d2                     	testb	%r10b, %r10b
  21b193: 79 13                        	jns	0x21b1a8 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).containsAdapted__anon_6985+0xa8>
  21b195: 41 80 e2 7f                  	andb	$127, %r10b
  21b199: 44 38 d2                     	cmpb	%r10b, %dl
  21b19c: 75 0a                        	jne	0x21b1a8 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).containsAdapted__anon_6985+0xa8>
  21b19e: 4c 8b 51 f0                  	movq	-16(%rcx), %r10
  21b1a2: 4b 39 34 c2                  	cmpq	%rsi, (%r10,%r8,8)
  21b1a6: 74 28                        	je	0x21b1d0 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).containsAdapted__anon_6985+0xd0>
  21b1a8: 41 ff c0                     	incl	%r8d
  21b1ab: 45 21 c8                     	andl	%r9d, %r8d
  21b1ae: 83 ef 01                     	subl	$1, %edi
  21b1b1: 46 0f b6 14 01               	movzbl	(%rcx,%r8), %r10d
  21b1b6: 41 0f 92 c3                  	setb	%r11b
  21b1ba: 45 84 d2                     	testb	%r10b, %r10b
  21b1bd: 74 05                        	je	0x21b1c4 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).containsAdapted__anon_6985+0xc4>
  21b1bf: 45 84 db                     	testb	%r11b, %r11b
  21b1c2: 74 cc                        	je	0x21b190 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).containsAdapted__anon_6985+0x90>
  21b1c4: 80 78 08 00                  	cmpb	$0, 8(%rax)
  21b1c8: 0f 95 c0                     	setne	%al
  21b1cb: 48 83 c4 18                  	addq	$24, %rsp
  21b1cf: c3                           	retq
  21b1d0: 48 8d 44 24 08               	leaq	8(%rsp), %rax
  21b1d5: c6 44 24 10 01               	movb	$1, 16(%rsp)
  21b1da: 80 78 08 00                  	cmpb	$0, 8(%rax)
  21b1de: 0f 95 c0                     	setne	%al
  21b1e1: 48 83 c4 18                  	addq	$24, %rsp
  21b1e5: c3                           	retq
  21b1e6: bf 59 1d 20 00               	movl	$2104665, %edi          # imm = 0x201D59
  21b1eb: be 10 00 00 00               	movl	$16, %esi
  21b1f0: 31 c9                        	xorl	%ecx, %ecx
  21b1f2: e8 19 01 00 00               	callq	0x21b310 <builtin.default_panic>
  21b1f7: bf c7 1d 20 00               	movl	$2104775, %edi          # imm = 0x201DC7
  21b1fc: be 13 00 00 00               	movl	$19, %esi
  21b201: 31 c9                        	xorl	%ecx, %ecx
  21b203: e8 08 01 00 00               	callq	0x21b310 <builtin.default_panic>
  21b208: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)

000000000021b210 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).deallocate>:
  21b210: 41 57                        	pushq	%r15
  21b212: 41 56                        	pushq	%r14
  21b214: 41 55                        	pushq	%r13
  21b216: 41 54                        	pushq	%r12
  21b218: 53                           	pushq	%rbx
  21b219: 4c 8b 37                     	movq	(%rdi), %r14
  21b21c: 4d 85 f6                     	testq	%r14, %r14
  21b21f: 0f 84 88 00 00 00            	je	0x21b2ad <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).deallocate+0x9d>
  21b225: 41 f6 c6 07                  	testb	$7, %r14b
  21b229: 0f 85 99 00 00 00            	jne	0x21b2c8 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).deallocate+0xb8>
  21b22f: 41 8b 46 f8                  	movl	-8(%r14), %eax
  21b233: 89 c1                        	movl	%eax, %ecx
  21b235: 83 c1 18                     	addl	$24, %ecx
  21b238: 72 7d                        	jb	0x21b2b7 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).deallocate+0xa7>
  21b23a: 3d 00 00 00 20               	cmpl	$536870912, %eax        # imm = 0x20000000
  21b23f: 73 76                        	jae	0x21b2b7 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).deallocate+0xa7>
  21b241: 49 83 c6 e8                  	addq	$-24, %r14
  21b245: 41 f6 c6 07                  	testb	$7, %r14b
  21b249: 75 7d                        	jne	0x21b2c8 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).deallocate+0xb8>
  21b24b: 89 c9                        	movl	%ecx, %ecx
  21b24d: 48 c1 e0 04                  	shlq	$4, %rax
  21b251: 49 bf f8 ff ff ff 03 00 00 00	movabsq	$17179869176, %r15      # imm = 0x3FFFFFFF8
  21b25b: 48 89 fb                     	movq	%rdi, %rbx
  21b25e: 48 8d 44 01 07               	leaq	7(%rcx,%rax), %rax
  21b263: 49 21 c7                     	andq	%rax, %r15
  21b266: b8 08 00 00 00               	movl	$8, %eax
  21b26b: 4c 0f 44 f0                  	cmoveq	%rax, %r14
  21b26f: 74 2e                        	je	0x21b29f <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).deallocate+0x8f>
  21b271: 4c 8b 26                     	movq	(%rsi), %r12
  21b274: 4c 8b 6e 08                  	movq	8(%rsi), %r13
  21b278: 4c 89 f7                     	movq	%r14, %rdi
  21b27b: be aa 00 00 00               	movl	$170, %esi
  21b280: 4c 89 fa                     	movq	%r15, %rdx
  21b283: e8 58 11 00 00               	callq	0x21c3e0 <memset>
  21b288: 4c 8b 44 24 28               	movq	40(%rsp), %r8
  21b28d: 4c 89 e7                     	movq	%r12, %rdi
  21b290: 4c 89 f6                     	movq	%r14, %rsi
  21b293: 4c 89 fa                     	movq	%r15, %rdx
  21b296: b9 03 00 00 00               	movl	$3, %ecx
  21b29b: 41 ff 55 10                  	callq	*16(%r13)
  21b29f: 48 c7 03 00 00 00 00         	movq	$0, (%rbx)
  21b2a6: c7 43 0c 00 00 00 00         	movl	$0, 12(%rbx)
  21b2ad: 5b                           	popq	%rbx
  21b2ae: 41 5c                        	popq	%r12
  21b2b0: 41 5d                        	popq	%r13
  21b2b2: 41 5e                        	popq	%r14
  21b2b4: 41 5f                        	popq	%r15
  21b2b6: c3                           	retq
  21b2b7: bf 59 1d 20 00               	movl	$2104665, %edi          # imm = 0x201D59
  21b2bc: be 10 00 00 00               	movl	$16, %esi
  21b2c1: 31 c9                        	xorl	%ecx, %ecx
  21b2c3: e8 48 00 00 00               	callq	0x21b310 <builtin.default_panic>
  21b2c8: bf c7 1d 20 00               	movl	$2104775, %edi          # imm = 0x201DC7
  21b2cd: be 13 00 00 00               	movl	$19, %esi
  21b2d2: 31 c9                        	xorl	%ecx, %ecx
  21b2d4: e8 37 00 00 00               	callq	0x21b310 <builtin.default_panic>
  21b2d9: 0f 1f 80 00 00 00 00         	nopl	(%rax)

000000000021b2e0 <math.ceilPowerOfTwoPromote__anon_7212>:
  21b2e0: 85 ff                        	testl	%edi, %edi
  21b2e2: 74 16                        	je	0x21b2fa <math.ceilPowerOfTwoPromote__anon_7212+0x1a>
  21b2e4: ff cf                        	decl	%edi
  21b2e6: b9 01 00 00 00               	movl	$1, %ecx
  21b2eb: f3 0f bd c7                  	lzcntl	%edi, %eax
  21b2ef: 83 c0 20                     	addl	$32, %eax
  21b2f2: f7 d8                        	negl	%eax
  21b2f4: c4 e2 f9 f7 c1               	shlxq	%rax, %rcx, %rax
  21b2f9: c3                           	retq
  21b2fa: 50                           	pushq	%rax
  21b2fb: bf 32 22 20 00               	movl	$2105906, %edi          # imm = 0x202232
  21b300: be 18 00 00 00               	movl	$24, %esi
  21b305: 31 c9                        	xorl	%ecx, %ecx
  21b307: e8 04 00 00 00               	callq	0x21b310 <builtin.default_panic>
  21b30c: cc                           	int3
  21b30d: cc                           	int3
  21b30e: cc                           	int3
  21b30f: cc                           	int3

000000000021b310 <builtin.default_panic>:
  21b310: 48 83 ec 18                  	subq	$24, %rsp
  21b314: 48 89 d0                     	movq	%rdx, %rax
  21b317: 48 89 f2                     	movq	%rsi, %rdx
  21b31a: 48 89 fe                     	movq	%rdi, %rsi
  21b31d: 84 c9                        	testb	%cl, %cl
  21b31f: 75 05                        	jne	0x21b326 <builtin.default_panic+0x16>
  21b321: 48 8b 44 24 18               	movq	24(%rsp), %rax
  21b326: 48 8d 7c 24 08               	leaq	8(%rsp), %rdi
  21b32b: 48 89 44 24 08               	movq	%rax, 8(%rsp)
  21b330: c6 44 24 10 01               	movb	$1, 16(%rsp)
  21b335: e8 06 00 00 00               	callq	0x21b340 <debug.panicImpl>
  21b33a: 66 0f 1f 44 00 00            	nopw	(%rax,%rax)

000000000021b340 <debug.panicImpl>:
  21b340: 55                           	pushq	%rbp
  21b341: 48 89 e5                     	movq	%rsp, %rbp
  21b344: 41 57                        	pushq	%r15
  21b346: 41 56                        	pushq	%r14
  21b348: 41 55                        	pushq	%r13
  21b34a: 41 54                        	pushq	%r12
  21b34c: 53                           	pushq	%rbx
  21b34d: 48 81 ec 18 03 00 00         	subq	$792, %rsp              # imm = 0x318
  21b354: 48 8d 85 c0 fc ff ff         	leaq	-832(%rbp), %rax
  21b35b: c5 f8 57 c0                  	vxorps	%xmm0, %xmm0, %xmm0
  21b35f: 49 89 d7                     	movq	%rdx, %r15
  21b362: 49 89 f6                     	movq	%rsi, %r14
  21b365: 48 89 fb                     	movq	%rdi, %rbx
  21b368: 48 8d 7d b8                  	leaq	-72(%rbp), %rdi
  21b36c: 48 8d 95 c0 fe ff ff         	leaq	-320(%rbp), %rdx
  21b373: be 0b 00 00 00               	movl	$11, %esi
  21b378: 48 89 45 a8                  	movq	%rax, -88(%rbp)
  21b37c: 48 8d 85 c0 fd ff ff         	leaq	-576(%rbp), %rax
  21b383: 48 c7 45 b0 20 00 00 00      	movq	$32, -80(%rbp)
  21b38b: c5 fc 11 85 20 ff ff ff      	vmovups	%ymm0, -224(%rbp)
  21b393: 48 c7 45 a0 00 00 00 00      	movq	$0, -96(%rbp)
  21b39b: c5 fc 11 85 c0 fe ff ff      	vmovups	%ymm0, -320(%rbp)
  21b3a3: c5 fc 11 85 e0 fe ff ff      	vmovups	%ymm0, -288(%rbp)
  21b3ab: c5 fc 11 85 00 ff ff ff      	vmovups	%ymm0, -256(%rbp)
  21b3b3: c5 fc 11 85 38 ff ff ff      	vmovups	%ymm0, -200(%rbp)
  21b3bb: 48 89 45 c0                  	movq	%rax, -64(%rbp)
  21b3bf: 48 c7 45 c8 20 00 00 00      	movq	$32, -56(%rbp)
  21b3c7: 48 c7 45 b8 00 00 00 00      	movq	$0, -72(%rbp)
  21b3cf: c5 f8 77                     	vzeroupper
  21b3d2: e8 b9 8d fe ff               	callq	0x204190 <os.sigaction>
  21b3d7: 66 85 c0                     	testw	%ax, %ax
  21b3da: 75 4e                        	jne	0x21b42a <debug.panicImpl+0xea>
  21b3dc: 48 8d 7d b8                  	leaq	-72(%rbp), %rdi
  21b3e0: 48 8d 95 c0 fe ff ff         	leaq	-320(%rbp), %rdx
  21b3e7: be 04 00 00 00               	movl	$4, %esi
  21b3ec: e8 9f 8d fe ff               	callq	0x204190 <os.sigaction>
  21b3f1: 66 85 c0                     	testw	%ax, %ax
  21b3f4: 75 34                        	jne	0x21b42a <debug.panicImpl+0xea>
  21b3f6: 48 8d 7d b8                  	leaq	-72(%rbp), %rdi
  21b3fa: 48 8d 95 c0 fe ff ff         	leaq	-320(%rbp), %rdx
  21b401: be 07 00 00 00               	movl	$7, %esi
  21b406: e8 85 8d fe ff               	callq	0x204190 <os.sigaction>
  21b40b: 66 85 c0                     	testw	%ax, %ax
  21b40e: 75 1a                        	jne	0x21b42a <debug.panicImpl+0xea>
  21b410: 48 8d 7d b8                  	leaq	-72(%rbp), %rdi
  21b414: 48 8d 95 c0 fe ff ff         	leaq	-320(%rbp), %rdx
  21b41b: be 08 00 00 00               	movl	$8, %esi
  21b420: e8 6b 8d fe ff               	callq	0x204190 <os.sigaction>
  21b425: 66 85 c0                     	testw	%ax, %ax
  21b428: 74 09                        	je	0x21b433 <debug.panicImpl+0xf3>
  21b42a: 48 8d 7d b8                  	leaq	-72(%rbp), %rdi
  21b42e: e8 1d 09 00 00               	callq	0x21bd50 <builtin.returnError>
  21b433: 64 48 8b 04 25 f0 ff ff ff   	movq	%fs:-16, %rax
  21b43c: 48 85 c0                     	testq	%rax, %rax
  21b43f: 0f 85 ee 06 00 00            	jne	0x21bb33 <debug.panicImpl+0x7f3>
  21b445: 64 48 c7 04 25 f0 ff ff ff 01 00 00 00       	movq	$1, %fs:-16
  21b452: f0                           	lock
  21b453: fe 05 d7 3b 00 00            	incb	15319(%rip)             # 0x21f030 <debug.panicking>
  21b459: f0                           	lock
  21b45a: 0f ba 2d d2 3b 00 00 00      	btsl	$0, 15314(%rip)         # 0x21f034 <debug.panic_mutex>
  21b462: 73 0a                        	jae	0x21b46e <debug.panicImpl+0x12e>
  21b464: bf 34 f0 21 00               	movl	$2224180, %edi          # imm = 0x21F034
  21b469: e8 22 0b 00 00               	callq	0x21bf90 <Thread.Mutex.FutexImpl.lockSlow>
  21b46e: 64 80 3c 25 fc ff ff ff 01   	cmpb	$1, %fs:-4
  21b477: c7 45 d0 02 00 00 00         	movl	$2, -48(%rbp)
  21b47e: 48 89 9d 78 ff ff ff         	movq	%rbx, -136(%rbp)
  21b485: 4c 89 b5 70 ff ff ff         	movq	%r14, -144(%rbp)
  21b48c: 75 0b                        	jne	0x21b499 <debug.panicImpl+0x159>
  21b48e: 64 44 8b 24 25 f8 ff ff ff   	movl	%fs:-8, %r12d
  21b497: eb 1c                        	jmp	0x21b4b5 <debug.panicImpl+0x175>
  21b499: b8 ba 00 00 00               	movl	$186, %eax
  21b49e: 0f 05                        	syscall
  21b4a0: 49 89 c4                     	movq	%rax, %r12
  21b4a3: 64 c6 04 25 fc ff ff ff 01   	movb	$1, %fs:-4
  21b4ac: 64 44 89 24 25 f8 ff ff ff   	movl	%r12d, %fs:-8
  21b4b5: 45 31 f6                     	xorl	%r14d, %r14d
  21b4b8: 4c 8d ad c0 fd ff ff         	leaq	-576(%rbp), %r13
  21b4bf: 48 8d 5d a0                  	leaq	-96(%rbp), %rbx
  21b4c3: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
  21b4d0: 49 83 fe 08                  	cmpq	$8, %r14
  21b4d4: 0f 83 ca 06 00 00            	jae	0x21bba4 <debug.panicImpl+0x864>
  21b4da: 41 b8 07 00 00 00            	movl	$7, %r8d
  21b4e0: 49 8d 8e ee 24 20 00         	leaq	2106606(%r14), %rcx
  21b4e7: 4c 89 ef                     	movq	%r13, %rdi
  21b4ea: 48 89 de                     	movq	%rbx, %rsi
  21b4ed: ba 02 00 00 00               	movl	$2, %edx
  21b4f2: 4d 29 f0                     	subq	%r14, %r8
  21b4f5: e8 96 8d fe ff               	callq	0x204290 <fs.file.File.write>
  21b4fa: 66 83 bd c8 fd ff ff 00      	cmpw	$0, -568(%rbp)
  21b502: 0f 85 65 03 00 00            	jne	0x21b86d <debug.panicImpl+0x52d>
  21b508: 4c 03 b5 c0 fd ff ff         	addq	-576(%rbp), %r14
  21b50f: 0f 82 a0 06 00 00            	jb	0x21bbb5 <debug.panicImpl+0x875>
  21b515: 49 83 fe 07                  	cmpq	$7, %r14
  21b519: 75 b5                        	jne	0x21b4d0 <debug.panicImpl+0x190>
  21b51b: c5 fc 28 05 1d 4d fe ff      	vmovaps	-111331(%rip), %ymm0    # 0x200240 <zig-graph+0x200240>
  21b523: b9 21 00 00 00               	movl	$33, %ecx
  21b528: c6 85 e0 fd ff ff aa         	movb	$-86, -544(%rbp)
  21b52f: c5 fc 11 85 c0 fd ff ff      	vmovups	%ymm0, -576(%rbp)
  21b537: 41 83 fc 64                  	cmpl	$100, %r12d
  21b53b: 0f 82 0e 01 00 00            	jb	0x21b64f <debug.panicImpl+0x30f>
  21b541: 44 89 e0                     	movl	%r12d, %eax
  21b544: 44 89 e6                     	movl	%r12d, %esi
  21b547: 48 69 d0 1f 85 eb 51         	imulq	$1374389535, %rax, %rdx # imm = 0x51EB851F
  21b54e: 48 c1 ea 25                  	shrq	$37, %rdx
  21b552: 6b ca 64                     	imull	$100, %edx, %ecx
  21b555: 29 ce                        	subl	%ecx, %esi
  21b557: 0f b7 8c 36 c4 23 20 00      	movzwl	2106308(%rsi,%rsi), %ecx
  21b55f: 66 89 8d df fd ff ff         	movw	%cx, -545(%rbp)
  21b566: b9 1f 00 00 00               	movl	$31, %ecx
  21b56b: 41 81 fc 10 27 00 00         	cmpl	$10000, %r12d           # imm = 0x2710
  21b572: 0f 82 b2 00 00 00            	jb	0x21b62a <debug.panicImpl+0x2ea>
  21b578: 89 d1                        	movl	%edx, %ecx
  21b57a: 48 69 c9 29 5c 8f 02         	imulq	$42949673, %rcx, %rcx   # imm = 0x28F5C29
  21b581: 48 c1 e9 20                  	shrq	$32, %rcx
  21b585: 6b c9 64                     	imull	$100, %ecx, %ecx
  21b588: 29 ca                        	subl	%ecx, %edx
  21b58a: 0f b7 8c 12 c4 23 20 00      	movzwl	2106308(%rdx,%rdx), %ecx
  21b592: ba 59 17 b7 d1               	movl	$3518437209, %edx       # imm = 0xD1B71759
  21b597: 48 0f af d0                  	imulq	%rax, %rdx
  21b59b: 66 89 8d dd fd ff ff         	movw	%cx, -547(%rbp)
  21b5a2: 48 c1 ea 2d                  	shrq	$45, %rdx
  21b5a6: b9 1d 00 00 00               	movl	$29, %ecx
  21b5ab: 41 81 fc 40 42 0f 00         	cmpl	$1000000, %r12d         # imm = 0xF4240
  21b5b2: 0f 82 94 00 00 00            	jb	0x21b64c <debug.panicImpl+0x30c>
  21b5b8: 89 d1                        	movl	%edx, %ecx
  21b5ba: 48 69 c9 29 5c 8f 02         	imulq	$42949673, %rcx, %rcx   # imm = 0x28F5C29
  21b5c1: 48 c1 e9 20                  	shrq	$32, %rcx
  21b5c5: 6b c9 64                     	imull	$100, %ecx, %ecx
  21b5c8: 29 ca                        	subl	%ecx, %edx
  21b5ca: 0f b7 8c 12 c4 23 20 00      	movzwl	2106308(%rdx,%rdx), %ecx
  21b5d2: 48 69 d0 83 de 1b 43         	imulq	$1125899907, %rax, %rdx # imm = 0x431BDE83
  21b5d9: 48 c1 ea 32                  	shrq	$50, %rdx
  21b5dd: 66 89 8d db fd ff ff         	movw	%cx, -549(%rbp)
  21b5e4: b9 1b 00 00 00               	movl	$27, %ecx
  21b5e9: 41 81 fc 00 e1 f5 05         	cmpl	$100000000, %r12d       # imm = 0x5F5E100
  21b5f0: 72 38                        	jb	0x21b62a <debug.panicImpl+0x2ea>
  21b5f2: 69 ca 7b 14 00 00            	imull	$5243, %edx, %ecx       # imm = 0x147B
  21b5f8: 4c 69 e0 89 3b e6 55         	imulq	$1441151881, %rax, %r12 # imm = 0x55E63B89
  21b5ff: c1 e9 13                     	shrl	$19, %ecx
  21b602: 6b c9 64                     	imull	$100, %ecx, %ecx
  21b605: 49 c1 ec 39                  	shrq	$57, %r12
  21b609: 29 ca                        	subl	%ecx, %edx
  21b60b: 0f b7 ca                     	movzwl	%dx, %ecx
  21b60e: 0f b7 8c 09 c4 23 20 00      	movzwl	2106308(%rcx,%rcx), %ecx
  21b616: 66 89 8d d9 fd ff ff         	movw	%cx, -551(%rbp)
  21b61d: b9 19 00 00 00               	movl	$25, %ecx
  21b622: 41 83 fc 09                  	cmpl	$9, %r12d
  21b626: 76 2d                        	jbe	0x21b655 <debug.panicImpl+0x315>
  21b628: eb 09                        	jmp	0x21b633 <debug.panicImpl+0x2f3>
  21b62a: 41 89 d4                     	movl	%edx, %r12d
  21b62d: 41 83 fc 09                  	cmpl	$9, %r12d
  21b631: 76 22                        	jbe	0x21b655 <debug.panicImpl+0x315>
  21b633: 44 89 e0                     	movl	%r12d, %eax
  21b636: 0f b7 84 00 c4 23 20 00      	movzwl	2106308(%rax,%rax), %eax
  21b63e: 66 89 84 0d be fd ff ff      	movw	%ax, -578(%rbp,%rcx)
  21b646: 48 83 c1 fe                  	addq	$-2, %rcx
  21b64a: eb 18                        	jmp	0x21b664 <debug.panicImpl+0x324>
  21b64c: 41 89 d4                     	movl	%edx, %r12d
  21b64f: 41 83 fc 09                  	cmpl	$9, %r12d
  21b653: 77 de                        	ja	0x21b633 <debug.panicImpl+0x2f3>
  21b655: 41 80 c4 30                  	addb	$48, %r12b
  21b659: 44 88 a4 0d bf fd ff ff      	movb	%r12b, -577(%rbp,%rcx)
  21b661: 48 ff c9                     	decq	%rcx
  21b664: ba 21 00 00 00               	movl	$33, %edx
  21b669: 48 8d b4 0d c0 fd ff ff      	leaq	-576(%rbp,%rcx), %rsi
  21b671: 48 8d 7d a0                  	leaq	-96(%rbp), %rdi
  21b675: 4c 8d 45 d0                  	leaq	-48(%rbp), %r8
  21b679: 48 29 ca                     	subq	%rcx, %rdx
  21b67c: b9 88 18 20 00               	movl	$2103432, %ecx          # imm = 0x201888
  21b681: c5 f8 77                     	vzeroupper
  21b684: e8 f7 cf ff ff               	callq	0x218680 <fmt.formatBuf__anon_6100>
  21b689: 66 85 c0                     	testw	%ax, %ax
  21b68c: 0f 85 e1 01 00 00            	jne	0x21b873 <debug.panicImpl+0x533>
  21b692: 45 31 f6                     	xorl	%r14d, %r14d
  21b695: 4c 8d a5 c0 fd ff ff         	leaq	-576(%rbp), %r12
  21b69c: 48 8d 5d a0                  	leaq	-96(%rbp), %rbx
  21b6a0: 49 83 fe 09                  	cmpq	$9, %r14
  21b6a4: 0f 83 fa 04 00 00            	jae	0x21bba4 <debug.panicImpl+0x864>
  21b6aa: 41 b8 08 00 00 00            	movl	$8, %r8d
  21b6b0: 49 8d 8e f7 24 20 00         	leaq	2106615(%r14), %rcx
  21b6b7: 4c 89 e7                     	movq	%r12, %rdi
  21b6ba: 48 89 de                     	movq	%rbx, %rsi
  21b6bd: ba 02 00 00 00               	movl	$2, %edx
  21b6c2: 4d 29 f0                     	subq	%r14, %r8
  21b6c5: e8 c6 8b fe ff               	callq	0x204290 <fs.file.File.write>
  21b6ca: 66 83 bd c8 fd ff ff 00      	cmpw	$0, -568(%rbp)
  21b6d2: 0f 85 95 01 00 00            	jne	0x21b86d <debug.panicImpl+0x52d>
  21b6d8: 4c 03 b5 c0 fd ff ff         	addq	-576(%rbp), %r14
  21b6df: 0f 82 d0 04 00 00            	jb	0x21bbb5 <debug.panicImpl+0x875>
  21b6e5: 49 83 fe 08                  	cmpq	$8, %r14
  21b6e9: 75 b5                        	jne	0x21b6a0 <debug.panicImpl+0x360>
  21b6eb: 48 8b b5 70 ff ff ff         	movq	-144(%rbp), %rsi
  21b6f2: 48 8d 7d a0                  	leaq	-96(%rbp), %rdi
  21b6f6: 4c 8d 45 d0                  	leaq	-48(%rbp), %r8
  21b6fa: b9 88 18 20 00               	movl	$2103432, %ecx          # imm = 0x201888
  21b6ff: 4c 89 fa                     	movq	%r15, %rdx
  21b702: e8 79 cf ff ff               	callq	0x218680 <fmt.formatBuf__anon_6100>
  21b707: 66 85 c0                     	testw	%ax, %ax
  21b70a: 0f 85 7f 01 00 00            	jne	0x21b88f <debug.panicImpl+0x54f>
  21b710: 31 c0                        	xorl	%eax, %eax
  21b712: 48 8d 9d c0 fd ff ff         	leaq	-576(%rbp), %rbx
  21b719: 4c 8d 75 a0                  	leaq	-96(%rbp), %r14
  21b71d: 48 85 c0                     	testq	%rax, %rax
  21b720: 75 43                        	jne	0x21b765 <debug.panicImpl+0x425>
  21b722: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)
  21b730: b9 ad 25 20 00               	movl	$2106797, %ecx          # imm = 0x2025AD
  21b735: 41 b8 01 00 00 00            	movl	$1, %r8d
  21b73b: 48 89 df                     	movq	%rbx, %rdi
  21b73e: 4c 89 f6                     	movq	%r14, %rsi
  21b741: ba 02 00 00 00               	movl	$2, %edx
  21b746: e8 45 8b fe ff               	callq	0x204290 <fs.file.File.write>
  21b74b: 66 83 bd c8 fd ff ff 00      	cmpw	$0, -568(%rbp)
  21b753: 0f 85 14 01 00 00            	jne	0x21b86d <debug.panicImpl+0x52d>
  21b759: 48 8b 85 c0 fd ff ff         	movq	-576(%rbp), %rax
  21b760: 48 85 c0                     	testq	%rax, %rax
  21b763: 74 cb                        	je	0x21b730 <debug.panicImpl+0x3f0>
  21b765: 48 83 f8 01                  	cmpq	$1, %rax
  21b769: 0f 85 35 04 00 00            	jne	0x21bba4 <debug.panicImpl+0x864>
  21b76f: 80 3d c2 69 00 00 00         	cmpb	$0, 27074(%rip)         # 0x222138 <debug.self_debug_info+0x30>
  21b776: 4c 8b bd 78 ff ff ff         	movq	-136(%rbp), %r15
  21b77d: 48 89 5d c0                  	movq	%rbx, -64(%rbp)
  21b781: 48 c7 45 c8 20 00 00 00      	movq	$32, -56(%rbp)
  21b789: 48 c7 45 b8 00 00 00 00      	movq	$0, -72(%rbp)
  21b791: c7 45 98 02 00 00 00         	movl	$2, -104(%rbp)
  21b798: c7 45 90 02 00 00 00         	movl	$2, -112(%rbp)
  21b79f: 75 7b                        	jne	0x21b81c <debug.panicImpl+0x4dc>
  21b7a1: 80 3d 98 69 00 00 00         	cmpb	$0, 27032(%rip)         # 0x222140 <debug.debug_info_allocator.2>
  21b7a8: 75 33                        	jne	0x21b7dd <debug.panicImpl+0x49d>
  21b7aa: c5 f8 10 05 46 60 fe ff      	vmovups	-106426(%rip), %xmm0    # 0x2017f8 <heap.PageAllocator.vtable+0x18>
  21b7b2: c6 05 87 69 00 00 01         	movb	$1, 27015(%rip)         # 0x222140 <debug.debug_info_allocator.2>
  21b7b9: c5 f8 29 85 c0 fe ff ff      	vmovaps	%xmm0, -320(%rbp)
  21b7c1: c5 f8 57 c0                  	vxorps	%xmm0, %xmm0, %xmm0
  21b7c5: c5 f8 29 85 d0 fe ff ff      	vmovaps	%xmm0, -304(%rbp)
  21b7cd: c5 fc 10 85 c0 fe ff ff      	vmovups	-320(%rbp), %ymm0
  21b7d5: c5 fc 11 05 6b 69 00 00      	vmovups	%ymm0, 26987(%rip)      # 0x222148 <debug.debug_info_arena_allocator>
  21b7dd: c5 f8 57 c0                  	vxorps	%xmm0, %xmm0, %xmm0
  21b7e1: c5 f8 11 05 2f 69 00 00      	vmovups	%xmm0, 26927(%rip)      # 0x222118 <debug.self_debug_info+0x10>
  21b7e9: 48 c7 05 14 69 00 00 48 21 22 00     	movq	$2236744, 26900(%rip) # imm = 0x222148
                                                                        # 0x222108 <debug.self_debug_info>
  21b7f4: 48 c7 05 11 69 00 00 10 18 20 00     	movq	$2103312, 26897(%rip) # imm = 0x201810
                                                                        # 0x222110 <debug.self_debug_info+0x8>
  21b7ff: 48 c7 05 1e 69 00 00 48 21 22 00     	movq	$2236744, 26910(%rip) # imm = 0x222148
                                                                        # 0x222128 <debug.self_debug_info+0x20>
  21b80a: 48 c7 05 1b 69 00 00 10 18 20 00     	movq	$2103312, 26907(%rip) # imm = 0x201810
                                                                        # 0x222130 <debug.self_debug_info+0x28>
  21b815: c6 05 1c 69 00 00 01         	movb	$1, 26908(%rip)         # 0x222138 <debug.self_debug_info+0x30>
  21b81c: bf 9e 23 20 00               	movl	$2106270, %edi          # imm = 0x20239E
  21b821: be 0f 00 00 00               	movl	$15, %esi
  21b826: c5 f8 77                     	vzeroupper
  21b829: e8 62 ec ff ff               	callq	0x21a490 <os.getenv>
  21b82e: 48 85 c0                     	testq	%rax, %rax
  21b831: 75 2e                        	jne	0x21b861 <debug.panicImpl+0x521>
  21b833: bf 95 23 20 00               	movl	$2106261, %edi          # imm = 0x202395
  21b838: be 08 00 00 00               	movl	$8, %esi
  21b83d: e8 4e ec ff ff               	callq	0x21a490 <os.getenv>
  21b842: 48 85 c0                     	testq	%rax, %rax
  21b845: 75 69                        	jne	0x21b8b0 <debug.panicImpl+0x570>
  21b847: 48 8d bd c0 fe ff ff         	leaq	-320(%rbp), %rdi
  21b84e: c7 85 c0 fe ff ff 02 00 00 00	movl	$2, -320(%rbp)
  21b858: e8 03 d7 ff ff               	callq	0x218f60 <fs.file.File.supportsAnsiEscapeCodes>
  21b85d: a8 01                        	testb	$1, %al
  21b85f: 74 4f                        	je	0x21b8b0 <debug.panicImpl+0x570>
  21b861: 0f b6 05 a0 5f fe ff         	movzbl	-106592(%rip), %eax     # 0x201808 <heap.PageAllocator.vtable+0x28>
  21b868: 88 45 d7                     	movb	%al, -41(%rbp)
  21b86b: eb 47                        	jmp	0x21b8b4 <debug.panicImpl+0x574>
  21b86d: 48 8d 7d a0                  	leaq	-96(%rbp), %rdi
  21b871: eb 17                        	jmp	0x21b88a <debug.panicImpl+0x54a>
  21b873: 48 8d 5d a0                  	leaq	-96(%rbp), %rbx
  21b877: 48 89 df                     	movq	%rbx, %rdi
  21b87a: e8 d1 04 00 00               	callq	0x21bd50 <builtin.returnError>
  21b87f: 48 89 df                     	movq	%rbx, %rdi
  21b882: e8 c9 04 00 00               	callq	0x21bd50 <builtin.returnError>
  21b887: 48 89 df                     	movq	%rbx, %rdi
  21b88a: e8 c1 04 00 00               	callq	0x21bd50 <builtin.returnError>
  21b88f: 48 8d 5d a0                  	leaq	-96(%rbp), %rbx
  21b893: 48 89 df                     	movq	%rbx, %rdi
  21b896: e8 b5 04 00 00               	callq	0x21bd50 <builtin.returnError>
  21b89b: 48 89 df                     	movq	%rbx, %rdi
  21b89e: e8 ad 04 00 00               	callq	0x21bd50 <builtin.returnError>
  21b8a3: 48 89 df                     	movq	%rbx, %rdi
  21b8a6: e8 a5 04 00 00               	callq	0x21bd50 <builtin.returnError>
  21b8ab: e8 30 03 00 00               	callq	0x21bbe0 <os.abort>
  21b8b0: c6 45 d7 00                  	movb	$0, -41(%rbp)
  21b8b4: c4 c1 78 10 07               	vmovups	(%r15), %xmm0
  21b8b9: 4c 8d b5 c0 fe ff ff         	leaq	-320(%rbp), %r14
  21b8c0: 4c 8d 65 98                  	leaq	-104(%rbp), %r12
  21b8c4: 4c 8d 6d d7                  	leaq	-41(%rbp), %r13
  21b8c8: 48 8d 5d 80                  	leaq	-128(%rbp), %rbx
  21b8cc: c5 f8 29 85 c0 fe ff ff      	vmovaps	%xmm0, -320(%rbp)
  21b8d4: 48 89 ad d0 fe ff ff         	movq	%rbp, -304(%rbp)
  21b8db: eb 35                        	jmp	0x21b912 <debug.panicImpl+0x5d2>
  21b8dd: 0f 1f 00                     	nopl	(%rax)
  21b8e0: c5 f8 57 c0                  	vxorps	%xmm0, %xmm0, %xmm0
  21b8e4: c5 f8 29 85 c0 fe ff ff      	vmovaps	%xmm0, -320(%rbp)
  21b8ec: 48 83 e9 01                  	subq	$1, %rcx
  21b8f0: b8 00 00 00 00               	movl	$0, %eax
  21b8f5: be 08 21 22 00               	movl	$2236680, %esi          # imm = 0x222108
  21b8fa: 48 8d 7d b8                  	leaq	-72(%rbp), %rdi
  21b8fe: 4c 89 e2                     	movq	%r12, %rdx
  21b901: 4d 89 e8                     	movq	%r13, %r8
  21b904: 48 0f 42 c8                  	cmovbq	%rax, %rcx
  21b908: e8 b3 7a ff ff               	callq	0x2133c0 <debug.printSourceAtAddress__anon_4447>
  21b90d: 66 85 c0                     	testw	%ax, %ax
  21b910: 75 61                        	jne	0x21b973 <debug.panicImpl+0x633>
  21b912: 48 8d bd 60 ff ff ff         	leaq	-160(%rbp), %rdi
  21b919: 4c 89 f6                     	movq	%r14, %rsi
  21b91c: e8 3f df ff ff               	callq	0x219860 <debug.StackIterator.next_internal>
  21b921: 80 bd 68 ff ff ff 00         	cmpb	$0, -152(%rbp)
  21b928: 0f 84 31 01 00 00            	je	0x21ba5f <debug.panicImpl+0x71f>
  21b92e: 80 bd c8 fe ff ff 00         	cmpb	$0, -312(%rbp)
  21b935: 48 8b 8d 60 ff ff ff         	movq	-160(%rbp), %rcx
  21b93c: 74 ae                        	je	0x21b8ec <debug.panicImpl+0x5ac>
  21b93e: 4c 8b bd c0 fe ff ff         	movq	-320(%rbp), %r15
  21b945: 4c 39 f9                     	cmpq	%r15, %rcx
  21b948: 74 96                        	je	0x21b8e0 <debug.panicImpl+0x5a0>
  21b94a: 66 0f 1f 44 00 00            	nopw	(%rax,%rax)
  21b950: 48 89 df                     	movq	%rbx, %rdi
  21b953: 4c 89 f6                     	movq	%r14, %rsi
  21b956: e8 05 df ff ff               	callq	0x219860 <debug.StackIterator.next_internal>
  21b95b: 80 7d 88 00                  	cmpb	$0, -120(%rbp)
  21b95f: 0f 84 fa 00 00 00            	je	0x21ba5f <debug.panicImpl+0x71f>
  21b965: 4c 39 7d 80                  	cmpq	%r15, -128(%rbp)
  21b969: 75 e5                        	jne	0x21b950 <debug.panicImpl+0x610>
  21b96b: 4c 89 f9                     	movq	%r15, %rcx
  21b96e: e9 6d ff ff ff               	jmp	0x21b8e0 <debug.panicImpl+0x5a0>
  21b973: 4c 8d 6d b8                  	leaq	-72(%rbp), %r13
  21b977: 41 89 c7                     	movl	%eax, %r15d
  21b97a: 4c 89 ef                     	movq	%r13, %rdi
  21b97d: e8 ce 03 00 00               	callq	0x21bd50 <builtin.returnError>
  21b982: 49 0f bf c7                  	movswq	%r15w, %rax
  21b986: 45 31 ff                     	xorl	%r15d, %r15d
  21b989: 4c 8d a5 c0 fe ff ff         	leaq	-320(%rbp), %r12
  21b990: 48 c1 e0 04                  	shlq	$4, %rax
  21b994: 48 8b 98 b0 18 20 00         	movq	2103472(%rax), %rbx
  21b99b: 4c 8b b0 b8 18 20 00         	movq	2103480(%rax), %r14
  21b9a2: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)
  21b9b0: 49 83 ff 1d                  	cmpq	$29, %r15
  21b9b4: 0f 83 ea 01 00 00            	jae	0x21bba4 <debug.panicImpl+0x864>
  21b9ba: 41 b8 1c 00 00 00            	movl	$28, %r8d
  21b9c0: 49 8d 8f 8e 25 20 00         	leaq	2106766(%r15), %rcx
  21b9c7: 4c 89 e7                     	movq	%r12, %rdi
  21b9ca: 4c 89 ee                     	movq	%r13, %rsi
  21b9cd: ba 02 00 00 00               	movl	$2, %edx
  21b9d2: 4d 29 f8                     	subq	%r15, %r8
  21b9d5: e8 b6 88 fe ff               	callq	0x204290 <fs.file.File.write>
  21b9da: 66 83 bd c8 fe ff ff 00      	cmpw	$0, -312(%rbp)
  21b9e2: 75 55                        	jne	0x21ba39 <debug.panicImpl+0x6f9>
  21b9e4: 4c 03 bd c0 fe ff ff         	addq	-320(%rbp), %r15
  21b9eb: 0f 82 c4 01 00 00            	jb	0x21bbb5 <debug.panicImpl+0x875>
  21b9f1: 49 83 ff 1c                  	cmpq	$28, %r15
  21b9f5: 75 b9                        	jne	0x21b9b0 <debug.panicImpl+0x670>
  21b9f7: 48 8d 7d b8                  	leaq	-72(%rbp), %rdi
  21b9fb: 4c 8d 45 90                  	leaq	-112(%rbp), %r8
  21b9ff: b9 88 18 20 00               	movl	$2103432, %ecx          # imm = 0x201888
  21ba04: 48 89 de                     	movq	%rbx, %rsi
  21ba07: 4c 89 f2                     	movq	%r14, %rdx
  21ba0a: e8 71 cc ff ff               	callq	0x218680 <fmt.formatBuf__anon_6100>
  21ba0f: 66 85 c0                     	testw	%ax, %ax
  21ba12: 75 2e                        	jne	0x21ba42 <debug.panicImpl+0x702>
  21ba14: 48 8d 7d b8                  	leaq	-72(%rbp), %rdi
  21ba18: 48 8d 75 80                  	leaq	-128(%rbp), %rsi
  21ba1c: ba ad 25 20 00               	movl	$2106797, %edx          # imm = 0x2025AD
  21ba21: b9 01 00 00 00               	movl	$1, %ecx
  21ba26: c7 45 80 02 00 00 00         	movl	$2, -128(%rbp)
  21ba2d: e8 8e 8a fe ff               	callq	0x2044c0 <io.writer.Writer(fs.file.File,error{AccessDenied,BrokenPipe,ConnectionResetByPeer,DeviceBusy,DiskQuota,FileTooBig,InputOutput,InvalidArgument,LockViolation,NoSpaceLeft,NotOpenForWriting,OperationAborted,SystemResources,Unexpected,WouldBlock},(function 'write')).writeAll>
  21ba32: 66 85 c0                     	testw	%ax, %ax
  21ba35: 75 14                        	jne	0x21ba4b <debug.panicImpl+0x70b>
  21ba37: eb 26                        	jmp	0x21ba5f <debug.panicImpl+0x71f>
  21ba39: 48 8d 7d b8                  	leaq	-72(%rbp), %rdi
  21ba3d: e8 0e 03 00 00               	callq	0x21bd50 <builtin.returnError>
  21ba42: 48 8d 7d b8                  	leaq	-72(%rbp), %rdi
  21ba46: e8 05 03 00 00               	callq	0x21bd50 <builtin.returnError>
  21ba4b: 48 8d 5d b8                  	leaq	-72(%rbp), %rbx
  21ba4f: 48 89 df                     	movq	%rbx, %rdi
  21ba52: e8 f9 02 00 00               	callq	0x21bd50 <builtin.returnError>
  21ba57: 48 89 df                     	movq	%rbx, %rdi
  21ba5a: e8 f1 02 00 00               	callq	0x21bd50 <builtin.returnError>
  21ba5f: 31 c0                        	xorl	%eax, %eax
  21ba61: 87 05 cd 35 00 00            	xchgl	%eax, 13773(%rip)       # 0x21f034 <debug.panic_mutex>
  21ba67: 45 31 c0                     	xorl	%r8d, %r8d
  21ba6a: 83 f8 03                     	cmpl	$3, %eax
  21ba6d: 74 0a                        	je	0x21ba79 <debug.panicImpl+0x739>
  21ba6f: 85 c0                        	testl	%eax, %eax
  21ba71: 0f 84 97 00 00 00            	je	0x21bb0e <debug.panicImpl+0x7ce>
  21ba77: eb 39                        	jmp	0x21bab2 <debug.panicImpl+0x772>
  21ba79: b8 ca 00 00 00               	movl	$202, %eax
  21ba7e: bf 34 f0 21 00               	movl	$2224180, %edi          # imm = 0x21F034
  21ba83: be 81 00 00 00               	movl	$129, %esi
  21ba88: ba 01 00 00 00               	movl	$1, %edx
  21ba8d: 0f 05                        	syscall
  21ba8f: 89 c1                        	movl	%eax, %ecx
  21ba91: f7 d9                        	negl	%ecx
  21ba93: 48 3d 01 f0 ff ff            	cmpq	$-4095, %rax            # imm = 0xF001
  21ba99: 44 0f 43 c1                  	cmovael	%ecx, %r8d
  21ba9d: 66 41 83 f8 16               	cmpw	$22, %r8w
  21baa2: 77 6a                        	ja	0x21bb0e <debug.panicImpl+0x7ce>
  21baa4: 41 0f b7 c0                  	movzwl	%r8w, %eax
  21baa8: b9 01 40 40 00               	movl	$4210689, %ecx          # imm = 0x404001
  21baad: 0f a3 c1                     	btl	%eax, %ecx
  21bab0: 73 5c                        	jae	0x21bb0e <debug.panicImpl+0x7ce>
  21bab2: f0                           	lock
  21bab3: fe 0d 77 35 00 00            	decb	13687(%rip)             # 0x21f030 <debug.panicking>
  21bab9: 75 05                        	jne	0x21bac0 <debug.panicImpl+0x780>
  21babb: e8 20 01 00 00               	callq	0x21bbe0 <os.abort>
  21bac0: 45 31 c0                     	xorl	%r8d, %r8d
  21bac3: 48 8d bd c0 fd ff ff         	leaq	-576(%rbp), %rdi
  21baca: 41 b9 11 08 40 00            	movl	$4196369, %r9d          # imm = 0x400811
  21bad0: be 80 00 00 00               	movl	$128, %esi
  21bad5: c7 85 c0 fd ff ff 00 00 00 00	movl	$0, -576(%rbp)
  21badf: 90                           	nop
  21bae0: b8 ca 00 00 00               	movl	$202, %eax
  21bae5: 31 d2                        	xorl	%edx, %edx
  21bae7: 45 31 d2                     	xorl	%r10d, %r10d
  21baea: 0f 05                        	syscall
  21baec: 89 c1                        	movl	%eax, %ecx
  21baee: f7 d9                        	negl	%ecx
  21baf0: 48 3d 01 f0 ff ff            	cmpq	$-4095, %rax            # imm = 0xF001
  21baf6: 41 0f 42 c8                  	cmovbl	%r8d, %ecx
  21bafa: 0f b7 c1                     	movzwl	%cx, %eax
  21bafd: 66 83 f8 16                  	cmpw	$22, %ax
  21bb01: 77 1c                        	ja	0x21bb1f <debug.panicImpl+0x7df>
  21bb03: 41 0f a3 c1                  	btl	%eax, %r9d
  21bb07: 72 d7                        	jb	0x21bae0 <debug.panicImpl+0x7a0>
  21bb09: 83 f8 0e                     	cmpl	$14, %eax
  21bb0c: 75 11                        	jne	0x21bb1f <debug.panicImpl+0x7df>
  21bb0e: bf 32 22 20 00               	movl	$2105906, %edi          # imm = 0x202232
  21bb13: be 18 00 00 00               	movl	$24, %esi
  21bb18: 31 c9                        	xorl	%ecx, %ecx
  21bb1a: e8 f1 f7 ff ff               	callq	0x21b310 <builtin.default_panic>
  21bb1f: 83 f8 6e                     	cmpl	$110, %eax
  21bb22: bf 32 22 20 00               	movl	$2105906, %edi          # imm = 0x202232
  21bb27: be 18 00 00 00               	movl	$24, %esi
  21bb2c: 31 c9                        	xorl	%ecx, %ecx
  21bb2e: e8 dd f7 ff ff               	callq	0x21b310 <builtin.default_panic>
  21bb33: 48 83 f8 01                  	cmpq	$1, %rax
  21bb37: 0f 85 7e ff ff ff            	jne	0x21babb <debug.panicImpl+0x77b>
  21bb3d: 45 31 ff                     	xorl	%r15d, %r15d
  21bb40: 48 8d 9d c0 fd ff ff         	leaq	-576(%rbp), %rbx
  21bb47: 4c 8d 75 a0                  	leaq	-96(%rbp), %r14
  21bb4b: 64 48 c7 04 25 f0 ff ff ff 02 00 00 00       	movq	$2, %fs:-16
  21bb58: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
  21bb60: 49 83 ff 24                  	cmpq	$36, %r15
  21bb64: 73 3e                        	jae	0x21bba4 <debug.panicImpl+0x864>
  21bb66: 41 b8 23 00 00 00            	movl	$35, %r8d
  21bb6c: 49 8d 8f b4 25 20 00         	leaq	2106804(%r15), %rcx
  21bb73: 48 89 df                     	movq	%rbx, %rdi
  21bb76: 4c 89 f6                     	movq	%r14, %rsi
  21bb79: ba 02 00 00 00               	movl	$2, %edx
  21bb7e: 4d 29 f8                     	subq	%r15, %r8
  21bb81: e8 0a 87 fe ff               	callq	0x204290 <fs.file.File.write>
  21bb86: 66 83 bd c8 fd ff ff 00      	cmpw	$0, -568(%rbp)
  21bb8e: 75 36                        	jne	0x21bbc6 <debug.panicImpl+0x886>
  21bb90: 4c 03 bd c0 fd ff ff         	addq	-576(%rbp), %r15
  21bb97: 72 1c                        	jb	0x21bbb5 <debug.panicImpl+0x875>
  21bb99: 49 83 ff 23                  	cmpq	$35, %r15
  21bb9d: 75 c1                        	jne	0x21bb60 <debug.panicImpl+0x820>
  21bb9f: e9 17 ff ff ff               	jmp	0x21babb <debug.panicImpl+0x77b>
  21bba4: bf 34 1d 20 00               	movl	$2104628, %edi          # imm = 0x201D34
  21bba9: be 24 00 00 00               	movl	$36, %esi
  21bbae: 31 c9                        	xorl	%ecx, %ecx
  21bbb0: e8 5b f7 ff ff               	callq	0x21b310 <builtin.default_panic>
  21bbb5: bf 59 1d 20 00               	movl	$2104665, %edi          # imm = 0x201D59
  21bbba: be 10 00 00 00               	movl	$16, %esi
  21bbbf: 31 c9                        	xorl	%ecx, %ecx
  21bbc1: e8 4a f7 ff ff               	callq	0x21b310 <builtin.default_panic>
  21bbc6: 48 8d 5d a0                  	leaq	-96(%rbp), %rbx
  21bbca: 48 89 df                     	movq	%rbx, %rdi
  21bbcd: e8 7e 01 00 00               	callq	0x21bd50 <builtin.returnError>
  21bbd2: e9 bc fc ff ff               	jmp	0x21b893 <debug.panicImpl+0x553>
  21bbd7: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)

000000000021bbe0 <os.abort>:
  21bbe0: 48 81 ec 18 01 00 00         	subq	$280, %rsp              # imm = 0x118
  21bbe7: 48 8d 44 24 18               	leaq	24(%rsp), %rax
  21bbec: 48 89 e7                     	movq	%rsp, %rdi
  21bbef: be 06 00 00 00               	movl	$6, %esi
  21bbf4: 48 89 44 24 08               	movq	%rax, 8(%rsp)
  21bbf9: 48 c7 44 24 10 20 00 00 00   	movq	$32, 16(%rsp)
  21bc02: 48 c7 04 24 00 00 00 00      	movq	$0, (%rsp)
  21bc0a: e8 61 89 fe ff               	callq	0x204570 <os.raise>
  21bc0f: 66 85 c0                     	testw	%ax, %ax
  21bc12: 74 08                        	je	0x21bc1c <os.abort+0x3c>
  21bc14: 48 c7 04 24 00 00 00 00      	movq	$0, (%rsp)
  21bc1c: b8 0e 00 00 00               	movl	$14, %eax
  21bc21: be 60 13 20 00               	movl	$2102112, %esi          # imm = 0x201360
  21bc26: 41 ba 08 00 00 00            	movl	$8, %r10d
  21bc2c: 31 ff                        	xorl	%edi, %edi
  21bc2e: 31 d2                        	xorl	%edx, %edx
  21bc30: 0f 05                        	syscall
  21bc32: 89 c1                        	movl	%eax, %ecx
  21bc34: 45 31 c0                     	xorl	%r8d, %r8d
  21bc37: f7 d9                        	negl	%ecx
  21bc39: 48 3d 01 f0 ff ff            	cmpq	$-4095, %rax            # imm = 0xF001
  21bc3f: 41 0f 42 c8                  	cmovbl	%r8d, %ecx
  21bc43: 66 83 f9 16                  	cmpw	$22, %cx
  21bc47: 0f 84 af 00 00 00            	je	0x21bcfc <os.abort+0x11c>
  21bc4d: 0f b7 c1                     	movzwl	%cx, %eax
  21bc50: 83 f8 0e                     	cmpl	$14, %eax
  21bc53: 0f 84 a3 00 00 00            	je	0x21bcfc <os.abort+0x11c>
  21bc59: 85 c0                        	testl	%eax, %eax
  21bc5b: 0f 85 9b 00 00 00            	jne	0x21bcfc <os.abort+0x11c>
  21bc61: b1 01                        	movb	$1, %cl
  21bc63: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
  21bc70: 31 c0                        	xorl	%eax, %eax
  21bc72: f0                           	lock
  21bc73: 0f b0 0d 8a 64 00 00         	cmpxchgb	%cl, 25738(%rip)        # 0x222104 <os.abort.global.abort_entered>
  21bc7a: 75 f4                        	jne	0x21bc70 <os.abort+0x90>
  21bc7c: 48 89 e7                     	movq	%rsp, %rdi
  21bc7f: ba e0 13 20 00               	movl	$2102240, %edx          # imm = 0x2013E0
  21bc84: be 06 00 00 00               	movl	$6, %esi
  21bc89: e8 02 85 fe ff               	callq	0x204190 <os.sigaction>
  21bc8e: 66 85 c0                     	testw	%ax, %ax
  21bc91: 74 19                        	je	0x21bcac <os.abort+0xcc>
  21bc93: 0f b7 c0                     	movzwl	%ax, %eax
  21bc96: 83 f8 17                     	cmpl	$23, %eax
  21bc99: 75 72                        	jne	0x21bd0d <os.abort+0x12d>
  21bc9b: bf e3 1e 20 00               	movl	$2105059, %edi          # imm = 0x201EE3
  21bca0: be 17 00 00 00               	movl	$23, %esi
  21bca5: 31 c9                        	xorl	%ecx, %ecx
  21bca7: e8 64 f6 ff ff               	callq	0x21b310 <builtin.default_panic>
  21bcac: b8 ba 00 00 00               	movl	$186, %eax
  21bcb1: 0f 05                        	syscall
  21bcb3: 48 63 f8                     	movslq	%eax, %rdi
  21bcb6: b8 c8 00 00 00               	movl	$200, %eax
  21bcbb: be 06 00 00 00               	movl	$6, %esi
  21bcc0: 41 ba 08 00 00 00            	movl	$8, %r10d
  21bcc6: 31 d2                        	xorl	%edx, %edx
  21bcc8: 45 31 c0                     	xorl	%r8d, %r8d
  21bccb: 0f 05                        	syscall
  21bccd: b8 0e 00 00 00               	movl	$14, %eax
  21bcd2: bf 01 00 00 00               	movl	$1, %edi
  21bcd7: be 78 14 20 00               	movl	$2102392, %esi          # imm = 0x201478
  21bcdc: 0f 05                        	syscall
  21bcde: 89 c1                        	movl	%eax, %ecx
  21bce0: f7 d9                        	negl	%ecx
  21bce2: 48 3d 01 f0 ff ff            	cmpq	$-4095, %rax            # imm = 0xF001
  21bce8: 41 0f 42 c8                  	cmovbl	%r8d, %ecx
  21bcec: 66 85 c9                     	testw	%cx, %cx
  21bcef: 74 2d                        	je	0x21bd1e <os.abort+0x13e>
  21bcf1: 0f b7 c1                     	movzwl	%cx, %eax
  21bcf4: 83 f8 0e                     	cmpl	$14, %eax
  21bcf7: 74 03                        	je	0x21bcfc <os.abort+0x11c>
  21bcf9: 83 f8 16                     	cmpl	$22, %eax
  21bcfc: bf 32 22 20 00               	movl	$2105906, %edi          # imm = 0x202232
  21bd01: be 18 00 00 00               	movl	$24, %esi
  21bd06: 31 c9                        	xorl	%ecx, %ecx
  21bd08: e8 03 f6 ff ff               	callq	0x21b310 <builtin.default_panic>
  21bd0d: bf 5a 21 20 00               	movl	$2105690, %edi          # imm = 0x20215A
  21bd12: be 17 00 00 00               	movl	$23, %esi
  21bd17: 31 c9                        	xorl	%ecx, %ecx
  21bd19: e8 f2 f5 ff ff               	callq	0x21b310 <builtin.default_panic>
  21bd1e: 48 89 e7                     	movq	%rsp, %rdi
  21bd21: be 09 00 00 00               	movl	$9, %esi
  21bd26: c6 04 25 00 00 00 00 00      	movb	$0, 0
  21bd2e: e8 3d 88 fe ff               	callq	0x204570 <os.raise>
  21bd33: bf 7f 00 00 00               	movl	$127, %edi
  21bd38: e8 63 82 fe ff               	callq	0x203fa0 <os.exit>
  21bd3d: 0f 1f 00                     	nopl	(%rax)

000000000021bd40 <debug.panic__anon_3910>:
  21bd40: 50                           	pushq	%rax
  21bd41: e8 aa 00 00 00               	callq	0x21bdf0 <debug.panicExtra__anon_6025>
  21bd46: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)

000000000021bd50 <builtin.returnError>:
  21bd50: 50                           	pushq	%rax
  21bd51: 48 8b 07                     	movq	(%rdi), %rax
  21bd54: 48 3b 47 10                  	cmpq	16(%rdi), %rax
  21bd58: 73 10                        	jae	0x21bd6a <builtin.returnError+0x1a>
  21bd5a: 48 8b 4f 08                  	movq	8(%rdi), %rcx
  21bd5e: 48 8b 54 24 08               	movq	8(%rsp), %rdx
  21bd63: 48 89 14 c1                  	movq	%rdx, (%rcx,%rax,8)
  21bd67: 48 8b 07                     	movq	(%rdi), %rax
  21bd6a: 48 ff c0                     	incq	%rax
  21bd6d: 74 05                        	je	0x21bd74 <builtin.returnError+0x24>
  21bd6f: 48 89 07                     	movq	%rax, (%rdi)
  21bd72: 58                           	popq	%rax
  21bd73: c3                           	retq
  21bd74: bf 59 1d 20 00               	movl	$2104665, %edi          # imm = 0x201D59
  21bd79: be 10 00 00 00               	movl	$16, %esi
  21bd7e: 31 c9                        	xorl	%ecx, %ecx
  21bd80: e8 8b f5 ff ff               	callq	0x21b310 <builtin.default_panic>
  21bd85: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)

000000000021bd90 <Thread.Futex.wait>:
  21bd90: 50                           	pushq	%rax
  21bd91: 89 f2                        	movl	%esi, %edx
  21bd93: b8 ca 00 00 00               	movl	$202, %eax
  21bd98: be 80 00 00 00               	movl	$128, %esi
  21bd9d: 45 31 d2                     	xorl	%r10d, %r10d
  21bda0: 0f 05                        	syscall
  21bda2: 89 c1                        	movl	%eax, %ecx
  21bda4: 45 31 c0                     	xorl	%r8d, %r8d
  21bda7: f7 d9                        	negl	%ecx
  21bda9: 48 3d 01 f0 ff ff            	cmpq	$-4095, %rax            # imm = 0xF001
  21bdaf: 41 0f 42 c8                  	cmovbl	%r8d, %ecx
  21bdb3: 0f b7 c1                     	movzwl	%cx, %eax
  21bdb6: 66 83 f8 16                  	cmpw	$22, %ax
  21bdba: 77 11                        	ja	0x21bdcd <Thread.Futex.wait+0x3d>
  21bdbc: b9 11 08 40 00               	movl	$4196369, %ecx          # imm = 0x400811
  21bdc1: 0f a3 c1                     	btl	%eax, %ecx
  21bdc4: 73 02                        	jae	0x21bdc8 <Thread.Futex.wait+0x38>
  21bdc6: 58                           	popq	%rax
  21bdc7: c3                           	retq
  21bdc8: 83 f8 0e                     	cmpl	$14, %eax
  21bdcb: 74 03                        	je	0x21bdd0 <Thread.Futex.wait+0x40>
  21bdcd: 83 f8 6e                     	cmpl	$110, %eax
  21bdd0: bf 32 22 20 00               	movl	$2105906, %edi          # imm = 0x202232
  21bdd5: be 18 00 00 00               	movl	$24, %esi
  21bdda: 31 c9                        	xorl	%ecx, %ecx
  21bddc: e8 2f f5 ff ff               	callq	0x21b310 <builtin.default_panic>
  21bde1: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)

000000000021bdf0 <debug.panicExtra__anon_6025>:
  21bdf0: 55                           	pushq	%rbp
  21bdf1: 41 57                        	pushq	%r15
  21bdf3: 41 56                        	pushq	%r14
  21bdf5: 53                           	pushq	%rbx
  21bdf6: b8 58 11 00 00               	movl	$4440, %eax             # imm = 0x1158
  21bdfb: e8 a0 04 00 00               	callq	0x21c2a0 <__zig_probe_stack>
  21be00: 48 29 c4                     	subq	%rax, %rsp
  21be03: 48 8d 9c 24 49 01 00 00      	leaq	329(%rsp), %rbx
  21be0b: 49 89 fe                     	movq	%rdi, %r14
  21be0e: 48 8d 44 24 48               	leaq	72(%rsp), %rax
  21be13: ba 0f 10 00 00               	movl	$4111, %edx             # imm = 0x100F
  21be18: be aa 00 00 00               	movl	$170, %esi
  21be1d: 48 89 df                     	movq	%rbx, %rdi
  21be20: 48 89 44 24 08               	movq	%rax, 8(%rsp)
  21be25: 48 c7 44 24 10 20 00 00 00   	movq	$32, 16(%rsp)
  21be2e: 48 c7 04 24 00 00 00 00      	movq	$0, (%rsp)
  21be36: e8 a5 05 00 00               	callq	0x21c3e0 <memset>
  21be3b: 4c 8d 7c 24 18               	leaq	24(%rsp), %r15
  21be40: 48 89 e7                     	movq	%rsp, %rdi
  21be43: 48 8d 74 24 30               	leaq	48(%rsp), %rsi
  21be48: ba bc 24 20 00               	movl	$2106556, %edx          # imm = 0x2024BC
  21be4d: b9 2d 00 00 00               	movl	$45, %ecx
  21be52: 48 89 5c 24 18               	movq	%rbx, 24(%rsp)
  21be57: 48 c7 44 24 20 00 10 00 00   	movq	$4096, 32(%rsp)         # imm = 0x1000
  21be60: 48 c7 44 24 28 00 00 00 00   	movq	$0, 40(%rsp)
  21be69: 4c 89 7c 24 30               	movq	%r15, 48(%rsp)
  21be6e: e8 ed f0 ff ff               	callq	0x21af60 <io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeAll>
  21be73: 89 c5                        	movl	%eax, %ebp
  21be75: 66 85 c0                     	testw	%ax, %ax
  21be78: 75 77                        	jne	0x21bef1 <debug.panicExtra__anon_6025+0x101>
  21be7a: 49 8b 16                     	movq	(%r14), %rdx
  21be7d: 49 8b 4e 08                  	movq	8(%r14), %rcx
  21be81: 48 89 e7                     	movq	%rsp, %rdi
  21be84: 48 8d 74 24 40               	leaq	64(%rsp), %rsi
  21be89: 4c 89 7c 24 40               	movq	%r15, 64(%rsp)
  21be8e: e8 cd f0 ff ff               	callq	0x21af60 <io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeAll>
  21be93: 66 85 c0                     	testw	%ax, %ax
  21be96: 75 44                        	jne	0x21bedc <debug.panicExtra__anon_6025+0xec>
  21be98: 48 89 e7                     	movq	%rsp, %rdi
  21be9b: 48 8d 74 24 38               	leaq	56(%rsp), %rsi
  21bea0: ba ec 24 20 00               	movl	$2106604, %edx          # imm = 0x2024EC
  21bea5: b9 01 00 00 00               	movl	$1, %ecx
  21beaa: 4c 89 7c 24 38               	movq	%r15, 56(%rsp)
  21beaf: e8 ac f0 ff ff               	callq	0x21af60 <io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeAll>
  21beb4: 89 c5                        	movl	%eax, %ebp
  21beb6: 66 85 c0                     	testw	%ax, %ax
  21beb9: 75 36                        	jne	0x21bef1 <debug.panicExtra__anon_6025+0x101>
  21bebb: 48 8b 74 24 28               	movq	40(%rsp), %rsi
  21bec0: 48 3b 74 24 20               	cmpq	32(%rsp), %rsi
  21bec5: 0f 86 ac 00 00 00            	jbe	0x21bf77 <debug.panicExtra__anon_6025+0x187>
  21becb: bf 9c 1e 20 00               	movl	$2104988, %edi          # imm = 0x201E9C
  21bed0: be 13 00 00 00               	movl	$19, %esi
  21bed5: 31 c9                        	xorl	%ecx, %ecx
  21bed7: e8 34 f4 ff ff               	callq	0x21b310 <builtin.default_panic>
  21bedc: 49 89 e6                     	movq	%rsp, %r14
  21bedf: 89 c5                        	movl	%eax, %ebp
  21bee1: 4c 89 f7                     	movq	%r14, %rdi
  21bee4: e8 67 fe ff ff               	callq	0x21bd50 <builtin.returnError>
  21bee9: 4c 89 f7                     	movq	%r14, %rdi
  21beec: e8 5f fe ff ff               	callq	0x21bd50 <builtin.returnError>
  21bef1: 49 89 e6                     	movq	%rsp, %r14
  21bef4: 4c 89 f7                     	movq	%r14, %rdi
  21bef7: e8 54 fe ff ff               	callq	0x21bd50 <builtin.returnError>
  21befc: 4c 89 f7                     	movq	%r14, %rdi
  21beff: e8 4c fe ff ff               	callq	0x21bd50 <builtin.returnError>
  21bf04: 66 83 fd 04                  	cmpw	$4, %bp
  21bf08: 75 32                        	jne	0x21bf3c <debug.panicExtra__anon_6025+0x14c>
  21bf0a: 48 8d 84 24 49 11 00 00      	leaq	4425(%rsp), %rax
  21bf12: 48 3d bb 24 20 00            	cmpq	$2106555, %rax          # imm = 0x2024BB
  21bf18: 73 33                        	jae	0x21bf4d <debug.panicExtra__anon_6025+0x15d>
  21bf1a: 48 8d 8c 24 58 11 00 00      	leaq	4440(%rsp), %rcx
  21bf22: 48 81 f9 ac 24 20 00         	cmpq	$2106540, %rcx          # imm = 0x2024AC
  21bf29: 76 22                        	jbe	0x21bf4d <debug.panicExtra__anon_6025+0x15d>
  21bf2b: bf b0 1e 20 00               	movl	$2105008, %edi          # imm = 0x201EB0
  21bf30: be 17 00 00 00               	movl	$23, %esi
  21bf35: 31 c9                        	xorl	%ecx, %ecx
  21bf37: e8 d4 f3 ff ff               	callq	0x21b310 <builtin.default_panic>
  21bf3c: bf 5a 21 20 00               	movl	$2105690, %edi          # imm = 0x20215A
  21bf41: be 17 00 00 00               	movl	$23, %esi
  21bf46: 31 c9                        	xorl	%ecx, %ecx
  21bf48: e8 c3 f3 ff ff               	callq	0x21b310 <builtin.default_panic>
  21bf4d: 48 b9 75 6e 63 61 74 65 64 29	movabsq	$2982620403750628981, %rcx # imm = 0x2964657461636E75
  21bf57: be 0f 10 00 00               	movl	$4111, %esi             # imm = 0x100F
  21bf5c: 48 ba 28 6d 73 67 20 74 72 75	movabsq	$8462954332305976616, %rdx # imm = 0x7572742067736D28
  21bf66: 48 89 48 07                  	movq	%rcx, 7(%rax)
  21bf6a: 48 89 10                     	movq	%rdx, (%rax)
  21bf6d: 48 89 df                     	movq	%rbx, %rdi
  21bf70: 31 c9                        	xorl	%ecx, %ecx
  21bf72: e8 99 f3 ff ff               	callq	0x21b310 <builtin.default_panic>
  21bf77: 48 8b 5c 24 18               	movq	24(%rsp), %rbx
  21bf7c: 48 89 df                     	movq	%rbx, %rdi
  21bf7f: 31 c9                        	xorl	%ecx, %ecx
  21bf81: e8 8a f3 ff ff               	callq	0x21b310 <builtin.default_panic>
  21bf86: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)

000000000021bf90 <Thread.Mutex.FutexImpl.lockSlow>:
  21bf90: 53                           	pushq	%rbx
  21bf91: 8b 07                        	movl	(%rdi), %eax
  21bf93: 48 89 fb                     	movq	%rdi, %rbx
  21bf96: 83 f8 03                     	cmpl	$3, %eax
  21bf99: 74 0b                        	je	0x21bfa6 <Thread.Mutex.FutexImpl.lockSlow+0x16>
  21bf9b: b8 03 00 00 00               	movl	$3, %eax
  21bfa0: 87 03                        	xchgl	%eax, (%rbx)
  21bfa2: 85 c0                        	testl	%eax, %eax
  21bfa4: 74 18                        	je	0x21bfbe <Thread.Mutex.FutexImpl.lockSlow+0x2e>
  21bfa6: 48 89 df                     	movq	%rbx, %rdi
  21bfa9: be 03 00 00 00               	movl	$3, %esi
  21bfae: e8 dd fd ff ff               	callq	0x21bd90 <Thread.Futex.wait>
  21bfb3: b8 03 00 00 00               	movl	$3, %eax
  21bfb8: 87 03                        	xchgl	%eax, (%rbx)
  21bfba: 85 c0                        	testl	%eax, %eax
  21bfbc: 75 e8                        	jne	0x21bfa6 <Thread.Mutex.FutexImpl.lockSlow+0x16>
  21bfbe: 5b                           	popq	%rbx
  21bfbf: c3                           	retq

000000000021bfc0 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).grow>:
  21bfc0: 55                           	pushq	%rbp
  21bfc1: 41 57                        	pushq	%r15
  21bfc3: 41 56                        	pushq	%r14
  21bfc5: 41 55                        	pushq	%r13
  21bfc7: 41 54                        	pushq	%r12
  21bfc9: 53                           	pushq	%rbx
  21bfca: 48 83 ec 38                  	subq	$56, %rsp
  21bfce: 48 8b 06                     	movq	(%rsi), %rax
  21bfd1: 83 f9 09                     	cmpl	$9, %ecx
  21bfd4: bd 08 00 00 00               	movl	$8, %ebp
  21bfd9: 49 89 f6                     	movq	%rsi, %r14
  21bfdc: 0f 43 e9                     	cmovael	%ecx, %ebp
  21bfdf: 48 85 c0                     	testq	%rax, %rax
  21bfe2: 74 11                        	je	0x21bff5 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).grow+0x35>
  21bfe4: a8 07                        	testb	$7, %al
  21bfe6: 0f 85 57 02 00 00            	jne	0x21c243 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).grow+0x283>
  21bfec: 3b 68 f8                     	cmpl	-8(%rax), %ebp
  21bfef: 0f 86 81 02 00 00            	jbe	0x21c276 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).grow+0x2b6>
  21bff5: c4 e2 78 f3 cd               	blsrl	%ebp, %eax
  21bffa: 0f 85 76 02 00 00            	jne	0x21c276 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).grow+0x2b6>
  21c000: 89 e8                        	movl	%ebp, %eax
  21c002: c5 f8 57 c0                  	vxorps	%xmm0, %xmm0, %xmm0
  21c006: 83 c0 18                     	addl	$24, %eax
  21c009: c5 f8 29 04 24               	vmovaps	%xmm0, (%rsp)
  21c00e: 0f 82 40 02 00 00            	jb	0x21c254 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).grow+0x294>
  21c014: 81 fd 00 00 00 20            	cmpl	$536870912, %ebp        # imm = 0x20000000
  21c01a: 0f 83 34 02 00 00            	jae	0x21c254 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).grow+0x294>
  21c020: 41 89 c7                     	movl	%eax, %r15d
  21c023: 8d 04 ed 00 00 00 00         	leal	(,%rbp,8), %eax
  21c02a: 49 bd f8 ff ff ff 07 00 00 00	movabsq	$34359738360, %r13      # imm = 0x7FFFFFFF8
  21c034: 48 89 54 24 28               	movq	%rdx, 40(%rsp)
  21c039: 49 83 c7 07                  	addq	$7, %r15
  21c03d: 49 8d 1c 07                  	leaq	(%r15,%rax), %rbx
  21c041: 48 01 d8                     	addq	%rbx, %rax
  21c044: 49 21 c5                     	andq	%rax, %r13
  21c047: 74 4f                        	je	0x21c098 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).grow+0xd8>
  21c049: 48 89 7c 24 30               	movq	%rdi, 48(%rsp)
  21c04e: 48 8b 4c 24 68               	movq	104(%rsp), %rcx
  21c053: 48 8b 3a                     	movq	(%rdx), %rdi
  21c056: 48 8b 42 08                  	movq	8(%rdx), %rax
  21c05a: 4c 89 ee                     	movq	%r13, %rsi
  21c05d: ba 03 00 00 00               	movl	$3, %edx
  21c062: ff 10                        	callq	*(%rax)
  21c064: 48 85 c0                     	testq	%rax, %rax
  21c067: 0f 84 9e 01 00 00            	je	0x21c20b <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).grow+0x24b>
  21c06d: 48 89 c7                     	movq	%rax, %rdi
  21c070: be aa 00 00 00               	movl	$170, %esi
  21c075: 4c 89 ea                     	movq	%r13, %rdx
  21c078: 49 89 c4                     	movq	%rax, %r12
  21c07b: e8 60 03 00 00               	callq	0x21c3e0 <memset>
  21c080: 41 f6 c4 07                  	testb	$7, %r12b
  21c084: 0f 85 b9 01 00 00            	jne	0x21c243 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).grow+0x283>
  21c08a: 4c 89 e7                     	movq	%r12, %rdi
  21c08d: 48 83 c7 18                  	addq	$24, %rdi
  21c091: 73 19                        	jae	0x21c0ac <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).grow+0xec>
  21c093: e9 bc 01 00 00               	jmp	0x21c254 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).grow+0x294>
  21c098: 49 c7 c4 f8 ff ff ff         	movq	$-8, %r12
  21c09f: 4c 89 e7                     	movq	%r12, %rdi
  21c0a2: 48 83 c7 18                  	addq	$24, %rdi
  21c0a6: 0f 82 a8 01 00 00            	jb	0x21c254 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).grow+0x294>
  21c0ac: 41 f6 c4 07                  	testb	$7, %r12b
  21c0b0: 0f 85 8d 01 00 00            	jne	0x21c243 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).grow+0x283>
  21c0b6: 48 83 e3 f8                  	andq	$-8, %rbx
  21c0ba: 4c 01 e3                     	addq	%r12, %rbx
  21c0bd: 0f 82 91 01 00 00            	jb	0x21c254 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).grow+0x294>
  21c0c3: 0f 84 9c 01 00 00            	je	0x21c265 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).grow+0x2a5>
  21c0c9: f6 c3 07                     	testb	$7, %bl
  21c0cc: 0f 85 71 01 00 00            	jne	0x21c243 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).grow+0x283>
  21c0d2: 49 83 e7 f8                  	andq	$-8, %r15
  21c0d6: 49 89 1c 24                  	movq	%rbx, (%r12)
  21c0da: 4d 01 e7                     	addq	%r12, %r15
  21c0dd: 0f 82 71 01 00 00            	jb	0x21c254 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).grow+0x294>
  21c0e3: 0f 84 7c 01 00 00            	je	0x21c265 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).grow+0x2a5>
  21c0e9: 41 f6 c7 07                  	testb	$7, %r15b
  21c0ed: 0f 85 50 01 00 00            	jne	0x21c243 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).grow+0x283>
  21c0f3: 4d 89 7c 24 08               	movq	%r15, 8(%r12)
  21c0f8: 41 89 6c 24 10               	movl	%ebp, 16(%r12)
  21c0fd: 48 85 ff                     	testq	%rdi, %rdi
  21c100: 0f 84 5f 01 00 00            	je	0x21c265 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).grow+0x2a5>
  21c106: 48 89 3c 24                  	movq	%rdi, (%rsp)
  21c10a: 40 f6 c7 07                  	testb	$7, %dil
  21c10e: 0f 85 2f 01 00 00            	jne	0x21c243 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).grow+0x283>
  21c114: 8b 57 f8                     	movl	-8(%rdi), %edx
  21c117: 31 f6                        	xorl	%esi, %esi
  21c119: e8 c2 02 00 00               	callq	0x21c3e0 <memset>
  21c11e: 89 e8                        	movl	%ebp, %eax
  21c120: 48 b9 5d 8f c2 f5 28 5c 8f 02	movabsq	$184467440737095517, %rcx # imm = 0x28F5C28F5C28F5D
  21c12a: 48 c1 e0 04                  	shlq	$4, %rax
  21c12e: 48 8d 14 80                  	leaq	(%rax,%rax,4), %rdx
  21c132: c4 e2 fb f6 c1               	mulxq	%rcx, %rax, %rax
  21c137: 89 44 24 0c                  	movl	%eax, 12(%rsp)
  21c13b: 41 83 7e 08 00               	cmpl	$0, 8(%r14)
  21c140: 74 5b                        	je	0x21c19d <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).grow+0x1dd>
  21c142: 49 8b 1e                     	movq	(%r14), %rbx
  21c145: 48 85 db                     	testq	%rbx, %rbx
  21c148: 0f 84 39 01 00 00            	je	0x21c287 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).grow+0x2c7>
  21c14e: f6 c3 07                     	testb	$7, %bl
  21c151: 0f 85 ec 00 00 00            	jne	0x21c243 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).grow+0x283>
  21c157: 8b 6b f8                     	movl	-8(%rbx), %ebp
  21c15a: 85 ed                        	testl	%ebp, %ebp
  21c15c: 74 3f                        	je	0x21c19d <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).grow+0x1dd>
  21c15e: 4c 8b 63 e8                  	movq	-24(%rbx), %r12
  21c162: 4c 8b 6b f0                  	movq	-16(%rbx), %r13
  21c166: 45 31 ff                     	xorl	%r15d, %r15d
  21c169: eb 0d                        	jmp	0x21c178 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).grow+0x1b8>
  21c16b: 0f 1f 44 00 00               	nopl	(%rax,%rax)
  21c170: 41 ff c7                     	incl	%r15d
  21c173: 41 39 ef                     	cmpl	%ebp, %r15d
  21c176: 73 25                        	jae	0x21c19d <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).grow+0x1dd>
  21c178: 45 89 ff                     	movl	%r15d, %r15d
  21c17b: 42 80 3c 3b 00               	cmpb	$0, (%rbx,%r15)
  21c180: 79 ee                        	jns	0x21c170 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).grow+0x1b0>
  21c182: 4b 8b 74 fd 00               	movq	(%r13,%r15,8), %rsi
  21c187: 4b 8b 14 fc                  	movq	(%r12,%r15,8), %rdx
  21c18b: 48 89 e7                     	movq	%rsp, %rdi
  21c18e: e8 dd e8 ff ff               	callq	0x21aa70 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).putAssumeCapacityNoClobberContext>
  21c193: 8b 44 24 08                  	movl	8(%rsp), %eax
  21c197: 41 3b 46 08                  	cmpl	8(%r14), %eax
  21c19b: 75 d3                        	jne	0x21c170 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).grow+0x1b0>
  21c19d: 41 c7 46 08 00 00 00 00      	movl	$0, 8(%r14)
  21c1a5: 48 8b 74 24 28               	movq	40(%rsp), %rsi
  21c1aa: 48 89 e7                     	movq	%rsp, %rdi
  21c1ad: 49 8b 06                     	movq	(%r14), %rax
  21c1b0: 48 89 44 24 10               	movq	%rax, 16(%rsp)
  21c1b5: 41 8b 46 08                  	movl	8(%r14), %eax
  21c1b9: 89 44 24 18                  	movl	%eax, 24(%rsp)
  21c1bd: 41 8b 46 0c                  	movl	12(%r14), %eax
  21c1c1: 89 44 24 1c                  	movl	%eax, 28(%rsp)
  21c1c5: 48 8b 04 24                  	movq	(%rsp), %rax
  21c1c9: 49 89 06                     	movq	%rax, (%r14)
  21c1cc: 8b 44 24 08                  	movl	8(%rsp), %eax
  21c1d0: 41 89 46 08                  	movl	%eax, 8(%r14)
  21c1d4: 8b 44 24 0c                  	movl	12(%rsp), %eax
  21c1d8: 41 89 46 0c                  	movl	%eax, 12(%r14)
  21c1dc: 48 8b 44 24 10               	movq	16(%rsp), %rax
  21c1e1: 8b 54 24 18                  	movl	24(%rsp), %edx
  21c1e5: 8b 4c 24 1c                  	movl	28(%rsp), %ecx
  21c1e9: 48 89 04 24                  	movq	%rax, (%rsp)
  21c1ed: 89 54 24 08                  	movl	%edx, 8(%rsp)
  21c1f1: 89 4c 24 0c                  	movl	%ecx, 12(%rsp)
  21c1f5: e8 16 f0 ff ff               	callq	0x21b210 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).deallocate>
  21c1fa: 31 c0                        	xorl	%eax, %eax
  21c1fc: 48 83 c4 38                  	addq	$56, %rsp
  21c200: 5b                           	popq	%rbx
  21c201: 41 5c                        	popq	%r12
  21c203: 41 5d                        	popq	%r13
  21c205: 41 5e                        	popq	%r14
  21c207: 41 5f                        	popq	%r15
  21c209: 5d                           	popq	%rbp
  21c20a: c3                           	retq
  21c20b: 48 8b 5c 24 30               	movq	48(%rsp), %rbx
  21c210: 48 89 df                     	movq	%rbx, %rdi
  21c213: e8 38 fb ff ff               	callq	0x21bd50 <builtin.returnError>
  21c218: 48 89 df                     	movq	%rbx, %rdi
  21c21b: e8 30 fb ff ff               	callq	0x21bd50 <builtin.returnError>
  21c220: 48 89 df                     	movq	%rbx, %rdi
  21c223: e8 28 fb ff ff               	callq	0x21bd50 <builtin.returnError>
  21c228: 48 8b 74 24 28               	movq	40(%rsp), %rsi
  21c22d: 48 89 e7                     	movq	%rsp, %rdi
  21c230: e8 db ef ff ff               	callq	0x21b210 <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).deallocate>
  21c235: 48 89 df                     	movq	%rbx, %rdi
  21c238: e8 13 fb ff ff               	callq	0x21bd50 <builtin.returnError>
  21c23d: 66 b8 15 00                  	movw	$21, %ax
  21c241: eb b9                        	jmp	0x21c1fc <hash_map.HashMapUnmanaged(usize,*debug.ModuleDebugInfo__struct_4259,hash_map.AutoContext(usize),80).grow+0x23c>
  21c243: bf c7 1d 20 00               	movl	$2104775, %edi          # imm = 0x201DC7
  21c248: be 13 00 00 00               	movl	$19, %esi
  21c24d: 31 c9                        	xorl	%ecx, %ecx
  21c24f: e8 bc f0 ff ff               	callq	0x21b310 <builtin.default_panic>
  21c254: bf 59 1d 20 00               	movl	$2104665, %edi          # imm = 0x201D59
  21c259: be 10 00 00 00               	movl	$16, %esi
  21c25e: 31 c9                        	xorl	%ecx, %ecx
  21c260: e8 ab f0 ff ff               	callq	0x21b310 <builtin.default_panic>
  21c265: bf 2a 20 20 00               	movl	$2105386, %edi          # imm = 0x20202A
  21c26a: be 1e 00 00 00               	movl	$30, %esi
  21c26f: 31 c9                        	xorl	%ecx, %ecx
  21c271: e8 9a f0 ff ff               	callq	0x21b310 <builtin.default_panic>
  21c276: bf 32 22 20 00               	movl	$2105906, %edi          # imm = 0x202232
  21c27b: be 18 00 00 00               	movl	$24, %esi
  21c280: 31 c9                        	xorl	%ecx, %ecx
  21c282: e8 89 f0 ff ff               	callq	0x21b310 <builtin.default_panic>
  21c287: bf 72 21 20 00               	movl	$2105714, %edi          # imm = 0x202172
  21c28c: be 19 00 00 00               	movl	$25, %esi
  21c291: 31 c9                        	xorl	%ecx, %ecx
  21c293: e8 78 f0 ff ff               	callq	0x21b310 <builtin.default_panic>
  21c298: cc                           	int3
  21c299: cc                           	int3
  21c29a: cc                           	int3
  21c29b: cc                           	int3
  21c29c: cc                           	int3
  21c29d: cc                           	int3
  21c29e: cc                           	int3
  21c29f: cc                           	int3

000000000021c2a0 <__zig_probe_stack>:
  21c2a0: 51                           	pushq	%rcx
  21c2a1: 48 89 c1                     	movq	%rax, %rcx
  21c2a4: 48 81 f9 00 10 00 00         	cmpq	$4096, %rcx             # imm = 0x1000
  21c2ab: 72 1c                        	jb	0x21c2c9 <__zig_probe_stack+0x29>
  21c2ad: 48 81 ec 00 10 00 00         	subq	$4096, %rsp             # imm = 0x1000
  21c2b4: 83 4c 24 10 00               	orl	$0, 16(%rsp)
  21c2b9: 48 81 e9 00 10 00 00         	subq	$4096, %rcx             # imm = 0x1000
  21c2c0: 48 81 f9 00 10 00 00         	cmpq	$4096, %rcx             # imm = 0x1000
  21c2c7: 77 e4                        	ja	0x21c2ad <__zig_probe_stack+0xd>
  21c2c9: 48 29 cc                     	subq	%rcx, %rsp
  21c2cc: 83 4c 24 10 00               	orl	$0, 16(%rsp)
  21c2d1: 48 01 c4                     	addq	%rax, %rsp
  21c2d4: 59                           	popq	%rcx
  21c2d5: c3                           	retq
  21c2d6: cc                           	int3
  21c2d7: cc                           	int3
  21c2d8: cc                           	int3
  21c2d9: cc                           	int3
  21c2da: cc                           	int3
  21c2db: cc                           	int3
  21c2dc: cc                           	int3
  21c2dd: cc                           	int3
  21c2de: cc                           	int3
  21c2df: cc                           	int3

000000000021c2e0 <memcpy>:
  21c2e0: 48 89 f8                     	movq	%rdi, %rax
  21c2e3: 48 85 d2                     	testq	%rdx, %rdx
  21c2e6: 0f 84 d7 00 00 00            	je	0x21c3c3 <memcpy+0xe3>
  21c2ec: 0f b6 0e                     	movzbl	(%rsi), %ecx
  21c2ef: 88 08                        	movb	%cl, (%rax)
  21c2f1: 48 89 d1                     	movq	%rdx, %rcx
  21c2f4: 48 ff c9                     	decq	%rcx
  21c2f7: 0f 84 c6 00 00 00            	je	0x21c3c3 <memcpy+0xe3>
  21c2fd: 48 83 fa 11                  	cmpq	$17, %rdx
  21c301: 73 0e                        	jae	0x21c311 <memcpy+0x31>
  21c303: 48 89 cf                     	movq	%rcx, %rdi
  21c306: 49 89 c0                     	movq	%rax, %r8
  21c309: 49 89 f1                     	movq	%rsi, %r9
  21c30c: e9 99 00 00 00               	jmp	0x21c3aa <memcpy+0xca>
  21c311: 48 81 fa 81 00 00 00         	cmpq	$129, %rdx
  21c318: 73 04                        	jae	0x21c31e <memcpy+0x3e>
  21c31a: 31 d2                        	xorl	%edx, %edx
  21c31c: eb 55                        	jmp	0x21c373 <memcpy+0x93>
  21c31e: 48 89 ca                     	movq	%rcx, %rdx
  21c321: 31 ff                        	xorl	%edi, %edi
  21c323: 48 83 e2 80                  	andq	$-128, %rdx
  21c327: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
  21c330: c5 fc 10 44 3e 01            	vmovups	1(%rsi,%rdi), %ymm0
  21c336: c5 fc 10 4c 3e 21            	vmovups	33(%rsi,%rdi), %ymm1
  21c33c: c5 fc 10 54 3e 41            	vmovups	65(%rsi,%rdi), %ymm2
  21c342: c5 fc 10 5c 3e 61            	vmovups	97(%rsi,%rdi), %ymm3
  21c348: c5 fc 11 44 38 01            	vmovups	%ymm0, 1(%rax,%rdi)
  21c34e: c5 fc 11 4c 38 21            	vmovups	%ymm1, 33(%rax,%rdi)
  21c354: c5 fc 11 54 38 41            	vmovups	%ymm2, 65(%rax,%rdi)
  21c35a: c5 fc 11 5c 38 61            	vmovups	%ymm3, 97(%rax,%rdi)
  21c360: 48 83 ef 80                  	subq	$-128, %rdi
  21c364: 48 39 fa                     	cmpq	%rdi, %rdx
  21c367: 75 c7                        	jne	0x21c330 <memcpy+0x50>
  21c369: 48 39 d1                     	cmpq	%rdx, %rcx
  21c36c: 74 55                        	je	0x21c3c3 <memcpy+0xe3>
  21c36e: f6 c1 70                     	testb	$112, %cl
  21c371: 74 54                        	je	0x21c3c7 <memcpy+0xe7>
  21c373: 49 89 ca                     	movq	%rcx, %r10
  21c376: 89 cf                        	movl	%ecx, %edi
  21c378: 49 83 e2 f0                  	andq	$-16, %r10
  21c37c: 83 e7 0f                     	andl	$15, %edi
  21c37f: 4e 8d 04 10                  	leaq	(%rax,%r10), %r8
  21c383: 4e 8d 0c 16                  	leaq	(%rsi,%r10), %r9
  21c387: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
  21c390: c5 f8 10 44 16 01            	vmovups	1(%rsi,%rdx), %xmm0
  21c396: c5 f8 11 44 10 01            	vmovups	%xmm0, 1(%rax,%rdx)
  21c39c: 48 83 c2 10                  	addq	$16, %rdx
  21c3a0: 49 39 d2                     	cmpq	%rdx, %r10
  21c3a3: 75 eb                        	jne	0x21c390 <memcpy+0xb0>
  21c3a5: 4c 39 d1                     	cmpq	%r10, %rcx
  21c3a8: 74 19                        	je	0x21c3c3 <memcpy+0xe3>
  21c3aa: 31 c9                        	xorl	%ecx, %ecx
  21c3ac: 0f 1f 40 00                  	nopl	(%rax)
  21c3b0: 41 0f b6 54 09 01            	movzbl	1(%r9,%rcx), %edx
  21c3b6: 41 88 54 08 01               	movb	%dl, 1(%r8,%rcx)
  21c3bb: 48 ff c1                     	incq	%rcx
  21c3be: 48 39 cf                     	cmpq	%rcx, %rdi
  21c3c1: 75 ed                        	jne	0x21c3b0 <memcpy+0xd0>
  21c3c3: c5 f8 77                     	vzeroupper
  21c3c6: c3                           	retq
  21c3c7: 48 01 d6                     	addq	%rdx, %rsi
  21c3ca: 48 01 c2                     	addq	%rax, %rdx
  21c3cd: 83 e1 7f                     	andl	$127, %ecx
  21c3d0: 48 89 cf                     	movq	%rcx, %rdi
  21c3d3: 49 89 d0                     	movq	%rdx, %r8
  21c3d6: e9 2e ff ff ff               	jmp	0x21c309 <memcpy+0x29>
  21c3db: cc                           	int3
  21c3dc: cc                           	int3
  21c3dd: cc                           	int3
  21c3de: cc                           	int3
  21c3df: cc                           	int3

000000000021c3e0 <memset>:
  21c3e0: 48 89 f8                     	movq	%rdi, %rax
  21c3e3: 48 85 d2                     	testq	%rdx, %rdx
  21c3e6: 0f 84 c0 00 00 00            	je	0x21c4ac <memset+0xcc>
  21c3ec: 48 83 fa 10                  	cmpq	$16, %rdx
  21c3f0: 73 0b                        	jae	0x21c3fd <memset+0x1d>
  21c3f2: 48 89 d7                     	movq	%rdx, %rdi
  21c3f5: 49 89 c0                     	movq	%rax, %r8
  21c3f8: e9 94 00 00 00               	jmp	0x21c491 <memset+0xb1>
  21c3fd: 48 81 fa 80 00 00 00         	cmpq	$128, %rdx
  21c404: 73 04                        	jae	0x21c40a <memset+0x2a>
  21c406: 31 c9                        	xorl	%ecx, %ecx
  21c408: eb 40                        	jmp	0x21c44a <memset+0x6a>
  21c40a: c5 f9 6e c6                  	vmovd	%esi, %xmm0
  21c40e: 48 89 d1                     	movq	%rdx, %rcx
  21c411: 31 ff                        	xorl	%edi, %edi
  21c413: 48 83 e1 80                  	andq	$-128, %rcx
  21c417: c4 e2 7d 78 c0               	vpbroadcastb	%xmm0, %ymm0
  21c41c: 0f 1f 40 00                  	nopl	(%rax)
  21c420: c5 fe 7f 04 38               	vmovdqu	%ymm0, (%rax,%rdi)
  21c425: c5 fe 7f 44 38 20            	vmovdqu	%ymm0, 32(%rax,%rdi)
  21c42b: c5 fe 7f 44 38 40            	vmovdqu	%ymm0, 64(%rax,%rdi)
  21c431: c5 fe 7f 44 38 60            	vmovdqu	%ymm0, 96(%rax,%rdi)
  21c437: 48 83 ef 80                  	subq	$-128, %rdi
  21c43b: 48 39 f9                     	cmpq	%rdi, %rcx
  21c43e: 75 e0                        	jne	0x21c420 <memset+0x40>
  21c440: 48 39 d1                     	cmpq	%rdx, %rcx
  21c443: 74 67                        	je	0x21c4ac <memset+0xcc>
  21c445: f6 c2 70                     	testb	$112, %dl
  21c448: 74 3b                        	je	0x21c485 <memset+0xa5>
  21c44a: c5 f9 6e c6                  	vmovd	%esi, %xmm0
  21c44e: 49 89 d1                     	movq	%rdx, %r9
  21c451: 89 d7                        	movl	%edx, %edi
  21c453: 49 83 e1 f0                  	andq	$-16, %r9
  21c457: 83 e7 0f                     	andl	$15, %edi
  21c45a: 4e 8d 04 08                  	leaq	(%rax,%r9), %r8
  21c45e: c4 e2 79 78 c0               	vpbroadcastb	%xmm0, %xmm0
  21c463: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
  21c470: c5 fa 7f 04 08               	vmovdqu	%xmm0, (%rax,%rcx)
  21c475: 48 83 c1 10                  	addq	$16, %rcx
  21c479: 49 39 c9                     	cmpq	%rcx, %r9
  21c47c: 75 f2                        	jne	0x21c470 <memset+0x90>
  21c47e: 49 39 d1                     	cmpq	%rdx, %r9
  21c481: 75 0e                        	jne	0x21c491 <memset+0xb1>
  21c483: eb 27                        	jmp	0x21c4ac <memset+0xcc>
  21c485: 48 01 c1                     	addq	%rax, %rcx
  21c488: 83 e2 7f                     	andl	$127, %edx
  21c48b: 48 89 d7                     	movq	%rdx, %rdi
  21c48e: 49 89 c8                     	movq	%rcx, %r8
  21c491: 31 c9                        	xorl	%ecx, %ecx
  21c493: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
  21c4a0: 41 88 34 08                  	movb	%sil, (%r8,%rcx)
  21c4a4: 48 ff c1                     	incq	%rcx
  21c4a7: 48 39 cf                     	cmpq	%rcx, %rdi
  21c4aa: 75 f4                        	jne	0x21c4a0 <memset+0xc0>
  21c4ac: c5 f8 77                     	vzeroupper
  21c4af: c3                           	retq
